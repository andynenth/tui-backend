"use strict";(()=>{var Kd=Object.create;var K4=Object.defineProperty;var Qd=Object.getOwnPropertyDescriptor;var Zd=Object.getOwnPropertyNames;var Jd=Object.getPrototypeOf,Wd=Object.prototype.hasOwnProperty;var ef=(e,t)=>()=>(e&&(t=e(e=0)),t);var _2=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),ka=(e,t)=>{for(var a in t)K4(e,a,{get:t[a],enumerable:!0})},tf=(e,t,a,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of Zd(t))!Wd.call(e,n)&&n!==a&&K4(e,n,{get:()=>t[n],enumerable:!(r=Qd(t,n))||r.enumerable});return e};var x=(e,t,a)=>(a=e!=null?Kd(Jd(e)):{},tf(t||!e||!e.__esModule?K4(a,"default",{value:e,enumerable:!0}):a,e));var b6=_2(Z=>{"use strict";var Z4=Symbol.for("react.transitional.element"),af=Symbol.for("react.portal"),rf=Symbol.for("react.fragment"),nf=Symbol.for("react.strict_mode"),of=Symbol.for("react.profiler"),lf=Symbol.for("react.consumer"),sf=Symbol.for("react.context"),cf=Symbol.for("react.forward_ref"),uf=Symbol.for("react.suspense"),df=Symbol.for("react.memo"),p6=Symbol.for("react.lazy"),c6=Symbol.iterator;function ff(e){return e===null||typeof e!="object"?null:(e=c6&&e[c6]||e["@@iterator"],typeof e=="function"?e:null)}var m6={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},g6=Object.assign,h6={};function Yt(e,t,a){this.props=e,this.context=t,this.refs=h6,this.updater=a||m6}Yt.prototype.isReactComponent={};Yt.prototype.setState=function(e,t){if(typeof e!="object"&&typeof e!="function"&&e!=null)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")};Yt.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")};function v6(){}v6.prototype=Yt.prototype;function J4(e,t,a){this.props=e,this.context=t,this.refs=h6,this.updater=a||m6}var W4=J4.prototype=new v6;W4.constructor=J4;g6(W4,Yt.prototype);W4.isPureReactComponent=!0;var u6=Array.isArray,O1={H:null,A:null,T:null,S:null,V:null},y6=Object.prototype.hasOwnProperty;function en(e,t,a,r,n,o){return a=o.ref,{$$typeof:Z4,type:e,key:t,ref:a!==void 0?a:null,props:o}}function Cf(e,t){return en(e.type,t,void 0,void 0,void 0,e.props)}function tn(e){return typeof e=="object"&&e!==null&&e.$$typeof===Z4}function pf(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,function(a){return t[a]})}var d6=/\/+/g;function Q4(e,t){return typeof e=="object"&&e!==null&&e.key!=null?pf(""+e.key):t.toString(36)}function f6(){}function mf(e){switch(e.status){case"fulfilled":return e.value;case"rejected":throw e.reason;default:switch(typeof e.status=="string"?e.then(f6,f6):(e.status="pending",e.then(function(t){e.status==="pending"&&(e.status="fulfilled",e.value=t)},function(t){e.status==="pending"&&(e.status="rejected",e.reason=t)})),e.status){case"fulfilled":return e.value;case"rejected":throw e.reason}}throw e}function Ft(e,t,a,r,n){var o=typeof e;(o==="undefined"||o==="boolean")&&(e=null);var i=!1;if(e===null)i=!0;else switch(o){case"bigint":case"string":case"number":i=!0;break;case"object":switch(e.$$typeof){case Z4:case af:i=!0;break;case p6:return i=e._init,Ft(i(e._payload),t,a,r,n)}}if(i)return n=n(e),i=r===""?"."+Q4(e,0):r,u6(n)?(a="",i!=null&&(a=i.replace(d6,"$&/")+"/"),Ft(n,t,a,"",function(c){return c})):n!=null&&(tn(n)&&(n=Cf(n,a+(n.key==null||e&&e.key===n.key?"":(""+n.key).replace(d6,"$&/")+"/")+i)),t.push(n)),1;i=0;var l=r===""?".":r+":";if(u6(e))for(var s=0;s<e.length;s++)r=e[s],o=l+Q4(r,s),i+=Ft(r,t,a,o,n);else if(s=ff(e),typeof s=="function")for(e=s.call(e),s=0;!(r=e.next()).done;)r=r.value,o=l+Q4(r,s++),i+=Ft(r,t,a,o,n);else if(o==="object"){if(typeof e.then=="function")return Ft(mf(e),t,a,r,n);throw t=String(e),Error("Objects are not valid as a React child (found: "+(t==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.")}return i}function La(e,t,a){if(e==null)return e;var r=[],n=0;return Ft(e,r,"","",function(o){return t.call(a,o,n++)}),r}function gf(e){if(e._status===-1){var t=e._result;t=t(),t.then(function(a){(e._status===0||e._status===-1)&&(e._status=1,e._result=a)},function(a){(e._status===0||e._status===-1)&&(e._status=2,e._result=a)}),e._status===-1&&(e._status=0,e._result=t)}if(e._status===1)return e._result.default;throw e._result}var C6=typeof reportError=="function"?reportError:function(e){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var t=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof e=="object"&&e!==null&&typeof e.message=="string"?String(e.message):String(e),error:e});if(!window.dispatchEvent(t))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",e);return}console.error(e)};function hf(){}Z.Children={map:La,forEach:function(e,t,a){La(e,function(){t.apply(this,arguments)},a)},count:function(e){var t=0;return La(e,function(){t++}),t},toArray:function(e){return La(e,function(t){return t})||[]},only:function(e){if(!tn(e))throw Error("React.Children.only expected to receive a single React element child.");return e}};Z.Component=Yt;Z.Fragment=rf;Z.Profiler=of;Z.PureComponent=J4;Z.StrictMode=nf;Z.Suspense=uf;Z.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=O1;Z.__COMPILER_RUNTIME={__proto__:null,c:function(e){return O1.H.useMemoCache(e)}};Z.cache=function(e){return function(){return e.apply(null,arguments)}};Z.cloneElement=function(e,t,a){if(e==null)throw Error("The argument must be a React element, but you passed "+e+".");var r=g6({},e.props),n=e.key,o=void 0;if(t!=null)for(i in t.ref!==void 0&&(o=void 0),t.key!==void 0&&(n=""+t.key),t)!y6.call(t,i)||i==="key"||i==="__self"||i==="__source"||i==="ref"&&t.ref===void 0||(r[i]=t[i]);var i=arguments.length-2;if(i===1)r.children=a;else if(1<i){for(var l=Array(i),s=0;s<i;s++)l[s]=arguments[s+2];r.children=l}return en(e.type,n,void 0,void 0,o,r)};Z.createContext=function(e){return e={$$typeof:sf,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null},e.Provider=e,e.Consumer={$$typeof:lf,_context:e},e};Z.createElement=function(e,t,a){var r,n={},o=null;if(t!=null)for(r in t.key!==void 0&&(o=""+t.key),t)y6.call(t,r)&&r!=="key"&&r!=="__self"&&r!=="__source"&&(n[r]=t[r]);var i=arguments.length-2;if(i===1)n.children=a;else if(1<i){for(var l=Array(i),s=0;s<i;s++)l[s]=arguments[s+2];n.children=l}if(e&&e.defaultProps)for(r in i=e.defaultProps,i)n[r]===void 0&&(n[r]=i[r]);return en(e,o,void 0,void 0,null,n)};Z.createRef=function(){return{current:null}};Z.forwardRef=function(e){return{$$typeof:cf,render:e}};Z.isValidElement=tn;Z.lazy=function(e){return{$$typeof:p6,_payload:{_status:-1,_result:e},_init:gf}};Z.memo=function(e,t){return{$$typeof:df,type:e,compare:t===void 0?null:t}};Z.startTransition=function(e){var t=O1.T,a={};O1.T=a;try{var r=e(),n=O1.S;n!==null&&n(a,r),typeof r=="object"&&r!==null&&typeof r.then=="function"&&r.then(hf,C6)}catch(o){C6(o)}finally{O1.T=t}};Z.unstable_useCacheRefresh=function(){return O1.H.useCacheRefresh()};Z.use=function(e){return O1.H.use(e)};Z.useActionState=function(e,t,a){return O1.H.useActionState(e,t,a)};Z.useCallback=function(e,t){return O1.H.useCallback(e,t)};Z.useContext=function(e){return O1.H.useContext(e)};Z.useDebugValue=function(){};Z.useDeferredValue=function(e,t){return O1.H.useDeferredValue(e,t)};Z.useEffect=function(e,t,a){var r=O1.H;if(typeof a=="function")throw Error("useEffect CRUD overload is not enabled in this build of React.");return r.useEffect(e,t)};Z.useId=function(){return O1.H.useId()};Z.useImperativeHandle=function(e,t,a){return O1.H.useImperativeHandle(e,t,a)};Z.useInsertionEffect=function(e,t){return O1.H.useInsertionEffect(e,t)};Z.useLayoutEffect=function(e,t){return O1.H.useLayoutEffect(e,t)};Z.useMemo=function(e,t){return O1.H.useMemo(e,t)};Z.useOptimistic=function(e,t){return O1.H.useOptimistic(e,t)};Z.useReducer=function(e,t,a){return O1.H.useReducer(e,t,a)};Z.useRef=function(e){return O1.H.useRef(e)};Z.useState=function(e){return O1.H.useState(e)};Z.useSyncExternalStore=function(e,t,a){return O1.H.useSyncExternalStore(e,t,a)};Z.useTransition=function(){return O1.H.useTransition()};Z.version="19.1.0"});var z=_2((Dv,x6)=>{"use strict";x6.exports=b6()});var M6=_2(z1=>{"use strict";function on(e,t){var a=e.length;e.push(t);e:for(;0<a;){var r=a-1>>>1,n=e[r];if(0<Ma(n,t))e[r]=t,e[a]=n,a=r;else break e}}function ke(e){return e.length===0?null:e[0]}function Da(e){if(e.length===0)return null;var t=e[0],a=e.pop();if(a!==t){e[0]=a;e:for(var r=0,n=e.length,o=n>>>1;r<o;){var i=2*(r+1)-1,l=e[i],s=i+1,c=e[s];if(0>Ma(l,a))s<n&&0>Ma(c,l)?(e[r]=c,e[s]=a,r=s):(e[r]=l,e[i]=a,r=i);else if(s<n&&0>Ma(c,a))e[r]=c,e[s]=a,r=s;else break e}}return t}function Ma(e,t){var a=e.sortIndex-t.sortIndex;return a!==0?a:e.id-t.id}z1.unstable_now=void 0;typeof performance=="object"&&typeof performance.now=="function"?(w6=performance,z1.unstable_now=function(){return w6.now()}):(an=Date,S6=an.now(),z1.unstable_now=function(){return an.now()-S6});var w6,an,S6,We=[],L3=[],vf=1,W2=null,m2=3,ln=!1,X0=!1,K0=!1,sn=!1,N6=typeof setTimeout=="function"?setTimeout:null,_6=typeof clearTimeout=="function"?clearTimeout:null,R6=typeof setImmediate<"u"?setImmediate:null;function Aa(e){for(var t=ke(L3);t!==null;){if(t.callback===null)Da(L3);else if(t.startTime<=e)Da(L3),t.sortIndex=t.expirationTime,on(We,t);else break;t=ke(L3)}}function cn(e){if(K0=!1,Aa(e),!X0)if(ke(We)!==null)X0=!0,$t||($t=!0,qt());else{var t=ke(L3);t!==null&&un(cn,t.startTime-e)}}var $t=!1,Q0=-1,T6=5,k6=-1;function L6(){return sn?!0:!(z1.unstable_now()-k6<T6)}function rn(){if(sn=!1,$t){var e=z1.unstable_now();k6=e;var t=!0;try{e:{X0=!1,K0&&(K0=!1,_6(Q0),Q0=-1),ln=!0;var a=m2;try{t:{for(Aa(e),W2=ke(We);W2!==null&&!(W2.expirationTime>e&&L6());){var r=W2.callback;if(typeof r=="function"){W2.callback=null,m2=W2.priorityLevel;var n=r(W2.expirationTime<=e);if(e=z1.unstable_now(),typeof n=="function"){W2.callback=n,Aa(e),t=!0;break t}W2===ke(We)&&Da(We),Aa(e)}else Da(We);W2=ke(We)}if(W2!==null)t=!0;else{var o=ke(L3);o!==null&&un(cn,o.startTime-e),t=!1}}break e}finally{W2=null,m2=a,ln=!1}t=void 0}}finally{t?qt():$t=!1}}}var qt;typeof R6=="function"?qt=function(){R6(rn)}:typeof MessageChannel<"u"?(nn=new MessageChannel,E6=nn.port2,nn.port1.onmessage=rn,qt=function(){E6.postMessage(null)}):qt=function(){N6(rn,0)};var nn,E6;function un(e,t){Q0=N6(function(){e(z1.unstable_now())},t)}z1.unstable_IdlePriority=5;z1.unstable_ImmediatePriority=1;z1.unstable_LowPriority=4;z1.unstable_NormalPriority=3;z1.unstable_Profiling=null;z1.unstable_UserBlockingPriority=2;z1.unstable_cancelCallback=function(e){e.callback=null};z1.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):T6=0<e?Math.floor(1e3/e):5};z1.unstable_getCurrentPriorityLevel=function(){return m2};z1.unstable_next=function(e){switch(m2){case 1:case 2:case 3:var t=3;break;default:t=m2}var a=m2;m2=t;try{return e()}finally{m2=a}};z1.unstable_requestPaint=function(){sn=!0};z1.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var a=m2;m2=e;try{return t()}finally{m2=a}};z1.unstable_scheduleCallback=function(e,t,a){var r=z1.unstable_now();switch(typeof a=="object"&&a!==null?(a=a.delay,a=typeof a=="number"&&0<a?r+a:r):a=r,e){case 1:var n=-1;break;case 2:n=250;break;case 5:n=1073741823;break;case 4:n=1e4;break;default:n=5e3}return n=a+n,e={id:vf++,callback:t,priorityLevel:e,startTime:a,expirationTime:n,sortIndex:-1},a>r?(e.sortIndex=a,on(L3,e),ke(We)===null&&e===ke(L3)&&(K0?(_6(Q0),Q0=-1):K0=!0,un(cn,a-r))):(e.sortIndex=n,on(We,e),X0||ln||(X0=!0,$t||($t=!0,qt()))),e};z1.unstable_shouldYield=L6;z1.unstable_wrapCallback=function(e){var t=m2;return function(){var a=m2;m2=t;try{return e.apply(this,arguments)}finally{m2=a}}}});var D6=_2((zv,A6)=>{"use strict";A6.exports=M6()});var z6=_2(w2=>{"use strict";var yf=z();function O6(e){var t="https://react.dev/errors/"+e;if(1<arguments.length){t+="?args[]="+encodeURIComponent(arguments[1]);for(var a=2;a<arguments.length;a++)t+="&args[]="+encodeURIComponent(arguments[a])}return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function M3(){}var x2={d:{f:M3,r:function(){throw Error(O6(522))},D:M3,C:M3,L:M3,m:M3,X:M3,S:M3,M:M3},p:0,findDOMNode:null},bf=Symbol.for("react.portal");function xf(e,t,a){var r=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:bf,key:r==null?null:""+r,children:e,containerInfo:t,implementation:a}}var Z0=yf.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function Oa(e,t){if(e==="font")return"";if(typeof t=="string")return t==="use-credentials"?t:""}w2.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=x2;w2.createPortal=function(e,t){var a=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!t||t.nodeType!==1&&t.nodeType!==9&&t.nodeType!==11)throw Error(O6(299));return xf(e,t,null,a)};w2.flushSync=function(e){var t=Z0.T,a=x2.p;try{if(Z0.T=null,x2.p=2,e)return e()}finally{Z0.T=t,x2.p=a,x2.d.f()}};w2.preconnect=function(e,t){typeof e=="string"&&(t?(t=t.crossOrigin,t=typeof t=="string"?t==="use-credentials"?t:"":void 0):t=null,x2.d.C(e,t))};w2.prefetchDNS=function(e){typeof e=="string"&&x2.d.D(e)};w2.preinit=function(e,t){if(typeof e=="string"&&t&&typeof t.as=="string"){var a=t.as,r=Oa(a,t.crossOrigin),n=typeof t.integrity=="string"?t.integrity:void 0,o=typeof t.fetchPriority=="string"?t.fetchPriority:void 0;a==="style"?x2.d.S(e,typeof t.precedence=="string"?t.precedence:void 0,{crossOrigin:r,integrity:n,fetchPriority:o}):a==="script"&&x2.d.X(e,{crossOrigin:r,integrity:n,fetchPriority:o,nonce:typeof t.nonce=="string"?t.nonce:void 0})}};w2.preinitModule=function(e,t){if(typeof e=="string")if(typeof t=="object"&&t!==null){if(t.as==null||t.as==="script"){var a=Oa(t.as,t.crossOrigin);x2.d.M(e,{crossOrigin:a,integrity:typeof t.integrity=="string"?t.integrity:void 0,nonce:typeof t.nonce=="string"?t.nonce:void 0})}}else t==null&&x2.d.M(e)};w2.preload=function(e,t){if(typeof e=="string"&&typeof t=="object"&&t!==null&&typeof t.as=="string"){var a=t.as,r=Oa(a,t.crossOrigin);x2.d.L(e,a,{crossOrigin:r,integrity:typeof t.integrity=="string"?t.integrity:void 0,nonce:typeof t.nonce=="string"?t.nonce:void 0,type:typeof t.type=="string"?t.type:void 0,fetchPriority:typeof t.fetchPriority=="string"?t.fetchPriority:void 0,referrerPolicy:typeof t.referrerPolicy=="string"?t.referrerPolicy:void 0,imageSrcSet:typeof t.imageSrcSet=="string"?t.imageSrcSet:void 0,imageSizes:typeof t.imageSizes=="string"?t.imageSizes:void 0,media:typeof t.media=="string"?t.media:void 0})}};w2.preloadModule=function(e,t){if(typeof e=="string")if(t){var a=Oa(t.as,t.crossOrigin);x2.d.m(e,{as:typeof t.as=="string"&&t.as!=="script"?t.as:void 0,crossOrigin:a,integrity:typeof t.integrity=="string"?t.integrity:void 0})}else x2.d.m(e)};w2.requestFormReset=function(e){x2.d.r(e)};w2.unstable_batchedUpdates=function(e,t){return e(t)};w2.useFormState=function(e,t,a){return Z0.H.useFormState(e,t,a)};w2.useFormStatus=function(){return Z0.H.useHostTransitionStatus()};w2.version="19.1.0"});var dn=_2((Uv,U6)=>{"use strict";function H6(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(H6)}catch(e){console.error(e)}}H6(),U6.exports=z6()});var Gs=_2(a4=>{"use strict";var t2=D6(),ii=z(),wf=dn();function k(e){var t="https://react.dev/errors/"+e;if(1<arguments.length){t+="?args[]="+encodeURIComponent(arguments[1]);for(var a=2;a<arguments.length;a++)t+="&args[]="+encodeURIComponent(arguments[a])}return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function li(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function P5(e){var t=e,a=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do t=e,(t.flags&4098)!==0&&(a=t.return),e=t.return;while(e)}return t.tag===3?a:null}function si(e){if(e.tag===13){var t=e.memoizedState;if(t===null&&(e=e.alternate,e!==null&&(t=e.memoizedState)),t!==null)return t.dehydrated}return null}function P6(e){if(P5(e)!==e)throw Error(k(188))}function Sf(e){var t=e.alternate;if(!t){if(t=P5(e),t===null)throw Error(k(188));return t!==e?null:e}for(var a=e,r=t;;){var n=a.return;if(n===null)break;var o=n.alternate;if(o===null){if(r=n.return,r!==null){a=r;continue}break}if(n.child===o.child){for(o=n.child;o;){if(o===a)return P6(n),e;if(o===r)return P6(n),t;o=o.sibling}throw Error(k(188))}if(a.return!==r.return)a=n,r=o;else{for(var i=!1,l=n.child;l;){if(l===a){i=!0,a=n,r=o;break}if(l===r){i=!0,r=n,a=o;break}l=l.sibling}if(!i){for(l=o.child;l;){if(l===a){i=!0,a=o,r=n;break}if(l===r){i=!0,r=o,a=n;break}l=l.sibling}if(!i)throw Error(k(189))}}if(a.alternate!==r)throw Error(k(190))}if(a.tag!==3)throw Error(k(188));return a.stateNode.current===a?e:t}function ci(e){var t=e.tag;if(t===5||t===26||t===27||t===6)return e;for(e=e.child;e!==null;){if(t=ci(e),t!==null)return t;e=e.sibling}return null}var k1=Object.assign,Rf=Symbol.for("react.element"),za=Symbol.for("react.transitional.element"),i5=Symbol.for("react.portal"),Wt=Symbol.for("react.fragment"),ui=Symbol.for("react.strict_mode"),Fn=Symbol.for("react.profiler"),Ef=Symbol.for("react.provider"),di=Symbol.for("react.consumer"),n3=Symbol.for("react.context"),P7=Symbol.for("react.forward_ref"),Yn=Symbol.for("react.suspense"),qn=Symbol.for("react.suspense_list"),B7=Symbol.for("react.memo"),O3=Symbol.for("react.lazy");Symbol.for("react.scope");var $n=Symbol.for("react.activity");Symbol.for("react.legacy_hidden");Symbol.for("react.tracing_marker");var Nf=Symbol.for("react.memo_cache_sentinel");Symbol.for("react.view_transition");var B6=Symbol.iterator;function J0(e){return e===null||typeof e!="object"?null:(e=B6&&e[B6]||e["@@iterator"],typeof e=="function"?e:null)}var _f=Symbol.for("react.client.reference");function In(e){if(e==null)return null;if(typeof e=="function")return e.$$typeof===_f?null:e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case Wt:return"Fragment";case Fn:return"Profiler";case ui:return"StrictMode";case Yn:return"Suspense";case qn:return"SuspenseList";case $n:return"Activity"}if(typeof e=="object")switch(e.$$typeof){case i5:return"Portal";case n3:return(e.displayName||"Context")+".Provider";case di:return(e._context.displayName||"Context")+".Consumer";case P7:var t=e.render;return e=e.displayName,e||(e=t.displayName||t.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case B7:return t=e.displayName||null,t!==null?t:In(e.type)||"Memo";case O3:t=e._payload,e=e._init;try{return In(e(t))}catch{}}return null}var l5=Array.isArray,K=ii.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,u1=wf.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,pt={pending:!1,data:null,method:null,action:null},Xn=[],e0=-1;function He(e){return{current:e}}function i2(e){0>e0||(e.current=Xn[e0],Xn[e0]=null,e0--)}function U1(e,t){e0++,Xn[e0]=e.current,e.current=t}var De=He(null),R5=He(null),Y3=He(null),dr=He(null);function fr(e,t){switch(U1(Y3,t),U1(R5,e),U1(De,null),t.nodeType){case 9:case 11:e=(e=t.documentElement)&&(e=e.namespaceURI)?$o(e):0;break;default:if(e=t.tagName,t=t.namespaceURI)t=$o(t),e=Ts(t,e);else switch(e){case"svg":e=1;break;case"math":e=2;break;default:e=0}}i2(De),U1(De,e)}function y0(){i2(De),i2(R5),i2(Y3)}function Kn(e){e.memoizedState!==null&&U1(dr,e);var t=De.current,a=Ts(t,e.type);t!==a&&(U1(R5,e),U1(De,a))}function Cr(e){R5.current===e&&(i2(De),i2(R5)),dr.current===e&&(i2(dr),O5._currentValue=pt)}var Qn=Object.prototype.hasOwnProperty,G7=t2.unstable_scheduleCallback,fn=t2.unstable_cancelCallback,Tf=t2.unstable_shouldYield,kf=t2.unstable_requestPaint,Oe=t2.unstable_now,Lf=t2.unstable_getCurrentPriorityLevel,fi=t2.unstable_ImmediatePriority,Ci=t2.unstable_UserBlockingPriority,pr=t2.unstable_NormalPriority,Mf=t2.unstable_LowPriority,pi=t2.unstable_IdlePriority,Af=t2.log,Df=t2.unstable_setDisableYieldValue,B5=null,q2=null;function G3(e){if(typeof Af=="function"&&Df(e),q2&&typeof q2.setStrictMode=="function")try{q2.setStrictMode(B5,e)}catch{}}var $2=Math.clz32?Math.clz32:Hf,Of=Math.log,zf=Math.LN2;function Hf(e){return e>>>=0,e===0?32:31-(Of(e)/zf|0)|0}var Ha=256,Ua=4194304;function dt(e){var t=e&42;if(t!==0)return t;switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:return 128;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194048;case 4194304:case 8388608:case 16777216:case 33554432:return e&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return e}}function Vr(e,t,a){var r=e.pendingLanes;if(r===0)return 0;var n=0,o=e.suspendedLanes,i=e.pingedLanes;e=e.warmLanes;var l=r&134217727;return l!==0?(r=l&~o,r!==0?n=dt(r):(i&=l,i!==0?n=dt(i):a||(a=l&~e,a!==0&&(n=dt(a))))):(l=r&~o,l!==0?n=dt(l):i!==0?n=dt(i):a||(a=r&~e,a!==0&&(n=dt(a)))),n===0?0:t!==0&&t!==n&&(t&o)===0&&(o=n&-n,a=t&-t,o>=a||o===32&&(a&4194048)!==0)?t:n}function G5(e,t){return(e.pendingLanes&~(e.suspendedLanes&~e.pingedLanes)&t)===0}function Uf(e,t){switch(e){case 1:case 2:case 4:case 8:case 64:return t+250;case 16:case 32:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function mi(){var e=Ha;return Ha<<=1,(Ha&4194048)===0&&(Ha=256),e}function gi(){var e=Ua;return Ua<<=1,(Ua&62914560)===0&&(Ua=4194304),e}function Cn(e){for(var t=[],a=0;31>a;a++)t.push(e);return t}function V5(e,t){e.pendingLanes|=t,t!==268435456&&(e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0)}function Pf(e,t,a,r,n,o){var i=e.pendingLanes;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.warmLanes=0,e.expiredLanes&=a,e.entangledLanes&=a,e.errorRecoveryDisabledLanes&=a,e.shellSuspendCounter=0;var l=e.entanglements,s=e.expirationTimes,c=e.hiddenUpdates;for(a=i&~a;0<a;){var f=31-$2(a),d=1<<f;l[f]=0,s[f]=-1;var u=c[f];if(u!==null)for(c[f]=null,f=0;f<u.length;f++){var m=u[f];m!==null&&(m.lane&=-536870913)}a&=~d}r!==0&&hi(e,r,0),o!==0&&n===0&&e.tag!==0&&(e.suspendedLanes|=o&~(i&~t))}function hi(e,t,a){e.pendingLanes|=t,e.suspendedLanes&=~t;var r=31-$2(t);e.entangledLanes|=t,e.entanglements[r]=e.entanglements[r]|1073741824|a&4194090}function vi(e,t){var a=e.entangledLanes|=t;for(e=e.entanglements;a;){var r=31-$2(a),n=1<<r;n&t|e[r]&t&&(e[r]|=t),a&=~n}}function V7(e){switch(e){case 2:e=1;break;case 8:e=4;break;case 32:e=16;break;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:e=128;break;case 268435456:e=134217728;break;default:e=0}return e}function j7(e){return e&=-e,2<e?8<e?(e&134217727)!==0?32:268435456:8:2}function yi(){var e=u1.p;return e!==0?e:(e=window.event,e===void 0?32:Ps(e.type))}function Bf(e,t){var a=u1.p;try{return u1.p=e,t()}finally{u1.p=a}}var tt=Math.random().toString(36).slice(2),g2="__reactFiber$"+tt,M2="__reactProps$"+tt,L0="__reactContainer$"+tt,Zn="__reactEvents$"+tt,Gf="__reactListeners$"+tt,Vf="__reactHandles$"+tt,G6="__reactResources$"+tt,j5="__reactMarker$"+tt;function F7(e){delete e[g2],delete e[M2],delete e[Zn],delete e[Gf],delete e[Vf]}function t0(e){var t=e[g2];if(t)return t;for(var a=e.parentNode;a;){if(t=a[L0]||a[g2]){if(a=t.alternate,t.child!==null||a!==null&&a.child!==null)for(e=Ko(e);e!==null;){if(a=e[g2])return a;e=Ko(e)}return t}e=a,a=e.parentNode}return null}function M0(e){if(e=e[g2]||e[L0]){var t=e.tag;if(t===5||t===6||t===13||t===26||t===27||t===3)return e}return null}function s5(e){var t=e.tag;if(t===5||t===26||t===27||t===6)return e.stateNode;throw Error(k(33))}function d0(e){var t=e[G6];return t||(t=e[G6]={hoistableStyles:new Map,hoistableScripts:new Map}),t}function n2(e){e[j5]=!0}var bi=new Set,xi={};function Et(e,t){b0(e,t),b0(e+"Capture",t)}function b0(e,t){for(xi[e]=t,e=0;e<t.length;e++)bi.add(t[e])}var jf=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),V6={},j6={};function Ff(e){return Qn.call(j6,e)?!0:Qn.call(V6,e)?!1:jf.test(e)?j6[e]=!0:(V6[e]=!0,!1)}function Ja(e,t,a){if(Ff(t))if(a===null)e.removeAttribute(t);else{switch(typeof a){case"undefined":case"function":case"symbol":e.removeAttribute(t);return;case"boolean":var r=t.toLowerCase().slice(0,5);if(r!=="data-"&&r!=="aria-"){e.removeAttribute(t);return}}e.setAttribute(t,""+a)}}function Pa(e,t,a){if(a===null)e.removeAttribute(t);else{switch(typeof a){case"undefined":case"function":case"symbol":case"boolean":e.removeAttribute(t);return}e.setAttribute(t,""+a)}}function e3(e,t,a,r){if(r===null)e.removeAttribute(a);else{switch(typeof r){case"undefined":case"function":case"symbol":case"boolean":e.removeAttribute(a);return}e.setAttributeNS(t,a,""+r)}}var pn,F6;function Qt(e){if(pn===void 0)try{throw Error()}catch(a){var t=a.stack.trim().match(/\n( *(at )?)/);pn=t&&t[1]||"",F6=-1<a.stack.indexOf(`
    at`)?" (<anonymous>)":-1<a.stack.indexOf("@")?"@unknown:0:0":""}return`
`+pn+e+F6}var mn=!1;function gn(e,t){if(!e||mn)return"";mn=!0;var a=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var r={DetermineComponentFrameRoot:function(){try{if(t){var d=function(){throw Error()};if(Object.defineProperty(d.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(d,[])}catch(m){var u=m}Reflect.construct(e,[],d)}else{try{d.call()}catch(m){u=m}e.call(d.prototype)}}else{try{throw Error()}catch(m){u=m}(d=e())&&typeof d.catch=="function"&&d.catch(function(){})}}catch(m){if(m&&u&&typeof m.stack=="string")return[m.stack,u.stack]}return[null,null]}};r.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var n=Object.getOwnPropertyDescriptor(r.DetermineComponentFrameRoot,"name");n&&n.configurable&&Object.defineProperty(r.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var o=r.DetermineComponentFrameRoot(),i=o[0],l=o[1];if(i&&l){var s=i.split(`
`),c=l.split(`
`);for(n=r=0;r<s.length&&!s[r].includes("DetermineComponentFrameRoot");)r++;for(;n<c.length&&!c[n].includes("DetermineComponentFrameRoot");)n++;if(r===s.length||n===c.length)for(r=s.length-1,n=c.length-1;1<=r&&0<=n&&s[r]!==c[n];)n--;for(;1<=r&&0<=n;r--,n--)if(s[r]!==c[n]){if(r!==1||n!==1)do if(r--,n--,0>n||s[r]!==c[n]){var f=`
`+s[r].replace(" at new "," at ");return e.displayName&&f.includes("<anonymous>")&&(f=f.replace("<anonymous>",e.displayName)),f}while(1<=r&&0<=n);break}}}finally{mn=!1,Error.prepareStackTrace=a}return(a=e?e.displayName||e.name:"")?Qt(a):""}function Yf(e){switch(e.tag){case 26:case 27:case 5:return Qt(e.type);case 16:return Qt("Lazy");case 13:return Qt("Suspense");case 19:return Qt("SuspenseList");case 0:case 15:return gn(e.type,!1);case 11:return gn(e.type.render,!1);case 1:return gn(e.type,!0);case 31:return Qt("Activity");default:return""}}function Y6(e){try{var t="";do t+=Yf(e),e=e.return;while(e);return t}catch(a){return`
Error generating stack: `+a.message+`
`+a.stack}}function te(e){switch(typeof e){case"bigint":case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function wi(e){var t=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(t==="checkbox"||t==="radio")}function qf(e){var t=wi(e)?"checked":"value",a=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&typeof a<"u"&&typeof a.get=="function"&&typeof a.set=="function"){var n=a.get,o=a.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return n.call(this)},set:function(i){r=""+i,o.call(this,i)}}),Object.defineProperty(e,t,{enumerable:a.enumerable}),{getValue:function(){return r},setValue:function(i){r=""+i},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function mr(e){e._valueTracker||(e._valueTracker=qf(e))}function Si(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var a=t.getValue(),r="";return e&&(r=wi(e)?e.checked?"true":"false":e.value),e=r,e!==a?(t.setValue(e),!0):!1}function gr(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}var $f=/[\n"\\]/g;function ne(e){return e.replace($f,function(t){return"\\"+t.charCodeAt(0).toString(16)+" "})}function Jn(e,t,a,r,n,o,i,l){e.name="",i!=null&&typeof i!="function"&&typeof i!="symbol"&&typeof i!="boolean"?e.type=i:e.removeAttribute("type"),t!=null?i==="number"?(t===0&&e.value===""||e.value!=t)&&(e.value=""+te(t)):e.value!==""+te(t)&&(e.value=""+te(t)):i!=="submit"&&i!=="reset"||e.removeAttribute("value"),t!=null?Wn(e,i,te(t)):a!=null?Wn(e,i,te(a)):r!=null&&e.removeAttribute("value"),n==null&&o!=null&&(e.defaultChecked=!!o),n!=null&&(e.checked=n&&typeof n!="function"&&typeof n!="symbol"),l!=null&&typeof l!="function"&&typeof l!="symbol"&&typeof l!="boolean"?e.name=""+te(l):e.removeAttribute("name")}function Ri(e,t,a,r,n,o,i,l){if(o!=null&&typeof o!="function"&&typeof o!="symbol"&&typeof o!="boolean"&&(e.type=o),t!=null||a!=null){if(!(o!=="submit"&&o!=="reset"||t!=null))return;a=a!=null?""+te(a):"",t=t!=null?""+te(t):a,l||t===e.value||(e.value=t),e.defaultValue=t}r=r??n,r=typeof r!="function"&&typeof r!="symbol"&&!!r,e.checked=l?e.checked:!!r,e.defaultChecked=!!r,i!=null&&typeof i!="function"&&typeof i!="symbol"&&typeof i!="boolean"&&(e.name=i)}function Wn(e,t,a){t==="number"&&gr(e.ownerDocument)===e||e.defaultValue===""+a||(e.defaultValue=""+a)}function f0(e,t,a,r){if(e=e.options,t){t={};for(var n=0;n<a.length;n++)t["$"+a[n]]=!0;for(a=0;a<e.length;a++)n=t.hasOwnProperty("$"+e[a].value),e[a].selected!==n&&(e[a].selected=n),n&&r&&(e[a].defaultSelected=!0)}else{for(a=""+te(a),t=null,n=0;n<e.length;n++){if(e[n].value===a){e[n].selected=!0,r&&(e[n].defaultSelected=!0);return}t!==null||e[n].disabled||(t=e[n])}t!==null&&(t.selected=!0)}}function Ei(e,t,a){if(t!=null&&(t=""+te(t),t!==e.value&&(e.value=t),a==null)){e.defaultValue!==t&&(e.defaultValue=t);return}e.defaultValue=a!=null?""+te(a):""}function Ni(e,t,a,r){if(t==null){if(r!=null){if(a!=null)throw Error(k(92));if(l5(r)){if(1<r.length)throw Error(k(93));r=r[0]}a=r}a==null&&(a=""),t=a}a=te(t),e.defaultValue=a,r=e.textContent,r===a&&r!==""&&r!==null&&(e.value=r)}function x0(e,t){if(t){var a=e.firstChild;if(a&&a===e.lastChild&&a.nodeType===3){a.nodeValue=t;return}}e.textContent=t}var If=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function q6(e,t,a){var r=t.indexOf("--")===0;a==null||typeof a=="boolean"||a===""?r?e.setProperty(t,""):t==="float"?e.cssFloat="":e[t]="":r?e.setProperty(t,a):typeof a!="number"||a===0||If.has(t)?t==="float"?e.cssFloat=a:e[t]=(""+a).trim():e[t]=a+"px"}function _i(e,t,a){if(t!=null&&typeof t!="object")throw Error(k(62));if(e=e.style,a!=null){for(var r in a)!a.hasOwnProperty(r)||t!=null&&t.hasOwnProperty(r)||(r.indexOf("--")===0?e.setProperty(r,""):r==="float"?e.cssFloat="":e[r]="");for(var n in t)r=t[n],t.hasOwnProperty(n)&&a[n]!==r&&q6(e,n,r)}else for(var o in t)t.hasOwnProperty(o)&&q6(e,o,t[o])}function Y7(e){if(e.indexOf("-")===-1)return!1;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Xf=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),Kf=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function Wa(e){return Kf.test(""+e)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":e}var e7=null;function q7(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var a0=null,C0=null;function $6(e){var t=M0(e);if(t&&(e=t.stateNode)){var a=e[M2]||null;e:switch(e=t.stateNode,t.type){case"input":if(Jn(e,a.value,a.defaultValue,a.defaultValue,a.checked,a.defaultChecked,a.type,a.name),t=a.name,a.type==="radio"&&t!=null){for(a=e;a.parentNode;)a=a.parentNode;for(a=a.querySelectorAll('input[name="'+ne(""+t)+'"][type="radio"]'),t=0;t<a.length;t++){var r=a[t];if(r!==e&&r.form===e.form){var n=r[M2]||null;if(!n)throw Error(k(90));Jn(r,n.value,n.defaultValue,n.defaultValue,n.checked,n.defaultChecked,n.type,n.name)}}for(t=0;t<a.length;t++)r=a[t],r.form===e.form&&Si(r)}break e;case"textarea":Ei(e,a.value,a.defaultValue);break e;case"select":t=a.value,t!=null&&f0(e,!!a.multiple,t,!1)}}}var hn=!1;function Ti(e,t,a){if(hn)return e(t,a);hn=!0;try{var r=e(t);return r}finally{if(hn=!1,(a0!==null||C0!==null)&&(Zr(),a0&&(t=a0,e=C0,C0=a0=null,$6(t),e)))for(t=0;t<e.length;t++)$6(e[t])}}function E5(e,t){var a=e.stateNode;if(a===null)return null;var r=a[M2]||null;if(r===null)return null;a=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(e=e.type,r=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!r;break e;default:e=!1}if(e)return null;if(a&&typeof a!="function")throw Error(k(231,t,typeof a));return a}var d3=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),t7=!1;if(d3)try{It={},Object.defineProperty(It,"passive",{get:function(){t7=!0}}),window.addEventListener("test",It,It),window.removeEventListener("test",It,It)}catch{t7=!1}var It,V3=null,$7=null,er=null;function ki(){if(er)return er;var e,t=$7,a=t.length,r,n="value"in V3?V3.value:V3.textContent,o=n.length;for(e=0;e<a&&t[e]===n[e];e++);var i=a-e;for(r=1;r<=i&&t[a-r]===n[o-r];r++);return er=n.slice(e,1<r?1-r:void 0)}function tr(e){var t=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&t===13&&(e=13)):e=t,e===10&&(e=13),32<=e||e===13?e:0}function Ba(){return!0}function I6(){return!1}function A2(e){function t(a,r,n,o,i){this._reactName=a,this._targetInst=n,this.type=r,this.nativeEvent=o,this.target=i,this.currentTarget=null;for(var l in e)e.hasOwnProperty(l)&&(a=e[l],this[l]=a?a(o):o[l]);return this.isDefaultPrevented=(o.defaultPrevented!=null?o.defaultPrevented:o.returnValue===!1)?Ba:I6,this.isPropagationStopped=I6,this}return k1(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():typeof a.returnValue!="unknown"&&(a.returnValue=!1),this.isDefaultPrevented=Ba)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():typeof a.cancelBubble!="unknown"&&(a.cancelBubble=!0),this.isPropagationStopped=Ba)},persist:function(){},isPersistent:Ba}),t}var Nt={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},jr=A2(Nt),F5=k1({},Nt,{view:0,detail:0}),Qf=A2(F5),vn,yn,W0,Fr=k1({},F5,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:I7,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==W0&&(W0&&e.type==="mousemove"?(vn=e.screenX-W0.screenX,yn=e.screenY-W0.screenY):yn=vn=0,W0=e),vn)},movementY:function(e){return"movementY"in e?e.movementY:yn}}),X6=A2(Fr),Zf=k1({},Fr,{dataTransfer:0}),Jf=A2(Zf),Wf=k1({},F5,{relatedTarget:0}),bn=A2(Wf),eC=k1({},Nt,{animationName:0,elapsedTime:0,pseudoElement:0}),tC=A2(eC),aC=k1({},Nt,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),rC=A2(aC),nC=k1({},Nt,{data:0}),K6=A2(nC),oC={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},iC={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},lC={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function sC(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):(e=lC[e])?!!t[e]:!1}function I7(){return sC}var cC=k1({},F5,{key:function(e){if(e.key){var t=oC[e.key]||e.key;if(t!=="Unidentified")return t}return e.type==="keypress"?(e=tr(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?iC[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:I7,charCode:function(e){return e.type==="keypress"?tr(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?tr(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),uC=A2(cC),dC=k1({},Fr,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Q6=A2(dC),fC=k1({},F5,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:I7}),CC=A2(fC),pC=k1({},Nt,{propertyName:0,elapsedTime:0,pseudoElement:0}),mC=A2(pC),gC=k1({},Fr,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),hC=A2(gC),vC=k1({},Nt,{newState:0,oldState:0}),yC=A2(vC),bC=[9,13,27,32],X7=d3&&"CompositionEvent"in window,u5=null;d3&&"documentMode"in document&&(u5=document.documentMode);var xC=d3&&"TextEvent"in window&&!u5,Li=d3&&(!X7||u5&&8<u5&&11>=u5),Z6=" ",J6=!1;function Mi(e,t){switch(e){case"keyup":return bC.indexOf(t.keyCode)!==-1;case"keydown":return t.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Ai(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var r0=!1;function wC(e,t){switch(e){case"compositionend":return Ai(t);case"keypress":return t.which!==32?null:(J6=!0,Z6);case"textInput":return e=t.data,e===Z6&&J6?null:e;default:return null}}function SC(e,t){if(r0)return e==="compositionend"||!X7&&Mi(e,t)?(e=ki(),er=$7=V3=null,r0=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Li&&t.locale!=="ko"?null:t.data;default:return null}}var RC={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function W6(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t==="input"?!!RC[e.type]:t==="textarea"}function Di(e,t,a,r){a0?C0?C0.push(r):C0=[r]:a0=r,t=Or(t,"onChange"),0<t.length&&(a=new jr("onChange","change",null,a,r),e.push({event:a,listeners:t}))}var d5=null,N5=null;function EC(e){Es(e,0)}function Yr(e){var t=s5(e);if(Si(t))return e}function eo(e,t){if(e==="change")return t}var Oi=!1;d3&&(d3?(Va="oninput"in document,Va||(xn=document.createElement("div"),xn.setAttribute("oninput","return;"),Va=typeof xn.oninput=="function"),Ga=Va):Ga=!1,Oi=Ga&&(!document.documentMode||9<document.documentMode));var Ga,Va,xn;function to(){d5&&(d5.detachEvent("onpropertychange",zi),N5=d5=null)}function zi(e){if(e.propertyName==="value"&&Yr(N5)){var t=[];Di(t,N5,e,q7(e)),Ti(EC,t)}}function NC(e,t,a){e==="focusin"?(to(),d5=t,N5=a,d5.attachEvent("onpropertychange",zi)):e==="focusout"&&to()}function _C(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return Yr(N5)}function TC(e,t){if(e==="click")return Yr(t)}function kC(e,t){if(e==="input"||e==="change")return Yr(t)}function LC(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var K2=typeof Object.is=="function"?Object.is:LC;function _5(e,t){if(K2(e,t))return!0;if(typeof e!="object"||e===null||typeof t!="object"||t===null)return!1;var a=Object.keys(e),r=Object.keys(t);if(a.length!==r.length)return!1;for(r=0;r<a.length;r++){var n=a[r];if(!Qn.call(t,n)||!K2(e[n],t[n]))return!1}return!0}function ao(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ro(e,t){var a=ao(e);e=0;for(var r;a;){if(a.nodeType===3){if(r=e+a.textContent.length,e<=t&&r>=t)return{node:a,offset:t-e};e=r}e:{for(;a;){if(a.nextSibling){a=a.nextSibling;break e}a=a.parentNode}a=void 0}a=ao(a)}}function Hi(e,t){return e&&t?e===t?!0:e&&e.nodeType===3?!1:t&&t.nodeType===3?Hi(e,t.parentNode):"contains"in e?e.contains(t):e.compareDocumentPosition?!!(e.compareDocumentPosition(t)&16):!1:!1}function Ui(e){e=e!=null&&e.ownerDocument!=null&&e.ownerDocument.defaultView!=null?e.ownerDocument.defaultView:window;for(var t=gr(e.document);t instanceof e.HTMLIFrameElement;){try{var a=typeof t.contentWindow.location.href=="string"}catch{a=!1}if(a)e=t.contentWindow;else break;t=gr(e.document)}return t}function K7(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(t==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||t==="textarea"||e.contentEditable==="true")}var MC=d3&&"documentMode"in document&&11>=document.documentMode,n0=null,a7=null,f5=null,r7=!1;function no(e,t,a){var r=a.window===a?a.document:a.nodeType===9?a:a.ownerDocument;r7||n0==null||n0!==gr(r)||(r=n0,"selectionStart"in r&&K7(r)?r={start:r.selectionStart,end:r.selectionEnd}:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection(),r={anchorNode:r.anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset}),f5&&_5(f5,r)||(f5=r,r=Or(a7,"onSelect"),0<r.length&&(t=new jr("onSelect","select",null,t,a),e.push({event:t,listeners:r}),t.target=n0)))}function ut(e,t){var a={};return a[e.toLowerCase()]=t.toLowerCase(),a["Webkit"+e]="webkit"+t,a["Moz"+e]="moz"+t,a}var o0={animationend:ut("Animation","AnimationEnd"),animationiteration:ut("Animation","AnimationIteration"),animationstart:ut("Animation","AnimationStart"),transitionrun:ut("Transition","TransitionRun"),transitionstart:ut("Transition","TransitionStart"),transitioncancel:ut("Transition","TransitionCancel"),transitionend:ut("Transition","TransitionEnd")},wn={},Pi={};d3&&(Pi=document.createElement("div").style,"AnimationEvent"in window||(delete o0.animationend.animation,delete o0.animationiteration.animation,delete o0.animationstart.animation),"TransitionEvent"in window||delete o0.transitionend.transition);function _t(e){if(wn[e])return wn[e];if(!o0[e])return e;var t=o0[e],a;for(a in t)if(t.hasOwnProperty(a)&&a in Pi)return wn[e]=t[a];return e}var Bi=_t("animationend"),Gi=_t("animationiteration"),Vi=_t("animationstart"),AC=_t("transitionrun"),DC=_t("transitionstart"),OC=_t("transitioncancel"),ji=_t("transitionend"),Fi=new Map,n7="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");n7.push("scrollEnd");function ye(e,t){Fi.set(e,t),Et(t,[e])}var oo=new WeakMap;function oe(e,t){if(typeof e=="object"&&e!==null){var a=oo.get(e);return a!==void 0?a:(t={value:e,source:t,stack:Y6(t)},oo.set(e,t),t)}return{value:e,source:t,stack:Y6(t)}}var ee=[],i0=0,Q7=0;function qr(){for(var e=i0,t=Q7=i0=0;t<e;){var a=ee[t];ee[t++]=null;var r=ee[t];ee[t++]=null;var n=ee[t];ee[t++]=null;var o=ee[t];if(ee[t++]=null,r!==null&&n!==null){var i=r.pending;i===null?n.next=n:(n.next=i.next,i.next=n),r.pending=n}o!==0&&Yi(a,n,o)}}function $r(e,t,a,r){ee[i0++]=e,ee[i0++]=t,ee[i0++]=a,ee[i0++]=r,Q7|=r,e.lanes|=r,e=e.alternate,e!==null&&(e.lanes|=r)}function Z7(e,t,a,r){return $r(e,t,a,r),hr(e)}function A0(e,t){return $r(e,null,null,t),hr(e)}function Yi(e,t,a){e.lanes|=a;var r=e.alternate;r!==null&&(r.lanes|=a);for(var n=!1,o=e.return;o!==null;)o.childLanes|=a,r=o.alternate,r!==null&&(r.childLanes|=a),o.tag===22&&(e=o.stateNode,e===null||e._visibility&1||(n=!0)),e=o,o=o.return;return e.tag===3?(o=e.stateNode,n&&t!==null&&(n=31-$2(a),e=o.hiddenUpdates,r=e[n],r===null?e[n]=[t]:r.push(t),t.lane=a|536870912),o):null}function hr(e){if(50<w5)throw w5=0,E7=null,Error(k(185));for(var t=e.return;t!==null;)e=t,t=e.return;return e.tag===3?e.stateNode:null}var l0={};function zC(e,t,a,r){this.tag=e,this.key=a,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Y2(e,t,a,r){return new zC(e,t,a,r)}function J7(e){return e=e.prototype,!(!e||!e.isReactComponent)}function c3(e,t){var a=e.alternate;return a===null?(a=Y2(e.tag,t,e.key,e.mode),a.elementType=e.elementType,a.type=e.type,a.stateNode=e.stateNode,a.alternate=e,e.alternate=a):(a.pendingProps=t,a.type=e.type,a.flags=0,a.subtreeFlags=0,a.deletions=null),a.flags=e.flags&65011712,a.childLanes=e.childLanes,a.lanes=e.lanes,a.child=e.child,a.memoizedProps=e.memoizedProps,a.memoizedState=e.memoizedState,a.updateQueue=e.updateQueue,t=e.dependencies,a.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext},a.sibling=e.sibling,a.index=e.index,a.ref=e.ref,a.refCleanup=e.refCleanup,a}function qi(e,t){e.flags&=65011714;var a=e.alternate;return a===null?(e.childLanes=0,e.lanes=t,e.child=null,e.subtreeFlags=0,e.memoizedProps=null,e.memoizedState=null,e.updateQueue=null,e.dependencies=null,e.stateNode=null):(e.childLanes=a.childLanes,e.lanes=a.lanes,e.child=a.child,e.subtreeFlags=0,e.deletions=null,e.memoizedProps=a.memoizedProps,e.memoizedState=a.memoizedState,e.updateQueue=a.updateQueue,e.type=a.type,t=a.dependencies,e.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext}),e}function ar(e,t,a,r,n,o){var i=0;if(r=e,typeof e=="function")J7(e)&&(i=1);else if(typeof e=="string")i=zp(e,a,De.current)?26:e==="html"||e==="head"||e==="body"?27:5;else e:switch(e){case $n:return e=Y2(31,a,t,n),e.elementType=$n,e.lanes=o,e;case Wt:return mt(a.children,n,o,t);case ui:i=8,n|=24;break;case Fn:return e=Y2(12,a,t,n|2),e.elementType=Fn,e.lanes=o,e;case Yn:return e=Y2(13,a,t,n),e.elementType=Yn,e.lanes=o,e;case qn:return e=Y2(19,a,t,n),e.elementType=qn,e.lanes=o,e;default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case Ef:case n3:i=10;break e;case di:i=9;break e;case P7:i=11;break e;case B7:i=14;break e;case O3:i=16,r=null;break e}i=29,a=Error(k(130,e===null?"null":typeof e,"")),r=null}return t=Y2(i,a,t,n),t.elementType=e,t.type=r,t.lanes=o,t}function mt(e,t,a,r){return e=Y2(7,e,r,t),e.lanes=a,e}function Sn(e,t,a){return e=Y2(6,e,null,t),e.lanes=a,e}function Rn(e,t,a){return t=Y2(4,e.children!==null?e.children:[],e.key,t),t.lanes=a,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}var s0=[],c0=0,vr=null,yr=0,ae=[],re=0,gt=null,o3=1,i3="";function ft(e,t){s0[c0++]=yr,s0[c0++]=vr,vr=e,yr=t}function $i(e,t,a){ae[re++]=o3,ae[re++]=i3,ae[re++]=gt,gt=e;var r=o3;e=i3;var n=32-$2(r)-1;r&=~(1<<n),a+=1;var o=32-$2(t)+n;if(30<o){var i=n-n%5;o=(r&(1<<i)-1).toString(32),r>>=i,n-=i,o3=1<<32-$2(t)+n|a<<n|r,i3=o+e}else o3=1<<o|a<<n|r,i3=e}function W7(e){e.return!==null&&(ft(e,1),$i(e,1,0))}function e9(e){for(;e===vr;)vr=s0[--c0],s0[c0]=null,yr=s0[--c0],s0[c0]=null;for(;e===gt;)gt=ae[--re],ae[re]=null,i3=ae[--re],ae[re]=null,o3=ae[--re],ae[re]=null}var S2=null,j1=null,c1=!1,ht=null,Me=!1,o7=Error(k(519));function xt(e){var t=Error(k(418,""));throw T5(oe(t,e)),o7}function io(e){var t=e.stateNode,a=e.type,r=e.memoizedProps;switch(t[g2]=e,t[M2]=r,a){case"dialog":a1("cancel",t),a1("close",t);break;case"iframe":case"object":case"embed":a1("load",t);break;case"video":case"audio":for(a=0;a<M5.length;a++)a1(M5[a],t);break;case"source":a1("error",t);break;case"img":case"image":case"link":a1("error",t),a1("load",t);break;case"details":a1("toggle",t);break;case"input":a1("invalid",t),Ri(t,r.value,r.defaultValue,r.checked,r.defaultChecked,r.type,r.name,!0),mr(t);break;case"select":a1("invalid",t);break;case"textarea":a1("invalid",t),Ni(t,r.value,r.defaultValue,r.children),mr(t)}a=r.children,typeof a!="string"&&typeof a!="number"&&typeof a!="bigint"||t.textContent===""+a||r.suppressHydrationWarning===!0||_s(t.textContent,a)?(r.popover!=null&&(a1("beforetoggle",t),a1("toggle",t)),r.onScroll!=null&&a1("scroll",t),r.onScrollEnd!=null&&a1("scrollend",t),r.onClick!=null&&(t.onclick=e4),t=!0):t=!1,t||xt(e)}function lo(e){for(S2=e.return;S2;)switch(S2.tag){case 5:case 13:Me=!1;return;case 27:case 3:Me=!0;return;default:S2=S2.return}}function e5(e){if(e!==S2)return!1;if(!c1)return lo(e),c1=!0,!1;var t=e.tag,a;if((a=t!==3&&t!==27)&&((a=t===5)&&(a=e.type,a=!(a!=="form"&&a!=="button")||M7(e.type,e.memoizedProps)),a=!a),a&&j1&&xt(e),lo(e),t===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(k(317));e:{for(e=e.nextSibling,t=0;e;){if(e.nodeType===8)if(a=e.data,a==="/$"){if(t===0){j1=ve(e.nextSibling);break e}t--}else a!=="$"&&a!=="$!"&&a!=="$?"||t++;e=e.nextSibling}j1=null}}else t===27?(t=j1,at(e.type)?(e=O7,O7=null,j1=e):j1=t):j1=S2?ve(e.stateNode.nextSibling):null;return!0}function Y5(){j1=S2=null,c1=!1}function so(){var e=ht;return e!==null&&(L2===null?L2=e:L2.push.apply(L2,e),ht=null),e}function T5(e){ht===null?ht=[e]:ht.push(e)}var i7=He(null),Tt=null,l3=null;function H3(e,t,a){U1(i7,t._currentValue),t._currentValue=a}function u3(e){e._currentValue=i7.current,i2(i7)}function l7(e,t,a){for(;e!==null;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,r!==null&&(r.childLanes|=t)):r!==null&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===a)break;e=e.return}}function s7(e,t,a,r){var n=e.child;for(n!==null&&(n.return=e);n!==null;){var o=n.dependencies;if(o!==null){var i=n.child;o=o.firstContext;e:for(;o!==null;){var l=o;o=n;for(var s=0;s<t.length;s++)if(l.context===t[s]){o.lanes|=a,l=o.alternate,l!==null&&(l.lanes|=a),l7(o.return,a,e),r||(i=null);break e}o=l.next}}else if(n.tag===18){if(i=n.return,i===null)throw Error(k(341));i.lanes|=a,o=i.alternate,o!==null&&(o.lanes|=a),l7(i,a,e),i=null}else i=n.child;if(i!==null)i.return=n;else for(i=n;i!==null;){if(i===e){i=null;break}if(n=i.sibling,n!==null){n.return=i.return,i=n;break}i=i.return}n=i}}function q5(e,t,a,r){e=null;for(var n=t,o=!1;n!==null;){if(!o){if((n.flags&524288)!==0)o=!0;else if((n.flags&262144)!==0)break}if(n.tag===10){var i=n.alternate;if(i===null)throw Error(k(387));if(i=i.memoizedProps,i!==null){var l=n.type;K2(n.pendingProps.value,i.value)||(e!==null?e.push(l):e=[l])}}else if(n===dr.current){if(i=n.alternate,i===null)throw Error(k(387));i.memoizedState.memoizedState!==n.memoizedState.memoizedState&&(e!==null?e.push(O5):e=[O5])}n=n.return}e!==null&&s7(t,e,a,r),t.flags|=262144}function br(e){for(e=e.firstContext;e!==null;){if(!K2(e.context._currentValue,e.memoizedValue))return!0;e=e.next}return!1}function wt(e){Tt=e,l3=null,e=e.dependencies,e!==null&&(e.firstContext=null)}function h2(e){return Ii(Tt,e)}function ja(e,t){return Tt===null&&wt(e),Ii(e,t)}function Ii(e,t){var a=t._currentValue;if(t={context:t,memoizedValue:a,next:null},l3===null){if(e===null)throw Error(k(308));l3=t,e.dependencies={lanes:0,firstContext:t},e.flags|=524288}else l3=l3.next=t;return a}var HC=typeof AbortController<"u"?AbortController:function(){var e=[],t=this.signal={aborted:!1,addEventListener:function(a,r){e.push(r)}};this.abort=function(){t.aborted=!0,e.forEach(function(a){return a()})}},UC=t2.unstable_scheduleCallback,PC=t2.unstable_NormalPriority,W1={$$typeof:n3,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function t9(){return{controller:new HC,data:new Map,refCount:0}}function $5(e){e.refCount--,e.refCount===0&&UC(PC,function(){e.controller.abort()})}var C5=null,c7=0,w0=0,p0=null;function BC(e,t){if(C5===null){var a=C5=[];c7=0,w0=R9(),p0={status:"pending",value:void 0,then:function(r){a.push(r)}}}return c7++,t.then(co,co),t}function co(){if(--c7===0&&C5!==null){p0!==null&&(p0.status="fulfilled");var e=C5;C5=null,w0=0,p0=null;for(var t=0;t<e.length;t++)(0,e[t])()}}function GC(e,t){var a=[],r={status:"pending",value:null,reason:null,then:function(n){a.push(n)}};return e.then(function(){r.status="fulfilled",r.value=t;for(var n=0;n<a.length;n++)(0,a[n])(t)},function(n){for(r.status="rejected",r.reason=n,n=0;n<a.length;n++)(0,a[n])(void 0)}),r}var uo=K.S;K.S=function(e,t){typeof t=="object"&&t!==null&&typeof t.then=="function"&&BC(e,t),uo!==null&&uo(e,t)};var vt=He(null);function a9(){var e=vt.current;return e!==null?e:N1.pooledCache}function rr(e,t){t===null?U1(vt,vt.current):U1(vt,t.pool)}function Xi(){var e=a9();return e===null?null:{parent:W1._currentValue,pool:e}}var I5=Error(k(460)),Ki=Error(k(474)),Ir=Error(k(542)),u7={then:function(){}};function fo(e){return e=e.status,e==="fulfilled"||e==="rejected"}function Fa(){}function Qi(e,t,a){switch(a=e[a],a===void 0?e.push(t):a!==t&&(t.then(Fa,Fa),t=a),t.status){case"fulfilled":return t.value;case"rejected":throw e=t.reason,po(e),e;default:if(typeof t.status=="string")t.then(Fa,Fa);else{if(e=N1,e!==null&&100<e.shellSuspendCounter)throw Error(k(482));e=t,e.status="pending",e.then(function(r){if(t.status==="pending"){var n=t;n.status="fulfilled",n.value=r}},function(r){if(t.status==="pending"){var n=t;n.status="rejected",n.reason=r}})}switch(t.status){case"fulfilled":return t.value;case"rejected":throw e=t.reason,po(e),e}throw p5=t,I5}}var p5=null;function Co(){if(p5===null)throw Error(k(459));var e=p5;return p5=null,e}function po(e){if(e===I5||e===Ir)throw Error(k(483))}var z3=!1;function r9(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function d7(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,callbacks:null})}function q3(e){return{lane:e,tag:0,payload:null,callback:null,next:null}}function $3(e,t,a){var r=e.updateQueue;if(r===null)return null;if(r=r.shared,(g1&2)!==0){var n=r.pending;return n===null?t.next=t:(t.next=n.next,n.next=t),r.pending=t,t=hr(e),Yi(e,null,a),t}return $r(e,r,t,a),hr(e)}function m5(e,t,a){if(t=t.updateQueue,t!==null&&(t=t.shared,(a&4194048)!==0)){var r=t.lanes;r&=e.pendingLanes,a|=r,t.lanes=a,vi(e,a)}}function En(e,t){var a=e.updateQueue,r=e.alternate;if(r!==null&&(r=r.updateQueue,a===r)){var n=null,o=null;if(a=a.firstBaseUpdate,a!==null){do{var i={lane:a.lane,tag:a.tag,payload:a.payload,callback:null,next:null};o===null?n=o=i:o=o.next=i,a=a.next}while(a!==null);o===null?n=o=t:o=o.next=t}else n=o=t;a={baseState:r.baseState,firstBaseUpdate:n,lastBaseUpdate:o,shared:r.shared,callbacks:r.callbacks},e.updateQueue=a;return}e=a.lastBaseUpdate,e===null?a.firstBaseUpdate=t:e.next=t,a.lastBaseUpdate=t}var f7=!1;function g5(){if(f7){var e=p0;if(e!==null)throw e}}function h5(e,t,a,r){f7=!1;var n=e.updateQueue;z3=!1;var o=n.firstBaseUpdate,i=n.lastBaseUpdate,l=n.shared.pending;if(l!==null){n.shared.pending=null;var s=l,c=s.next;s.next=null,i===null?o=c:i.next=c,i=s;var f=e.alternate;f!==null&&(f=f.updateQueue,l=f.lastBaseUpdate,l!==i&&(l===null?f.firstBaseUpdate=c:l.next=c,f.lastBaseUpdate=s))}if(o!==null){var d=n.baseState;i=0,f=c=s=null,l=o;do{var u=l.lane&-536870913,m=u!==l.lane;if(m?(o1&u)===u:(r&u)===u){u!==0&&u===w0&&(f7=!0),f!==null&&(f=f.next={lane:0,tag:l.tag,payload:l.payload,callback:null,next:null});e:{var b=e,R=l;u=t;var S=a;switch(R.tag){case 1:if(b=R.payload,typeof b=="function"){d=b.call(S,d,u);break e}d=b;break e;case 3:b.flags=b.flags&-65537|128;case 0:if(b=R.payload,u=typeof b=="function"?b.call(S,d,u):b,u==null)break e;d=k1({},d,u);break e;case 2:z3=!0}}u=l.callback,u!==null&&(e.flags|=64,m&&(e.flags|=8192),m=n.callbacks,m===null?n.callbacks=[u]:m.push(u))}else m={lane:u,tag:l.tag,payload:l.payload,callback:l.callback,next:null},f===null?(c=f=m,s=d):f=f.next=m,i|=u;if(l=l.next,l===null){if(l=n.shared.pending,l===null)break;m=l,l=m.next,m.next=null,n.lastBaseUpdate=m,n.shared.pending=null}}while(!0);f===null&&(s=d),n.baseState=s,n.firstBaseUpdate=c,n.lastBaseUpdate=f,o===null&&(n.shared.lanes=0),et|=i,e.lanes=i,e.memoizedState=d}}function Zi(e,t){if(typeof e!="function")throw Error(k(191,e));e.call(t)}function Ji(e,t){var a=e.callbacks;if(a!==null)for(e.callbacks=null,e=0;e<a.length;e++)Zi(a[e],t)}var S0=He(null),xr=He(0);function mo(e,t){e=p3,U1(xr,e),U1(S0,t),p3=e|t.baseLanes}function C7(){U1(xr,p3),U1(S0,S0.current)}function n9(){p3=xr.current,i2(S0),i2(xr)}var J3=0,J=null,x1=null,Q1=null,wr=!1,m0=!1,St=!1,Sr=0,k5=0,g0=null,VC=0;function q1(){throw Error(k(321))}function o9(e,t){if(t===null)return!1;for(var a=0;a<t.length&&a<e.length;a++)if(!K2(e[a],t[a]))return!1;return!0}function i9(e,t,a,r,n,o){return J3=o,J=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,K.H=e===null||e.memoizedState===null?kl:Ll,St=!1,o=a(r,n),St=!1,m0&&(o=el(t,a,r,n)),Wi(e),o}function Wi(e){K.H=Rr;var t=x1!==null&&x1.next!==null;if(J3=0,Q1=x1=J=null,wr=!1,k5=0,g0=null,t)throw Error(k(300));e===null||o2||(e=e.dependencies,e!==null&&br(e)&&(o2=!0))}function el(e,t,a,r){J=e;var n=0;do{if(m0&&(g0=null),k5=0,m0=!1,25<=n)throw Error(k(301));if(n+=1,Q1=x1=null,e.updateQueue!=null){var o=e.updateQueue;o.lastEffect=null,o.events=null,o.stores=null,o.memoCache!=null&&(o.memoCache.index=0)}K.H=XC,o=t(a,r)}while(m0);return o}function jC(){var e=K.H,t=e.useState()[0];return t=typeof t.then=="function"?X5(t):t,e=e.useState()[0],(x1!==null?x1.memoizedState:null)!==e&&(J.flags|=1024),t}function l9(){var e=Sr!==0;return Sr=0,e}function s9(e,t,a){t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a}function c9(e){if(wr){for(e=e.memoizedState;e!==null;){var t=e.queue;t!==null&&(t.pending=null),e=e.next}wr=!1}J3=0,Q1=x1=J=null,m0=!1,k5=Sr=0,g0=null}function T2(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Q1===null?J.memoizedState=Q1=e:Q1=Q1.next=e,Q1}function Z1(){if(x1===null){var e=J.alternate;e=e!==null?e.memoizedState:null}else e=x1.next;var t=Q1===null?J.memoizedState:Q1.next;if(t!==null)Q1=t,x1=e;else{if(e===null)throw J.alternate===null?Error(k(467)):Error(k(310));x1=e,e={memoizedState:x1.memoizedState,baseState:x1.baseState,baseQueue:x1.baseQueue,queue:x1.queue,next:null},Q1===null?J.memoizedState=Q1=e:Q1=Q1.next=e}return Q1}function u9(){return{lastEffect:null,events:null,stores:null,memoCache:null}}function X5(e){var t=k5;return k5+=1,g0===null&&(g0=[]),e=Qi(g0,e,t),t=J,(Q1===null?t.memoizedState:Q1.next)===null&&(t=t.alternate,K.H=t===null||t.memoizedState===null?kl:Ll),e}function Xr(e){if(e!==null&&typeof e=="object"){if(typeof e.then=="function")return X5(e);if(e.$$typeof===n3)return h2(e)}throw Error(k(438,String(e)))}function d9(e){var t=null,a=J.updateQueue;if(a!==null&&(t=a.memoCache),t==null){var r=J.alternate;r!==null&&(r=r.updateQueue,r!==null&&(r=r.memoCache,r!=null&&(t={data:r.data.map(function(n){return n.slice()}),index:0})))}if(t==null&&(t={data:[],index:0}),a===null&&(a=u9(),J.updateQueue=a),a.memoCache=t,a=t.data[t.index],a===void 0)for(a=t.data[t.index]=Array(e),r=0;r<e;r++)a[r]=Nf;return t.index++,a}function f3(e,t){return typeof t=="function"?t(e):t}function nr(e){var t=Z1();return f9(t,x1,e)}function f9(e,t,a){var r=e.queue;if(r===null)throw Error(k(311));r.lastRenderedReducer=a;var n=e.baseQueue,o=r.pending;if(o!==null){if(n!==null){var i=n.next;n.next=o.next,o.next=i}t.baseQueue=n=o,r.pending=null}if(o=e.baseState,n===null)e.memoizedState=o;else{t=n.next;var l=i=null,s=null,c=t,f=!1;do{var d=c.lane&-536870913;if(d!==c.lane?(o1&d)===d:(J3&d)===d){var u=c.revertLane;if(u===0)s!==null&&(s=s.next={lane:0,revertLane:0,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null}),d===w0&&(f=!0);else if((J3&u)===u){c=c.next,u===w0&&(f=!0);continue}else d={lane:0,revertLane:c.revertLane,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null},s===null?(l=s=d,i=o):s=s.next=d,J.lanes|=u,et|=u;d=c.action,St&&a(o,d),o=c.hasEagerState?c.eagerState:a(o,d)}else u={lane:d,revertLane:c.revertLane,action:c.action,hasEagerState:c.hasEagerState,eagerState:c.eagerState,next:null},s===null?(l=s=u,i=o):s=s.next=u,J.lanes|=d,et|=d;c=c.next}while(c!==null&&c!==t);if(s===null?i=o:s.next=l,!K2(o,e.memoizedState)&&(o2=!0,f&&(a=p0,a!==null)))throw a;e.memoizedState=o,e.baseState=i,e.baseQueue=s,r.lastRenderedState=o}return n===null&&(r.lanes=0),[e.memoizedState,r.dispatch]}function Nn(e){var t=Z1(),a=t.queue;if(a===null)throw Error(k(311));a.lastRenderedReducer=e;var r=a.dispatch,n=a.pending,o=t.memoizedState;if(n!==null){a.pending=null;var i=n=n.next;do o=e(o,i.action),i=i.next;while(i!==n);K2(o,t.memoizedState)||(o2=!0),t.memoizedState=o,t.baseQueue===null&&(t.baseState=o),a.lastRenderedState=o}return[o,r]}function tl(e,t,a){var r=J,n=Z1(),o=c1;if(o){if(a===void 0)throw Error(k(407));a=a()}else a=t();var i=!K2((x1||n).memoizedState,a);i&&(n.memoizedState=a,o2=!0),n=n.queue;var l=nl.bind(null,r,n,e);if(K5(2048,8,l,[e]),n.getSnapshot!==t||i||Q1!==null&&Q1.memoizedState.tag&1){if(r.flags|=2048,R0(9,Kr(),rl.bind(null,r,n,a,t),null),N1===null)throw Error(k(349));o||(J3&124)!==0||al(r,t,a)}return a}function al(e,t,a){e.flags|=16384,e={getSnapshot:t,value:a},t=J.updateQueue,t===null?(t=u9(),J.updateQueue=t,t.stores=[e]):(a=t.stores,a===null?t.stores=[e]:a.push(e))}function rl(e,t,a,r){t.value=a,t.getSnapshot=r,ol(t)&&il(e)}function nl(e,t,a){return a(function(){ol(t)&&il(e)})}function ol(e){var t=e.getSnapshot;e=e.value;try{var a=t();return!K2(e,a)}catch{return!0}}function il(e){var t=A0(e,2);t!==null&&X2(t,e,2)}function p7(e){var t=T2();if(typeof e=="function"){var a=e;if(e=a(),St){G3(!0);try{a()}finally{G3(!1)}}}return t.memoizedState=t.baseState=e,t.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:f3,lastRenderedState:e},t}function ll(e,t,a,r){return e.baseState=a,f9(e,x1,typeof r=="function"?r:f3)}function FC(e,t,a,r,n){if(Qr(e))throw Error(k(485));if(e=t.action,e!==null){var o={payload:n,action:e,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(i){o.listeners.push(i)}};K.T!==null?a(!0):o.isTransition=!1,r(o),a=t.pending,a===null?(o.next=t.pending=o,sl(t,o)):(o.next=a.next,t.pending=a.next=o)}}function sl(e,t){var a=t.action,r=t.payload,n=e.state;if(t.isTransition){var o=K.T,i={};K.T=i;try{var l=a(n,r),s=K.S;s!==null&&s(i,l),go(e,t,l)}catch(c){m7(e,t,c)}finally{K.T=o}}else try{o=a(n,r),go(e,t,o)}catch(c){m7(e,t,c)}}function go(e,t,a){a!==null&&typeof a=="object"&&typeof a.then=="function"?a.then(function(r){ho(e,t,r)},function(r){return m7(e,t,r)}):ho(e,t,a)}function ho(e,t,a){t.status="fulfilled",t.value=a,cl(t),e.state=a,t=e.pending,t!==null&&(a=t.next,a===t?e.pending=null:(a=a.next,t.next=a,sl(e,a)))}function m7(e,t,a){var r=e.pending;if(e.pending=null,r!==null){r=r.next;do t.status="rejected",t.reason=a,cl(t),t=t.next;while(t!==r)}e.action=null}function cl(e){e=e.listeners;for(var t=0;t<e.length;t++)(0,e[t])()}function ul(e,t){return t}function vo(e,t){if(c1){var a=N1.formState;if(a!==null){e:{var r=J;if(c1){if(j1){t:{for(var n=j1,o=Me;n.nodeType!==8;){if(!o){n=null;break t}if(n=ve(n.nextSibling),n===null){n=null;break t}}o=n.data,n=o==="F!"||o==="F"?n:null}if(n){j1=ve(n.nextSibling),r=n.data==="F!";break e}}xt(r)}r=!1}r&&(t=a[0])}}return a=T2(),a.memoizedState=a.baseState=t,r={pending:null,lanes:0,dispatch:null,lastRenderedReducer:ul,lastRenderedState:t},a.queue=r,a=Nl.bind(null,J,r),r.dispatch=a,r=p7(!1),o=g9.bind(null,J,!1,r.queue),r=T2(),n={state:t,dispatch:null,action:e,pending:null},r.queue=n,a=FC.bind(null,J,n,o,a),n.dispatch=a,r.memoizedState=e,[t,a,!1]}function yo(e){var t=Z1();return dl(t,x1,e)}function dl(e,t,a){if(t=f9(e,t,ul)[0],e=nr(f3)[0],typeof t=="object"&&t!==null&&typeof t.then=="function")try{var r=X5(t)}catch(i){throw i===I5?Ir:i}else r=t;t=Z1();var n=t.queue,o=n.dispatch;return a!==t.memoizedState&&(J.flags|=2048,R0(9,Kr(),YC.bind(null,n,a),null)),[r,o,e]}function YC(e,t){e.action=t}function bo(e){var t=Z1(),a=x1;if(a!==null)return dl(t,a,e);Z1(),t=t.memoizedState,a=Z1();var r=a.queue.dispatch;return a.memoizedState=e,[t,r,!1]}function R0(e,t,a,r){return e={tag:e,create:a,deps:r,inst:t,next:null},t=J.updateQueue,t===null&&(t=u9(),J.updateQueue=t),a=t.lastEffect,a===null?t.lastEffect=e.next=e:(r=a.next,a.next=e,e.next=r,t.lastEffect=e),e}function Kr(){return{destroy:void 0,resource:void 0}}function fl(){return Z1().memoizedState}function or(e,t,a,r){var n=T2();r=r===void 0?null:r,J.flags|=e,n.memoizedState=R0(1|t,Kr(),a,r)}function K5(e,t,a,r){var n=Z1();r=r===void 0?null:r;var o=n.memoizedState.inst;x1!==null&&r!==null&&o9(r,x1.memoizedState.deps)?n.memoizedState=R0(t,o,a,r):(J.flags|=e,n.memoizedState=R0(1|t,o,a,r))}function xo(e,t){or(8390656,8,e,t)}function Cl(e,t){K5(2048,8,e,t)}function pl(e,t){return K5(4,2,e,t)}function ml(e,t){return K5(4,4,e,t)}function gl(e,t){if(typeof t=="function"){e=e();var a=t(e);return function(){typeof a=="function"?a():t(null)}}if(t!=null)return e=e(),t.current=e,function(){t.current=null}}function hl(e,t,a){a=a!=null?a.concat([e]):null,K5(4,4,gl.bind(null,t,e),a)}function C9(){}function vl(e,t){var a=Z1();t=t===void 0?null:t;var r=a.memoizedState;return t!==null&&o9(t,r[1])?r[0]:(a.memoizedState=[e,t],e)}function yl(e,t){var a=Z1();t=t===void 0?null:t;var r=a.memoizedState;if(t!==null&&o9(t,r[1]))return r[0];if(r=e(),St){G3(!0);try{e()}finally{G3(!1)}}return a.memoizedState=[r,t],r}function p9(e,t,a){return a===void 0||(J3&1073741824)!==0?e.memoizedState=t:(e.memoizedState=a,e=cs(),J.lanes|=e,et|=e,a)}function bl(e,t,a,r){return K2(a,t)?a:S0.current!==null?(e=p9(e,a,r),K2(e,t)||(o2=!0),e):(J3&42)===0?(o2=!0,e.memoizedState=a):(e=cs(),J.lanes|=e,et|=e,t)}function xl(e,t,a,r,n){var o=u1.p;u1.p=o!==0&&8>o?o:8;var i=K.T,l={};K.T=l,g9(e,!1,t,a);try{var s=n(),c=K.S;if(c!==null&&c(l,s),s!==null&&typeof s=="object"&&typeof s.then=="function"){var f=GC(s,r);v5(e,t,f,I2(e))}else v5(e,t,r,I2(e))}catch(d){v5(e,t,{then:function(){},status:"rejected",reason:d},I2())}finally{u1.p=o,K.T=i}}function qC(){}function g7(e,t,a,r){if(e.tag!==5)throw Error(k(476));var n=wl(e).queue;xl(e,n,t,pt,a===null?qC:function(){return Sl(e),a(r)})}function wl(e){var t=e.memoizedState;if(t!==null)return t;t={memoizedState:pt,baseState:pt,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:f3,lastRenderedState:pt},next:null};var a={};return t.next={memoizedState:a,baseState:a,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:f3,lastRenderedState:a},next:null},e.memoizedState=t,e=e.alternate,e!==null&&(e.memoizedState=t),t}function Sl(e){var t=wl(e).next.queue;v5(e,t,{},I2())}function m9(){return h2(O5)}function Rl(){return Z1().memoizedState}function El(){return Z1().memoizedState}function $C(e){for(var t=e.return;t!==null;){switch(t.tag){case 24:case 3:var a=I2();e=q3(a);var r=$3(t,e,a);r!==null&&(X2(r,t,a),m5(r,t,a)),t={cache:t9()},e.payload=t;return}t=t.return}}function IC(e,t,a){var r=I2();a={lane:r,revertLane:0,action:a,hasEagerState:!1,eagerState:null,next:null},Qr(e)?_l(t,a):(a=Z7(e,t,a,r),a!==null&&(X2(a,e,r),Tl(a,t,r)))}function Nl(e,t,a){var r=I2();v5(e,t,a,r)}function v5(e,t,a,r){var n={lane:r,revertLane:0,action:a,hasEagerState:!1,eagerState:null,next:null};if(Qr(e))_l(t,n);else{var o=e.alternate;if(e.lanes===0&&(o===null||o.lanes===0)&&(o=t.lastRenderedReducer,o!==null))try{var i=t.lastRenderedState,l=o(i,a);if(n.hasEagerState=!0,n.eagerState=l,K2(l,i))return $r(e,t,n,0),N1===null&&qr(),!1}catch{}finally{}if(a=Z7(e,t,n,r),a!==null)return X2(a,e,r),Tl(a,t,r),!0}return!1}function g9(e,t,a,r){if(r={lane:2,revertLane:R9(),action:r,hasEagerState:!1,eagerState:null,next:null},Qr(e)){if(t)throw Error(k(479))}else t=Z7(e,a,r,2),t!==null&&X2(t,e,2)}function Qr(e){var t=e.alternate;return e===J||t!==null&&t===J}function _l(e,t){m0=wr=!0;var a=e.pending;a===null?t.next=t:(t.next=a.next,a.next=t),e.pending=t}function Tl(e,t,a){if((a&4194048)!==0){var r=t.lanes;r&=e.pendingLanes,a|=r,t.lanes=a,vi(e,a)}}var Rr={readContext:h2,use:Xr,useCallback:q1,useContext:q1,useEffect:q1,useImperativeHandle:q1,useLayoutEffect:q1,useInsertionEffect:q1,useMemo:q1,useReducer:q1,useRef:q1,useState:q1,useDebugValue:q1,useDeferredValue:q1,useTransition:q1,useSyncExternalStore:q1,useId:q1,useHostTransitionStatus:q1,useFormState:q1,useActionState:q1,useOptimistic:q1,useMemoCache:q1,useCacheRefresh:q1},kl={readContext:h2,use:Xr,useCallback:function(e,t){return T2().memoizedState=[e,t===void 0?null:t],e},useContext:h2,useEffect:xo,useImperativeHandle:function(e,t,a){a=a!=null?a.concat([e]):null,or(4194308,4,gl.bind(null,t,e),a)},useLayoutEffect:function(e,t){return or(4194308,4,e,t)},useInsertionEffect:function(e,t){or(4,2,e,t)},useMemo:function(e,t){var a=T2();t=t===void 0?null:t;var r=e();if(St){G3(!0);try{e()}finally{G3(!1)}}return a.memoizedState=[r,t],r},useReducer:function(e,t,a){var r=T2();if(a!==void 0){var n=a(t);if(St){G3(!0);try{a(t)}finally{G3(!1)}}}else n=t;return r.memoizedState=r.baseState=n,e={pending:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:n},r.queue=e,e=e.dispatch=IC.bind(null,J,e),[r.memoizedState,e]},useRef:function(e){var t=T2();return e={current:e},t.memoizedState=e},useState:function(e){e=p7(e);var t=e.queue,a=Nl.bind(null,J,t);return t.dispatch=a,[e.memoizedState,a]},useDebugValue:C9,useDeferredValue:function(e,t){var a=T2();return p9(a,e,t)},useTransition:function(){var e=p7(!1);return e=xl.bind(null,J,e.queue,!0,!1),T2().memoizedState=e,[!1,e]},useSyncExternalStore:function(e,t,a){var r=J,n=T2();if(c1){if(a===void 0)throw Error(k(407));a=a()}else{if(a=t(),N1===null)throw Error(k(349));(o1&124)!==0||al(r,t,a)}n.memoizedState=a;var o={value:a,getSnapshot:t};return n.queue=o,xo(nl.bind(null,r,o,e),[e]),r.flags|=2048,R0(9,Kr(),rl.bind(null,r,o,a,t),null),a},useId:function(){var e=T2(),t=N1.identifierPrefix;if(c1){var a=i3,r=o3;a=(r&~(1<<32-$2(r)-1)).toString(32)+a,t="\xAB"+t+"R"+a,a=Sr++,0<a&&(t+="H"+a.toString(32)),t+="\xBB"}else a=VC++,t="\xAB"+t+"r"+a.toString(32)+"\xBB";return e.memoizedState=t},useHostTransitionStatus:m9,useFormState:vo,useActionState:vo,useOptimistic:function(e){var t=T2();t.memoizedState=t.baseState=e;var a={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return t.queue=a,t=g9.bind(null,J,!0,a),a.dispatch=t,[e,t]},useMemoCache:d9,useCacheRefresh:function(){return T2().memoizedState=$C.bind(null,J)}},Ll={readContext:h2,use:Xr,useCallback:vl,useContext:h2,useEffect:Cl,useImperativeHandle:hl,useInsertionEffect:pl,useLayoutEffect:ml,useMemo:yl,useReducer:nr,useRef:fl,useState:function(){return nr(f3)},useDebugValue:C9,useDeferredValue:function(e,t){var a=Z1();return bl(a,x1.memoizedState,e,t)},useTransition:function(){var e=nr(f3)[0],t=Z1().memoizedState;return[typeof e=="boolean"?e:X5(e),t]},useSyncExternalStore:tl,useId:Rl,useHostTransitionStatus:m9,useFormState:yo,useActionState:yo,useOptimistic:function(e,t){var a=Z1();return ll(a,x1,e,t)},useMemoCache:d9,useCacheRefresh:El},XC={readContext:h2,use:Xr,useCallback:vl,useContext:h2,useEffect:Cl,useImperativeHandle:hl,useInsertionEffect:pl,useLayoutEffect:ml,useMemo:yl,useReducer:Nn,useRef:fl,useState:function(){return Nn(f3)},useDebugValue:C9,useDeferredValue:function(e,t){var a=Z1();return x1===null?p9(a,e,t):bl(a,x1.memoizedState,e,t)},useTransition:function(){var e=Nn(f3)[0],t=Z1().memoizedState;return[typeof e=="boolean"?e:X5(e),t]},useSyncExternalStore:tl,useId:Rl,useHostTransitionStatus:m9,useFormState:bo,useActionState:bo,useOptimistic:function(e,t){var a=Z1();return x1!==null?ll(a,x1,e,t):(a.baseState=e,[e,a.queue.dispatch])},useMemoCache:d9,useCacheRefresh:El},h0=null,L5=0;function Ya(e){var t=L5;return L5+=1,h0===null&&(h0=[]),Qi(h0,e,t)}function t5(e,t){t=t.props.ref,e.ref=t!==void 0?t:null}function qa(e,t){throw t.$$typeof===Rf?Error(k(525)):(e=Object.prototype.toString.call(t),Error(k(31,e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e)))}function wo(e){var t=e._init;return t(e._payload)}function Ml(e){function t(C,p){if(e){var g=C.deletions;g===null?(C.deletions=[p],C.flags|=16):g.push(p)}}function a(C,p){if(!e)return null;for(;p!==null;)t(C,p),p=p.sibling;return null}function r(C){for(var p=new Map;C!==null;)C.key!==null?p.set(C.key,C):p.set(C.index,C),C=C.sibling;return p}function n(C,p){return C=c3(C,p),C.index=0,C.sibling=null,C}function o(C,p,g){return C.index=g,e?(g=C.alternate,g!==null?(g=g.index,g<p?(C.flags|=67108866,p):g):(C.flags|=67108866,p)):(C.flags|=1048576,p)}function i(C){return e&&C.alternate===null&&(C.flags|=67108866),C}function l(C,p,g,h){return p===null||p.tag!==6?(p=Sn(g,C.mode,h),p.return=C,p):(p=n(p,g),p.return=C,p)}function s(C,p,g,h){var w=g.type;return w===Wt?f(C,p,g.props.children,h,g.key):p!==null&&(p.elementType===w||typeof w=="object"&&w!==null&&w.$$typeof===O3&&wo(w)===p.type)?(p=n(p,g.props),t5(p,g),p.return=C,p):(p=ar(g.type,g.key,g.props,null,C.mode,h),t5(p,g),p.return=C,p)}function c(C,p,g,h){return p===null||p.tag!==4||p.stateNode.containerInfo!==g.containerInfo||p.stateNode.implementation!==g.implementation?(p=Rn(g,C.mode,h),p.return=C,p):(p=n(p,g.children||[]),p.return=C,p)}function f(C,p,g,h,w){return p===null||p.tag!==7?(p=mt(g,C.mode,h,w),p.return=C,p):(p=n(p,g),p.return=C,p)}function d(C,p,g){if(typeof p=="string"&&p!==""||typeof p=="number"||typeof p=="bigint")return p=Sn(""+p,C.mode,g),p.return=C,p;if(typeof p=="object"&&p!==null){switch(p.$$typeof){case za:return g=ar(p.type,p.key,p.props,null,C.mode,g),t5(g,p),g.return=C,g;case i5:return p=Rn(p,C.mode,g),p.return=C,p;case O3:var h=p._init;return p=h(p._payload),d(C,p,g)}if(l5(p)||J0(p))return p=mt(p,C.mode,g,null),p.return=C,p;if(typeof p.then=="function")return d(C,Ya(p),g);if(p.$$typeof===n3)return d(C,ja(C,p),g);qa(C,p)}return null}function u(C,p,g,h){var w=p!==null?p.key:null;if(typeof g=="string"&&g!==""||typeof g=="number"||typeof g=="bigint")return w!==null?null:l(C,p,""+g,h);if(typeof g=="object"&&g!==null){switch(g.$$typeof){case za:return g.key===w?s(C,p,g,h):null;case i5:return g.key===w?c(C,p,g,h):null;case O3:return w=g._init,g=w(g._payload),u(C,p,g,h)}if(l5(g)||J0(g))return w!==null?null:f(C,p,g,h,null);if(typeof g.then=="function")return u(C,p,Ya(g),h);if(g.$$typeof===n3)return u(C,p,ja(C,g),h);qa(C,g)}return null}function m(C,p,g,h,w){if(typeof h=="string"&&h!==""||typeof h=="number"||typeof h=="bigint")return C=C.get(g)||null,l(p,C,""+h,w);if(typeof h=="object"&&h!==null){switch(h.$$typeof){case za:return C=C.get(h.key===null?g:h.key)||null,s(p,C,h,w);case i5:return C=C.get(h.key===null?g:h.key)||null,c(p,C,h,w);case O3:var _=h._init;return h=_(h._payload),m(C,p,g,h,w)}if(l5(h)||J0(h))return C=C.get(g)||null,f(p,C,h,w,null);if(typeof h.then=="function")return m(C,p,g,Ya(h),w);if(h.$$typeof===n3)return m(C,p,g,ja(p,h),w);qa(p,h)}return null}function b(C,p,g,h){for(var w=null,_=null,N=p,M=p=0,V=null;N!==null&&M<g.length;M++){N.index>M?(V=N,N=null):V=N.sibling;var B=u(C,N,g[M],h);if(B===null){N===null&&(N=V);break}e&&N&&B.alternate===null&&t(C,N),p=o(B,p,M),_===null?w=B:_.sibling=B,_=B,N=V}if(M===g.length)return a(C,N),c1&&ft(C,M),w;if(N===null){for(;M<g.length;M++)N=d(C,g[M],h),N!==null&&(p=o(N,p,M),_===null?w=N:_.sibling=N,_=N);return c1&&ft(C,M),w}for(N=r(N);M<g.length;M++)V=m(N,C,M,g[M],h),V!==null&&(e&&V.alternate!==null&&N.delete(V.key===null?M:V.key),p=o(V,p,M),_===null?w=V:_.sibling=V,_=V);return e&&N.forEach(function(G){return t(C,G)}),c1&&ft(C,M),w}function R(C,p,g,h){if(g==null)throw Error(k(151));for(var w=null,_=null,N=p,M=p=0,V=null,B=g.next();N!==null&&!B.done;M++,B=g.next()){N.index>M?(V=N,N=null):V=N.sibling;var G=u(C,N,B.value,h);if(G===null){N===null&&(N=V);break}e&&N&&G.alternate===null&&t(C,N),p=o(G,p,M),_===null?w=G:_.sibling=G,_=G,N=V}if(B.done)return a(C,N),c1&&ft(C,M),w;if(N===null){for(;!B.done;M++,B=g.next())B=d(C,B.value,h),B!==null&&(p=o(B,p,M),_===null?w=B:_.sibling=B,_=B);return c1&&ft(C,M),w}for(N=r(N);!B.done;M++,B=g.next())B=m(N,C,M,B.value,h),B!==null&&(e&&B.alternate!==null&&N.delete(B.key===null?M:B.key),p=o(B,p,M),_===null?w=B:_.sibling=B,_=B);return e&&N.forEach(function(j){return t(C,j)}),c1&&ft(C,M),w}function S(C,p,g,h){if(typeof g=="object"&&g!==null&&g.type===Wt&&g.key===null&&(g=g.props.children),typeof g=="object"&&g!==null){switch(g.$$typeof){case za:e:{for(var w=g.key;p!==null;){if(p.key===w){if(w=g.type,w===Wt){if(p.tag===7){a(C,p.sibling),h=n(p,g.props.children),h.return=C,C=h;break e}}else if(p.elementType===w||typeof w=="object"&&w!==null&&w.$$typeof===O3&&wo(w)===p.type){a(C,p.sibling),h=n(p,g.props),t5(h,g),h.return=C,C=h;break e}a(C,p);break}else t(C,p);p=p.sibling}g.type===Wt?(h=mt(g.props.children,C.mode,h,g.key),h.return=C,C=h):(h=ar(g.type,g.key,g.props,null,C.mode,h),t5(h,g),h.return=C,C=h)}return i(C);case i5:e:{for(w=g.key;p!==null;){if(p.key===w)if(p.tag===4&&p.stateNode.containerInfo===g.containerInfo&&p.stateNode.implementation===g.implementation){a(C,p.sibling),h=n(p,g.children||[]),h.return=C,C=h;break e}else{a(C,p);break}else t(C,p);p=p.sibling}h=Rn(g,C.mode,h),h.return=C,C=h}return i(C);case O3:return w=g._init,g=w(g._payload),S(C,p,g,h)}if(l5(g))return b(C,p,g,h);if(J0(g)){if(w=J0(g),typeof w!="function")throw Error(k(150));return g=w.call(g),R(C,p,g,h)}if(typeof g.then=="function")return S(C,p,Ya(g),h);if(g.$$typeof===n3)return S(C,p,ja(C,g),h);qa(C,g)}return typeof g=="string"&&g!==""||typeof g=="number"||typeof g=="bigint"?(g=""+g,p!==null&&p.tag===6?(a(C,p.sibling),h=n(p,g),h.return=C,C=h):(a(C,p),h=Sn(g,C.mode,h),h.return=C,C=h),i(C)):a(C,p)}return function(C,p,g,h){try{L5=0;var w=S(C,p,g,h);return h0=null,w}catch(N){if(N===I5||N===Ir)throw N;var _=Y2(29,N,null,C.mode);return _.lanes=h,_.return=C,_}finally{}}}var E0=Ml(!0),Al=Ml(!1),le=He(null),ze=null;function U3(e){var t=e.alternate;U1(e2,e2.current&1),U1(le,e),ze===null&&(t===null||S0.current!==null||t.memoizedState!==null)&&(ze=e)}function Dl(e){if(e.tag===22){if(U1(e2,e2.current),U1(le,e),ze===null){var t=e.alternate;t!==null&&t.memoizedState!==null&&(ze=e)}}else P3(e)}function P3(){U1(e2,e2.current),U1(le,le.current)}function s3(e){i2(le),ze===e&&(ze=null),i2(e2)}var e2=He(0);function Er(e){for(var t=e;t!==null;){if(t.tag===13){var a=t.memoizedState;if(a!==null&&(a=a.dehydrated,a===null||a.data==="$?"||D7(a)))return t}else if(t.tag===19&&t.memoizedProps.revealOrder!==void 0){if((t.flags&128)!==0)return t}else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}function _n(e,t,a,r){t=e.memoizedState,a=a(r,t),a=a==null?t:k1({},t,a),e.memoizedState=a,e.lanes===0&&(e.updateQueue.baseState=a)}var h7={enqueueSetState:function(e,t,a){e=e._reactInternals;var r=I2(),n=q3(r);n.payload=t,a!=null&&(n.callback=a),t=$3(e,n,r),t!==null&&(X2(t,e,r),m5(t,e,r))},enqueueReplaceState:function(e,t,a){e=e._reactInternals;var r=I2(),n=q3(r);n.tag=1,n.payload=t,a!=null&&(n.callback=a),t=$3(e,n,r),t!==null&&(X2(t,e,r),m5(t,e,r))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var a=I2(),r=q3(a);r.tag=2,t!=null&&(r.callback=t),t=$3(e,r,a),t!==null&&(X2(t,e,a),m5(t,e,a))}};function So(e,t,a,r,n,o,i){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(r,o,i):t.prototype&&t.prototype.isPureReactComponent?!_5(a,r)||!_5(n,o):!0}function Ro(e,t,a,r){e=t.state,typeof t.componentWillReceiveProps=="function"&&t.componentWillReceiveProps(a,r),typeof t.UNSAFE_componentWillReceiveProps=="function"&&t.UNSAFE_componentWillReceiveProps(a,r),t.state!==e&&h7.enqueueReplaceState(t,t.state,null)}function Rt(e,t){var a=t;if("ref"in t){a={};for(var r in t)r!=="ref"&&(a[r]=t[r])}if(e=e.defaultProps){a===t&&(a=k1({},a));for(var n in e)a[n]===void 0&&(a[n]=e[n])}return a}var Nr=typeof reportError=="function"?reportError:function(e){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var t=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof e=="object"&&e!==null&&typeof e.message=="string"?String(e.message):String(e),error:e});if(!window.dispatchEvent(t))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",e);return}console.error(e)};function Ol(e){Nr(e)}function zl(e){console.error(e)}function Hl(e){Nr(e)}function _r(e,t){try{var a=e.onUncaughtError;a(t.value,{componentStack:t.stack})}catch(r){setTimeout(function(){throw r})}}function Eo(e,t,a){try{var r=e.onCaughtError;r(a.value,{componentStack:a.stack,errorBoundary:t.tag===1?t.stateNode:null})}catch(n){setTimeout(function(){throw n})}}function v7(e,t,a){return a=q3(a),a.tag=3,a.payload={element:null},a.callback=function(){_r(e,t)},a}function Ul(e){return e=q3(e),e.tag=3,e}function Pl(e,t,a,r){var n=a.type.getDerivedStateFromError;if(typeof n=="function"){var o=r.value;e.payload=function(){return n(o)},e.callback=function(){Eo(t,a,r)}}var i=a.stateNode;i!==null&&typeof i.componentDidCatch=="function"&&(e.callback=function(){Eo(t,a,r),typeof n!="function"&&(I3===null?I3=new Set([this]):I3.add(this));var l=r.stack;this.componentDidCatch(r.value,{componentStack:l!==null?l:""})})}function KC(e,t,a,r,n){if(a.flags|=32768,r!==null&&typeof r=="object"&&typeof r.then=="function"){if(t=a.alternate,t!==null&&q5(t,a,n,!0),a=le.current,a!==null){switch(a.tag){case 13:return ze===null?N7():a.alternate===null&&F1===0&&(F1=3),a.flags&=-257,a.flags|=65536,a.lanes=n,r===u7?a.flags|=16384:(t=a.updateQueue,t===null?a.updateQueue=new Set([r]):t.add(r),Pn(e,r,n)),!1;case 22:return a.flags|=65536,r===u7?a.flags|=16384:(t=a.updateQueue,t===null?(t={transitions:null,markerInstances:null,retryQueue:new Set([r])},a.updateQueue=t):(a=t.retryQueue,a===null?t.retryQueue=new Set([r]):a.add(r)),Pn(e,r,n)),!1}throw Error(k(435,a.tag))}return Pn(e,r,n),N7(),!1}if(c1)return t=le.current,t!==null?((t.flags&65536)===0&&(t.flags|=256),t.flags|=65536,t.lanes=n,r!==o7&&(e=Error(k(422),{cause:r}),T5(oe(e,a)))):(r!==o7&&(t=Error(k(423),{cause:r}),T5(oe(t,a))),e=e.current.alternate,e.flags|=65536,n&=-n,e.lanes|=n,r=oe(r,a),n=v7(e.stateNode,r,n),En(e,n),F1!==4&&(F1=2)),!1;var o=Error(k(520),{cause:r});if(o=oe(o,a),x5===null?x5=[o]:x5.push(o),F1!==4&&(F1=2),t===null)return!0;r=oe(r,a),a=t;do{switch(a.tag){case 3:return a.flags|=65536,e=n&-n,a.lanes|=e,e=v7(a.stateNode,r,e),En(a,e),!1;case 1:if(t=a.type,o=a.stateNode,(a.flags&128)===0&&(typeof t.getDerivedStateFromError=="function"||o!==null&&typeof o.componentDidCatch=="function"&&(I3===null||!I3.has(o))))return a.flags|=65536,n&=-n,a.lanes|=n,n=Ul(n),Pl(n,e,a,r),En(a,n),!1}a=a.return}while(a!==null);return!1}var Bl=Error(k(461)),o2=!1;function c2(e,t,a,r){t.child=e===null?Al(t,null,a,r):E0(t,e.child,a,r)}function No(e,t,a,r,n){a=a.render;var o=t.ref;if("ref"in r){var i={};for(var l in r)l!=="ref"&&(i[l]=r[l])}else i=r;return wt(t),r=i9(e,t,a,i,o,n),l=l9(),e!==null&&!o2?(s9(e,t,n),C3(e,t,n)):(c1&&l&&W7(t),t.flags|=1,c2(e,t,r,n),t.child)}function _o(e,t,a,r,n){if(e===null){var o=a.type;return typeof o=="function"&&!J7(o)&&o.defaultProps===void 0&&a.compare===null?(t.tag=15,t.type=o,Gl(e,t,o,r,n)):(e=ar(a.type,null,r,t,t.mode,n),e.ref=t.ref,e.return=t,t.child=e)}if(o=e.child,!h9(e,n)){var i=o.memoizedProps;if(a=a.compare,a=a!==null?a:_5,a(i,r)&&e.ref===t.ref)return C3(e,t,n)}return t.flags|=1,e=c3(o,r),e.ref=t.ref,e.return=t,t.child=e}function Gl(e,t,a,r,n){if(e!==null){var o=e.memoizedProps;if(_5(o,r)&&e.ref===t.ref)if(o2=!1,t.pendingProps=r=o,h9(e,n))(e.flags&131072)!==0&&(o2=!0);else return t.lanes=e.lanes,C3(e,t,n)}return y7(e,t,a,r,n)}function Vl(e,t,a){var r=t.pendingProps,n=r.children,o=e!==null?e.memoizedState:null;if(r.mode==="hidden"){if((t.flags&128)!==0){if(r=o!==null?o.baseLanes|a:a,e!==null){for(n=t.child=e.child,o=0;n!==null;)o=o|n.lanes|n.childLanes,n=n.sibling;t.childLanes=o&~r}else t.childLanes=0,t.child=null;return To(e,t,r,a)}if((a&536870912)!==0)t.memoizedState={baseLanes:0,cachePool:null},e!==null&&rr(t,o!==null?o.cachePool:null),o!==null?mo(t,o):C7(),Dl(t);else return t.lanes=t.childLanes=536870912,To(e,t,o!==null?o.baseLanes|a:a,a)}else o!==null?(rr(t,o.cachePool),mo(t,o),P3(t),t.memoizedState=null):(e!==null&&rr(t,null),C7(),P3(t));return c2(e,t,n,a),t.child}function To(e,t,a,r){var n=a9();return n=n===null?null:{parent:W1._currentValue,pool:n},t.memoizedState={baseLanes:a,cachePool:n},e!==null&&rr(t,null),C7(),Dl(t),e!==null&&q5(e,t,r,!0),null}function ir(e,t){var a=t.ref;if(a===null)e!==null&&e.ref!==null&&(t.flags|=4194816);else{if(typeof a!="function"&&typeof a!="object")throw Error(k(284));(e===null||e.ref!==a)&&(t.flags|=4194816)}}function y7(e,t,a,r,n){return wt(t),a=i9(e,t,a,r,void 0,n),r=l9(),e!==null&&!o2?(s9(e,t,n),C3(e,t,n)):(c1&&r&&W7(t),t.flags|=1,c2(e,t,a,n),t.child)}function ko(e,t,a,r,n,o){return wt(t),t.updateQueue=null,a=el(t,r,a,n),Wi(e),r=l9(),e!==null&&!o2?(s9(e,t,o),C3(e,t,o)):(c1&&r&&W7(t),t.flags|=1,c2(e,t,a,o),t.child)}function Lo(e,t,a,r,n){if(wt(t),t.stateNode===null){var o=l0,i=a.contextType;typeof i=="object"&&i!==null&&(o=h2(i)),o=new a(r,o),t.memoizedState=o.state!==null&&o.state!==void 0?o.state:null,o.updater=h7,t.stateNode=o,o._reactInternals=t,o=t.stateNode,o.props=r,o.state=t.memoizedState,o.refs={},r9(t),i=a.contextType,o.context=typeof i=="object"&&i!==null?h2(i):l0,o.state=t.memoizedState,i=a.getDerivedStateFromProps,typeof i=="function"&&(_n(t,a,i,r),o.state=t.memoizedState),typeof a.getDerivedStateFromProps=="function"||typeof o.getSnapshotBeforeUpdate=="function"||typeof o.UNSAFE_componentWillMount!="function"&&typeof o.componentWillMount!="function"||(i=o.state,typeof o.componentWillMount=="function"&&o.componentWillMount(),typeof o.UNSAFE_componentWillMount=="function"&&o.UNSAFE_componentWillMount(),i!==o.state&&h7.enqueueReplaceState(o,o.state,null),h5(t,r,o,n),g5(),o.state=t.memoizedState),typeof o.componentDidMount=="function"&&(t.flags|=4194308),r=!0}else if(e===null){o=t.stateNode;var l=t.memoizedProps,s=Rt(a,l);o.props=s;var c=o.context,f=a.contextType;i=l0,typeof f=="object"&&f!==null&&(i=h2(f));var d=a.getDerivedStateFromProps;f=typeof d=="function"||typeof o.getSnapshotBeforeUpdate=="function",l=t.pendingProps!==l,f||typeof o.UNSAFE_componentWillReceiveProps!="function"&&typeof o.componentWillReceiveProps!="function"||(l||c!==i)&&Ro(t,o,r,i),z3=!1;var u=t.memoizedState;o.state=u,h5(t,r,o,n),g5(),c=t.memoizedState,l||u!==c||z3?(typeof d=="function"&&(_n(t,a,d,r),c=t.memoizedState),(s=z3||So(t,a,s,r,u,c,i))?(f||typeof o.UNSAFE_componentWillMount!="function"&&typeof o.componentWillMount!="function"||(typeof o.componentWillMount=="function"&&o.componentWillMount(),typeof o.UNSAFE_componentWillMount=="function"&&o.UNSAFE_componentWillMount()),typeof o.componentDidMount=="function"&&(t.flags|=4194308)):(typeof o.componentDidMount=="function"&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=c),o.props=r,o.state=c,o.context=i,r=s):(typeof o.componentDidMount=="function"&&(t.flags|=4194308),r=!1)}else{o=t.stateNode,d7(e,t),i=t.memoizedProps,f=Rt(a,i),o.props=f,d=t.pendingProps,u=o.context,c=a.contextType,s=l0,typeof c=="object"&&c!==null&&(s=h2(c)),l=a.getDerivedStateFromProps,(c=typeof l=="function"||typeof o.getSnapshotBeforeUpdate=="function")||typeof o.UNSAFE_componentWillReceiveProps!="function"&&typeof o.componentWillReceiveProps!="function"||(i!==d||u!==s)&&Ro(t,o,r,s),z3=!1,u=t.memoizedState,o.state=u,h5(t,r,o,n),g5();var m=t.memoizedState;i!==d||u!==m||z3||e!==null&&e.dependencies!==null&&br(e.dependencies)?(typeof l=="function"&&(_n(t,a,l,r),m=t.memoizedState),(f=z3||So(t,a,f,r,u,m,s)||e!==null&&e.dependencies!==null&&br(e.dependencies))?(c||typeof o.UNSAFE_componentWillUpdate!="function"&&typeof o.componentWillUpdate!="function"||(typeof o.componentWillUpdate=="function"&&o.componentWillUpdate(r,m,s),typeof o.UNSAFE_componentWillUpdate=="function"&&o.UNSAFE_componentWillUpdate(r,m,s)),typeof o.componentDidUpdate=="function"&&(t.flags|=4),typeof o.getSnapshotBeforeUpdate=="function"&&(t.flags|=1024)):(typeof o.componentDidUpdate!="function"||i===e.memoizedProps&&u===e.memoizedState||(t.flags|=4),typeof o.getSnapshotBeforeUpdate!="function"||i===e.memoizedProps&&u===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=m),o.props=r,o.state=m,o.context=s,r=f):(typeof o.componentDidUpdate!="function"||i===e.memoizedProps&&u===e.memoizedState||(t.flags|=4),typeof o.getSnapshotBeforeUpdate!="function"||i===e.memoizedProps&&u===e.memoizedState||(t.flags|=1024),r=!1)}return o=r,ir(e,t),r=(t.flags&128)!==0,o||r?(o=t.stateNode,a=r&&typeof a.getDerivedStateFromError!="function"?null:o.render(),t.flags|=1,e!==null&&r?(t.child=E0(t,e.child,null,n),t.child=E0(t,null,a,n)):c2(e,t,a,n),t.memoizedState=o.state,e=t.child):e=C3(e,t,n),e}function Mo(e,t,a,r){return Y5(),t.flags|=256,c2(e,t,a,r),t.child}var Tn={dehydrated:null,treeContext:null,retryLane:0,hydrationErrors:null};function kn(e){return{baseLanes:e,cachePool:Xi()}}function Ln(e,t,a){return e=e!==null?e.childLanes&~a:0,t&&(e|=ie),e}function jl(e,t,a){var r=t.pendingProps,n=!1,o=(t.flags&128)!==0,i;if((i=o)||(i=e!==null&&e.memoizedState===null?!1:(e2.current&2)!==0),i&&(n=!0,t.flags&=-129),i=(t.flags&32)!==0,t.flags&=-33,e===null){if(c1){if(n?U3(t):P3(t),c1){var l=j1,s;if(s=l){e:{for(s=l,l=Me;s.nodeType!==8;){if(!l){l=null;break e}if(s=ve(s.nextSibling),s===null){l=null;break e}}l=s}l!==null?(t.memoizedState={dehydrated:l,treeContext:gt!==null?{id:o3,overflow:i3}:null,retryLane:536870912,hydrationErrors:null},s=Y2(18,null,null,0),s.stateNode=l,s.return=t,t.child=s,S2=t,j1=null,s=!0):s=!1}s||xt(t)}if(l=t.memoizedState,l!==null&&(l=l.dehydrated,l!==null))return D7(l)?t.lanes=32:t.lanes=536870912,null;s3(t)}return l=r.children,r=r.fallback,n?(P3(t),n=t.mode,l=Tr({mode:"hidden",children:l},n),r=mt(r,n,a,null),l.return=t,r.return=t,l.sibling=r,t.child=l,n=t.child,n.memoizedState=kn(a),n.childLanes=Ln(e,i,a),t.memoizedState=Tn,r):(U3(t),b7(t,l))}if(s=e.memoizedState,s!==null&&(l=s.dehydrated,l!==null)){if(o)t.flags&256?(U3(t),t.flags&=-257,t=Mn(e,t,a)):t.memoizedState!==null?(P3(t),t.child=e.child,t.flags|=128,t=null):(P3(t),n=r.fallback,l=t.mode,r=Tr({mode:"visible",children:r.children},l),n=mt(n,l,a,null),n.flags|=2,r.return=t,n.return=t,r.sibling=n,t.child=r,E0(t,e.child,null,a),r=t.child,r.memoizedState=kn(a),r.childLanes=Ln(e,i,a),t.memoizedState=Tn,t=n);else if(U3(t),D7(l)){if(i=l.nextSibling&&l.nextSibling.dataset,i)var c=i.dgst;i=c,r=Error(k(419)),r.stack="",r.digest=i,T5({value:r,source:null,stack:null}),t=Mn(e,t,a)}else if(o2||q5(e,t,a,!1),i=(a&e.childLanes)!==0,o2||i){if(i=N1,i!==null&&(r=a&-a,r=(r&42)!==0?1:V7(r),r=(r&(i.suspendedLanes|a))!==0?0:r,r!==0&&r!==s.retryLane))throw s.retryLane=r,A0(e,r),X2(i,e,r),Bl;l.data==="$?"||N7(),t=Mn(e,t,a)}else l.data==="$?"?(t.flags|=192,t.child=e.child,t=null):(e=s.treeContext,j1=ve(l.nextSibling),S2=t,c1=!0,ht=null,Me=!1,e!==null&&(ae[re++]=o3,ae[re++]=i3,ae[re++]=gt,o3=e.id,i3=e.overflow,gt=t),t=b7(t,r.children),t.flags|=4096);return t}return n?(P3(t),n=r.fallback,l=t.mode,s=e.child,c=s.sibling,r=c3(s,{mode:"hidden",children:r.children}),r.subtreeFlags=s.subtreeFlags&65011712,c!==null?n=c3(c,n):(n=mt(n,l,a,null),n.flags|=2),n.return=t,r.return=t,r.sibling=n,t.child=r,r=n,n=t.child,l=e.child.memoizedState,l===null?l=kn(a):(s=l.cachePool,s!==null?(c=W1._currentValue,s=s.parent!==c?{parent:c,pool:c}:s):s=Xi(),l={baseLanes:l.baseLanes|a,cachePool:s}),n.memoizedState=l,n.childLanes=Ln(e,i,a),t.memoizedState=Tn,r):(U3(t),a=e.child,e=a.sibling,a=c3(a,{mode:"visible",children:r.children}),a.return=t,a.sibling=null,e!==null&&(i=t.deletions,i===null?(t.deletions=[e],t.flags|=16):i.push(e)),t.child=a,t.memoizedState=null,a)}function b7(e,t){return t=Tr({mode:"visible",children:t},e.mode),t.return=e,e.child=t}function Tr(e,t){return e=Y2(22,e,null,t),e.lanes=0,e.stateNode={_visibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null},e}function Mn(e,t,a){return E0(t,e.child,null,a),e=b7(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function Ao(e,t,a){e.lanes|=t;var r=e.alternate;r!==null&&(r.lanes|=t),l7(e.return,t,a)}function An(e,t,a,r,n){var o=e.memoizedState;o===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:a,tailMode:n}:(o.isBackwards=t,o.rendering=null,o.renderingStartTime=0,o.last=r,o.tail=a,o.tailMode=n)}function Fl(e,t,a){var r=t.pendingProps,n=r.revealOrder,o=r.tail;if(c2(e,t,r.children,a),r=e2.current,(r&2)!==0)r=r&1|2,t.flags|=128;else{if(e!==null&&(e.flags&128)!==0)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&Ao(e,a,t);else if(e.tag===19)Ao(e,a,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}switch(U1(e2,r),n){case"forwards":for(a=t.child,n=null;a!==null;)e=a.alternate,e!==null&&Er(e)===null&&(n=a),a=a.sibling;a=n,a===null?(n=t.child,t.child=null):(n=a.sibling,a.sibling=null),An(t,!1,n,a,o);break;case"backwards":for(a=null,n=t.child,t.child=null;n!==null;){if(e=n.alternate,e!==null&&Er(e)===null){t.child=n;break}e=n.sibling,n.sibling=a,a=n,n=e}An(t,!0,a,null,o);break;case"together":An(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function C3(e,t,a){if(e!==null&&(t.dependencies=e.dependencies),et|=t.lanes,(a&t.childLanes)===0)if(e!==null){if(q5(e,t,a,!1),(a&t.childLanes)===0)return null}else return null;if(e!==null&&t.child!==e.child)throw Error(k(153));if(t.child!==null){for(e=t.child,a=c3(e,e.pendingProps),t.child=a,a.return=t;e.sibling!==null;)e=e.sibling,a=a.sibling=c3(e,e.pendingProps),a.return=t;a.sibling=null}return t.child}function h9(e,t){return(e.lanes&t)!==0?!0:(e=e.dependencies,!!(e!==null&&br(e)))}function QC(e,t,a){switch(t.tag){case 3:fr(t,t.stateNode.containerInfo),H3(t,W1,e.memoizedState.cache),Y5();break;case 27:case 5:Kn(t);break;case 4:fr(t,t.stateNode.containerInfo);break;case 10:H3(t,t.type,t.memoizedProps.value);break;case 13:var r=t.memoizedState;if(r!==null)return r.dehydrated!==null?(U3(t),t.flags|=128,null):(a&t.child.childLanes)!==0?jl(e,t,a):(U3(t),e=C3(e,t,a),e!==null?e.sibling:null);U3(t);break;case 19:var n=(e.flags&128)!==0;if(r=(a&t.childLanes)!==0,r||(q5(e,t,a,!1),r=(a&t.childLanes)!==0),n){if(r)return Fl(e,t,a);t.flags|=128}if(n=t.memoizedState,n!==null&&(n.rendering=null,n.tail=null,n.lastEffect=null),U1(e2,e2.current),r)break;return null;case 22:case 23:return t.lanes=0,Vl(e,t,a);case 24:H3(t,W1,e.memoizedState.cache)}return C3(e,t,a)}function Yl(e,t,a){if(e!==null)if(e.memoizedProps!==t.pendingProps)o2=!0;else{if(!h9(e,a)&&(t.flags&128)===0)return o2=!1,QC(e,t,a);o2=(e.flags&131072)!==0}else o2=!1,c1&&(t.flags&1048576)!==0&&$i(t,yr,t.index);switch(t.lanes=0,t.tag){case 16:e:{e=t.pendingProps;var r=t.elementType,n=r._init;if(r=n(r._payload),t.type=r,typeof r=="function")J7(r)?(e=Rt(r,e),t.tag=1,t=Lo(null,t,r,e,a)):(t.tag=0,t=y7(null,t,r,e,a));else{if(r!=null){if(n=r.$$typeof,n===P7){t.tag=11,t=No(null,t,r,e,a);break e}else if(n===B7){t.tag=14,t=_o(null,t,r,e,a);break e}}throw t=In(r)||r,Error(k(306,t,""))}}return t;case 0:return y7(e,t,t.type,t.pendingProps,a);case 1:return r=t.type,n=Rt(r,t.pendingProps),Lo(e,t,r,n,a);case 3:e:{if(fr(t,t.stateNode.containerInfo),e===null)throw Error(k(387));r=t.pendingProps;var o=t.memoizedState;n=o.element,d7(e,t),h5(t,r,null,a);var i=t.memoizedState;if(r=i.cache,H3(t,W1,r),r!==o.cache&&s7(t,[W1],a,!0),g5(),r=i.element,o.isDehydrated)if(o={element:r,isDehydrated:!1,cache:i.cache},t.updateQueue.baseState=o,t.memoizedState=o,t.flags&256){t=Mo(e,t,r,a);break e}else if(r!==n){n=oe(Error(k(424)),t),T5(n),t=Mo(e,t,r,a);break e}else{switch(e=t.stateNode.containerInfo,e.nodeType){case 9:e=e.body;break;default:e=e.nodeName==="HTML"?e.ownerDocument.body:e}for(j1=ve(e.firstChild),S2=t,c1=!0,ht=null,Me=!0,a=Al(t,null,r,a),t.child=a;a;)a.flags=a.flags&-3|4096,a=a.sibling}else{if(Y5(),r===n){t=C3(e,t,a);break e}c2(e,t,r,a)}t=t.child}return t;case 26:return ir(e,t),e===null?(a=Zo(t.type,null,t.pendingProps,null))?t.memoizedState=a:c1||(a=t.type,e=t.pendingProps,r=zr(Y3.current).createElement(a),r[g2]=t,r[M2]=e,d2(r,a,e),n2(r),t.stateNode=r):t.memoizedState=Zo(t.type,e.memoizedProps,t.pendingProps,e.memoizedState),null;case 27:return Kn(t),e===null&&c1&&(r=t.stateNode=Ls(t.type,t.pendingProps,Y3.current),S2=t,Me=!0,n=j1,at(t.type)?(O7=n,j1=ve(r.firstChild)):j1=n),c2(e,t,t.pendingProps.children,a),ir(e,t),e===null&&(t.flags|=4194304),t.child;case 5:return e===null&&c1&&((n=r=j1)&&(r=wp(r,t.type,t.pendingProps,Me),r!==null?(t.stateNode=r,S2=t,j1=ve(r.firstChild),Me=!1,n=!0):n=!1),n||xt(t)),Kn(t),n=t.type,o=t.pendingProps,i=e!==null?e.memoizedProps:null,r=o.children,M7(n,o)?r=null:i!==null&&M7(n,i)&&(t.flags|=32),t.memoizedState!==null&&(n=i9(e,t,jC,null,null,a),O5._currentValue=n),ir(e,t),c2(e,t,r,a),t.child;case 6:return e===null&&c1&&((e=a=j1)&&(a=Sp(a,t.pendingProps,Me),a!==null?(t.stateNode=a,S2=t,j1=null,e=!0):e=!1),e||xt(t)),null;case 13:return jl(e,t,a);case 4:return fr(t,t.stateNode.containerInfo),r=t.pendingProps,e===null?t.child=E0(t,null,r,a):c2(e,t,r,a),t.child;case 11:return No(e,t,t.type,t.pendingProps,a);case 7:return c2(e,t,t.pendingProps,a),t.child;case 8:return c2(e,t,t.pendingProps.children,a),t.child;case 12:return c2(e,t,t.pendingProps.children,a),t.child;case 10:return r=t.pendingProps,H3(t,t.type,r.value),c2(e,t,r.children,a),t.child;case 9:return n=t.type._context,r=t.pendingProps.children,wt(t),n=h2(n),r=r(n),t.flags|=1,c2(e,t,r,a),t.child;case 14:return _o(e,t,t.type,t.pendingProps,a);case 15:return Gl(e,t,t.type,t.pendingProps,a);case 19:return Fl(e,t,a);case 31:return r=t.pendingProps,a=t.mode,r={mode:r.mode,children:r.children},e===null?(a=Tr(r,a),a.ref=t.ref,t.child=a,a.return=t,t=a):(a=c3(e.child,r),a.ref=t.ref,t.child=a,a.return=t,t=a),t;case 22:return Vl(e,t,a);case 24:return wt(t),r=h2(W1),e===null?(n=a9(),n===null&&(n=N1,o=t9(),n.pooledCache=o,o.refCount++,o!==null&&(n.pooledCacheLanes|=a),n=o),t.memoizedState={parent:r,cache:n},r9(t),H3(t,W1,n)):((e.lanes&a)!==0&&(d7(e,t),h5(t,null,null,a),g5()),n=e.memoizedState,o=t.memoizedState,n.parent!==r?(n={parent:r,cache:r},t.memoizedState=n,t.lanes===0&&(t.memoizedState=t.updateQueue.baseState=n),H3(t,W1,r)):(r=o.cache,H3(t,W1,r),r!==n.cache&&s7(t,[W1],a,!0))),c2(e,t,t.pendingProps.children,a),t.child;case 29:throw t.pendingProps}throw Error(k(156,t.tag))}function t3(e){e.flags|=4}function Do(e,t){if(t.type!=="stylesheet"||(t.state.loading&4)!==0)e.flags&=-16777217;else if(e.flags|=16777216,!Ds(t)){if(t=le.current,t!==null&&((o1&4194048)===o1?ze!==null:(o1&62914560)!==o1&&(o1&536870912)===0||t!==ze))throw p5=u7,Ki;e.flags|=8192}}function $a(e,t){t!==null&&(e.flags|=4),e.flags&16384&&(t=e.tag!==22?gi():536870912,e.lanes|=t,N0|=t)}function a5(e,t){if(!c1)switch(e.tailMode){case"hidden":t=e.tail;for(var a=null;t!==null;)t.alternate!==null&&(a=t),t=t.sibling;a===null?e.tail=null:a.sibling=null;break;case"collapsed":a=e.tail;for(var r=null;a!==null;)a.alternate!==null&&(r=a),a=a.sibling;r===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:r.sibling=null}}function G1(e){var t=e.alternate!==null&&e.alternate.child===e.child,a=0,r=0;if(t)for(var n=e.child;n!==null;)a|=n.lanes|n.childLanes,r|=n.subtreeFlags&65011712,r|=n.flags&65011712,n.return=e,n=n.sibling;else for(n=e.child;n!==null;)a|=n.lanes|n.childLanes,r|=n.subtreeFlags,r|=n.flags,n.return=e,n=n.sibling;return e.subtreeFlags|=r,e.childLanes=a,t}function ZC(e,t,a){var r=t.pendingProps;switch(e9(t),t.tag){case 31:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return G1(t),null;case 1:return G1(t),null;case 3:return a=t.stateNode,r=null,e!==null&&(r=e.memoizedState.cache),t.memoizedState.cache!==r&&(t.flags|=2048),u3(W1),y0(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),(e===null||e.child===null)&&(e5(t)?t3(t):e===null||e.memoizedState.isDehydrated&&(t.flags&256)===0||(t.flags|=1024,so())),G1(t),null;case 26:return a=t.memoizedState,e===null?(t3(t),a!==null?(G1(t),Do(t,a)):(G1(t),t.flags&=-16777217)):a?a!==e.memoizedState?(t3(t),G1(t),Do(t,a)):(G1(t),t.flags&=-16777217):(e.memoizedProps!==r&&t3(t),G1(t),t.flags&=-16777217),null;case 27:Cr(t),a=Y3.current;var n=t.type;if(e!==null&&t.stateNode!=null)e.memoizedProps!==r&&t3(t);else{if(!r){if(t.stateNode===null)throw Error(k(166));return G1(t),null}e=De.current,e5(t)?io(t,e):(e=Ls(n,r,a),t.stateNode=e,t3(t))}return G1(t),null;case 5:if(Cr(t),a=t.type,e!==null&&t.stateNode!=null)e.memoizedProps!==r&&t3(t);else{if(!r){if(t.stateNode===null)throw Error(k(166));return G1(t),null}if(e=De.current,e5(t))io(t,e);else{switch(n=zr(Y3.current),e){case 1:e=n.createElementNS("http://www.w3.org/2000/svg",a);break;case 2:e=n.createElementNS("http://www.w3.org/1998/Math/MathML",a);break;default:switch(a){case"svg":e=n.createElementNS("http://www.w3.org/2000/svg",a);break;case"math":e=n.createElementNS("http://www.w3.org/1998/Math/MathML",a);break;case"script":e=n.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild);break;case"select":e=typeof r.is=="string"?n.createElement("select",{is:r.is}):n.createElement("select"),r.multiple?e.multiple=!0:r.size&&(e.size=r.size);break;default:e=typeof r.is=="string"?n.createElement(a,{is:r.is}):n.createElement(a)}}e[g2]=t,e[M2]=r;e:for(n=t.child;n!==null;){if(n.tag===5||n.tag===6)e.appendChild(n.stateNode);else if(n.tag!==4&&n.tag!==27&&n.child!==null){n.child.return=n,n=n.child;continue}if(n===t)break e;for(;n.sibling===null;){if(n.return===null||n.return===t)break e;n=n.return}n.sibling.return=n.return,n=n.sibling}t.stateNode=e;e:switch(d2(e,a,r),a){case"button":case"input":case"select":case"textarea":e=!!r.autoFocus;break e;case"img":e=!0;break e;default:e=!1}e&&t3(t)}}return G1(t),t.flags&=-16777217,null;case 6:if(e&&t.stateNode!=null)e.memoizedProps!==r&&t3(t);else{if(typeof r!="string"&&t.stateNode===null)throw Error(k(166));if(e=Y3.current,e5(t)){if(e=t.stateNode,a=t.memoizedProps,r=null,n=S2,n!==null)switch(n.tag){case 27:case 5:r=n.memoizedProps}e[g2]=t,e=!!(e.nodeValue===a||r!==null&&r.suppressHydrationWarning===!0||_s(e.nodeValue,a)),e||xt(t)}else e=zr(e).createTextNode(r),e[g2]=t,t.stateNode=e}return G1(t),null;case 13:if(r=t.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(n=e5(t),r!==null&&r.dehydrated!==null){if(e===null){if(!n)throw Error(k(318));if(n=t.memoizedState,n=n!==null?n.dehydrated:null,!n)throw Error(k(317));n[g2]=t}else Y5(),(t.flags&128)===0&&(t.memoizedState=null),t.flags|=4;G1(t),n=!1}else n=so(),e!==null&&e.memoizedState!==null&&(e.memoizedState.hydrationErrors=n),n=!0;if(!n)return t.flags&256?(s3(t),t):(s3(t),null)}if(s3(t),(t.flags&128)!==0)return t.lanes=a,t;if(a=r!==null,e=e!==null&&e.memoizedState!==null,a){r=t.child,n=null,r.alternate!==null&&r.alternate.memoizedState!==null&&r.alternate.memoizedState.cachePool!==null&&(n=r.alternate.memoizedState.cachePool.pool);var o=null;r.memoizedState!==null&&r.memoizedState.cachePool!==null&&(o=r.memoizedState.cachePool.pool),o!==n&&(r.flags|=2048)}return a!==e&&a&&(t.child.flags|=8192),$a(t,t.updateQueue),G1(t),null;case 4:return y0(),e===null&&E9(t.stateNode.containerInfo),G1(t),null;case 10:return u3(t.type),G1(t),null;case 19:if(i2(e2),n=t.memoizedState,n===null)return G1(t),null;if(r=(t.flags&128)!==0,o=n.rendering,o===null)if(r)a5(n,!1);else{if(F1!==0||e!==null&&(e.flags&128)!==0)for(e=t.child;e!==null;){if(o=Er(e),o!==null){for(t.flags|=128,a5(n,!1),e=o.updateQueue,t.updateQueue=e,$a(t,e),t.subtreeFlags=0,e=a,a=t.child;a!==null;)qi(a,e),a=a.sibling;return U1(e2,e2.current&1|2),t.child}e=e.sibling}n.tail!==null&&Oe()>Lr&&(t.flags|=128,r=!0,a5(n,!1),t.lanes=4194304)}else{if(!r)if(e=Er(o),e!==null){if(t.flags|=128,r=!0,e=e.updateQueue,t.updateQueue=e,$a(t,e),a5(n,!0),n.tail===null&&n.tailMode==="hidden"&&!o.alternate&&!c1)return G1(t),null}else 2*Oe()-n.renderingStartTime>Lr&&a!==536870912&&(t.flags|=128,r=!0,a5(n,!1),t.lanes=4194304);n.isBackwards?(o.sibling=t.child,t.child=o):(e=n.last,e!==null?e.sibling=o:t.child=o,n.last=o)}return n.tail!==null?(t=n.tail,n.rendering=t,n.tail=t.sibling,n.renderingStartTime=Oe(),t.sibling=null,e=e2.current,U1(e2,r?e&1|2:e&1),t):(G1(t),null);case 22:case 23:return s3(t),n9(),r=t.memoizedState!==null,e!==null?e.memoizedState!==null!==r&&(t.flags|=8192):r&&(t.flags|=8192),r?(a&536870912)!==0&&(t.flags&128)===0&&(G1(t),t.subtreeFlags&6&&(t.flags|=8192)):G1(t),a=t.updateQueue,a!==null&&$a(t,a.retryQueue),a=null,e!==null&&e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(a=e.memoizedState.cachePool.pool),r=null,t.memoizedState!==null&&t.memoizedState.cachePool!==null&&(r=t.memoizedState.cachePool.pool),r!==a&&(t.flags|=2048),e!==null&&i2(vt),null;case 24:return a=null,e!==null&&(a=e.memoizedState.cache),t.memoizedState.cache!==a&&(t.flags|=2048),u3(W1),G1(t),null;case 25:return null;case 30:return null}throw Error(k(156,t.tag))}function JC(e,t){switch(e9(t),t.tag){case 1:return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 3:return u3(W1),y0(),e=t.flags,(e&65536)!==0&&(e&128)===0?(t.flags=e&-65537|128,t):null;case 26:case 27:case 5:return Cr(t),null;case 13:if(s3(t),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error(k(340));Y5()}return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 19:return i2(e2),null;case 4:return y0(),null;case 10:return u3(t.type),null;case 22:case 23:return s3(t),n9(),e!==null&&i2(vt),e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 24:return u3(W1),null;case 25:return null;default:return null}}function ql(e,t){switch(e9(t),t.tag){case 3:u3(W1),y0();break;case 26:case 27:case 5:Cr(t);break;case 4:y0();break;case 13:s3(t);break;case 19:i2(e2);break;case 10:u3(t.type);break;case 22:case 23:s3(t),n9(),e!==null&&i2(vt);break;case 24:u3(W1)}}function Q5(e,t){try{var a=t.updateQueue,r=a!==null?a.lastEffect:null;if(r!==null){var n=r.next;a=n;do{if((a.tag&e)===e){r=void 0;var o=a.create,i=a.inst;r=o(),i.destroy=r}a=a.next}while(a!==n)}}catch(l){w1(t,t.return,l)}}function W3(e,t,a){try{var r=t.updateQueue,n=r!==null?r.lastEffect:null;if(n!==null){var o=n.next;r=o;do{if((r.tag&e)===e){var i=r.inst,l=i.destroy;if(l!==void 0){i.destroy=void 0,n=t;var s=a,c=l;try{c()}catch(f){w1(n,s,f)}}}r=r.next}while(r!==o)}}catch(f){w1(t,t.return,f)}}function $l(e){var t=e.updateQueue;if(t!==null){var a=e.stateNode;try{Ji(t,a)}catch(r){w1(e,e.return,r)}}}function Il(e,t,a){a.props=Rt(e.type,e.memoizedProps),a.state=e.memoizedState;try{a.componentWillUnmount()}catch(r){w1(e,t,r)}}function y5(e,t){try{var a=e.ref;if(a!==null){switch(e.tag){case 26:case 27:case 5:var r=e.stateNode;break;case 30:r=e.stateNode;break;default:r=e.stateNode}typeof a=="function"?e.refCleanup=a(r):a.current=r}}catch(n){w1(e,t,n)}}function Ae(e,t){var a=e.ref,r=e.refCleanup;if(a!==null)if(typeof r=="function")try{r()}catch(n){w1(e,t,n)}finally{e.refCleanup=null,e=e.alternate,e!=null&&(e.refCleanup=null)}else if(typeof a=="function")try{a(null)}catch(n){w1(e,t,n)}else a.current=null}function Xl(e){var t=e.type,a=e.memoizedProps,r=e.stateNode;try{e:switch(t){case"button":case"input":case"select":case"textarea":a.autoFocus&&r.focus();break e;case"img":a.src?r.src=a.src:a.srcSet&&(r.srcset=a.srcSet)}}catch(n){w1(e,e.return,n)}}function Dn(e,t,a){try{var r=e.stateNode;hp(r,e.type,a,t),r[M2]=t}catch(n){w1(e,e.return,n)}}function Kl(e){return e.tag===5||e.tag===3||e.tag===26||e.tag===27&&at(e.type)||e.tag===4}function On(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||Kl(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.tag===27&&at(e.type)||e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function x7(e,t,a){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?(a.nodeType===9?a.body:a.nodeName==="HTML"?a.ownerDocument.body:a).insertBefore(e,t):(t=a.nodeType===9?a.body:a.nodeName==="HTML"?a.ownerDocument.body:a,t.appendChild(e),a=a._reactRootContainer,a!=null||t.onclick!==null||(t.onclick=e4));else if(r!==4&&(r===27&&at(e.type)&&(a=e.stateNode,t=null),e=e.child,e!==null))for(x7(e,t,a),e=e.sibling;e!==null;)x7(e,t,a),e=e.sibling}function kr(e,t,a){var r=e.tag;if(r===5||r===6)e=e.stateNode,t?a.insertBefore(e,t):a.appendChild(e);else if(r!==4&&(r===27&&at(e.type)&&(a=e.stateNode),e=e.child,e!==null))for(kr(e,t,a),e=e.sibling;e!==null;)kr(e,t,a),e=e.sibling}function Ql(e){var t=e.stateNode,a=e.memoizedProps;try{for(var r=e.type,n=t.attributes;n.length;)t.removeAttributeNode(n[0]);d2(t,r,a),t[g2]=e,t[M2]=a}catch(o){w1(e,e.return,o)}}var r3=!1,$1=!1,zn=!1,Oo=typeof WeakSet=="function"?WeakSet:Set,r2=null;function WC(e,t){if(e=e.containerInfo,k7=Br,e=Ui(e),K7(e)){if("selectionStart"in e)var a={start:e.selectionStart,end:e.selectionEnd};else e:{a=(a=e.ownerDocument)&&a.defaultView||window;var r=a.getSelection&&a.getSelection();if(r&&r.rangeCount!==0){a=r.anchorNode;var n=r.anchorOffset,o=r.focusNode;r=r.focusOffset;try{a.nodeType,o.nodeType}catch{a=null;break e}var i=0,l=-1,s=-1,c=0,f=0,d=e,u=null;t:for(;;){for(var m;d!==a||n!==0&&d.nodeType!==3||(l=i+n),d!==o||r!==0&&d.nodeType!==3||(s=i+r),d.nodeType===3&&(i+=d.nodeValue.length),(m=d.firstChild)!==null;)u=d,d=m;for(;;){if(d===e)break t;if(u===a&&++c===n&&(l=i),u===o&&++f===r&&(s=i),(m=d.nextSibling)!==null)break;d=u,u=d.parentNode}d=m}a=l===-1||s===-1?null:{start:l,end:s}}else a=null}a=a||{start:0,end:0}}else a=null;for(L7={focusedElem:e,selectionRange:a},Br=!1,r2=t;r2!==null;)if(t=r2,e=t.child,(t.subtreeFlags&1024)!==0&&e!==null)e.return=t,r2=e;else for(;r2!==null;){switch(t=r2,o=t.alternate,e=t.flags,t.tag){case 0:break;case 11:case 15:break;case 1:if((e&1024)!==0&&o!==null){e=void 0,a=t,n=o.memoizedProps,o=o.memoizedState,r=a.stateNode;try{var b=Rt(a.type,n,a.elementType===a.type);e=r.getSnapshotBeforeUpdate(b,o),r.__reactInternalSnapshotBeforeUpdate=e}catch(R){w1(a,a.return,R)}}break;case 3:if((e&1024)!==0){if(e=t.stateNode.containerInfo,a=e.nodeType,a===9)A7(e);else if(a===1)switch(e.nodeName){case"HEAD":case"HTML":case"BODY":A7(e);break;default:e.textContent=""}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((e&1024)!==0)throw Error(k(163))}if(e=t.sibling,e!==null){e.return=t.return,r2=e;break}r2=t.return}}function Zl(e,t,a){var r=a.flags;switch(a.tag){case 0:case 11:case 15:A3(e,a),r&4&&Q5(5,a);break;case 1:if(A3(e,a),r&4)if(e=a.stateNode,t===null)try{e.componentDidMount()}catch(i){w1(a,a.return,i)}else{var n=Rt(a.type,t.memoizedProps);t=t.memoizedState;try{e.componentDidUpdate(n,t,e.__reactInternalSnapshotBeforeUpdate)}catch(i){w1(a,a.return,i)}}r&64&&$l(a),r&512&&y5(a,a.return);break;case 3:if(A3(e,a),r&64&&(e=a.updateQueue,e!==null)){if(t=null,a.child!==null)switch(a.child.tag){case 27:case 5:t=a.child.stateNode;break;case 1:t=a.child.stateNode}try{Ji(e,t)}catch(i){w1(a,a.return,i)}}break;case 27:t===null&&r&4&&Ql(a);case 26:case 5:A3(e,a),t===null&&r&4&&Xl(a),r&512&&y5(a,a.return);break;case 12:A3(e,a);break;case 13:A3(e,a),r&4&&es(e,a),r&64&&(e=a.memoizedState,e!==null&&(e=e.dehydrated,e!==null&&(a=sp.bind(null,a),Rp(e,a))));break;case 22:if(r=a.memoizedState!==null||r3,!r){t=t!==null&&t.memoizedState!==null||$1,n=r3;var o=$1;r3=r,($1=t)&&!o?D3(e,a,(a.subtreeFlags&8772)!==0):A3(e,a),r3=n,$1=o}break;case 30:break;default:A3(e,a)}}function Jl(e){var t=e.alternate;t!==null&&(e.alternate=null,Jl(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&F7(t)),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}var H1=null,k2=!1;function a3(e,t,a){for(a=a.child;a!==null;)Wl(e,t,a),a=a.sibling}function Wl(e,t,a){if(q2&&typeof q2.onCommitFiberUnmount=="function")try{q2.onCommitFiberUnmount(B5,a)}catch{}switch(a.tag){case 26:$1||Ae(a,t),a3(e,t,a),a.memoizedState?a.memoizedState.count--:a.stateNode&&(a=a.stateNode,a.parentNode.removeChild(a));break;case 27:$1||Ae(a,t);var r=H1,n=k2;at(a.type)&&(H1=a.stateNode,k2=!1),a3(e,t,a),S5(a.stateNode),H1=r,k2=n;break;case 5:$1||Ae(a,t);case 6:if(r=H1,n=k2,H1=null,a3(e,t,a),H1=r,k2=n,H1!==null)if(k2)try{(H1.nodeType===9?H1.body:H1.nodeName==="HTML"?H1.ownerDocument.body:H1).removeChild(a.stateNode)}catch(o){w1(a,t,o)}else try{H1.removeChild(a.stateNode)}catch(o){w1(a,t,o)}break;case 18:H1!==null&&(k2?(e=H1,Xo(e.nodeType===9?e.body:e.nodeName==="HTML"?e.ownerDocument.body:e,a.stateNode),U5(e)):Xo(H1,a.stateNode));break;case 4:r=H1,n=k2,H1=a.stateNode.containerInfo,k2=!0,a3(e,t,a),H1=r,k2=n;break;case 0:case 11:case 14:case 15:$1||W3(2,a,t),$1||W3(4,a,t),a3(e,t,a);break;case 1:$1||(Ae(a,t),r=a.stateNode,typeof r.componentWillUnmount=="function"&&Il(a,t,r)),a3(e,t,a);break;case 21:a3(e,t,a);break;case 22:$1=(r=$1)||a.memoizedState!==null,a3(e,t,a),$1=r;break;default:a3(e,t,a)}}function es(e,t){if(t.memoizedState===null&&(e=t.alternate,e!==null&&(e=e.memoizedState,e!==null&&(e=e.dehydrated,e!==null))))try{U5(e)}catch(a){w1(t,t.return,a)}}function ep(e){switch(e.tag){case 13:case 19:var t=e.stateNode;return t===null&&(t=e.stateNode=new Oo),t;case 22:return e=e.stateNode,t=e._retryCache,t===null&&(t=e._retryCache=new Oo),t;default:throw Error(k(435,e.tag))}}function Hn(e,t){var a=ep(e);t.forEach(function(r){var n=cp.bind(null,e,r);a.has(r)||(a.add(r),r.then(n,n))})}function V2(e,t){var a=t.deletions;if(a!==null)for(var r=0;r<a.length;r++){var n=a[r],o=e,i=t,l=i;e:for(;l!==null;){switch(l.tag){case 27:if(at(l.type)){H1=l.stateNode,k2=!1;break e}break;case 5:H1=l.stateNode,k2=!1;break e;case 3:case 4:H1=l.stateNode.containerInfo,k2=!0;break e}l=l.return}if(H1===null)throw Error(k(160));Wl(o,i,n),H1=null,k2=!1,o=n.alternate,o!==null&&(o.return=null),n.return=null}if(t.subtreeFlags&13878)for(t=t.child;t!==null;)ts(t,e),t=t.sibling}var he=null;function ts(e,t){var a=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:V2(t,e),j2(e),r&4&&(W3(3,e,e.return),Q5(3,e),W3(5,e,e.return));break;case 1:V2(t,e),j2(e),r&512&&($1||a===null||Ae(a,a.return)),r&64&&r3&&(e=e.updateQueue,e!==null&&(r=e.callbacks,r!==null&&(a=e.shared.hiddenCallbacks,e.shared.hiddenCallbacks=a===null?r:a.concat(r))));break;case 26:var n=he;if(V2(t,e),j2(e),r&512&&($1||a===null||Ae(a,a.return)),r&4){var o=a!==null?a.memoizedState:null;if(r=e.memoizedState,a===null)if(r===null)if(e.stateNode===null){e:{r=e.type,a=e.memoizedProps,n=n.ownerDocument||n;t:switch(r){case"title":o=n.getElementsByTagName("title")[0],(!o||o[j5]||o[g2]||o.namespaceURI==="http://www.w3.org/2000/svg"||o.hasAttribute("itemprop"))&&(o=n.createElement(r),n.head.insertBefore(o,n.querySelector("head > title"))),d2(o,r,a),o[g2]=e,n2(o),r=o;break e;case"link":var i=Wo("link","href",n).get(r+(a.href||""));if(i){for(var l=0;l<i.length;l++)if(o=i[l],o.getAttribute("href")===(a.href==null||a.href===""?null:a.href)&&o.getAttribute("rel")===(a.rel==null?null:a.rel)&&o.getAttribute("title")===(a.title==null?null:a.title)&&o.getAttribute("crossorigin")===(a.crossOrigin==null?null:a.crossOrigin)){i.splice(l,1);break t}}o=n.createElement(r),d2(o,r,a),n.head.appendChild(o);break;case"meta":if(i=Wo("meta","content",n).get(r+(a.content||""))){for(l=0;l<i.length;l++)if(o=i[l],o.getAttribute("content")===(a.content==null?null:""+a.content)&&o.getAttribute("name")===(a.name==null?null:a.name)&&o.getAttribute("property")===(a.property==null?null:a.property)&&o.getAttribute("http-equiv")===(a.httpEquiv==null?null:a.httpEquiv)&&o.getAttribute("charset")===(a.charSet==null?null:a.charSet)){i.splice(l,1);break t}}o=n.createElement(r),d2(o,r,a),n.head.appendChild(o);break;default:throw Error(k(468,r))}o[g2]=e,n2(o),r=o}e.stateNode=r}else ei(n,e.type,e.stateNode);else e.stateNode=Jo(n,r,e.memoizedProps);else o!==r?(o===null?a.stateNode!==null&&(a=a.stateNode,a.parentNode.removeChild(a)):o.count--,r===null?ei(n,e.type,e.stateNode):Jo(n,r,e.memoizedProps)):r===null&&e.stateNode!==null&&Dn(e,e.memoizedProps,a.memoizedProps)}break;case 27:V2(t,e),j2(e),r&512&&($1||a===null||Ae(a,a.return)),a!==null&&r&4&&Dn(e,e.memoizedProps,a.memoizedProps);break;case 5:if(V2(t,e),j2(e),r&512&&($1||a===null||Ae(a,a.return)),e.flags&32){n=e.stateNode;try{x0(n,"")}catch(m){w1(e,e.return,m)}}r&4&&e.stateNode!=null&&(n=e.memoizedProps,Dn(e,n,a!==null?a.memoizedProps:n)),r&1024&&(zn=!0);break;case 6:if(V2(t,e),j2(e),r&4){if(e.stateNode===null)throw Error(k(162));r=e.memoizedProps,a=e.stateNode;try{a.nodeValue=r}catch(m){w1(e,e.return,m)}}break;case 3:if(cr=null,n=he,he=Hr(t.containerInfo),V2(t,e),he=n,j2(e),r&4&&a!==null&&a.memoizedState.isDehydrated)try{U5(t.containerInfo)}catch(m){w1(e,e.return,m)}zn&&(zn=!1,as(e));break;case 4:r=he,he=Hr(e.stateNode.containerInfo),V2(t,e),j2(e),he=r;break;case 12:V2(t,e),j2(e);break;case 13:V2(t,e),j2(e),e.child.flags&8192&&e.memoizedState!==null!=(a!==null&&a.memoizedState!==null)&&(w9=Oe()),r&4&&(r=e.updateQueue,r!==null&&(e.updateQueue=null,Hn(e,r)));break;case 22:n=e.memoizedState!==null;var s=a!==null&&a.memoizedState!==null,c=r3,f=$1;if(r3=c||n,$1=f||s,V2(t,e),$1=f,r3=c,j2(e),r&8192)e:for(t=e.stateNode,t._visibility=n?t._visibility&-2:t._visibility|1,n&&(a===null||s||r3||$1||Ct(e)),a=null,t=e;;){if(t.tag===5||t.tag===26){if(a===null){s=a=t;try{if(o=s.stateNode,n)i=o.style,typeof i.setProperty=="function"?i.setProperty("display","none","important"):i.display="none";else{l=s.stateNode;var d=s.memoizedProps.style,u=d!=null&&d.hasOwnProperty("display")?d.display:null;l.style.display=u==null||typeof u=="boolean"?"":(""+u).trim()}}catch(m){w1(s,s.return,m)}}}else if(t.tag===6){if(a===null){s=t;try{s.stateNode.nodeValue=n?"":s.memoizedProps}catch(m){w1(s,s.return,m)}}}else if((t.tag!==22&&t.tag!==23||t.memoizedState===null||t===e)&&t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break e;for(;t.sibling===null;){if(t.return===null||t.return===e)break e;a===t&&(a=null),t=t.return}a===t&&(a=null),t.sibling.return=t.return,t=t.sibling}r&4&&(r=e.updateQueue,r!==null&&(a=r.retryQueue,a!==null&&(r.retryQueue=null,Hn(e,a))));break;case 19:V2(t,e),j2(e),r&4&&(r=e.updateQueue,r!==null&&(e.updateQueue=null,Hn(e,r)));break;case 30:break;case 21:break;default:V2(t,e),j2(e)}}function j2(e){var t=e.flags;if(t&2){try{for(var a,r=e.return;r!==null;){if(Kl(r)){a=r;break}r=r.return}if(a==null)throw Error(k(160));switch(a.tag){case 27:var n=a.stateNode,o=On(e);kr(e,o,n);break;case 5:var i=a.stateNode;a.flags&32&&(x0(i,""),a.flags&=-33);var l=On(e);kr(e,l,i);break;case 3:case 4:var s=a.stateNode.containerInfo,c=On(e);x7(e,c,s);break;default:throw Error(k(161))}}catch(f){w1(e,e.return,f)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function as(e){if(e.subtreeFlags&1024)for(e=e.child;e!==null;){var t=e;as(t),t.tag===5&&t.flags&1024&&t.stateNode.reset(),e=e.sibling}}function A3(e,t){if(t.subtreeFlags&8772)for(t=t.child;t!==null;)Zl(e,t.alternate,t),t=t.sibling}function Ct(e){for(e=e.child;e!==null;){var t=e;switch(t.tag){case 0:case 11:case 14:case 15:W3(4,t,t.return),Ct(t);break;case 1:Ae(t,t.return);var a=t.stateNode;typeof a.componentWillUnmount=="function"&&Il(t,t.return,a),Ct(t);break;case 27:S5(t.stateNode);case 26:case 5:Ae(t,t.return),Ct(t);break;case 22:t.memoizedState===null&&Ct(t);break;case 30:Ct(t);break;default:Ct(t)}e=e.sibling}}function D3(e,t,a){for(a=a&&(t.subtreeFlags&8772)!==0,t=t.child;t!==null;){var r=t.alternate,n=e,o=t,i=o.flags;switch(o.tag){case 0:case 11:case 15:D3(n,o,a),Q5(4,o);break;case 1:if(D3(n,o,a),r=o,n=r.stateNode,typeof n.componentDidMount=="function")try{n.componentDidMount()}catch(c){w1(r,r.return,c)}if(r=o,n=r.updateQueue,n!==null){var l=r.stateNode;try{var s=n.shared.hiddenCallbacks;if(s!==null)for(n.shared.hiddenCallbacks=null,n=0;n<s.length;n++)Zi(s[n],l)}catch(c){w1(r,r.return,c)}}a&&i&64&&$l(o),y5(o,o.return);break;case 27:Ql(o);case 26:case 5:D3(n,o,a),a&&r===null&&i&4&&Xl(o),y5(o,o.return);break;case 12:D3(n,o,a);break;case 13:D3(n,o,a),a&&i&4&&es(n,o);break;case 22:o.memoizedState===null&&D3(n,o,a),y5(o,o.return);break;case 30:break;default:D3(n,o,a)}t=t.sibling}}function v9(e,t){var a=null;e!==null&&e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(a=e.memoizedState.cachePool.pool),e=null,t.memoizedState!==null&&t.memoizedState.cachePool!==null&&(e=t.memoizedState.cachePool.pool),e!==a&&(e!=null&&e.refCount++,a!=null&&$5(a))}function y9(e,t){e=null,t.alternate!==null&&(e=t.alternate.memoizedState.cache),t=t.memoizedState.cache,t!==e&&(t.refCount++,e!=null&&$5(e))}function Le(e,t,a,r){if(t.subtreeFlags&10256)for(t=t.child;t!==null;)rs(e,t,a,r),t=t.sibling}function rs(e,t,a,r){var n=t.flags;switch(t.tag){case 0:case 11:case 15:Le(e,t,a,r),n&2048&&Q5(9,t);break;case 1:Le(e,t,a,r);break;case 3:Le(e,t,a,r),n&2048&&(e=null,t.alternate!==null&&(e=t.alternate.memoizedState.cache),t=t.memoizedState.cache,t!==e&&(t.refCount++,e!=null&&$5(e)));break;case 12:if(n&2048){Le(e,t,a,r),e=t.stateNode;try{var o=t.memoizedProps,i=o.id,l=o.onPostCommit;typeof l=="function"&&l(i,t.alternate===null?"mount":"update",e.passiveEffectDuration,-0)}catch(s){w1(t,t.return,s)}}else Le(e,t,a,r);break;case 13:Le(e,t,a,r);break;case 23:break;case 22:o=t.stateNode,i=t.alternate,t.memoizedState!==null?o._visibility&2?Le(e,t,a,r):b5(e,t):o._visibility&2?Le(e,t,a,r):(o._visibility|=2,Zt(e,t,a,r,(t.subtreeFlags&10256)!==0)),n&2048&&v9(i,t);break;case 24:Le(e,t,a,r),n&2048&&y9(t.alternate,t);break;default:Le(e,t,a,r)}}function Zt(e,t,a,r,n){for(n=n&&(t.subtreeFlags&10256)!==0,t=t.child;t!==null;){var o=e,i=t,l=a,s=r,c=i.flags;switch(i.tag){case 0:case 11:case 15:Zt(o,i,l,s,n),Q5(8,i);break;case 23:break;case 22:var f=i.stateNode;i.memoizedState!==null?f._visibility&2?Zt(o,i,l,s,n):b5(o,i):(f._visibility|=2,Zt(o,i,l,s,n)),n&&c&2048&&v9(i.alternate,i);break;case 24:Zt(o,i,l,s,n),n&&c&2048&&y9(i.alternate,i);break;default:Zt(o,i,l,s,n)}t=t.sibling}}function b5(e,t){if(t.subtreeFlags&10256)for(t=t.child;t!==null;){var a=e,r=t,n=r.flags;switch(r.tag){case 22:b5(a,r),n&2048&&v9(r.alternate,r);break;case 24:b5(a,r),n&2048&&y9(r.alternate,r);break;default:b5(a,r)}t=t.sibling}}var c5=8192;function Xt(e){if(e.subtreeFlags&c5)for(e=e.child;e!==null;)ns(e),e=e.sibling}function ns(e){switch(e.tag){case 26:Xt(e),e.flags&c5&&e.memoizedState!==null&&Up(he,e.memoizedState,e.memoizedProps);break;case 5:Xt(e);break;case 3:case 4:var t=he;he=Hr(e.stateNode.containerInfo),Xt(e),he=t;break;case 22:e.memoizedState===null&&(t=e.alternate,t!==null&&t.memoizedState!==null?(t=c5,c5=16777216,Xt(e),c5=t):Xt(e));break;default:Xt(e)}}function os(e){var t=e.alternate;if(t!==null&&(e=t.child,e!==null)){t.child=null;do t=e.sibling,e.sibling=null,e=t;while(e!==null)}}function r5(e){var t=e.deletions;if((e.flags&16)!==0){if(t!==null)for(var a=0;a<t.length;a++){var r=t[a];r2=r,ls(r,e)}os(e)}if(e.subtreeFlags&10256)for(e=e.child;e!==null;)is(e),e=e.sibling}function is(e){switch(e.tag){case 0:case 11:case 15:r5(e),e.flags&2048&&W3(9,e,e.return);break;case 3:r5(e);break;case 12:r5(e);break;case 22:var t=e.stateNode;e.memoizedState!==null&&t._visibility&2&&(e.return===null||e.return.tag!==13)?(t._visibility&=-3,lr(e)):r5(e);break;default:r5(e)}}function lr(e){var t=e.deletions;if((e.flags&16)!==0){if(t!==null)for(var a=0;a<t.length;a++){var r=t[a];r2=r,ls(r,e)}os(e)}for(e=e.child;e!==null;){switch(t=e,t.tag){case 0:case 11:case 15:W3(8,t,t.return),lr(t);break;case 22:a=t.stateNode,a._visibility&2&&(a._visibility&=-3,lr(t));break;default:lr(t)}e=e.sibling}}function ls(e,t){for(;r2!==null;){var a=r2;switch(a.tag){case 0:case 11:case 15:W3(8,a,t);break;case 23:case 22:if(a.memoizedState!==null&&a.memoizedState.cachePool!==null){var r=a.memoizedState.cachePool.pool;r!=null&&r.refCount++}break;case 24:$5(a.memoizedState.cache)}if(r=a.child,r!==null)r.return=a,r2=r;else e:for(a=e;r2!==null;){r=r2;var n=r.sibling,o=r.return;if(Jl(r),r===a){r2=null;break e}if(n!==null){n.return=o,r2=n;break e}r2=o}}}var tp={getCacheForType:function(e){var t=h2(W1),a=t.data.get(e);return a===void 0&&(a=e(),t.data.set(e,a)),a}},ap=typeof WeakMap=="function"?WeakMap:Map,g1=0,N1=null,r1=null,o1=0,m1=0,F2=null,j3=!1,D0=!1,b9=!1,p3=0,F1=0,et=0,yt=0,x9=0,ie=0,N0=0,x5=null,L2=null,w7=!1,w9=0,Lr=1/0,Mr=null,I3=null,u2=0,X3=null,_0=null,v0=0,S7=0,R7=null,ss=null,w5=0,E7=null;function I2(){if((g1&2)!==0&&o1!==0)return o1&-o1;if(K.T!==null){var e=w0;return e!==0?e:R9()}return yi()}function cs(){ie===0&&(ie=(o1&536870912)===0||c1?mi():536870912);var e=le.current;return e!==null&&(e.flags|=32),ie}function X2(e,t,a){(e===N1&&(m1===2||m1===9)||e.cancelPendingCommit!==null)&&(T0(e,0),F3(e,o1,ie,!1)),V5(e,a),((g1&2)===0||e!==N1)&&(e===N1&&((g1&2)===0&&(yt|=a),F1===4&&F3(e,o1,ie,!1)),Ue(e))}function us(e,t,a){if((g1&6)!==0)throw Error(k(327));var r=!a&&(t&124)===0&&(t&e.expiredLanes)===0||G5(e,t),n=r?op(e,t):Un(e,t,!0),o=r;do{if(n===0){D0&&!r&&F3(e,t,0,!1);break}else{if(a=e.current.alternate,o&&!rp(a)){n=Un(e,t,!1),o=!1;continue}if(n===2){if(o=t,e.errorRecoveryDisabledLanes&o)var i=0;else i=e.pendingLanes&-536870913,i=i!==0?i:i&536870912?536870912:0;if(i!==0){t=i;e:{var l=e;n=x5;var s=l.current.memoizedState.isDehydrated;if(s&&(T0(l,i).flags|=256),i=Un(l,i,!1),i!==2){if(b9&&!s){l.errorRecoveryDisabledLanes|=o,yt|=o,n=4;break e}o=L2,L2=n,o!==null&&(L2===null?L2=o:L2.push.apply(L2,o))}n=i}if(o=!1,n!==2)continue}}if(n===1){T0(e,0),F3(e,t,0,!0);break}e:{switch(r=e,o=n,o){case 0:case 1:throw Error(k(345));case 4:if((t&4194048)!==t)break;case 6:F3(r,t,ie,!j3);break e;case 2:L2=null;break;case 3:case 5:break;default:throw Error(k(329))}if((t&62914560)===t&&(n=w9+300-Oe(),10<n)){if(F3(r,t,ie,!j3),Vr(r,0,!0)!==0)break e;r.timeoutHandle=ks(zo.bind(null,r,a,L2,Mr,w7,t,ie,yt,N0,j3,o,2,-0,0),n);break e}zo(r,a,L2,Mr,w7,t,ie,yt,N0,j3,o,0,-0,0)}}break}while(!0);Ue(e)}function zo(e,t,a,r,n,o,i,l,s,c,f,d,u,m){if(e.timeoutHandle=-1,d=t.subtreeFlags,(d&8192||(d&16785408)===16785408)&&(D5={stylesheets:null,count:0,unsuspend:Hp},ns(t),d=Pp(),d!==null)){e.cancelPendingCommit=d(Uo.bind(null,e,t,o,a,r,n,i,l,s,f,1,u,m)),F3(e,o,i,!c);return}Uo(e,t,o,a,r,n,i,l,s)}function rp(e){for(var t=e;;){var a=t.tag;if((a===0||a===11||a===15)&&t.flags&16384&&(a=t.updateQueue,a!==null&&(a=a.stores,a!==null)))for(var r=0;r<a.length;r++){var n=a[r],o=n.getSnapshot;n=n.value;try{if(!K2(o(),n))return!1}catch{return!1}}if(a=t.child,t.subtreeFlags&16384&&a!==null)a.return=t,t=a;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function F3(e,t,a,r){t&=~x9,t&=~yt,e.suspendedLanes|=t,e.pingedLanes&=~t,r&&(e.warmLanes|=t),r=e.expirationTimes;for(var n=t;0<n;){var o=31-$2(n),i=1<<o;r[o]=-1,n&=~i}a!==0&&hi(e,a,t)}function Zr(){return(g1&6)===0?(Z5(0,!1),!1):!0}function S9(){if(r1!==null){if(m1===0)var e=r1.return;else e=r1,l3=Tt=null,c9(e),h0=null,L5=0,e=r1;for(;e!==null;)ql(e.alternate,e),e=e.return;r1=null}}function T0(e,t){var a=e.timeoutHandle;a!==-1&&(e.timeoutHandle=-1,yp(a)),a=e.cancelPendingCommit,a!==null&&(e.cancelPendingCommit=null,a()),S9(),N1=e,r1=a=c3(e.current,null),o1=t,m1=0,F2=null,j3=!1,D0=G5(e,t),b9=!1,N0=ie=x9=yt=et=F1=0,L2=x5=null,w7=!1,(t&8)!==0&&(t|=t&32);var r=e.entangledLanes;if(r!==0)for(e=e.entanglements,r&=t;0<r;){var n=31-$2(r),o=1<<n;t|=e[n],r&=~o}return p3=t,qr(),a}function ds(e,t){J=null,K.H=Rr,t===I5||t===Ir?(t=Co(),m1=3):t===Ki?(t=Co(),m1=4):m1=t===Bl?8:t!==null&&typeof t=="object"&&typeof t.then=="function"?6:1,F2=t,r1===null&&(F1=1,_r(e,oe(t,e.current)))}function fs(){var e=K.H;return K.H=Rr,e===null?Rr:e}function Cs(){var e=K.A;return K.A=tp,e}function N7(){F1=4,j3||(o1&4194048)!==o1&&le.current!==null||(D0=!0),(et&134217727)===0&&(yt&134217727)===0||N1===null||F3(N1,o1,ie,!1)}function Un(e,t,a){var r=g1;g1|=2;var n=fs(),o=Cs();(N1!==e||o1!==t)&&(Mr=null,T0(e,t)),t=!1;var i=F1;e:do try{if(m1!==0&&r1!==null){var l=r1,s=F2;switch(m1){case 8:S9(),i=6;break e;case 3:case 2:case 9:case 6:le.current===null&&(t=!0);var c=m1;if(m1=0,F2=null,u0(e,l,s,c),a&&D0){i=0;break e}break;default:c=m1,m1=0,F2=null,u0(e,l,s,c)}}np(),i=F1;break}catch(f){ds(e,f)}while(!0);return t&&e.shellSuspendCounter++,l3=Tt=null,g1=r,K.H=n,K.A=o,r1===null&&(N1=null,o1=0,qr()),i}function np(){for(;r1!==null;)ps(r1)}function op(e,t){var a=g1;g1|=2;var r=fs(),n=Cs();N1!==e||o1!==t?(Mr=null,Lr=Oe()+500,T0(e,t)):D0=G5(e,t);e:do try{if(m1!==0&&r1!==null){t=r1;var o=F2;t:switch(m1){case 1:m1=0,F2=null,u0(e,t,o,1);break;case 2:case 9:if(fo(o)){m1=0,F2=null,Ho(t);break}t=function(){m1!==2&&m1!==9||N1!==e||(m1=7),Ue(e)},o.then(t,t);break e;case 3:m1=7;break e;case 4:m1=5;break e;case 7:fo(o)?(m1=0,F2=null,Ho(t)):(m1=0,F2=null,u0(e,t,o,7));break;case 5:var i=null;switch(r1.tag){case 26:i=r1.memoizedState;case 5:case 27:var l=r1;if(!i||Ds(i)){m1=0,F2=null;var s=l.sibling;if(s!==null)r1=s;else{var c=l.return;c!==null?(r1=c,Jr(c)):r1=null}break t}}m1=0,F2=null,u0(e,t,o,5);break;case 6:m1=0,F2=null,u0(e,t,o,6);break;case 8:S9(),F1=6;break e;default:throw Error(k(462))}}ip();break}catch(f){ds(e,f)}while(!0);return l3=Tt=null,K.H=r,K.A=n,g1=a,r1!==null?0:(N1=null,o1=0,qr(),F1)}function ip(){for(;r1!==null&&!Tf();)ps(r1)}function ps(e){var t=Yl(e.alternate,e,p3);e.memoizedProps=e.pendingProps,t===null?Jr(e):r1=t}function Ho(e){var t=e,a=t.alternate;switch(t.tag){case 15:case 0:t=ko(a,t,t.pendingProps,t.type,void 0,o1);break;case 11:t=ko(a,t,t.pendingProps,t.type.render,t.ref,o1);break;case 5:c9(t);default:ql(a,t),t=r1=qi(t,p3),t=Yl(a,t,p3)}e.memoizedProps=e.pendingProps,t===null?Jr(e):r1=t}function u0(e,t,a,r){l3=Tt=null,c9(t),h0=null,L5=0;var n=t.return;try{if(KC(e,n,t,a,o1)){F1=1,_r(e,oe(a,e.current)),r1=null;return}}catch(o){if(n!==null)throw r1=n,o;F1=1,_r(e,oe(a,e.current)),r1=null;return}t.flags&32768?(c1||r===1?e=!0:D0||(o1&536870912)!==0?e=!1:(j3=e=!0,(r===2||r===9||r===3||r===6)&&(r=le.current,r!==null&&r.tag===13&&(r.flags|=16384))),ms(t,e)):Jr(t)}function Jr(e){var t=e;do{if((t.flags&32768)!==0){ms(t,j3);return}e=t.return;var a=ZC(t.alternate,t,p3);if(a!==null){r1=a;return}if(t=t.sibling,t!==null){r1=t;return}r1=t=e}while(t!==null);F1===0&&(F1=5)}function ms(e,t){do{var a=JC(e.alternate,e);if(a!==null){a.flags&=32767,r1=a;return}if(a=e.return,a!==null&&(a.flags|=32768,a.subtreeFlags=0,a.deletions=null),!t&&(e=e.sibling,e!==null)){r1=e;return}r1=e=a}while(e!==null);F1=6,r1=null}function Uo(e,t,a,r,n,o,i,l,s){e.cancelPendingCommit=null;do Wr();while(u2!==0);if((g1&6)!==0)throw Error(k(327));if(t!==null){if(t===e.current)throw Error(k(177));if(o=t.lanes|t.childLanes,o|=Q7,Pf(e,a,o,i,l,s),e===N1&&(r1=N1=null,o1=0),_0=t,X3=e,v0=a,S7=o,R7=n,ss=r,(t.subtreeFlags&10256)!==0||(t.flags&10256)!==0?(e.callbackNode=null,e.callbackPriority=0,up(pr,function(){return bs(!0),null})):(e.callbackNode=null,e.callbackPriority=0),r=(t.flags&13878)!==0,(t.subtreeFlags&13878)!==0||r){r=K.T,K.T=null,n=u1.p,u1.p=2,i=g1,g1|=4;try{WC(e,t,a)}finally{g1=i,u1.p=n,K.T=r}}u2=1,gs(),hs(),vs()}}function gs(){if(u2===1){u2=0;var e=X3,t=_0,a=(t.flags&13878)!==0;if((t.subtreeFlags&13878)!==0||a){a=K.T,K.T=null;var r=u1.p;u1.p=2;var n=g1;g1|=4;try{ts(t,e);var o=L7,i=Ui(e.containerInfo),l=o.focusedElem,s=o.selectionRange;if(i!==l&&l&&l.ownerDocument&&Hi(l.ownerDocument.documentElement,l)){if(s!==null&&K7(l)){var c=s.start,f=s.end;if(f===void 0&&(f=c),"selectionStart"in l)l.selectionStart=c,l.selectionEnd=Math.min(f,l.value.length);else{var d=l.ownerDocument||document,u=d&&d.defaultView||window;if(u.getSelection){var m=u.getSelection(),b=l.textContent.length,R=Math.min(s.start,b),S=s.end===void 0?R:Math.min(s.end,b);!m.extend&&R>S&&(i=S,S=R,R=i);var C=ro(l,R),p=ro(l,S);if(C&&p&&(m.rangeCount!==1||m.anchorNode!==C.node||m.anchorOffset!==C.offset||m.focusNode!==p.node||m.focusOffset!==p.offset)){var g=d.createRange();g.setStart(C.node,C.offset),m.removeAllRanges(),R>S?(m.addRange(g),m.extend(p.node,p.offset)):(g.setEnd(p.node,p.offset),m.addRange(g))}}}}for(d=[],m=l;m=m.parentNode;)m.nodeType===1&&d.push({element:m,left:m.scrollLeft,top:m.scrollTop});for(typeof l.focus=="function"&&l.focus(),l=0;l<d.length;l++){var h=d[l];h.element.scrollLeft=h.left,h.element.scrollTop=h.top}}Br=!!k7,L7=k7=null}finally{g1=n,u1.p=r,K.T=a}}e.current=t,u2=2}}function hs(){if(u2===2){u2=0;var e=X3,t=_0,a=(t.flags&8772)!==0;if((t.subtreeFlags&8772)!==0||a){a=K.T,K.T=null;var r=u1.p;u1.p=2;var n=g1;g1|=4;try{Zl(e,t.alternate,t)}finally{g1=n,u1.p=r,K.T=a}}u2=3}}function vs(){if(u2===4||u2===3){u2=0,kf();var e=X3,t=_0,a=v0,r=ss;(t.subtreeFlags&10256)!==0||(t.flags&10256)!==0?u2=5:(u2=0,_0=X3=null,ys(e,e.pendingLanes));var n=e.pendingLanes;if(n===0&&(I3=null),j7(a),t=t.stateNode,q2&&typeof q2.onCommitFiberRoot=="function")try{q2.onCommitFiberRoot(B5,t,void 0,(t.current.flags&128)===128)}catch{}if(r!==null){t=K.T,n=u1.p,u1.p=2,K.T=null;try{for(var o=e.onRecoverableError,i=0;i<r.length;i++){var l=r[i];o(l.value,{componentStack:l.stack})}}finally{K.T=t,u1.p=n}}(v0&3)!==0&&Wr(),Ue(e),n=e.pendingLanes,(a&4194090)!==0&&(n&42)!==0?e===E7?w5++:(w5=0,E7=e):w5=0,Z5(0,!1)}}function ys(e,t){(e.pooledCacheLanes&=t)===0&&(t=e.pooledCache,t!=null&&(e.pooledCache=null,$5(t)))}function Wr(e){return gs(),hs(),vs(),bs(e)}function bs(){if(u2!==5)return!1;var e=X3,t=S7;S7=0;var a=j7(v0),r=K.T,n=u1.p;try{u1.p=32>a?32:a,K.T=null,a=R7,R7=null;var o=X3,i=v0;if(u2=0,_0=X3=null,v0=0,(g1&6)!==0)throw Error(k(331));var l=g1;if(g1|=4,is(o.current),rs(o,o.current,i,a),g1=l,Z5(0,!1),q2&&typeof q2.onPostCommitFiberRoot=="function")try{q2.onPostCommitFiberRoot(B5,o)}catch{}return!0}finally{u1.p=n,K.T=r,ys(e,t)}}function Po(e,t,a){t=oe(a,t),t=v7(e.stateNode,t,2),e=$3(e,t,2),e!==null&&(V5(e,2),Ue(e))}function w1(e,t,a){if(e.tag===3)Po(e,e,a);else for(;t!==null;){if(t.tag===3){Po(t,e,a);break}else if(t.tag===1){var r=t.stateNode;if(typeof t.type.getDerivedStateFromError=="function"||typeof r.componentDidCatch=="function"&&(I3===null||!I3.has(r))){e=oe(a,e),a=Ul(2),r=$3(t,a,2),r!==null&&(Pl(a,r,t,e),V5(r,2),Ue(r));break}}t=t.return}}function Pn(e,t,a){var r=e.pingCache;if(r===null){r=e.pingCache=new ap;var n=new Set;r.set(t,n)}else n=r.get(t),n===void 0&&(n=new Set,r.set(t,n));n.has(a)||(b9=!0,n.add(a),e=lp.bind(null,e,t,a),t.then(e,e))}function lp(e,t,a){var r=e.pingCache;r!==null&&r.delete(t),e.pingedLanes|=e.suspendedLanes&a,e.warmLanes&=~a,N1===e&&(o1&a)===a&&(F1===4||F1===3&&(o1&62914560)===o1&&300>Oe()-w9?(g1&2)===0&&T0(e,0):x9|=a,N0===o1&&(N0=0)),Ue(e)}function xs(e,t){t===0&&(t=gi()),e=A0(e,t),e!==null&&(V5(e,t),Ue(e))}function sp(e){var t=e.memoizedState,a=0;t!==null&&(a=t.retryLane),xs(e,a)}function cp(e,t){var a=0;switch(e.tag){case 13:var r=e.stateNode,n=e.memoizedState;n!==null&&(a=n.retryLane);break;case 19:r=e.stateNode;break;case 22:r=e.stateNode._retryCache;break;default:throw Error(k(314))}r!==null&&r.delete(t),xs(e,a)}function up(e,t){return G7(e,t)}var Ar=null,Jt=null,_7=!1,Dr=!1,Bn=!1,bt=0;function Ue(e){e!==Jt&&e.next===null&&(Jt===null?Ar=Jt=e:Jt=Jt.next=e),Dr=!0,_7||(_7=!0,fp())}function Z5(e,t){if(!Bn&&Dr){Bn=!0;do for(var a=!1,r=Ar;r!==null;){if(!t)if(e!==0){var n=r.pendingLanes;if(n===0)var o=0;else{var i=r.suspendedLanes,l=r.pingedLanes;o=(1<<31-$2(42|e)+1)-1,o&=n&~(i&~l),o=o&201326741?o&201326741|1:o?o|2:0}o!==0&&(a=!0,Bo(r,o))}else o=o1,o=Vr(r,r===N1?o:0,r.cancelPendingCommit!==null||r.timeoutHandle!==-1),(o&3)===0||G5(r,o)||(a=!0,Bo(r,o));r=r.next}while(a);Bn=!1}}function dp(){ws()}function ws(){Dr=_7=!1;var e=0;bt!==0&&(vp()&&(e=bt),bt=0);for(var t=Oe(),a=null,r=Ar;r!==null;){var n=r.next,o=Ss(r,t);o===0?(r.next=null,a===null?Ar=n:a.next=n,n===null&&(Jt=a)):(a=r,(e!==0||(o&3)!==0)&&(Dr=!0)),r=n}Z5(e,!1)}function Ss(e,t){for(var a=e.suspendedLanes,r=e.pingedLanes,n=e.expirationTimes,o=e.pendingLanes&-62914561;0<o;){var i=31-$2(o),l=1<<i,s=n[i];s===-1?((l&a)===0||(l&r)!==0)&&(n[i]=Uf(l,t)):s<=t&&(e.expiredLanes|=l),o&=~l}if(t=N1,a=o1,a=Vr(e,e===t?a:0,e.cancelPendingCommit!==null||e.timeoutHandle!==-1),r=e.callbackNode,a===0||e===t&&(m1===2||m1===9)||e.cancelPendingCommit!==null)return r!==null&&r!==null&&fn(r),e.callbackNode=null,e.callbackPriority=0;if((a&3)===0||G5(e,a)){if(t=a&-a,t===e.callbackPriority)return t;switch(r!==null&&fn(r),j7(a)){case 2:case 8:a=Ci;break;case 32:a=pr;break;case 268435456:a=pi;break;default:a=pr}return r=Rs.bind(null,e),a=G7(a,r),e.callbackPriority=t,e.callbackNode=a,t}return r!==null&&r!==null&&fn(r),e.callbackPriority=2,e.callbackNode=null,2}function Rs(e,t){if(u2!==0&&u2!==5)return e.callbackNode=null,e.callbackPriority=0,null;var a=e.callbackNode;if(Wr(!0)&&e.callbackNode!==a)return null;var r=o1;return r=Vr(e,e===N1?r:0,e.cancelPendingCommit!==null||e.timeoutHandle!==-1),r===0?null:(us(e,r,t),Ss(e,Oe()),e.callbackNode!=null&&e.callbackNode===a?Rs.bind(null,e):null)}function Bo(e,t){if(Wr())return null;us(e,t,!0)}function fp(){bp(function(){(g1&6)!==0?G7(fi,dp):ws()})}function R9(){return bt===0&&(bt=mi()),bt}function Go(e){return e==null||typeof e=="symbol"||typeof e=="boolean"?null:typeof e=="function"?e:Wa(""+e)}function Vo(e,t){var a=t.ownerDocument.createElement("input");return a.name=t.name,a.value=t.value,e.id&&a.setAttribute("form",e.id),t.parentNode.insertBefore(a,t),e=new FormData(e),a.parentNode.removeChild(a),e}function Cp(e,t,a,r,n){if(t==="submit"&&a&&a.stateNode===n){var o=Go((n[M2]||null).action),i=r.submitter;i&&(t=(t=i[M2]||null)?Go(t.formAction):i.getAttribute("formAction"),t!==null&&(o=t,i=null));var l=new jr("action","action",null,r,n);e.push({event:l,listeners:[{instance:null,listener:function(){if(r.defaultPrevented){if(bt!==0){var s=i?Vo(n,i):new FormData(n);g7(a,{pending:!0,data:s,method:n.method,action:o},null,s)}}else typeof o=="function"&&(l.preventDefault(),s=i?Vo(n,i):new FormData(n),g7(a,{pending:!0,data:s,method:n.method,action:o},o,s))},currentTarget:n}]})}}for(Ia=0;Ia<n7.length;Ia++)Xa=n7[Ia],jo=Xa.toLowerCase(),Fo=Xa[0].toUpperCase()+Xa.slice(1),ye(jo,"on"+Fo);var Xa,jo,Fo,Ia;ye(Bi,"onAnimationEnd");ye(Gi,"onAnimationIteration");ye(Vi,"onAnimationStart");ye("dblclick","onDoubleClick");ye("focusin","onFocus");ye("focusout","onBlur");ye(AC,"onTransitionRun");ye(DC,"onTransitionStart");ye(OC,"onTransitionCancel");ye(ji,"onTransitionEnd");b0("onMouseEnter",["mouseout","mouseover"]);b0("onMouseLeave",["mouseout","mouseover"]);b0("onPointerEnter",["pointerout","pointerover"]);b0("onPointerLeave",["pointerout","pointerover"]);Et("onChange","change click focusin focusout input keydown keyup selectionchange".split(" "));Et("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));Et("onBeforeInput",["compositionend","keypress","textInput","paste"]);Et("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" "));Et("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" "));Et("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var M5="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),pp=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(M5));function Es(e,t){t=(t&4)!==0;for(var a=0;a<e.length;a++){var r=e[a],n=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var i=r.length-1;0<=i;i--){var l=r[i],s=l.instance,c=l.currentTarget;if(l=l.listener,s!==o&&n.isPropagationStopped())break e;o=l,n.currentTarget=c;try{o(n)}catch(f){Nr(f)}n.currentTarget=null,o=s}else for(i=0;i<r.length;i++){if(l=r[i],s=l.instance,c=l.currentTarget,l=l.listener,s!==o&&n.isPropagationStopped())break e;o=l,n.currentTarget=c;try{o(n)}catch(f){Nr(f)}n.currentTarget=null,o=s}}}}function a1(e,t){var a=t[Zn];a===void 0&&(a=t[Zn]=new Set);var r=e+"__bubble";a.has(r)||(Ns(t,e,2,!1),a.add(r))}function Gn(e,t,a){var r=0;t&&(r|=4),Ns(a,e,r,t)}var Ka="_reactListening"+Math.random().toString(36).slice(2);function E9(e){if(!e[Ka]){e[Ka]=!0,bi.forEach(function(a){a!=="selectionchange"&&(pp.has(a)||Gn(a,!1,e),Gn(a,!0,e))});var t=e.nodeType===9?e:e.ownerDocument;t===null||t[Ka]||(t[Ka]=!0,Gn("selectionchange",!1,t))}}function Ns(e,t,a,r){switch(Ps(t)){case 2:var n=Vp;break;case 8:n=jp;break;default:n=k9}a=n.bind(null,t,a,e),n=void 0,!t7||t!=="touchstart"&&t!=="touchmove"&&t!=="wheel"||(n=!0),r?n!==void 0?e.addEventListener(t,a,{capture:!0,passive:n}):e.addEventListener(t,a,!0):n!==void 0?e.addEventListener(t,a,{passive:n}):e.addEventListener(t,a,!1)}function Vn(e,t,a,r,n){var o=r;if((t&1)===0&&(t&2)===0&&r!==null)e:for(;;){if(r===null)return;var i=r.tag;if(i===3||i===4){var l=r.stateNode.containerInfo;if(l===n)break;if(i===4)for(i=r.return;i!==null;){var s=i.tag;if((s===3||s===4)&&i.stateNode.containerInfo===n)return;i=i.return}for(;l!==null;){if(i=t0(l),i===null)return;if(s=i.tag,s===5||s===6||s===26||s===27){r=o=i;continue e}l=l.parentNode}}r=r.return}Ti(function(){var c=o,f=q7(a),d=[];e:{var u=Fi.get(e);if(u!==void 0){var m=jr,b=e;switch(e){case"keypress":if(tr(a)===0)break e;case"keydown":case"keyup":m=uC;break;case"focusin":b="focus",m=bn;break;case"focusout":b="blur",m=bn;break;case"beforeblur":case"afterblur":m=bn;break;case"click":if(a.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":m=X6;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":m=Jf;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":m=CC;break;case Bi:case Gi:case Vi:m=tC;break;case ji:m=mC;break;case"scroll":case"scrollend":m=Qf;break;case"wheel":m=hC;break;case"copy":case"cut":case"paste":m=rC;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":m=Q6;break;case"toggle":case"beforetoggle":m=yC}var R=(t&4)!==0,S=!R&&(e==="scroll"||e==="scrollend"),C=R?u!==null?u+"Capture":null:u;R=[];for(var p=c,g;p!==null;){var h=p;if(g=h.stateNode,h=h.tag,h!==5&&h!==26&&h!==27||g===null||C===null||(h=E5(p,C),h!=null&&R.push(A5(p,h,g))),S)break;p=p.return}0<R.length&&(u=new m(u,b,null,a,f),d.push({event:u,listeners:R}))}}if((t&7)===0){e:{if(u=e==="mouseover"||e==="pointerover",m=e==="mouseout"||e==="pointerout",u&&a!==e7&&(b=a.relatedTarget||a.fromElement)&&(t0(b)||b[L0]))break e;if((m||u)&&(u=f.window===f?f:(u=f.ownerDocument)?u.defaultView||u.parentWindow:window,m?(b=a.relatedTarget||a.toElement,m=c,b=b?t0(b):null,b!==null&&(S=P5(b),R=b.tag,b!==S||R!==5&&R!==27&&R!==6)&&(b=null)):(m=null,b=c),m!==b)){if(R=X6,h="onMouseLeave",C="onMouseEnter",p="mouse",(e==="pointerout"||e==="pointerover")&&(R=Q6,h="onPointerLeave",C="onPointerEnter",p="pointer"),S=m==null?u:s5(m),g=b==null?u:s5(b),u=new R(h,p+"leave",m,a,f),u.target=S,u.relatedTarget=g,h=null,t0(f)===c&&(R=new R(C,p+"enter",b,a,f),R.target=g,R.relatedTarget=S,h=R),S=h,m&&b)t:{for(R=m,C=b,p=0,g=R;g;g=Kt(g))p++;for(g=0,h=C;h;h=Kt(h))g++;for(;0<p-g;)R=Kt(R),p--;for(;0<g-p;)C=Kt(C),g--;for(;p--;){if(R===C||C!==null&&R===C.alternate)break t;R=Kt(R),C=Kt(C)}R=null}else R=null;m!==null&&Yo(d,u,m,R,!1),b!==null&&S!==null&&Yo(d,S,b,R,!0)}}e:{if(u=c?s5(c):window,m=u.nodeName&&u.nodeName.toLowerCase(),m==="select"||m==="input"&&u.type==="file")var w=eo;else if(W6(u))if(Oi)w=kC;else{w=_C;var _=NC}else m=u.nodeName,!m||m.toLowerCase()!=="input"||u.type!=="checkbox"&&u.type!=="radio"?c&&Y7(c.elementType)&&(w=eo):w=TC;if(w&&(w=w(e,c))){Di(d,w,a,f);break e}_&&_(e,u,c),e==="focusout"&&c&&u.type==="number"&&c.memoizedProps.value!=null&&Wn(u,"number",u.value)}switch(_=c?s5(c):window,e){case"focusin":(W6(_)||_.contentEditable==="true")&&(n0=_,a7=c,f5=null);break;case"focusout":f5=a7=n0=null;break;case"mousedown":r7=!0;break;case"contextmenu":case"mouseup":case"dragend":r7=!1,no(d,a,f);break;case"selectionchange":if(MC)break;case"keydown":case"keyup":no(d,a,f)}var N;if(X7)e:{switch(e){case"compositionstart":var M="onCompositionStart";break e;case"compositionend":M="onCompositionEnd";break e;case"compositionupdate":M="onCompositionUpdate";break e}M=void 0}else r0?Mi(e,a)&&(M="onCompositionEnd"):e==="keydown"&&a.keyCode===229&&(M="onCompositionStart");M&&(Li&&a.locale!=="ko"&&(r0||M!=="onCompositionStart"?M==="onCompositionEnd"&&r0&&(N=ki()):(V3=f,$7="value"in V3?V3.value:V3.textContent,r0=!0)),_=Or(c,M),0<_.length&&(M=new K6(M,e,null,a,f),d.push({event:M,listeners:_}),N?M.data=N:(N=Ai(a),N!==null&&(M.data=N)))),(N=xC?wC(e,a):SC(e,a))&&(M=Or(c,"onBeforeInput"),0<M.length&&(_=new K6("onBeforeInput","beforeinput",null,a,f),d.push({event:_,listeners:M}),_.data=N)),Cp(d,e,c,a,f)}Es(d,t)})}function A5(e,t,a){return{instance:e,listener:t,currentTarget:a}}function Or(e,t){for(var a=t+"Capture",r=[];e!==null;){var n=e,o=n.stateNode;if(n=n.tag,n!==5&&n!==26&&n!==27||o===null||(n=E5(e,a),n!=null&&r.unshift(A5(e,n,o)),n=E5(e,t),n!=null&&r.push(A5(e,n,o))),e.tag===3)return r;e=e.return}return[]}function Kt(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5&&e.tag!==27);return e||null}function Yo(e,t,a,r,n){for(var o=t._reactName,i=[];a!==null&&a!==r;){var l=a,s=l.alternate,c=l.stateNode;if(l=l.tag,s!==null&&s===r)break;l!==5&&l!==26&&l!==27||c===null||(s=c,n?(c=E5(a,o),c!=null&&i.unshift(A5(a,c,s))):n||(c=E5(a,o),c!=null&&i.push(A5(a,c,s)))),a=a.return}i.length!==0&&e.push({event:t,listeners:i})}var mp=/\r\n?/g,gp=/\u0000|\uFFFD/g;function qo(e){return(typeof e=="string"?e:""+e).replace(mp,`
`).replace(gp,"")}function _s(e,t){return t=qo(t),qo(e)===t}function e4(){}function b1(e,t,a,r,n,o){switch(a){case"children":typeof r=="string"?t==="body"||t==="textarea"&&r===""||x0(e,r):(typeof r=="number"||typeof r=="bigint")&&t!=="body"&&x0(e,""+r);break;case"className":Pa(e,"class",r);break;case"tabIndex":Pa(e,"tabindex",r);break;case"dir":case"role":case"viewBox":case"width":case"height":Pa(e,a,r);break;case"style":_i(e,r,o);break;case"data":if(t!=="object"){Pa(e,"data",r);break}case"src":case"href":if(r===""&&(t!=="a"||a!=="href")){e.removeAttribute(a);break}if(r==null||typeof r=="function"||typeof r=="symbol"||typeof r=="boolean"){e.removeAttribute(a);break}r=Wa(""+r),e.setAttribute(a,r);break;case"action":case"formAction":if(typeof r=="function"){e.setAttribute(a,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}else typeof o=="function"&&(a==="formAction"?(t!=="input"&&b1(e,t,"name",n.name,n,null),b1(e,t,"formEncType",n.formEncType,n,null),b1(e,t,"formMethod",n.formMethod,n,null),b1(e,t,"formTarget",n.formTarget,n,null)):(b1(e,t,"encType",n.encType,n,null),b1(e,t,"method",n.method,n,null),b1(e,t,"target",n.target,n,null)));if(r==null||typeof r=="symbol"||typeof r=="boolean"){e.removeAttribute(a);break}r=Wa(""+r),e.setAttribute(a,r);break;case"onClick":r!=null&&(e.onclick=e4);break;case"onScroll":r!=null&&a1("scroll",e);break;case"onScrollEnd":r!=null&&a1("scrollend",e);break;case"dangerouslySetInnerHTML":if(r!=null){if(typeof r!="object"||!("__html"in r))throw Error(k(61));if(a=r.__html,a!=null){if(n.children!=null)throw Error(k(60));e.innerHTML=a}}break;case"multiple":e.multiple=r&&typeof r!="function"&&typeof r!="symbol";break;case"muted":e.muted=r&&typeof r!="function"&&typeof r!="symbol";break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":break;case"autoFocus":break;case"xlinkHref":if(r==null||typeof r=="function"||typeof r=="boolean"||typeof r=="symbol"){e.removeAttribute("xlink:href");break}a=Wa(""+r),e.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",a);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":r!=null&&typeof r!="function"&&typeof r!="symbol"?e.setAttribute(a,""+r):e.removeAttribute(a);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":r&&typeof r!="function"&&typeof r!="symbol"?e.setAttribute(a,""):e.removeAttribute(a);break;case"capture":case"download":r===!0?e.setAttribute(a,""):r!==!1&&r!=null&&typeof r!="function"&&typeof r!="symbol"?e.setAttribute(a,r):e.removeAttribute(a);break;case"cols":case"rows":case"size":case"span":r!=null&&typeof r!="function"&&typeof r!="symbol"&&!isNaN(r)&&1<=r?e.setAttribute(a,r):e.removeAttribute(a);break;case"rowSpan":case"start":r==null||typeof r=="function"||typeof r=="symbol"||isNaN(r)?e.removeAttribute(a):e.setAttribute(a,r);break;case"popover":a1("beforetoggle",e),a1("toggle",e),Ja(e,"popover",r);break;case"xlinkActuate":e3(e,"http://www.w3.org/1999/xlink","xlink:actuate",r);break;case"xlinkArcrole":e3(e,"http://www.w3.org/1999/xlink","xlink:arcrole",r);break;case"xlinkRole":e3(e,"http://www.w3.org/1999/xlink","xlink:role",r);break;case"xlinkShow":e3(e,"http://www.w3.org/1999/xlink","xlink:show",r);break;case"xlinkTitle":e3(e,"http://www.w3.org/1999/xlink","xlink:title",r);break;case"xlinkType":e3(e,"http://www.w3.org/1999/xlink","xlink:type",r);break;case"xmlBase":e3(e,"http://www.w3.org/XML/1998/namespace","xml:base",r);break;case"xmlLang":e3(e,"http://www.w3.org/XML/1998/namespace","xml:lang",r);break;case"xmlSpace":e3(e,"http://www.w3.org/XML/1998/namespace","xml:space",r);break;case"is":Ja(e,"is",r);break;case"innerText":case"textContent":break;default:(!(2<a.length)||a[0]!=="o"&&a[0]!=="O"||a[1]!=="n"&&a[1]!=="N")&&(a=Xf.get(a)||a,Ja(e,a,r))}}function T7(e,t,a,r,n,o){switch(a){case"style":_i(e,r,o);break;case"dangerouslySetInnerHTML":if(r!=null){if(typeof r!="object"||!("__html"in r))throw Error(k(61));if(a=r.__html,a!=null){if(n.children!=null)throw Error(k(60));e.innerHTML=a}}break;case"children":typeof r=="string"?x0(e,r):(typeof r=="number"||typeof r=="bigint")&&x0(e,""+r);break;case"onScroll":r!=null&&a1("scroll",e);break;case"onScrollEnd":r!=null&&a1("scrollend",e);break;case"onClick":r!=null&&(e.onclick=e4);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":break;case"innerText":case"textContent":break;default:if(!xi.hasOwnProperty(a))e:{if(a[0]==="o"&&a[1]==="n"&&(n=a.endsWith("Capture"),t=a.slice(2,n?a.length-7:void 0),o=e[M2]||null,o=o!=null?o[a]:null,typeof o=="function"&&e.removeEventListener(t,o,n),typeof r=="function")){typeof o!="function"&&o!==null&&(a in e?e[a]=null:e.hasAttribute(a)&&e.removeAttribute(a)),e.addEventListener(t,r,n);break e}a in e?e[a]=r:r===!0?e.setAttribute(a,""):Ja(e,a,r)}}}function d2(e,t,a){switch(t){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":a1("error",e),a1("load",e);var r=!1,n=!1,o;for(o in a)if(a.hasOwnProperty(o)){var i=a[o];if(i!=null)switch(o){case"src":r=!0;break;case"srcSet":n=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(k(137,t));default:b1(e,t,o,i,a,null)}}n&&b1(e,t,"srcSet",a.srcSet,a,null),r&&b1(e,t,"src",a.src,a,null);return;case"input":a1("invalid",e);var l=o=i=n=null,s=null,c=null;for(r in a)if(a.hasOwnProperty(r)){var f=a[r];if(f!=null)switch(r){case"name":n=f;break;case"type":i=f;break;case"checked":s=f;break;case"defaultChecked":c=f;break;case"value":o=f;break;case"defaultValue":l=f;break;case"children":case"dangerouslySetInnerHTML":if(f!=null)throw Error(k(137,t));break;default:b1(e,t,r,f,a,null)}}Ri(e,o,l,s,c,i,n,!1),mr(e);return;case"select":a1("invalid",e),r=i=o=null;for(n in a)if(a.hasOwnProperty(n)&&(l=a[n],l!=null))switch(n){case"value":o=l;break;case"defaultValue":i=l;break;case"multiple":r=l;default:b1(e,t,n,l,a,null)}t=o,a=i,e.multiple=!!r,t!=null?f0(e,!!r,t,!1):a!=null&&f0(e,!!r,a,!0);return;case"textarea":a1("invalid",e),o=n=r=null;for(i in a)if(a.hasOwnProperty(i)&&(l=a[i],l!=null))switch(i){case"value":r=l;break;case"defaultValue":n=l;break;case"children":o=l;break;case"dangerouslySetInnerHTML":if(l!=null)throw Error(k(91));break;default:b1(e,t,i,l,a,null)}Ni(e,r,n,o),mr(e);return;case"option":for(s in a)if(a.hasOwnProperty(s)&&(r=a[s],r!=null))switch(s){case"selected":e.selected=r&&typeof r!="function"&&typeof r!="symbol";break;default:b1(e,t,s,r,a,null)}return;case"dialog":a1("beforetoggle",e),a1("toggle",e),a1("cancel",e),a1("close",e);break;case"iframe":case"object":a1("load",e);break;case"video":case"audio":for(r=0;r<M5.length;r++)a1(M5[r],e);break;case"image":a1("error",e),a1("load",e);break;case"details":a1("toggle",e);break;case"embed":case"source":case"link":a1("error",e),a1("load",e);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(c in a)if(a.hasOwnProperty(c)&&(r=a[c],r!=null))switch(c){case"children":case"dangerouslySetInnerHTML":throw Error(k(137,t));default:b1(e,t,c,r,a,null)}return;default:if(Y7(t)){for(f in a)a.hasOwnProperty(f)&&(r=a[f],r!==void 0&&T7(e,t,f,r,a,void 0));return}}for(l in a)a.hasOwnProperty(l)&&(r=a[l],r!=null&&b1(e,t,l,r,a,null))}function hp(e,t,a,r){switch(t){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var n=null,o=null,i=null,l=null,s=null,c=null,f=null;for(m in a){var d=a[m];if(a.hasOwnProperty(m)&&d!=null)switch(m){case"checked":break;case"value":break;case"defaultValue":s=d;default:r.hasOwnProperty(m)||b1(e,t,m,null,r,d)}}for(var u in r){var m=r[u];if(d=a[u],r.hasOwnProperty(u)&&(m!=null||d!=null))switch(u){case"type":o=m;break;case"name":n=m;break;case"checked":c=m;break;case"defaultChecked":f=m;break;case"value":i=m;break;case"defaultValue":l=m;break;case"children":case"dangerouslySetInnerHTML":if(m!=null)throw Error(k(137,t));break;default:m!==d&&b1(e,t,u,m,r,d)}}Jn(e,i,l,s,c,f,o,n);return;case"select":m=i=l=u=null;for(o in a)if(s=a[o],a.hasOwnProperty(o)&&s!=null)switch(o){case"value":break;case"multiple":m=s;default:r.hasOwnProperty(o)||b1(e,t,o,null,r,s)}for(n in r)if(o=r[n],s=a[n],r.hasOwnProperty(n)&&(o!=null||s!=null))switch(n){case"value":u=o;break;case"defaultValue":l=o;break;case"multiple":i=o;default:o!==s&&b1(e,t,n,o,r,s)}t=l,a=i,r=m,u!=null?f0(e,!!a,u,!1):!!r!=!!a&&(t!=null?f0(e,!!a,t,!0):f0(e,!!a,a?[]:"",!1));return;case"textarea":m=u=null;for(l in a)if(n=a[l],a.hasOwnProperty(l)&&n!=null&&!r.hasOwnProperty(l))switch(l){case"value":break;case"children":break;default:b1(e,t,l,null,r,n)}for(i in r)if(n=r[i],o=a[i],r.hasOwnProperty(i)&&(n!=null||o!=null))switch(i){case"value":u=n;break;case"defaultValue":m=n;break;case"children":break;case"dangerouslySetInnerHTML":if(n!=null)throw Error(k(91));break;default:n!==o&&b1(e,t,i,n,r,o)}Ei(e,u,m);return;case"option":for(var b in a)if(u=a[b],a.hasOwnProperty(b)&&u!=null&&!r.hasOwnProperty(b))switch(b){case"selected":e.selected=!1;break;default:b1(e,t,b,null,r,u)}for(s in r)if(u=r[s],m=a[s],r.hasOwnProperty(s)&&u!==m&&(u!=null||m!=null))switch(s){case"selected":e.selected=u&&typeof u!="function"&&typeof u!="symbol";break;default:b1(e,t,s,u,r,m)}return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var R in a)u=a[R],a.hasOwnProperty(R)&&u!=null&&!r.hasOwnProperty(R)&&b1(e,t,R,null,r,u);for(c in r)if(u=r[c],m=a[c],r.hasOwnProperty(c)&&u!==m&&(u!=null||m!=null))switch(c){case"children":case"dangerouslySetInnerHTML":if(u!=null)throw Error(k(137,t));break;default:b1(e,t,c,u,r,m)}return;default:if(Y7(t)){for(var S in a)u=a[S],a.hasOwnProperty(S)&&u!==void 0&&!r.hasOwnProperty(S)&&T7(e,t,S,void 0,r,u);for(f in r)u=r[f],m=a[f],!r.hasOwnProperty(f)||u===m||u===void 0&&m===void 0||T7(e,t,f,u,r,m);return}}for(var C in a)u=a[C],a.hasOwnProperty(C)&&u!=null&&!r.hasOwnProperty(C)&&b1(e,t,C,null,r,u);for(d in r)u=r[d],m=a[d],!r.hasOwnProperty(d)||u===m||u==null&&m==null||b1(e,t,d,u,r,m)}var k7=null,L7=null;function zr(e){return e.nodeType===9?e:e.ownerDocument}function $o(e){switch(e){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function Ts(e,t){if(e===0)switch(t){case"svg":return 1;case"math":return 2;default:return 0}return e===1&&t==="foreignObject"?0:e}function M7(e,t){return e==="textarea"||e==="noscript"||typeof t.children=="string"||typeof t.children=="number"||typeof t.children=="bigint"||typeof t.dangerouslySetInnerHTML=="object"&&t.dangerouslySetInnerHTML!==null&&t.dangerouslySetInnerHTML.__html!=null}var jn=null;function vp(){var e=window.event;return e&&e.type==="popstate"?e===jn?!1:(jn=e,!0):(jn=null,!1)}var ks=typeof setTimeout=="function"?setTimeout:void 0,yp=typeof clearTimeout=="function"?clearTimeout:void 0,Io=typeof Promise=="function"?Promise:void 0,bp=typeof queueMicrotask=="function"?queueMicrotask:typeof Io<"u"?function(e){return Io.resolve(null).then(e).catch(xp)}:ks;function xp(e){setTimeout(function(){throw e})}function at(e){return e==="head"}function Xo(e,t){var a=t,r=0,n=0;do{var o=a.nextSibling;if(e.removeChild(a),o&&o.nodeType===8)if(a=o.data,a==="/$"){if(0<r&&8>r){a=r;var i=e.ownerDocument;if(a&1&&S5(i.documentElement),a&2&&S5(i.body),a&4)for(a=i.head,S5(a),i=a.firstChild;i;){var l=i.nextSibling,s=i.nodeName;i[j5]||s==="SCRIPT"||s==="STYLE"||s==="LINK"&&i.rel.toLowerCase()==="stylesheet"||a.removeChild(i),i=l}}if(n===0){e.removeChild(o),U5(t);return}n--}else a==="$"||a==="$?"||a==="$!"?n++:r=a.charCodeAt(0)-48;else r=0;a=o}while(a);U5(t)}function A7(e){var t=e.firstChild;for(t&&t.nodeType===10&&(t=t.nextSibling);t;){var a=t;switch(t=t.nextSibling,a.nodeName){case"HTML":case"HEAD":case"BODY":A7(a),F7(a);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if(a.rel.toLowerCase()==="stylesheet")continue}e.removeChild(a)}}function wp(e,t,a,r){for(;e.nodeType===1;){var n=a;if(e.nodeName.toLowerCase()!==t.toLowerCase()){if(!r&&(e.nodeName!=="INPUT"||e.type!=="hidden"))break}else if(r){if(!e[j5])switch(t){case"meta":if(!e.hasAttribute("itemprop"))break;return e;case"link":if(o=e.getAttribute("rel"),o==="stylesheet"&&e.hasAttribute("data-precedence"))break;if(o!==n.rel||e.getAttribute("href")!==(n.href==null||n.href===""?null:n.href)||e.getAttribute("crossorigin")!==(n.crossOrigin==null?null:n.crossOrigin)||e.getAttribute("title")!==(n.title==null?null:n.title))break;return e;case"style":if(e.hasAttribute("data-precedence"))break;return e;case"script":if(o=e.getAttribute("src"),(o!==(n.src==null?null:n.src)||e.getAttribute("type")!==(n.type==null?null:n.type)||e.getAttribute("crossorigin")!==(n.crossOrigin==null?null:n.crossOrigin))&&o&&e.hasAttribute("async")&&!e.hasAttribute("itemprop"))break;return e;default:return e}}else if(t==="input"&&e.type==="hidden"){var o=n.name==null?null:""+n.name;if(n.type==="hidden"&&e.getAttribute("name")===o)return e}else return e;if(e=ve(e.nextSibling),e===null)break}return null}function Sp(e,t,a){if(t==="")return null;for(;e.nodeType!==3;)if((e.nodeType!==1||e.nodeName!=="INPUT"||e.type!=="hidden")&&!a||(e=ve(e.nextSibling),e===null))return null;return e}function D7(e){return e.data==="$!"||e.data==="$?"&&e.ownerDocument.readyState==="complete"}function Rp(e,t){var a=e.ownerDocument;if(e.data!=="$?"||a.readyState==="complete")t();else{var r=function(){t(),a.removeEventListener("DOMContentLoaded",r)};a.addEventListener("DOMContentLoaded",r),e._reactRetry=r}}function ve(e){for(;e!=null;e=e.nextSibling){var t=e.nodeType;if(t===1||t===3)break;if(t===8){if(t=e.data,t==="$"||t==="$!"||t==="$?"||t==="F!"||t==="F")break;if(t==="/$")return null}}return e}var O7=null;function Ko(e){e=e.previousSibling;for(var t=0;e;){if(e.nodeType===8){var a=e.data;if(a==="$"||a==="$!"||a==="$?"){if(t===0)return e;t--}else a==="/$"&&t++}e=e.previousSibling}return null}function Ls(e,t,a){switch(t=zr(a),e){case"html":if(e=t.documentElement,!e)throw Error(k(452));return e;case"head":if(e=t.head,!e)throw Error(k(453));return e;case"body":if(e=t.body,!e)throw Error(k(454));return e;default:throw Error(k(451))}}function S5(e){for(var t=e.attributes;t.length;)e.removeAttributeNode(t[0]);F7(e)}var se=new Map,Qo=new Set;function Hr(e){return typeof e.getRootNode=="function"?e.getRootNode():e.nodeType===9?e:e.ownerDocument}var m3=u1.d;u1.d={f:Ep,r:Np,D:_p,C:Tp,L:kp,m:Lp,X:Ap,S:Mp,M:Dp};function Ep(){var e=m3.f(),t=Zr();return e||t}function Np(e){var t=M0(e);t!==null&&t.tag===5&&t.type==="form"?Sl(t):m3.r(e)}var O0=typeof document>"u"?null:document;function Ms(e,t,a){var r=O0;if(r&&typeof t=="string"&&t){var n=ne(t);n='link[rel="'+e+'"][href="'+n+'"]',typeof a=="string"&&(n+='[crossorigin="'+a+'"]'),Qo.has(n)||(Qo.add(n),e={rel:e,crossOrigin:a,href:t},r.querySelector(n)===null&&(t=r.createElement("link"),d2(t,"link",e),n2(t),r.head.appendChild(t)))}}function _p(e){m3.D(e),Ms("dns-prefetch",e,null)}function Tp(e,t){m3.C(e,t),Ms("preconnect",e,t)}function kp(e,t,a){m3.L(e,t,a);var r=O0;if(r&&e&&t){var n='link[rel="preload"][as="'+ne(t)+'"]';t==="image"&&a&&a.imageSrcSet?(n+='[imagesrcset="'+ne(a.imageSrcSet)+'"]',typeof a.imageSizes=="string"&&(n+='[imagesizes="'+ne(a.imageSizes)+'"]')):n+='[href="'+ne(e)+'"]';var o=n;switch(t){case"style":o=k0(e);break;case"script":o=z0(e)}se.has(o)||(e=k1({rel:"preload",href:t==="image"&&a&&a.imageSrcSet?void 0:e,as:t},a),se.set(o,e),r.querySelector(n)!==null||t==="style"&&r.querySelector(J5(o))||t==="script"&&r.querySelector(W5(o))||(t=r.createElement("link"),d2(t,"link",e),n2(t),r.head.appendChild(t)))}}function Lp(e,t){m3.m(e,t);var a=O0;if(a&&e){var r=t&&typeof t.as=="string"?t.as:"script",n='link[rel="modulepreload"][as="'+ne(r)+'"][href="'+ne(e)+'"]',o=n;switch(r){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":o=z0(e)}if(!se.has(o)&&(e=k1({rel:"modulepreload",href:e},t),se.set(o,e),a.querySelector(n)===null)){switch(r){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(a.querySelector(W5(o)))return}r=a.createElement("link"),d2(r,"link",e),n2(r),a.head.appendChild(r)}}}function Mp(e,t,a){m3.S(e,t,a);var r=O0;if(r&&e){var n=d0(r).hoistableStyles,o=k0(e);t=t||"default";var i=n.get(o);if(!i){var l={loading:0,preload:null};if(i=r.querySelector(J5(o)))l.loading=5;else{e=k1({rel:"stylesheet",href:e,"data-precedence":t},a),(a=se.get(o))&&N9(e,a);var s=i=r.createElement("link");n2(s),d2(s,"link",e),s._p=new Promise(function(c,f){s.onload=c,s.onerror=f}),s.addEventListener("load",function(){l.loading|=1}),s.addEventListener("error",function(){l.loading|=2}),l.loading|=4,sr(i,t,r)}i={type:"stylesheet",instance:i,count:1,state:l},n.set(o,i)}}}function Ap(e,t){m3.X(e,t);var a=O0;if(a&&e){var r=d0(a).hoistableScripts,n=z0(e),o=r.get(n);o||(o=a.querySelector(W5(n)),o||(e=k1({src:e,async:!0},t),(t=se.get(n))&&_9(e,t),o=a.createElement("script"),n2(o),d2(o,"link",e),a.head.appendChild(o)),o={type:"script",instance:o,count:1,state:null},r.set(n,o))}}function Dp(e,t){m3.M(e,t);var a=O0;if(a&&e){var r=d0(a).hoistableScripts,n=z0(e),o=r.get(n);o||(o=a.querySelector(W5(n)),o||(e=k1({src:e,async:!0,type:"module"},t),(t=se.get(n))&&_9(e,t),o=a.createElement("script"),n2(o),d2(o,"link",e),a.head.appendChild(o)),o={type:"script",instance:o,count:1,state:null},r.set(n,o))}}function Zo(e,t,a,r){var n=(n=Y3.current)?Hr(n):null;if(!n)throw Error(k(446));switch(e){case"meta":case"title":return null;case"style":return typeof a.precedence=="string"&&typeof a.href=="string"?(t=k0(a.href),a=d0(n).hoistableStyles,r=a.get(t),r||(r={type:"style",instance:null,count:0,state:null},a.set(t,r)),r):{type:"void",instance:null,count:0,state:null};case"link":if(a.rel==="stylesheet"&&typeof a.href=="string"&&typeof a.precedence=="string"){e=k0(a.href);var o=d0(n).hoistableStyles,i=o.get(e);if(i||(n=n.ownerDocument||n,i={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},o.set(e,i),(o=n.querySelector(J5(e)))&&!o._p&&(i.instance=o,i.state.loading=5),se.has(e)||(a={rel:"preload",as:"style",href:a.href,crossOrigin:a.crossOrigin,integrity:a.integrity,media:a.media,hrefLang:a.hrefLang,referrerPolicy:a.referrerPolicy},se.set(e,a),o||Op(n,e,a,i.state))),t&&r===null)throw Error(k(528,""));return i}if(t&&r!==null)throw Error(k(529,""));return null;case"script":return t=a.async,a=a.src,typeof a=="string"&&t&&typeof t!="function"&&typeof t!="symbol"?(t=z0(a),a=d0(n).hoistableScripts,r=a.get(t),r||(r={type:"script",instance:null,count:0,state:null},a.set(t,r)),r):{type:"void",instance:null,count:0,state:null};default:throw Error(k(444,e))}}function k0(e){return'href="'+ne(e)+'"'}function J5(e){return'link[rel="stylesheet"]['+e+"]"}function As(e){return k1({},e,{"data-precedence":e.precedence,precedence:null})}function Op(e,t,a,r){e.querySelector('link[rel="preload"][as="style"]['+t+"]")?r.loading=1:(t=e.createElement("link"),r.preload=t,t.addEventListener("load",function(){return r.loading|=1}),t.addEventListener("error",function(){return r.loading|=2}),d2(t,"link",a),n2(t),e.head.appendChild(t))}function z0(e){return'[src="'+ne(e)+'"]'}function W5(e){return"script[async]"+e}function Jo(e,t,a){if(t.count++,t.instance===null)switch(t.type){case"style":var r=e.querySelector('style[data-href~="'+ne(a.href)+'"]');if(r)return t.instance=r,n2(r),r;var n=k1({},a,{"data-href":a.href,"data-precedence":a.precedence,href:null,precedence:null});return r=(e.ownerDocument||e).createElement("style"),n2(r),d2(r,"style",n),sr(r,a.precedence,e),t.instance=r;case"stylesheet":n=k0(a.href);var o=e.querySelector(J5(n));if(o)return t.state.loading|=4,t.instance=o,n2(o),o;r=As(a),(n=se.get(n))&&N9(r,n),o=(e.ownerDocument||e).createElement("link"),n2(o);var i=o;return i._p=new Promise(function(l,s){i.onload=l,i.onerror=s}),d2(o,"link",r),t.state.loading|=4,sr(o,a.precedence,e),t.instance=o;case"script":return o=z0(a.src),(n=e.querySelector(W5(o)))?(t.instance=n,n2(n),n):(r=a,(n=se.get(o))&&(r=k1({},a),_9(r,n)),e=e.ownerDocument||e,n=e.createElement("script"),n2(n),d2(n,"link",r),e.head.appendChild(n),t.instance=n);case"void":return null;default:throw Error(k(443,t.type))}else t.type==="stylesheet"&&(t.state.loading&4)===0&&(r=t.instance,t.state.loading|=4,sr(r,a.precedence,e));return t.instance}function sr(e,t,a){for(var r=a.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),n=r.length?r[r.length-1]:null,o=n,i=0;i<r.length;i++){var l=r[i];if(l.dataset.precedence===t)o=l;else if(o!==n)break}o?o.parentNode.insertBefore(e,o.nextSibling):(t=a.nodeType===9?a.head:a,t.insertBefore(e,t.firstChild))}function N9(e,t){e.crossOrigin==null&&(e.crossOrigin=t.crossOrigin),e.referrerPolicy==null&&(e.referrerPolicy=t.referrerPolicy),e.title==null&&(e.title=t.title)}function _9(e,t){e.crossOrigin==null&&(e.crossOrigin=t.crossOrigin),e.referrerPolicy==null&&(e.referrerPolicy=t.referrerPolicy),e.integrity==null&&(e.integrity=t.integrity)}var cr=null;function Wo(e,t,a){if(cr===null){var r=new Map,n=cr=new Map;n.set(a,r)}else n=cr,r=n.get(a),r||(r=new Map,n.set(a,r));if(r.has(e))return r;for(r.set(e,null),a=a.getElementsByTagName(e),n=0;n<a.length;n++){var o=a[n];if(!(o[j5]||o[g2]||e==="link"&&o.getAttribute("rel")==="stylesheet")&&o.namespaceURI!=="http://www.w3.org/2000/svg"){var i=o.getAttribute(t)||"";i=e+i;var l=r.get(i);l?l.push(o):r.set(i,[o])}}return r}function ei(e,t,a){e=e.ownerDocument||e,e.head.insertBefore(a,t==="title"?e.querySelector("head > title"):null)}function zp(e,t,a){if(a===1||t.itemProp!=null)return!1;switch(e){case"meta":case"title":return!0;case"style":if(typeof t.precedence!="string"||typeof t.href!="string"||t.href==="")break;return!0;case"link":if(typeof t.rel!="string"||typeof t.href!="string"||t.href===""||t.onLoad||t.onError)break;switch(t.rel){case"stylesheet":return e=t.disabled,typeof t.precedence=="string"&&e==null;default:return!0}case"script":if(t.async&&typeof t.async!="function"&&typeof t.async!="symbol"&&!t.onLoad&&!t.onError&&t.src&&typeof t.src=="string")return!0}return!1}function Ds(e){return!(e.type==="stylesheet"&&(e.state.loading&3)===0)}var D5=null;function Hp(){}function Up(e,t,a){if(D5===null)throw Error(k(475));var r=D5;if(t.type==="stylesheet"&&(typeof a.media!="string"||matchMedia(a.media).matches!==!1)&&(t.state.loading&4)===0){if(t.instance===null){var n=k0(a.href),o=e.querySelector(J5(n));if(o){e=o._p,e!==null&&typeof e=="object"&&typeof e.then=="function"&&(r.count++,r=Ur.bind(r),e.then(r,r)),t.state.loading|=4,t.instance=o,n2(o);return}o=e.ownerDocument||e,a=As(a),(n=se.get(n))&&N9(a,n),o=o.createElement("link"),n2(o);var i=o;i._p=new Promise(function(l,s){i.onload=l,i.onerror=s}),d2(o,"link",a),t.instance=o}r.stylesheets===null&&(r.stylesheets=new Map),r.stylesheets.set(t,e),(e=t.state.preload)&&(t.state.loading&3)===0&&(r.count++,t=Ur.bind(r),e.addEventListener("load",t),e.addEventListener("error",t))}}function Pp(){if(D5===null)throw Error(k(475));var e=D5;return e.stylesheets&&e.count===0&&z7(e,e.stylesheets),0<e.count?function(t){var a=setTimeout(function(){if(e.stylesheets&&z7(e,e.stylesheets),e.unsuspend){var r=e.unsuspend;e.unsuspend=null,r()}},6e4);return e.unsuspend=t,function(){e.unsuspend=null,clearTimeout(a)}}:null}function Ur(){if(this.count--,this.count===0){if(this.stylesheets)z7(this,this.stylesheets);else if(this.unsuspend){var e=this.unsuspend;this.unsuspend=null,e()}}}var Pr=null;function z7(e,t){e.stylesheets=null,e.unsuspend!==null&&(e.count++,Pr=new Map,t.forEach(Bp,e),Pr=null,Ur.call(e))}function Bp(e,t){if(!(t.state.loading&4)){var a=Pr.get(e);if(a)var r=a.get(null);else{a=new Map,Pr.set(e,a);for(var n=e.querySelectorAll("link[data-precedence],style[data-precedence]"),o=0;o<n.length;o++){var i=n[o];(i.nodeName==="LINK"||i.getAttribute("media")!=="not all")&&(a.set(i.dataset.precedence,i),r=i)}r&&a.set(null,r)}n=t.instance,i=n.getAttribute("data-precedence"),o=a.get(i)||r,o===r&&a.set(null,n),a.set(i,n),this.count++,r=Ur.bind(this),n.addEventListener("load",r),n.addEventListener("error",r),o?o.parentNode.insertBefore(n,o.nextSibling):(e=e.nodeType===9?e.head:e,e.insertBefore(n,e.firstChild)),t.state.loading|=4}}var O5={$$typeof:n3,Provider:null,Consumer:null,_currentValue:pt,_currentValue2:pt,_threadCount:0};function Gp(e,t,a,r,n,o,i,l){this.tag=1,this.containerInfo=e,this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=Cn(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Cn(0),this.hiddenUpdates=Cn(null),this.identifierPrefix=r,this.onUncaughtError=n,this.onCaughtError=o,this.onRecoverableError=i,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=l,this.incompleteTransitions=new Map}function Os(e,t,a,r,n,o,i,l,s,c,f,d){return e=new Gp(e,t,a,i,l,s,c,d),t=1,o===!0&&(t|=24),o=Y2(3,null,null,t),e.current=o,o.stateNode=e,t=t9(),t.refCount++,e.pooledCache=t,t.refCount++,o.memoizedState={element:r,isDehydrated:a,cache:t},r9(o),e}function zs(e){return e?(e=l0,e):l0}function Hs(e,t,a,r,n,o){n=zs(n),r.context===null?r.context=n:r.pendingContext=n,r=q3(t),r.payload={element:a},o=o===void 0?null:o,o!==null&&(r.callback=o),a=$3(e,r,t),a!==null&&(X2(a,e,t),m5(a,e,t))}function ti(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var a=e.retryLane;e.retryLane=a!==0&&a<t?a:t}}function T9(e,t){ti(e,t),(e=e.alternate)&&ti(e,t)}function Us(e){if(e.tag===13){var t=A0(e,67108864);t!==null&&X2(t,e,67108864),T9(e,67108864)}}var Br=!0;function Vp(e,t,a,r){var n=K.T;K.T=null;var o=u1.p;try{u1.p=2,k9(e,t,a,r)}finally{u1.p=o,K.T=n}}function jp(e,t,a,r){var n=K.T;K.T=null;var o=u1.p;try{u1.p=8,k9(e,t,a,r)}finally{u1.p=o,K.T=n}}function k9(e,t,a,r){if(Br){var n=H7(r);if(n===null)Vn(e,t,r,Gr,a),ai(e,r);else if(Yp(n,e,t,a,r))r.stopPropagation();else if(ai(e,r),t&4&&-1<Fp.indexOf(e)){for(;n!==null;){var o=M0(n);if(o!==null)switch(o.tag){case 3:if(o=o.stateNode,o.current.memoizedState.isDehydrated){var i=dt(o.pendingLanes);if(i!==0){var l=o;for(l.pendingLanes|=2,l.entangledLanes|=2;i;){var s=1<<31-$2(i);l.entanglements[1]|=s,i&=~s}Ue(o),(g1&6)===0&&(Lr=Oe()+500,Z5(0,!1))}}break;case 13:l=A0(o,2),l!==null&&X2(l,o,2),Zr(),T9(o,2)}if(o=H7(r),o===null&&Vn(e,t,r,Gr,a),o===n)break;n=o}n!==null&&r.stopPropagation()}else Vn(e,t,r,null,a)}}function H7(e){return e=q7(e),L9(e)}var Gr=null;function L9(e){if(Gr=null,e=t0(e),e!==null){var t=P5(e);if(t===null)e=null;else{var a=t.tag;if(a===13){if(e=si(t),e!==null)return e;e=null}else if(a===3){if(t.stateNode.current.memoizedState.isDehydrated)return t.tag===3?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null)}}return Gr=e,null}function Ps(e){switch(e){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(Lf()){case fi:return 2;case Ci:return 8;case pr:case Mf:return 32;case pi:return 268435456;default:return 32}default:return 32}}var U7=!1,K3=null,Q3=null,Z3=null,z5=new Map,H5=new Map,B3=[],Fp="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function ai(e,t){switch(e){case"focusin":case"focusout":K3=null;break;case"dragenter":case"dragleave":Q3=null;break;case"mouseover":case"mouseout":Z3=null;break;case"pointerover":case"pointerout":z5.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":H5.delete(t.pointerId)}}function n5(e,t,a,r,n,o){return e===null||e.nativeEvent!==o?(e={blockedOn:t,domEventName:a,eventSystemFlags:r,nativeEvent:o,targetContainers:[n]},t!==null&&(t=M0(t),t!==null&&Us(t)),e):(e.eventSystemFlags|=r,t=e.targetContainers,n!==null&&t.indexOf(n)===-1&&t.push(n),e)}function Yp(e,t,a,r,n){switch(t){case"focusin":return K3=n5(K3,e,t,a,r,n),!0;case"dragenter":return Q3=n5(Q3,e,t,a,r,n),!0;case"mouseover":return Z3=n5(Z3,e,t,a,r,n),!0;case"pointerover":var o=n.pointerId;return z5.set(o,n5(z5.get(o)||null,e,t,a,r,n)),!0;case"gotpointercapture":return o=n.pointerId,H5.set(o,n5(H5.get(o)||null,e,t,a,r,n)),!0}return!1}function Bs(e){var t=t0(e.target);if(t!==null){var a=P5(t);if(a!==null){if(t=a.tag,t===13){if(t=si(a),t!==null){e.blockedOn=t,Bf(e.priority,function(){if(a.tag===13){var r=I2();r=V7(r);var n=A0(a,r);n!==null&&X2(n,a,r),T9(a,r)}});return}}else if(t===3&&a.stateNode.current.memoizedState.isDehydrated){e.blockedOn=a.tag===3?a.stateNode.containerInfo:null;return}}}e.blockedOn=null}function ur(e){if(e.blockedOn!==null)return!1;for(var t=e.targetContainers;0<t.length;){var a=H7(e.nativeEvent);if(a===null){a=e.nativeEvent;var r=new a.constructor(a.type,a);e7=r,a.target.dispatchEvent(r),e7=null}else return t=M0(a),t!==null&&Us(t),e.blockedOn=a,!1;t.shift()}return!0}function ri(e,t,a){ur(e)&&a.delete(t)}function qp(){U7=!1,K3!==null&&ur(K3)&&(K3=null),Q3!==null&&ur(Q3)&&(Q3=null),Z3!==null&&ur(Z3)&&(Z3=null),z5.forEach(ri),H5.forEach(ri)}function Qa(e,t){e.blockedOn===t&&(e.blockedOn=null,U7||(U7=!0,t2.unstable_scheduleCallback(t2.unstable_NormalPriority,qp)))}var Za=null;function ni(e){Za!==e&&(Za=e,t2.unstable_scheduleCallback(t2.unstable_NormalPriority,function(){Za===e&&(Za=null);for(var t=0;t<e.length;t+=3){var a=e[t],r=e[t+1],n=e[t+2];if(typeof r!="function"){if(L9(r||a)===null)continue;break}var o=M0(a);o!==null&&(e.splice(t,3),t-=3,g7(o,{pending:!0,data:n,method:a.method,action:r},r,n))}}))}function U5(e){function t(s){return Qa(s,e)}K3!==null&&Qa(K3,e),Q3!==null&&Qa(Q3,e),Z3!==null&&Qa(Z3,e),z5.forEach(t),H5.forEach(t);for(var a=0;a<B3.length;a++){var r=B3[a];r.blockedOn===e&&(r.blockedOn=null)}for(;0<B3.length&&(a=B3[0],a.blockedOn===null);)Bs(a),a.blockedOn===null&&B3.shift();if(a=(e.ownerDocument||e).$$reactFormReplay,a!=null)for(r=0;r<a.length;r+=3){var n=a[r],o=a[r+1],i=n[M2]||null;if(typeof o=="function")i||ni(a);else if(i){var l=null;if(o&&o.hasAttribute("formAction")){if(n=o,i=o[M2]||null)l=i.formAction;else if(L9(n)!==null)continue}else l=i.action;typeof l=="function"?a[r+1]=l:(a.splice(r,3),r-=3),ni(a)}}}function M9(e){this._internalRoot=e}t4.prototype.render=M9.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error(k(409));var a=t.current,r=I2();Hs(a,r,e,t,null,null)};t4.prototype.unmount=M9.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var t=e.containerInfo;Hs(e.current,2,null,e,null,null),Zr(),t[L0]=null}};function t4(e){this._internalRoot=e}t4.prototype.unstable_scheduleHydration=function(e){if(e){var t=yi();e={blockedOn:null,target:e,priority:t};for(var a=0;a<B3.length&&t!==0&&t<B3[a].priority;a++);B3.splice(a,0,e),a===0&&Bs(e)}};var oi=ii.version;if(oi!=="19.1.0")throw Error(k(527,oi,"19.1.0"));u1.findDOMNode=function(e){var t=e._reactInternals;if(t===void 0)throw typeof e.render=="function"?Error(k(188)):(e=Object.keys(e).join(","),Error(k(268,e)));return e=Sf(t),e=e!==null?ci(e):null,e=e===null?null:e.stateNode,e};var $p={bundleType:0,version:"19.1.0",rendererPackageName:"react-dom",currentDispatcherRef:K,reconcilerVersion:"19.1.0"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"&&(o5=__REACT_DEVTOOLS_GLOBAL_HOOK__,!o5.isDisabled&&o5.supportsFiber))try{B5=o5.inject($p),q2=o5}catch{}var o5;a4.createRoot=function(e,t){if(!li(e))throw Error(k(299));var a=!1,r="",n=Ol,o=zl,i=Hl,l=null;return t!=null&&(t.unstable_strictMode===!0&&(a=!0),t.identifierPrefix!==void 0&&(r=t.identifierPrefix),t.onUncaughtError!==void 0&&(n=t.onUncaughtError),t.onCaughtError!==void 0&&(o=t.onCaughtError),t.onRecoverableError!==void 0&&(i=t.onRecoverableError),t.unstable_transitionCallbacks!==void 0&&(l=t.unstable_transitionCallbacks)),t=Os(e,1,!1,null,null,a,r,n,o,i,l,null),e[L0]=t.current,E9(e),new M9(t)};a4.hydrateRoot=function(e,t,a){if(!li(e))throw Error(k(299));var r=!1,n="",o=Ol,i=zl,l=Hl,s=null,c=null;return a!=null&&(a.unstable_strictMode===!0&&(r=!0),a.identifierPrefix!==void 0&&(n=a.identifierPrefix),a.onUncaughtError!==void 0&&(o=a.onUncaughtError),a.onCaughtError!==void 0&&(i=a.onCaughtError),a.onRecoverableError!==void 0&&(l=a.onRecoverableError),a.unstable_transitionCallbacks!==void 0&&(s=a.unstable_transitionCallbacks),a.formState!==void 0&&(c=a.formState)),t=Os(e,1,!0,t,a??null,r,n,o,i,l,s,c),t.context=zs(null),a=t.current,r=I2(),r=V7(r),n=q3(r),n.callback=null,$3(a,n,r),a=r,t.current.lanes=a,V5(t,a),Ue(t),e[L0]=t.current,E9(e),new t4(t)};a4.version="19.1.0"});var Fs=_2((Bv,js)=>{"use strict";function Vs(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(Vs)}catch(e){console.error(e)}}Vs(),js.exports=Gs()});var $s=_2(r4=>{"use strict";Object.defineProperty(r4,"__esModule",{value:!0});r4.parse=Wp;r4.serialize=em;var Ip=/^[\u0021-\u003A\u003C\u003E-\u007E]+$/,Xp=/^[\u0021-\u003A\u003C-\u007E]*$/,Kp=/^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i,Qp=/^[\u0020-\u003A\u003D-\u007E]*$/,Zp=Object.prototype.toString,Jp=(()=>{let e=function(){};return e.prototype=Object.create(null),e})();function Wp(e,t){let a=new Jp,r=e.length;if(r<2)return a;let n=t?.decode||tm,o=0;do{let i=e.indexOf("=",o);if(i===-1)break;let l=e.indexOf(";",o),s=l===-1?r:l;if(i>s){o=e.lastIndexOf(";",i-1)+1;continue}let c=Ys(e,o,i),f=qs(e,i,c),d=e.slice(c,f);if(a[d]===void 0){let u=Ys(e,i+1,s),m=qs(e,s,u),b=n(e.slice(u,m));a[d]=b}o=s+1}while(o<r);return a}function Ys(e,t,a){do{let r=e.charCodeAt(t);if(r!==32&&r!==9)return t}while(++t<a);return a}function qs(e,t,a){for(;t>a;){let r=e.charCodeAt(--t);if(r!==32&&r!==9)return t+1}return a}function em(e,t,a){let r=a?.encode||encodeURIComponent;if(!Ip.test(e))throw new TypeError(`argument name is invalid: ${e}`);let n=r(t);if(!Xp.test(n))throw new TypeError(`argument val is invalid: ${t}`);let o=e+"="+n;if(!a)return o;if(a.maxAge!==void 0){if(!Number.isInteger(a.maxAge))throw new TypeError(`option maxAge is invalid: ${a.maxAge}`);o+="; Max-Age="+a.maxAge}if(a.domain){if(!Kp.test(a.domain))throw new TypeError(`option domain is invalid: ${a.domain}`);o+="; Domain="+a.domain}if(a.path){if(!Qp.test(a.path))throw new TypeError(`option path is invalid: ${a.path}`);o+="; Path="+a.path}if(a.expires){if(!am(a.expires)||!Number.isFinite(a.expires.valueOf()))throw new TypeError(`option expires is invalid: ${a.expires}`);o+="; Expires="+a.expires.toUTCString()}if(a.httpOnly&&(o+="; HttpOnly"),a.secure&&(o+="; Secure"),a.partitioned&&(o+="; Partitioned"),a.priority)switch(typeof a.priority=="string"?a.priority.toLowerCase():void 0){case"low":o+="; Priority=Low";break;case"medium":o+="; Priority=Medium";break;case"high":o+="; Priority=High";break;default:throw new TypeError(`option priority is invalid: ${a.priority}`)}if(a.sameSite)switch(typeof a.sameSite=="string"?a.sameSite.toLowerCase():a.sameSite){case!0:case"strict":o+="; SameSite=Strict";break;case"lax":o+="; SameSite=Lax";break;case"none":o+="; SameSite=None";break;default:throw new TypeError(`option sameSite is invalid: ${a.sameSite}`)}return o}function tm(e){if(e.indexOf("%")===-1)return e;try{return decodeURIComponent(e)}catch{return e}}function am(e){return Zp.call(e)==="[object Date]"}});var Dc=_2(u4=>{"use strict";var hg=Symbol.for("react.transitional.element"),vg=Symbol.for("react.fragment");function Ac(e,t,a){var r=null;if(a!==void 0&&(r=""+a),t.key!==void 0&&(r=""+t.key),"key"in t){a={};for(var n in t)n!=="key"&&(a[n]=t[n])}else a=t;return t=a.ref,{$$typeof:hg,type:e,key:r,ref:t!==void 0?t:null,props:a}}u4.Fragment=vg;u4.jsx=Ac;u4.jsxs=Ac});var L=_2((wb,Oc)=>{"use strict";Oc.exports=Dc()});var Bc={};ka(Bc,{clearSession:()=>na,formatSessionInfo:()=>xg,getMultiSessions:()=>Sg,getSession:()=>xe,getSessionAge:()=>bg,getTimeSinceLastActivity:()=>Pc,hasValidSession:()=>r8,storeMultiSession:()=>wg,storeSession:()=>C4,updateSessionActivity:()=>yg});function C4(e,t,a,r=null){let n={roomId:e,playerName:t,sessionId:a,createdAt:Date.now(),lastActivity:Date.now(),gamePhase:r};try{localStorage.setItem(f4,JSON.stringify(n)),console.log("Session stored:",{roomId:e,playerName:t})}catch(o){console.error("Failed to store session:",o)}}function yg(){let e=xe();if(e){e.lastActivity=Date.now();try{localStorage.setItem(f4,JSON.stringify(e))}catch(t){console.error("Failed to update session activity:",t)}}}function xe(){try{let e=localStorage.getItem(f4);if(!e)return null;let t=JSON.parse(e),a=24*60*60*1e3;return Date.now()-t.lastActivity>a?(na(),null):t}catch(e){return console.error("Failed to get session:",e),null}}function na(){try{localStorage.removeItem(f4),console.log("Session cleared")}catch(e){console.error("Failed to clear session:",e)}}function r8(){return xe()!==null}function bg(){let e=xe();return e?Date.now()-e.createdAt:null}function Pc(){let e=xe();return e?Date.now()-e.lastActivity:null}function xg(){let e=xe();if(!e)return null;let t=Pc(),a=Math.floor(t/6e4);return{roomId:e.roomId,playerName:e.playerName,gamePhase:e.gamePhase,lastSeenText:a<1?"Just now":`${a} minute${a>1?"s":""} ago`,isRecent:a<5}}function wg(e,t,a){try{let r=localStorage.getItem(a8)||"[]",o=JSON.parse(r).filter(l=>l.roomId!==e);o.push({roomId:e,playerName:t,sessionId:a,createdAt:Date.now(),lastActivity:Date.now()});let i=o.slice(-5);localStorage.setItem(a8,JSON.stringify(i))}catch(r){console.error("Failed to store multi-session:",r)}}function Sg(){try{let e=localStorage.getItem(a8)||"[]",t=JSON.parse(e),a=24*60*60*1e3;return t.filter(n=>Date.now()-n.lastActivity<a)}catch(e){return console.error("Failed to get multi-sessions:",e),[]}}var f4,a8,oa=ef(()=>{"use strict";f4="liap_tui_session";a8="liap_tui_sessions"});var iu=_2((aS,ou)=>{"use strict";var Nh="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";ou.exports=Nh});var uu=_2((rS,cu)=>{"use strict";var _h=iu();function lu(){}function su(){}su.resetWarningCache=lu;cu.exports=function(){function e(r,n,o,i,l,s){if(s!==_h){var c=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw c.name="Invariant Violation",c}}e.isRequired=e;function t(){return e}var a={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:su,resetWarningCache:lu};return a.PropTypes=a,a}});var M1=_2((iS,du)=>{du.exports=uu()();var nS,oS});var L_=x(z(),1),Gd=x(Fs(),1);var T3=x(z(),1);var L1=x(z(),1),Be=x(z(),1),Y=x(z(),1),I=x(z(),1),d1=x(z(),1),Q9=x(z(),1),ng=x(z(),1),og=x(z(),1),Cc=x(z(),1),ig=x(z(),1),kc=x(z(),1),e8=x(z(),1),Lc=x(z(),1),Mc=x($s(),1);var gg={};var Is="popstate";function Js(e={}){function t(r,n){let{pathname:o,search:i,hash:l}=r.location;return O9("",{pathname:o,search:i,hash:l},n.state&&n.state.usr||null,n.state&&n.state.key||"default")}function a(r,n){return typeof n=="string"?n:H0(n)}return nm(t,a,null,e)}function _1(e,t){if(e===!1||e===null||typeof e>"u")throw new Error(t)}function ce(e,t){if(!e){typeof console<"u"&&console.warn(t);try{throw new Error(t)}catch{}}}function rm(){return Math.random().toString(36).substring(2,10)}function Xs(e,t){return{usr:e.state,key:e.key,idx:t}}function O9(e,t,a=null,r){return{pathname:typeof e=="string"?e:e.pathname,search:"",hash:"",...typeof t=="string"?kt(t):t,state:a,key:t&&t.key||r||rm()}}function H0({pathname:e="/",search:t="",hash:a=""}){return t&&t!=="?"&&(e+=t.charAt(0)==="?"?t:"?"+t),a&&a!=="#"&&(e+=a.charAt(0)==="#"?a:"#"+a),e}function kt(e){let t={};if(e){let a=e.indexOf("#");a>=0&&(t.hash=e.substring(a),e=e.substring(0,a));let r=e.indexOf("?");r>=0&&(t.search=e.substring(r),e=e.substring(0,r)),e&&(t.pathname=e)}return t}function nm(e,t,a,r={}){let{window:n=document.defaultView,v5Compat:o=!1}=r,i=n.history,l="POP",s=null,c=f();c==null&&(c=0,i.replaceState({...i.state,idx:c},""));function f(){return(i.state||{idx:null}).idx}function d(){l="POP";let S=f(),C=S==null?null:S-c;c=S,s&&s({action:l,location:R.location,delta:C})}function u(S,C){l="PUSH";let p=O9(R.location,S,C);a&&a(p,S),c=f()+1;let g=Xs(p,c),h=R.createHref(p);try{i.pushState(g,"",h)}catch(w){if(w instanceof DOMException&&w.name==="DataCloneError")throw w;n.location.assign(h)}o&&s&&s({action:l,location:R.location,delta:1})}function m(S,C){l="REPLACE";let p=O9(R.location,S,C);a&&a(p,S),c=f();let g=Xs(p,c),h=R.createHref(p);i.replaceState(g,"",h),o&&s&&s({action:l,location:R.location,delta:0})}function b(S){return om(S)}let R={get action(){return l},get location(){return e(n,i)},listen(S){if(s)throw new Error("A history only accepts one active listener");return n.addEventListener(Is,d),s=S,()=>{n.removeEventListener(Is,d),s=null}},createHref(S){return t(n,S)},createURL:b,encodeLocation(S){let C=b(S);return{pathname:C.pathname,search:C.search,hash:C.hash}},push:u,replace:m,go(S){return i.go(S)}};return R}function om(e,t=!1){let a="http://localhost";typeof window<"u"&&(a=window.location.origin!=="null"?window.location.origin:window.location.href),_1(a,"No window.location.(origin|href) available to create URL");let r=typeof e=="string"?e:H0(e);return r=r.replace(/ $/,"%20"),!t&&r.startsWith("//")&&(r=a+r),new URL(r,a)}var im;im=new WeakMap;function P9(e,t,a="/"){return lm(e,t,a,!1)}function lm(e,t,a,r){let n=typeof t=="string"?kt(t):t,o=Pe(n.pathname||"/",a);if(o==null)return null;let i=Ws(e);cm(i);let l=null;for(let s=0;l==null&&s<i.length;++s){let c=bm(o);l=vm(i[s],c,r)}return l}function sm(e,t){let{route:a,pathname:r,params:n}=e;return{id:a.id,pathname:r,params:n,data:t[a.id],handle:a.handle}}function Ws(e,t=[],a=[],r=""){let n=(o,i,l)=>{let s={relativePath:l===void 0?o.path||"":l,caseSensitive:o.caseSensitive===!0,childrenIndex:i,route:o};s.relativePath.startsWith("/")&&(_1(s.relativePath.startsWith(r),`Absolute route path "${s.relativePath}" nested under path "${r}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`),s.relativePath=s.relativePath.slice(r.length));let c=g3([r,s.relativePath]),f=a.concat(s);o.children&&o.children.length>0&&(_1(o.index!==!0,`Index routes must not have child routes. Please remove all child routes from route path "${c}".`),Ws(o.children,t,f,c)),!(o.path==null&&!o.index)&&t.push({path:c,score:gm(c,o.index),routesMeta:f})};return e.forEach((o,i)=>{if(o.path===""||!o.path?.includes("?"))n(o,i);else for(let l of ec(o.path))n(o,i,l)}),t}function ec(e){let t=e.split("/");if(t.length===0)return[];let[a,...r]=t,n=a.endsWith("?"),o=a.replace(/\?$/,"");if(r.length===0)return n?[o,""]:[o];let i=ec(r.join("/")),l=[];return l.push(...i.map(s=>s===""?o:[o,s].join("/"))),n&&l.push(...i),l.map(s=>e.startsWith("/")&&s===""?"/":s)}function cm(e){e.sort((t,a)=>t.score!==a.score?a.score-t.score:hm(t.routesMeta.map(r=>r.childrenIndex),a.routesMeta.map(r=>r.childrenIndex)))}var um=/^:[\w-]+$/,dm=3,fm=2,Cm=1,pm=10,mm=-2,Ks=e=>e==="*";function gm(e,t){let a=e.split("/"),r=a.length;return a.some(Ks)&&(r+=mm),t&&(r+=fm),a.filter(n=>!Ks(n)).reduce((n,o)=>n+(um.test(o)?dm:o===""?Cm:pm),r)}function hm(e,t){return e.length===t.length&&e.slice(0,-1).every((r,n)=>r===t[n])?e[e.length-1]-t[t.length-1]:0}function vm(e,t,a=!1){let{routesMeta:r}=e,n={},o="/",i=[];for(let l=0;l<r.length;++l){let s=r[l],c=l===r.length-1,f=o==="/"?t:t.slice(o.length)||"/",d=ta({path:s.relativePath,caseSensitive:s.caseSensitive,end:c},f),u=s.route;if(!d&&c&&a&&!r[r.length-1].route.index&&(d=ta({path:s.relativePath,caseSensitive:s.caseSensitive,end:!1},f)),!d)return null;Object.assign(n,d.params),i.push({params:n,pathname:g3([o,d.pathname]),pathnameBase:Sm(g3([o,d.pathnameBase])),route:u}),d.pathnameBase!=="/"&&(o=g3([o,d.pathnameBase]))}return i}function ta(e,t){typeof e=="string"&&(e={path:e,caseSensitive:!1,end:!0});let[a,r]=ym(e.path,e.caseSensitive,e.end),n=t.match(a);if(!n)return null;let o=n[0],i=o.replace(/(.)\/+$/,"$1"),l=n.slice(1);return{params:r.reduce((c,{paramName:f,isOptional:d},u)=>{if(f==="*"){let b=l[u]||"";i=o.slice(0,o.length-b.length).replace(/(.)\/+$/,"$1")}let m=l[u];return d&&!m?c[f]=void 0:c[f]=(m||"").replace(/%2F/g,"/"),c},{}),pathname:o,pathnameBase:i,pattern:e}}function ym(e,t=!1,a=!0){ce(e==="*"||!e.endsWith("*")||e.endsWith("/*"),`Route path "${e}" will be treated as if it were "${e.replace(/\*$/,"/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${e.replace(/\*$/,"/*")}".`);let r=[],n="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,(i,l,s)=>(r.push({paramName:l,isOptional:s!=null}),s?"/?([^\\/]+)?":"/([^\\/]+)"));return e.endsWith("*")?(r.push({paramName:"*"}),n+=e==="*"||e==="/*"?"(.*)$":"(?:\\/(.+)|\\/*)$"):a?n+="\\/*$":e!==""&&e!=="/"&&(n+="(?:(?=\\/|$))"),[new RegExp(n,t?void 0:"i"),r]}function bm(e){try{return e.split("/").map(t=>decodeURIComponent(t).replace(/\//g,"%2F")).join("/")}catch(t){return ce(!1,`The URL path "${e}" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${t}).`),e}}function Pe(e,t){if(t==="/")return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let a=t.endsWith("/")?t.length-1:t.length,r=e.charAt(a);return r&&r!=="/"?null:e.slice(a)||"/"}function tc(e,t="/"){let{pathname:a,search:r="",hash:n=""}=typeof e=="string"?kt(e):e;return{pathname:a?a.startsWith("/")?a:xm(a,t):t,search:Rm(r),hash:Em(n)}}function xm(e,t){let a=t.replace(/\/+$/,"").split("/");return e.split("/").forEach(n=>{n===".."?a.length>1&&a.pop():n!=="."&&a.push(n)}),a.length>1?a.join("/"):"/"}function A9(e,t,a,r){return`Cannot include a '${e}' character in a manually specified \`to.${t}\` field [${JSON.stringify(r)}].  Please separate it out to the \`to.${a}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`}function wm(e){return e.filter((t,a)=>a===0||t.route.path&&t.route.path.length>0)}function B9(e){let t=wm(e);return t.map((a,r)=>r===t.length-1?a.pathname:a.pathnameBase)}function G9(e,t,a,r=!1){let n;typeof e=="string"?n=kt(e):(n={...e},_1(!n.pathname||!n.pathname.includes("?"),A9("?","pathname","search",n)),_1(!n.pathname||!n.pathname.includes("#"),A9("#","pathname","hash",n)),_1(!n.search||!n.search.includes("#"),A9("#","search","hash",n)));let o=e===""||n.pathname==="",i=o?"/":n.pathname,l;if(i==null)l=a;else{let d=t.length-1;if(!r&&i.startsWith("..")){let u=i.split("/");for(;u[0]==="..";)u.shift(),d-=1;n.pathname=u.join("/")}l=d>=0?t[d]:"/"}let s=tc(n,l),c=i&&i!=="/"&&i.endsWith("/"),f=(o||i===".")&&a.endsWith("/");return!s.pathname.endsWith("/")&&(c||f)&&(s.pathname+="/"),s}var g3=e=>e.join("/").replace(/\/\/+/g,"/"),Sm=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),Rm=e=>!e||e==="?"?"":e.startsWith("?")?e:"?"+e,Em=e=>!e||e==="#"?"":e.startsWith("#")?e:"#"+e;function ac(e){return e!=null&&typeof e.status=="number"&&typeof e.statusText=="string"&&typeof e.internal=="boolean"&&"data"in e}var rc=["POST","PUT","PATCH","DELETE"],Fv=new Set(rc),Nm=["GET",...rc],Yv=new Set(Nm);var qv=Symbol("ResetLoaderData");var Lt=Be.createContext(null);Lt.displayName="DataRouter";var U0=Be.createContext(null);U0.displayName="DataRouterState";var V9=Be.createContext({isTransitioning:!1});V9.displayName="ViewTransition";var nc=Be.createContext(new Map);nc.displayName="Fetchers";var _m=Be.createContext(null);_m.displayName="Await";var D2=Be.createContext(null);D2.displayName="Navigation";var P0=Be.createContext(null);P0.displayName="Location";var ue=Be.createContext({outlet:null,matches:[],isDataRoute:!1});ue.displayName="Route";var j9=Be.createContext(null);j9.displayName="RouteError";var z9=!0;function oc(e,{relative:t}={}){_1(Mt(),"useHref() may be used only in the context of a <Router> component.");let{basename:a,navigator:r}=Y.useContext(D2),{hash:n,pathname:o,search:i}=B0(e,{relative:t}),l=o;return a!=="/"&&(l=o==="/"?a:g3([a,o])),r.createHref({pathname:l,search:i,hash:n})}function Mt(){return Y.useContext(P0)!=null}function be(){return _1(Mt(),"useLocation() may be used only in the context of a <Router> component."),Y.useContext(P0).location}var ic="You should call navigate() in a React.useEffect(), not when your component is first rendered.";function lc(e){Y.useContext(D2).static||Y.useLayoutEffect(e)}function R2(){let{isDataRoute:e}=Y.useContext(ue);return e?Um():Tm()}function Tm(){_1(Mt(),"useNavigate() may be used only in the context of a <Router> component.");let e=Y.useContext(Lt),{basename:t,navigator:a}=Y.useContext(D2),{matches:r}=Y.useContext(ue),{pathname:n}=be(),o=JSON.stringify(B9(r)),i=Y.useRef(!1);return lc(()=>{i.current=!0}),Y.useCallback((s,c={})=>{if(ce(i.current,ic),!i.current)return;if(typeof s=="number"){a.go(s);return}let f=G9(s,JSON.parse(o),n,c.relative==="path");e==null&&t!=="/"&&(f.pathname=f.pathname==="/"?t:g3([t,f.pathname])),(c.replace?a.replace:a.push)(f,c.state,c)},[t,a,o,n,e])}var $v=Y.createContext(null);function At(){let{matches:e}=Y.useContext(ue),t=e[e.length-1];return t?t.params:{}}function B0(e,{relative:t}={}){let{matches:a}=Y.useContext(ue),{pathname:r}=be(),n=JSON.stringify(B9(a));return Y.useMemo(()=>G9(e,JSON.parse(n),r,t==="path"),[e,n,r,t])}function sc(e,t){return cc(e,t)}function cc(e,t,a,r){_1(Mt(),"useRoutes() may be used only in the context of a <Router> component.");let{navigator:n}=Y.useContext(D2),{matches:o}=Y.useContext(ue),i=o[o.length-1],l=i?i.params:{},s=i?i.pathname:"/",c=i?i.pathnameBase:"/",f=i&&i.route;if(z9){let C=f&&f.path||"";fc(s,!f||C.endsWith("*")||C.endsWith("*?"),`You rendered descendant <Routes> (or called \`useRoutes()\`) at "${s}" (under <Route path="${C}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.

Please change the parent <Route path="${C}"> to <Route path="${C==="/"?"*":`${C}/*`}">.`)}let d=be(),u;if(t){let C=typeof t=="string"?kt(t):t;_1(c==="/"||C.pathname?.startsWith(c),`When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${c}" but pathname "${C.pathname}" was given in the \`location\` prop.`),u=C}else u=d;let m=u.pathname||"/",b=m;if(c!=="/"){let C=c.replace(/^\//,"").split("/");b="/"+m.replace(/^\//,"").split("/").slice(C.length).join("/")}let R=P9(e,{pathname:b});z9&&(ce(f||R!=null,`No routes matched location "${u.pathname}${u.search}${u.hash}" `),ce(R==null||R[R.length-1].route.element!==void 0||R[R.length-1].route.Component!==void 0||R[R.length-1].route.lazy!==void 0,`Matched leaf route at location "${u.pathname}${u.search}${u.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`));let S=Dm(R&&R.map(C=>Object.assign({},C,{params:Object.assign({},l,C.params),pathname:g3([c,n.encodeLocation?n.encodeLocation(C.pathname).pathname:C.pathname]),pathnameBase:C.pathnameBase==="/"?c:g3([c,n.encodeLocation?n.encodeLocation(C.pathnameBase).pathname:C.pathnameBase])})),o,a,r);return t&&S?Y.createElement(P0.Provider,{value:{location:{pathname:"/",search:"",hash:"",state:null,key:"default",...u},navigationType:"POP"}},S):S}function km(){let e=dc(),t=ac(e)?`${e.status} ${e.statusText}`:e instanceof Error?e.message:JSON.stringify(e),a=e instanceof Error?e.stack:null,r="rgba(200,200,200, 0.5)",n={padding:"0.5rem",backgroundColor:r},o={padding:"2px 4px",backgroundColor:r},i=null;return z9&&(console.error("Error handled by React Router default ErrorBoundary:",e),i=Y.createElement(Y.Fragment,null,Y.createElement("p",null,"\u{1F4BF} Hey developer \u{1F44B}"),Y.createElement("p",null,"You can provide a way better UX than this when your app throws errors by providing your own ",Y.createElement("code",{style:o},"ErrorBoundary")," or"," ",Y.createElement("code",{style:o},"errorElement")," prop on your route."))),Y.createElement(Y.Fragment,null,Y.createElement("h2",null,"Unexpected Application Error!"),Y.createElement("h3",{style:{fontStyle:"italic"}},t),a?Y.createElement("pre",{style:n},a):null,i)}var Lm=Y.createElement(km,null),Mm=class extends Y.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||t.revalidation!=="idle"&&e.revalidation==="idle"?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:e.error!==void 0?e.error:t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return this.state.error!==void 0?Y.createElement(ue.Provider,{value:this.props.routeContext},Y.createElement(j9.Provider,{value:this.state.error,children:this.props.component})):this.props.children}};function Am({routeContext:e,match:t,children:a}){let r=Y.useContext(Lt);return r&&r.static&&r.staticContext&&(t.route.errorElement||t.route.ErrorBoundary)&&(r.staticContext._deepestRenderedBoundaryId=t.route.id),Y.createElement(ue.Provider,{value:e},a)}function Dm(e,t=[],a=null,r=null){if(e==null){if(!a)return null;if(a.errors)e=a.matches;else if(t.length===0&&!a.initialized&&a.matches.length>0)e=a.matches;else return null}let n=e,o=a?.errors;if(o!=null){let s=n.findIndex(c=>c.route.id&&o?.[c.route.id]!==void 0);_1(s>=0,`Could not find a matching route for errors on route IDs: ${Object.keys(o).join(",")}`),n=n.slice(0,Math.min(n.length,s+1))}let i=!1,l=-1;if(a)for(let s=0;s<n.length;s++){let c=n[s];if((c.route.HydrateFallback||c.route.hydrateFallbackElement)&&(l=s),c.route.id){let{loaderData:f,errors:d}=a,u=c.route.loader&&!f.hasOwnProperty(c.route.id)&&(!d||d[c.route.id]===void 0);if(c.route.lazy||u){i=!0,l>=0?n=n.slice(0,l+1):n=[n[0]];break}}}return n.reduceRight((s,c,f)=>{let d,u=!1,m=null,b=null;a&&(d=o&&c.route.id?o[c.route.id]:void 0,m=c.route.errorElement||Lm,i&&(l<0&&f===0?(fc("route-fallback",!1,"No `HydrateFallback` element provided to render during initial hydration"),u=!0,b=null):l===f&&(u=!0,b=c.route.hydrateFallbackElement||null)));let R=t.concat(n.slice(0,f+1)),S=()=>{let C;return d?C=m:u?C=b:c.route.Component?C=Y.createElement(c.route.Component,null):c.route.element?C=c.route.element:C=s,Y.createElement(Am,{match:c,routeContext:{outlet:s,matches:R,isDataRoute:a!=null},children:C})};return a&&(c.route.ErrorBoundary||c.route.errorElement||f===0)?Y.createElement(Mm,{location:a.location,revalidation:a.revalidation,component:m,error:d,children:S(),routeContext:{outlet:null,matches:R,isDataRoute:!0}}):S()},null)}function F9(e){return`${e} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`}function Om(e){let t=Y.useContext(Lt);return _1(t,F9(e)),t}function Y9(e){let t=Y.useContext(U0);return _1(t,F9(e)),t}function zm(e){let t=Y.useContext(ue);return _1(t,F9(e)),t}function q9(e){let t=zm(e),a=t.matches[t.matches.length-1];return _1(a.route.id,`${e} can only be used on routes that contain a unique "id"`),a.route.id}function Hm(){return q9("useRouteId")}function uc(){return Y9("useNavigation").navigation}function $9(){let{matches:e,loaderData:t}=Y9("useMatches");return Y.useMemo(()=>e.map(a=>sm(a,t)),[e,t])}function dc(){let e=Y.useContext(j9),t=Y9("useRouteError"),a=q9("useRouteError");return e!==void 0?e:t.errors?.[a]}function Um(){let{router:e}=Om("useNavigate"),t=q9("useNavigate"),a=Y.useRef(!1);return lc(()=>{a.current=!0}),Y.useCallback(async(n,o={})=>{ce(a.current,ic),a.current&&(typeof n=="number"?e.navigate(n):await e.navigate(n,{fromRouteId:t,...o}))},[e,t])}var Qs={};function fc(e,t,a){!t&&!Qs[e]&&(Qs[e]=!0,ce(!1,a))}var Iv=L1.memo(Pm);function Pm({routes:e,future:t,state:a}){return cc(e,void 0,a,t)}function G0({to:e,replace:t,state:a,relative:r}){_1(Mt(),"<Navigate> may be used only in the context of a <Router> component.");let{static:n}=L1.useContext(D2);ce(!n,"<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.");let{matches:o}=L1.useContext(ue),{pathname:i}=be(),l=R2(),s=G9(e,B9(o),i,r==="path"),c=JSON.stringify(s);return L1.useEffect(()=>{l(JSON.parse(c),{replace:t,state:a,relative:r})},[l,c,r,t,a]),null}function h3(e){_1(!1,"A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.")}function I9({basename:e="/",children:t=null,location:a,navigationType:r="POP",navigator:n,static:o=!1}){_1(!Mt(),"You cannot render a <Router> inside another <Router>. You should never have more than one in your app.");let i=e.replace(/^\/*/,"/"),l=L1.useMemo(()=>({basename:i,navigator:n,static:o,future:{}}),[i,n,o]);typeof a=="string"&&(a=kt(a));let{pathname:s="/",search:c="",hash:f="",state:d=null,key:u="default"}=a,m=L1.useMemo(()=>{let b=Pe(s,i);return b==null?null:{location:{pathname:b,search:c,hash:f,state:d,key:u},navigationType:r}},[i,s,c,f,d,u,r]);return ce(m!=null,`<Router basename="${i}"> is not able to match the URL "${s}${c}${f}" because it does not start with the basename, so the <Router> won't render anything.`),m==null?null:L1.createElement(D2.Provider,{value:l},L1.createElement(P0.Provider,{children:t,value:m}))}function X9({children:e,location:t}){return sc(s4(e),t)}function s4(e,t=[]){let a=[];return L1.Children.forEach(e,(r,n)=>{if(!L1.isValidElement(r))return;let o=[...t,n];if(r.type===L1.Fragment){a.push.apply(a,s4(r.props.children,o));return}_1(r.type===h3,`[${typeof r.type=="string"?r.type:r.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`),_1(!r.props.index||!r.props.children,"An index route cannot have child routes.");let i={id:r.props.id||o.join("-"),caseSensitive:r.props.caseSensitive,element:r.props.element,Component:r.props.Component,index:r.props.index,path:r.props.path,loader:r.props.loader,action:r.props.action,hydrateFallbackElement:r.props.hydrateFallbackElement,HydrateFallback:r.props.HydrateFallback,errorElement:r.props.errorElement,ErrorBoundary:r.props.ErrorBoundary,hasErrorBoundary:r.props.hasErrorBoundary===!0||r.props.ErrorBoundary!=null||r.props.errorElement!=null,shouldRevalidate:r.props.shouldRevalidate,handle:r.props.handle,lazy:r.props.lazy};r.props.children&&(i.children=s4(r.props.children,o)),a.push(i)}),a}var i4="get",l4="application/x-www-form-urlencoded";function c4(e){return e!=null&&typeof e.tagName=="string"}function Bm(e){return c4(e)&&e.tagName.toLowerCase()==="button"}function Gm(e){return c4(e)&&e.tagName.toLowerCase()==="form"}function Vm(e){return c4(e)&&e.tagName.toLowerCase()==="input"}function jm(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}function Fm(e,t){return e.button===0&&(!t||t==="_self")&&!jm(e)}var n4=null;function Ym(){if(n4===null)try{new FormData(document.createElement("form"),0),n4=!1}catch{n4=!0}return n4}var qm=new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);function D9(e){return e!=null&&!qm.has(e)?(ce(!1,`"${e}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${l4}"`),null):e}function $m(e,t){let a,r,n,o,i;if(Gm(e)){let l=e.getAttribute("action");r=l?Pe(l,t):null,a=e.getAttribute("method")||i4,n=D9(e.getAttribute("enctype"))||l4,o=new FormData(e)}else if(Bm(e)||Vm(e)&&(e.type==="submit"||e.type==="image")){let l=e.form;if(l==null)throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');let s=e.getAttribute("formaction")||l.getAttribute("action");if(r=s?Pe(s,t):null,a=e.getAttribute("formmethod")||l.getAttribute("method")||i4,n=D9(e.getAttribute("formenctype"))||D9(l.getAttribute("enctype"))||l4,o=new FormData(l,e),!Ym()){let{name:c,type:f,value:d}=e;if(f==="image"){let u=c?`${c}.`:"";o.append(`${u}x`,"0"),o.append(`${u}y`,"0")}else c&&o.append(c,d)}}else{if(c4(e))throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');a=i4,r=null,n=l4,i=e}return o&&n==="text/plain"&&(i=o,o=void 0),{action:r,method:a.toLowerCase(),encType:n,formData:o,body:i}}function K9(e,t){if(e===!1||e===null||typeof e>"u")throw new Error(t)}async function Im(e,t){if(e.id in t)return t[e.id];try{let a=await import(e.module);return t[e.id]=a,a}catch(a){if(console.error(`Error loading route module \`${e.module}\`, reloading page...`),console.error(a),window.__reactRouterContext&&window.__reactRouterContext.isSpaMode&&gg.hot)throw a;return window.location.reload(),new Promise(()=>{})}}function Xm(e){return e!=null&&typeof e.page=="string"}function Km(e){return e==null?!1:e.href==null?e.rel==="preload"&&typeof e.imageSrcSet=="string"&&typeof e.imageSizes=="string":typeof e.rel=="string"&&typeof e.href=="string"}async function Qm(e,t,a){let r=await Promise.all(e.map(async n=>{let o=t.routes[n.route.id];if(o){let i=await Im(o,a);return i.links?i.links():[]}return[]}));return eg(r.flat(1).filter(Km).filter(n=>n.rel==="stylesheet"||n.rel==="preload").map(n=>n.rel==="stylesheet"?{...n,rel:"prefetch",as:"style"}:{...n,rel:"prefetch"}))}function Zs(e,t,a,r,n,o){let i=(s,c)=>a[c]?s.route.id!==a[c].route.id:!0,l=(s,c)=>a[c].pathname!==s.pathname||a[c].route.path?.endsWith("*")&&a[c].params["*"]!==s.params["*"];return o==="assets"?t.filter((s,c)=>i(s,c)||l(s,c)):o==="data"?t.filter((s,c)=>{let f=r.routes[s.route.id];if(!f||!f.hasLoader)return!1;if(i(s,c)||l(s,c))return!0;if(s.route.shouldRevalidate){let d=s.route.shouldRevalidate({currentUrl:new URL(n.pathname+n.search+n.hash,window.origin),currentParams:a[0]?.params||{},nextUrl:new URL(e,window.origin),nextParams:s.params,defaultShouldRevalidate:!0});if(typeof d=="boolean")return d}return!0}):[]}function Zm(e,t,{includeHydrateFallback:a}={}){return Jm(e.map(r=>{let n=t.routes[r.route.id];if(!n)return[];let o=[n.module];return n.clientActionModule&&(o=o.concat(n.clientActionModule)),n.clientLoaderModule&&(o=o.concat(n.clientLoaderModule)),a&&n.hydrateFallbackModule&&(o=o.concat(n.hydrateFallbackModule)),n.imports&&(o=o.concat(n.imports)),o}).flat(1))}function Jm(e){return[...new Set(e)]}function Wm(e){let t={},a=Object.keys(e).sort();for(let r of a)t[r]=e[r];return t}function eg(e,t){let a=new Set,r=new Set(t);return e.reduce((n,o)=>{if(t&&!Xm(o)&&o.as==="script"&&o.href&&r.has(o.href))return n;let l=JSON.stringify(Wm(o));return a.has(l)||(a.add(l),n.push({key:l,link:o})),n},[])}var Xv=Object.getOwnPropertyNames(Object.prototype).sort().join("\0");var tg=Symbol("SingleFetchRedirect");var ag=new Set([100,101,204,205]);function rg(e,t){let a=typeof e=="string"?new URL(e,typeof window>"u"?"server://singlefetch/":window.location.origin):e;return a.pathname==="/"?a.pathname="_root.data":t&&Pe(a.pathname,t)==="/"?a.pathname=`${t.replace(/\/$/,"")}/_root.data`:a.pathname=`${a.pathname.replace(/\/$/,"")}.data`,a}function pc(){let e=d1.useContext(Lt);return K9(e,"You must render this element inside a <DataRouterContext.Provider> element"),e}function lg(){let e=d1.useContext(U0);return K9(e,"You must render this element inside a <DataRouterStateContext.Provider> element"),e}var aa=d1.createContext(void 0);aa.displayName="FrameworkContext";function mc(){let e=d1.useContext(aa);return K9(e,"You must render this element inside a <HydratedRouter> element"),e}function sg(e,t){let a=d1.useContext(aa),[r,n]=d1.useState(!1),[o,i]=d1.useState(!1),{onFocus:l,onBlur:s,onMouseEnter:c,onMouseLeave:f,onTouchStart:d}=t,u=d1.useRef(null);d1.useEffect(()=>{if(e==="render"&&i(!0),e==="viewport"){let R=C=>{C.forEach(p=>{i(p.isIntersecting)})},S=new IntersectionObserver(R,{threshold:.5});return u.current&&S.observe(u.current),()=>{S.disconnect()}}},[e]),d1.useEffect(()=>{if(r){let R=setTimeout(()=>{i(!0)},100);return()=>{clearTimeout(R)}}},[r]);let m=()=>{n(!0)},b=()=>{n(!1),i(!1)};return a?e!=="intent"?[o,u,{}]:[o,u,{onFocus:ea(l,m),onBlur:ea(s,b),onMouseEnter:ea(c,m),onMouseLeave:ea(f,b),onTouchStart:ea(d,m)}]:[!1,u,{}]}function ea(e,t){return a=>{e&&e(a),a.defaultPrevented||t(a)}}function gc({page:e,...t}){let{router:a}=pc(),r=d1.useMemo(()=>P9(a.routes,e,a.basename),[a.routes,e,a.basename]);return r?d1.createElement(ug,{page:e,matches:r,...t}):null}function cg(e){let{manifest:t,routeModules:a}=mc(),[r,n]=d1.useState([]);return d1.useEffect(()=>{let o=!1;return Qm(e,t,a).then(i=>{o||n(i)}),()=>{o=!0}},[e,t,a]),r}function ug({page:e,matches:t,...a}){let r=be(),{manifest:n,routeModules:o}=mc(),{basename:i}=pc(),{loaderData:l,matches:s}=lg(),c=d1.useMemo(()=>Zs(e,t,s,n,r,"data"),[e,t,s,n,r]),f=d1.useMemo(()=>Zs(e,t,s,n,r,"assets"),[e,t,s,n,r]),d=d1.useMemo(()=>{if(e===r.pathname+r.search+r.hash)return[];let b=new Set,R=!1;if(t.forEach(C=>{let p=n.routes[C.route.id];!p||!p.hasLoader||(!c.some(g=>g.route.id===C.route.id)&&C.route.id in l&&o[C.route.id]?.shouldRevalidate||p.hasClientLoader?R=!0:b.add(C.route.id))}),b.size===0)return[];let S=rg(e,i);return R&&b.size>0&&S.searchParams.set("_routes",t.filter(C=>b.has(C.route.id)).map(C=>C.route.id).join(",")),[S.pathname+S.search]},[i,l,r,n,c,t,e,o]),u=d1.useMemo(()=>Zm(f,n),[f,n]),m=cg(f);return d1.createElement(d1.Fragment,null,d.map(b=>d1.createElement("link",{key:b,rel:"prefetch",as:"fetch",href:b,...a})),u.map(b=>d1.createElement("link",{key:b,rel:"modulepreload",href:b,...a})),m.map(({key:b,link:R})=>d1.createElement("link",{key:b,...R})))}function dg(...e){return t=>{e.forEach(a=>{typeof a=="function"?a(t):a!=null&&(a.current=t)})}}var hc=typeof window<"u"&&typeof window.document<"u"&&typeof window.document.createElement<"u";try{hc&&(window.__reactRouterVersion="7.6.2")}catch{}function Z9({basename:e,children:t,window:a}){let r=I.useRef();r.current==null&&(r.current=Js({window:a,v5Compat:!0}));let n=r.current,[o,i]=I.useState({action:n.action,location:n.location}),l=I.useCallback(s=>{I.startTransition(()=>i(s))},[i]);return I.useLayoutEffect(()=>n.listen(l),[n,l]),I.createElement(I9,{basename:e,children:t,location:o.location,navigationType:o.action,navigator:n})}function vc({basename:e,children:t,history:a}){let[r,n]=I.useState({action:a.action,location:a.location}),o=I.useCallback(i=>{I.startTransition(()=>n(i))},[n]);return I.useLayoutEffect(()=>a.listen(o),[a,o]),I.createElement(I9,{basename:e,children:t,location:r.location,navigationType:r.action,navigator:a})}vc.displayName="unstable_HistoryRouter";var yc=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,J9=I.forwardRef(function({onClick:t,discover:a="render",prefetch:r="none",relative:n,reloadDocument:o,replace:i,state:l,target:s,to:c,preventScrollReset:f,viewTransition:d,...u},m){let{basename:b}=I.useContext(D2),R=typeof c=="string"&&yc.test(c),S,C=!1;if(typeof c=="string"&&R&&(S=c,hc))try{let V=new URL(window.location.href),B=c.startsWith("//")?new URL(V.protocol+c):new URL(c),G=Pe(B.pathname,b);B.origin===V.origin&&G!=null?c=G+B.search+B.hash:C=!0}catch{ce(!1,`<Link to="${c}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`)}let p=oc(c,{relative:n}),[g,h,w]=sg(r,u),_=Rc(c,{replace:i,state:l,target:s,preventScrollReset:f,relative:n,viewTransition:d});function N(V){t&&t(V),V.defaultPrevented||_(V)}let M=I.createElement("a",{...u,...w,href:S||p,onClick:C||o?t:N,ref:dg(m,h),target:s,"data-discover":!R&&a==="render"?"true":void 0});return g&&!R?I.createElement(I.Fragment,null,M,I.createElement(gc,{page:p})):M});J9.displayName="Link";var bc=I.forwardRef(function({"aria-current":t="page",caseSensitive:a=!1,className:r="",end:n=!1,style:o,to:i,viewTransition:l,children:s,...c},f){let d=B0(i,{relative:c.relative}),u=be(),m=I.useContext(U0),{navigator:b,basename:R}=I.useContext(D2),S=m!=null&&Tc(d)&&l===!0,C=b.encodeLocation?b.encodeLocation(d).pathname:d.pathname,p=u.pathname,g=m&&m.navigation&&m.navigation.location?m.navigation.location.pathname:null;a||(p=p.toLowerCase(),g=g?g.toLowerCase():null,C=C.toLowerCase()),g&&R&&(g=Pe(g,R)||g);let h=C!=="/"&&C.endsWith("/")?C.length-1:C.length,w=p===C||!n&&p.startsWith(C)&&p.charAt(h)==="/",_=g!=null&&(g===C||!n&&g.startsWith(C)&&g.charAt(C.length)==="/"),N={isActive:w,isPending:_,isTransitioning:S},M=w?t:void 0,V;typeof r=="function"?V=r(N):V=[r,w?"active":null,_?"pending":null,S?"transitioning":null].filter(Boolean).join(" ");let B=typeof o=="function"?o(N):o;return I.createElement(J9,{...c,"aria-current":M,className:V,ref:f,style:B,to:i,viewTransition:l},typeof s=="function"?s(N):s)});bc.displayName="NavLink";var xc=I.forwardRef(({discover:e="render",fetcherKey:t,navigate:a,reloadDocument:r,replace:n,state:o,method:i=i4,action:l,onSubmit:s,relative:c,preventScrollReset:f,viewTransition:d,...u},m)=>{let b=Ec(),R=Nc(l,{relative:c}),S=i.toLowerCase()==="get"?"get":"post",C=typeof l=="string"&&yc.test(l);return I.createElement("form",{ref:m,method:S,action:R,onSubmit:r?s:g=>{if(s&&s(g),g.defaultPrevented)return;g.preventDefault();let h=g.nativeEvent.submitter,w=h?.getAttribute("formmethod")||i;b(h||g.currentTarget,{fetcherKey:t,method:w,navigate:a,replace:n,state:o,relative:c,preventScrollReset:f,viewTransition:d})},...u,"data-discover":!C&&e==="render"?"true":void 0})});xc.displayName="Form";function wc({getKey:e,storageKey:t,...a}){let r=I.useContext(aa),{basename:n}=I.useContext(D2),o=be(),i=$9();_c({getKey:e,storageKey:t});let l=I.useMemo(()=>{if(!r||!e)return null;let c=U9(o,i,n,e);return c!==o.key?c:null},[]);if(!r||r.isSpaMode)return null;let s=((c,f)=>{if(!window.history.state||!window.history.state.key){let d=Math.random().toString(32).slice(2);window.history.replaceState({key:d},"")}try{let u=JSON.parse(sessionStorage.getItem(c)||"{}")[f||window.history.state.key];typeof u=="number"&&window.scrollTo(0,u)}catch(d){console.error(d),sessionStorage.removeItem(c)}}).toString();return I.createElement("script",{...a,suppressHydrationWarning:!0,dangerouslySetInnerHTML:{__html:`(${s})(${JSON.stringify(t||H9)}, ${JSON.stringify(l)})`}})}wc.displayName="ScrollRestoration";function Sc(e){return`${e} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`}function W9(e){let t=I.useContext(Lt);return _1(t,Sc(e)),t}function fg(e){let t=I.useContext(U0);return _1(t,Sc(e)),t}function Rc(e,{target:t,replace:a,state:r,preventScrollReset:n,relative:o,viewTransition:i}={}){let l=R2(),s=be(),c=B0(e,{relative:o});return I.useCallback(f=>{if(Fm(f,t)){f.preventDefault();let d=a!==void 0?a:H0(s)===H0(c);l(e,{replace:d,state:r,preventScrollReset:n,relative:o,viewTransition:i})}},[s,l,c,a,r,t,e,n,o,i])}var Cg=0,pg=()=>`__${String(++Cg)}__`;function Ec(){let{router:e}=W9("useSubmit"),{basename:t}=I.useContext(D2),a=Hm();return I.useCallback(async(r,n={})=>{let{action:o,method:i,encType:l,formData:s,body:c}=$m(r,t);if(n.navigate===!1){let f=n.fetcherKey||pg();await e.fetch(f,a,n.action||o,{preventScrollReset:n.preventScrollReset,formData:s,body:c,formMethod:n.method||i,formEncType:n.encType||l,flushSync:n.flushSync})}else await e.navigate(n.action||o,{preventScrollReset:n.preventScrollReset,formData:s,body:c,formMethod:n.method||i,formEncType:n.encType||l,replace:n.replace,state:n.state,fromRouteId:a,flushSync:n.flushSync,viewTransition:n.viewTransition})},[e,t,a])}function Nc(e,{relative:t}={}){let{basename:a}=I.useContext(D2),r=I.useContext(ue);_1(r,"useFormAction must be used inside a RouteContext");let[n]=r.matches.slice(-1),o={...B0(e||".",{relative:t})},i=be();if(e==null){o.search=i.search;let l=new URLSearchParams(o.search),s=l.getAll("index");if(s.some(f=>f==="")){l.delete("index"),s.filter(d=>d).forEach(d=>l.append("index",d));let f=l.toString();o.search=f?`?${f}`:""}}return(!e||e===".")&&n.route.index&&(o.search=o.search?o.search.replace(/^\?/,"?index&"):"?index"),a!=="/"&&(o.pathname=o.pathname==="/"?a:g3([a,o.pathname])),H0(o)}var H9="react-router-scroll-positions",o4={};function U9(e,t,a,r){let n=null;return r&&(a!=="/"?n=r({...e,pathname:Pe(e.pathname,a)||e.pathname},t):n=r(e,t)),n==null&&(n=e.key),n}function _c({getKey:e,storageKey:t}={}){let{router:a}=W9("useScrollRestoration"),{restoreScrollPosition:r,preventScrollReset:n}=fg("useScrollRestoration"),{basename:o}=I.useContext(D2),i=be(),l=$9(),s=uc();I.useEffect(()=>(window.history.scrollRestoration="manual",()=>{window.history.scrollRestoration="auto"}),[]),mg(I.useCallback(()=>{if(s.state==="idle"){let c=U9(i,l,o,e);o4[c]=window.scrollY}try{sessionStorage.setItem(t||H9,JSON.stringify(o4))}catch(c){ce(!1,`Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${c}).`)}window.history.scrollRestoration="auto"},[s.state,e,o,i,l,t])),typeof document<"u"&&(I.useLayoutEffect(()=>{try{let c=sessionStorage.getItem(t||H9);c&&(o4=JSON.parse(c))}catch{}},[t]),I.useLayoutEffect(()=>{let c=a?.enableScrollRestoration(o4,()=>window.scrollY,e?(f,d)=>U9(f,d,o,e):void 0);return()=>c&&c()},[a,o,e]),I.useLayoutEffect(()=>{if(r!==!1){if(typeof r=="number"){window.scrollTo(0,r);return}if(i.hash){let c=document.getElementById(decodeURIComponent(i.hash.slice(1)));if(c){c.scrollIntoView();return}}n!==!0&&window.scrollTo(0,0)}},[i,r,n]))}function mg(e,t){let{capture:a}=t||{};I.useEffect(()=>{let r=a!=null?{capture:a}:void 0;return window.addEventListener("pagehide",e,r),()=>{window.removeEventListener("pagehide",e,r)}},[e,a])}function Tc(e,t={}){let a=I.useContext(V9);_1(a!=null,"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?");let{basename:r}=W9("useViewTransitionState"),n=B0(e,{relative:t.relative});if(!a.isTransitioning)return!1;let o=Pe(a.currentLocation.pathname,r)||a.currentLocation.pathname,i=Pe(a.nextLocation.pathname,r)||a.nextLocation.pathname;return ta(n.pathname,i)!=null||ta(n.pathname,o)!=null}var Kv=new Set([...ag,304]);var O2=x(z(),1),Uc=x(L(),1),zc=(0,O2.createContext)(null),de=()=>{let e=(0,O2.useContext)(zc);if(!e)throw new Error("useApp must be used within an AppProvider");return e},Hc=({children:e})=>{let[t,a]=(0,O2.useState)("start"),[r,n]=(0,O2.useState)(""),[o,i]=(0,O2.useState)(null),[l,s]=(0,O2.useState)(!1),[c,f]=(0,O2.useState)(null);(0,O2.useEffect)(()=>{let _=localStorage.getItem("playerName");_&&n(_);let N=localStorage.getItem("currentRoomId");N&&i(N)},[]),(0,O2.useEffect)(()=>{r?localStorage.setItem("playerName",r):localStorage.removeItem("playerName")},[r]),(0,O2.useEffect)(()=>{o?localStorage.setItem("currentRoomId",o):localStorage.removeItem("currentRoomId")},[o]);let d=async(_,N={})=>{s(!0),f(null);try{switch(_){case"start":i(null);break;case"lobby":if(!r)throw new Error("Player name required for lobby");break;case"room":if(!r||!N.roomId)throw new Error("Player name and room ID required for room");i(N.roomId);break;case"game":if(!r||!o)throw new Error("Player name and room ID required for game");break;default:throw new Error(`Unknown scene: ${_}`)}a(_)}catch(M){console.error("Scene navigation failed:",M),f(M)}finally{s(!1)}},w={currentScene:t,playerName:r,currentRoomId:o,isTransitioning:l,appError:c,navigateToScene:d,goToStart:()=>d("start"),goToLobby:()=>d("lobby"),goToRoom:_=>d("room",{roomId:_}),goToGame:()=>d("game"),updatePlayerName:_=>{let N=_.trim();if(N.length<2)throw new Error("Player name must be at least 2 characters");if(N.length>20)throw new Error("Player name must be less than 20 characters");n(N)},joinRoom:async _=>{if(!r)throw new Error("Player name required to join room");await d("room",{roomId:_})},leaveRoom:()=>{i(null),d("lobby")},clearError:()=>{f(null)},canNavigateToScene:_=>{switch(_){case"start":return!0;case"lobby":return!!r;case"room":return!!r&&!!o;case"game":return!!r&&!!o;default:return!1}}};return(0,Uc.jsx)(zc.Provider,{value:w,children:e})};var v3=x(z(),1);var I1={HEARTBEAT_INTERVAL:3e4,CONNECTION_TIMEOUT:1e4,RECOVERY_TIMEOUT:6e4,ERROR_WINDOW_MS:3e5,DEALING_ANIMATION_DURATION:3500,TURN_FLIP_DELAY:800,TURN_RESULTS_REVEAL_DELAY:200,PLAYER_ANIMATION_STAGGER:100,CREATE_ROOM_DELAY:100,REFRESH_ANIMATION_DURATION:1e3,CHECKMARK_DISPLAY_DURATION:500,DEFAULT_COUNTDOWN_DURATION:5},ra={MAX_PLAYERS:4,MAX_RECONNECT_ATTEMPTS:10,MESSAGE_QUEUE_LIMIT:1e3,EVENT_BUFFER_SIZE:1e3},t8={RECONNECT_BACKOFF:[1e3,2e3,4e3,8e3,16e3],get WEBSOCKET_BASE_URL(){if(typeof window<"u"){let e=window.location.protocol==="https:"?"wss:":"ws:",t=window.location.host;return`${e}//${t}/ws`}return"ws://localhost:5050/ws"}};var d4=class e extends EventTarget{constructor(){super();this.connections=new Map;this.messageQueues=new Map;this.sequenceNumbers=new Map;this.heartbeatTimers=new Map;this.reconnectStates=new Map;this.isDestroyed=!1;if(e.instance)throw new Error("NetworkService is a singleton. Use NetworkService.getInstance()");this.config={baseUrl:t8.WEBSOCKET_BASE_URL,heartbeatInterval:I1.HEARTBEAT_INTERVAL,maxReconnectAttempts:ra.MAX_RECONNECT_ATTEMPTS,reconnectBackoff:[...t8.RECONNECT_BACKOFF],messageQueueLimit:ra.MESSAGE_QUEUE_LIMIT,connectionTimeout:I1.CONNECTION_TIMEOUT}}static{this.instance=null}static getInstance(){return e.instance||(e.instance=new e),e.instance}async connectToRoom(a,r){if(this.isDestroyed)throw new Error("NetworkService has been destroyed");if(!a)throw new Error("Room ID is required");this.connections.has(a)&&await this.disconnectFromRoom(a);let n=`${this.config.baseUrl}/${a}`;try{let o=await this.createConnection(n,a);this.connections.set(a,{websocket:o,roomId:a,url:n,status:"connected",connectedAt:Date.now(),messagesSent:0,messagesReceived:0,lastActivity:Date.now(),latency:null,playerName:r?.playerName}),this.messageQueues.set(a,[]),this.sequenceNumbers.set(a,0),this.reconnectStates.set(a,{attempts:0,isReconnecting:!1,abortController:null}),this.startHeartbeat(a);let i=this.connections.get(a);return this.send(a,"client_ready",{room_id:a,player_name:i?.playerName,is_reconnection:i?.isReconnection||!1}),this.processQueuedMessages(a),i&&(i.isReconnection=!1),this.dispatchEvent(new CustomEvent("connected",{detail:{roomId:a,url:n,timestamp:Date.now()}})),console.log(`\u{1F310} NetworkService: Connected to room ${a}`),o}catch(o){let i=o instanceof Error?o.message:"Unknown error";throw this.dispatchEvent(new CustomEvent("connectionFailed",{detail:{roomId:a,timestamp:Date.now()}})),new Error(`Failed to connect to ${a}: ${i}`)}}async disconnectFromRoom(a,r=!0){let n=this.connections.get(a);n&&(this.stopReconnection(a),this.stopHeartbeat(a),n.websocket&&n.websocket.close(1e3,"Client disconnect"),this.connections.delete(a),r&&(this.messageQueues.delete(a),this.sequenceNumbers.delete(a)),this.reconnectStates.delete(a),this.dispatchEvent(new CustomEvent("disconnected",{detail:{roomId:a,intentional:r,timestamp:Date.now()}})),console.log(`\u{1F310} NetworkService: Disconnected from room ${a}`))}send(a,r,n={}){if(this.isDestroyed)return console.warn("Cannot send message: NetworkService destroyed"),!1;let o=this.getNextSequenceNumber(a),i={event:r,data:n,sequence:o,timestamp:Date.now(),id:crypto.randomUUID()},l=this.connections.get(a);if(l?.websocket?.readyState===WebSocket.OPEN)try{return l.websocket.send(JSON.stringify(i)),l.messagesSent++,l.lastActivity=Date.now(),this.dispatchEvent(new CustomEvent("messageSent",{detail:{roomId:a,message:i,timestamp:Date.now()}})),!0}catch(s){return console.error(`Failed to send message to ${a}:`,s),this.queueMessage(a,i),!1}else return this.queueMessage(a,i),console.log(`\u{1F4E4} Queued message for ${a}: ${r} (${this.getQueueSize(a)} queued)`),!1}getConnectionStatus(a){let r=this.connections.get(a),n=this.reconnectStates.get(a),o=this.getQueueSize(a);return r?{roomId:a,status:r.status,connected:r.websocket?.readyState===WebSocket.OPEN,connectedAt:r.connectedAt,uptime:Date.now()-r.connectedAt,messagesSent:r.messagesSent,messagesReceived:r.messagesReceived,lastActivity:r.lastActivity,latency:r.latency,queueSize:o,reconnecting:n?.isReconnecting||!1,reconnectAttempts:n?.attempts||0}:{roomId:a,status:"disconnected",connected:!1,queueSize:o,reconnecting:n?.isReconnecting||!1}}getStatus(){let a={};for(let r of this.connections.keys())a[r]=this.getConnectionStatus(r);return{isDestroyed:this.isDestroyed,activeConnections:this.connections.size,totalQueuedMessages:Array.from(this.messageQueues.values()).reduce((r,n)=>r+n.length,0),rooms:a}}destroy(){this.isDestroyed=!0;let a=Array.from(this.connections.keys());for(let r of a)this.disconnectFromRoom(r,!0);this.connections.clear(),this.messageQueues.clear(),this.sequenceNumbers.clear(),this.heartbeatTimers.clear(),this.reconnectStates.clear(),e.instance=null,console.log("\u{1F310} NetworkService: Destroyed")}async createConnection(a,r){return new Promise((n,o)=>{let i=new WebSocket(a),l=setTimeout(()=>{i.close(),o(new Error(`Connection timeout to ${a}`))},this.config.connectionTimeout);i.onopen=()=>{clearTimeout(l),this.handleConnectionOpen(r),n(i)},i.onmessage=s=>{this.handleConnectionMessage(s,r)},i.onclose=s=>{clearTimeout(l),this.handleConnectionClose(s,r)},i.onerror=()=>{clearTimeout(l),this.handleConnectionError(r),o(new Error(`WebSocket connection failed to ${a}`))}})}handleConnectionOpen(a){console.log(`\u{1F517} Connection opened to room ${a}`)}handleConnectionMessage(a,r){let n=this.connections.get(r);if(n)try{let o=JSON.parse(a.data);if(n.messagesReceived++,n.lastActivity=Date.now(),o.event==="pong"&&o.data?.timestamp){n.latency=Date.now()-o.data.timestamp;return}this.dispatchEvent(new CustomEvent(o.event,{detail:{roomId:r,data:o.data,message:o,timestamp:Date.now()}})),this.dispatchEvent(new CustomEvent("message",{detail:{roomId:r,message:o,timestamp:Date.now()}}))}catch(o){console.error(`Failed to parse message from ${r}:`,o),this.dispatchEvent(new CustomEvent("messageError",{detail:{roomId:r,error:o instanceof Error?o.message:"Parse error",timestamp:Date.now()}}))}}handleConnectionClose(a,r){let n=this.connections.get(r);if(!n)return;let o=n.status==="connected";n.status="disconnected",this.stopHeartbeat(r),this.dispatchEvent(new CustomEvent("disconnected",{detail:{roomId:r,code:a.code,reason:a.reason,wasClean:a.wasClean,intentional:a.code===1e3,timestamp:Date.now()}})),o&&a.code!==1e3&&!this.isDestroyed&&this.attemptReconnection(r)}handleConnectionError(a){console.error(`WebSocket error for room ${a}`),this.dispatchEvent(new CustomEvent("connectionError",{detail:{roomId:a,error:"Connection error",timestamp:Date.now()}}))}async attemptReconnection(a){let r=this.reconnectStates.get(a);if(!(!r||r.isReconnecting)){if(r.attempts>=this.config.maxReconnectAttempts){this.dispatchEvent(new CustomEvent("reconnectionFailed",{detail:{roomId:a,attempts:r.attempts,reason:"Max attempts reached",timestamp:Date.now()}}));return}r.isReconnecting=!0,r.abortController=new AbortController,this.dispatchEvent(new CustomEvent("reconnecting",{detail:{roomId:a,attempt:r.attempts+1,timestamp:Date.now()}}));try{let n=this.calculateReconnectDelay(r.attempts);if(console.log(`\u{1F504} Reconnecting to ${a} in ${n}ms (attempt ${r.attempts+1})`),await new Promise((l,s)=>{let c=setTimeout(l,n);r.abortController.signal.addEventListener("abort",()=>{clearTimeout(c),s(new Error("Reconnection aborted"))})}),r.abortController.signal.aborted)return;let o=this.connections.get(a),i=o?.playerName;r.attempts++,o&&(o.isReconnection=!0),await this.connectToRoom(a,{playerName:i}),r.attempts=0,r.isReconnecting=!1,this.dispatchEvent(new CustomEvent("reconnected",{detail:{roomId:a,timestamp:Date.now()}}))}catch(n){r.abortController.signal.aborted||(console.error(`Reconnection attempt ${r.attempts} failed for ${a}:`,n),r.attempts<this.config.maxReconnectAttempts?setTimeout(()=>this.attemptReconnection(a),1e3):(r.isReconnecting=!1,this.dispatchEvent(new CustomEvent("reconnectionFailed",{detail:{roomId:a,attempts:r.attempts,error:n instanceof Error?n.message:"Unknown error",timestamp:Date.now()}}))))}}}calculateReconnectDelay(a){let r=Math.min(a,this.config.reconnectBackoff.length-1),n=this.config.reconnectBackoff[r],o=n*.1;return n+(Math.random()*2-1)*o}startHeartbeat(a){this.stopHeartbeat(a);let r=setInterval(()=>{this.connections.get(a)?.websocket?.readyState===WebSocket.OPEN?this.send(a,"ping",{timestamp:Date.now()}):this.stopHeartbeat(a)},this.config.heartbeatInterval);this.heartbeatTimers.set(a,r)}stopHeartbeat(a){let r=this.heartbeatTimers.get(a);r&&(clearInterval(r),this.heartbeatTimers.delete(a))}stopReconnection(a){let r=this.reconnectStates.get(a);r?.abortController&&(r.abortController.abort(),r.isReconnecting=!1)}queueMessage(a,r){let n=this.messageQueues.get(a);n||(n=[],this.messageQueues.set(a,n)),n.length>=this.config.messageQueueLimit&&(n.shift(),console.warn(`Message queue full for ${a}, dropping oldest message`)),n.push(r),this.dispatchEvent(new CustomEvent("messageQueued",{detail:{roomId:a,message:r,timestamp:Date.now()}}))}processQueuedMessages(a){let r=this.messageQueues.get(a);if(!r||r.length===0)return;let n=this.connections.get(a);if(!n?.websocket||n.websocket.readyState!==WebSocket.OPEN)return;console.log(`\u{1F4E4} Processing ${r.length} queued messages for ${a}`);let o=[...r];r.length=0;for(let i of o)try{n.websocket.send(JSON.stringify(i)),n.messagesSent++}catch(l){console.error(`Failed to send queued message to ${a}:`,l),r.push(i)}}getNextSequenceNumber(a){let n=(this.sequenceNumbers.get(a)||0)+1;return this.sequenceNumbers.set(a,n),n}getQueueSize(a){return this.messageQueues.get(a)?.length||0}},U=d4.getInstance();oa();function Rg(e){if(!e||typeof e!="string")return null;let t=e.match(/^([A-Z]+)_(RED|BLACK)\((\d+)\)$/);if(!t)return console.warn("[parsePieceString] Invalid piece format:",e),null;let[,a,r,n]=t;return{kind:a,color:r.toLowerCase(),value:parseInt(n,10),type:a}}function n8(e){return Array.isArray(e)?e.map(t=>typeof t=="object"&&t!==null&&(t.kind||t.type)&&t.color&&t.value!==void 0?t:typeof t=="string"?Rg(t):null).filter(t=>t!==null):[]}var p4=class e extends EventTarget{constructor(){super();this.listeners=new Set;this.isDestroyed=!1;this.eventHistory=[];this.sequenceNumber=0;if(e.instance)throw new Error("GameService is a singleton. Use GameService.getInstance()");this.state=this.getInitialState(),this.setupNetworkListeners()}static{this.instance=null}static getInstance(){return e.instance||(e.instance=new e),e.instance}getState(){return Object.freeze({...this.state})}async joinRoom(a,r){if(this.isDestroyed)throw new Error("GameService has been destroyed");try{this.setState({...this.state,roomId:a,playerName:r},"JOIN_ROOM_INIT"),await U.connectToRoom(a,{playerName:r}),this.setState({...this.state,isConnected:!0,error:null,gameStartTime:Date.now()},"JOIN_ROOM_CONNECTED");let n=`${a}-${r}-${Date.now()}`;C4(a,r,n,this.state.phase),console.log(`\u{1F3AE} GameService: Joined room ${a} as ${r}`)}catch(n){let o=n instanceof Error?n.message:"Unknown error";throw this.setState({...this.state,error:`Failed to join room: ${o}`,isConnected:!1},"JOIN_ROOM_FAILED"),n}}async leaveRoom(){this.state.roomId&&(await U.disconnectFromRoom(this.state.roomId),na(),this.setState({...this.getInitialState(),playerName:this.state.playerName},"LEAVE_ROOM"),console.log("\u{1F3AE} GameService: Left room"))}acceptRedeal(){this.validateAction("ACCEPT_REDEAL","preparation"),this.sendAction("accept_redeal",{player_name:this.state.playerName})}declineRedeal(){this.validateAction("DECLINE_REDEAL","preparation"),this.sendAction("decline_redeal",{player_name:this.state.playerName})}makeDeclaration(a){if(this.validateAction("MAKE_DECLARATION","declaration"),typeof a!="number"||a<0||a>8)throw new Error(`Invalid declaration value: ${a}. Must be 0-8.`);if(this.state.currentDeclarer!==this.state.playerName)throw new Error("Not your turn to declare");let r=Object.keys(this.state.declarations).length,n=this.state.players.length;if(r===n-1&&Object.values(this.state.declarations).reduce((i,l)=>i+l,0)+a===8)throw new Error("Last player cannot make total equal 8");this.sendAction("declare",{value:a,player_name:this.state.playerName})}playPieces(a){if(this.validateAction("PLAY_PIECES","turn"),!Array.isArray(a)||a.length===0)throw new Error("Must select at least one piece to play");if(a.some(o=>o<0||o>=this.state.myHand.length))throw new Error("Invalid piece indices");if(!this.state.isMyTurn)throw new Error("Not your turn to play");if(this.state.requiredPieceCount!==null&&a.length!==this.state.requiredPieceCount)throw new Error(`Must play exactly ${this.state.requiredPieceCount} pieces`);let n=a.map(o=>this.state.myHand[o]).reduce((o,i)=>o+(i.value||0),0);this.sendAction("play",{piece_indices:a,player_name:this.state.playerName,play_value:n})}startNextRound(){this.validateAction("START_NEXT_ROUND","scoring"),this.sendAction("start_next_round",{})}addListener(a){if(typeof a!="function")throw new Error("Listener must be a function");return this.listeners.add(a),()=>{this.listeners.delete(a)}}removeListener(a){this.listeners.delete(a)}removeAllListeners(){this.listeners.clear()}getEventHistory(){return[...this.eventHistory]}replayToSequence(a){let r=this.getInitialState(),n=this.eventHistory.filter(o=>o.sequence<=a);this.state=n.reduce((o,i)=>this.applyEvent(o,i),r),this.notifyListeners(),console.log(`\u{1F504} Replayed to sequence ${a}`)}destroy(){this.isDestroyed=!0,this.listeners.clear(),this.eventHistory.length=0,na(),e.instance=null,console.log("\u{1F3AE} GameService: Destroyed")}getInitialState(){return{isConnected:!1,roomId:null,playerName:null,phase:"waiting",currentRound:1,players:[],roundStarter:null,weakHands:[],currentWeakPlayer:null,redealRequests:{},redealMultiplier:1,myHand:[],declarations:{},declarationOrder:[],currentDeclarer:null,declarationTotal:0,currentTurnStarter:null,turnOrder:[],currentPlayer:null,currentTurnPlays:[],requiredPieceCount:null,currentTurnNumber:0,roundScores:{},totalScores:{},winners:[],turnWinner:null,winningPlay:null,playerPiles:{},turnNumber:1,nextStarter:null,allHandsEmpty:!1,willContinue:!1,disconnectedPlayers:[],host:null,isMyTurn:!1,allowedActions:[],validOptions:[],lastEventSequence:0,error:null,gameOver:!1,gameStartTime:null}}setupNetworkListeners(){U.addEventListener("connected",this.handleNetworkConnection.bind(this)),U.addEventListener("disconnected",this.handleNetworkDisconnection.bind(this));let a=["phase_change","weak_hands_found","redeal_decision_needed","redeal_executed","declare","play","turn_complete","turn_resolved","score_update","round_complete","game_ended","player_disconnected","player_reconnected","host_changed"];U.addEventListener("room_not_found",this.handleRoomNotFound.bind(this)),a.forEach(r=>{U.addEventListener(r,this.handleNetworkEvent.bind(this))})}handleNetworkConnection(){this.setState({...this.state,isConnected:!0,error:null},"NETWORK_CONNECTED")}handleNetworkDisconnection(a){let r=a,{intentional:n}=r.detail;this.setState({...this.state,isConnected:!1,error:n?null:"Connection lost"},"NETWORK_DISCONNECTED")}handleRoomNotFound(a){let r=a,{data:n}=r.detail;console.log("\u{1F6AB} Room not found:",n),Promise.resolve().then(()=>(oa(),Bc)).then(({clearSession:l})=>{l()});let o=n?.message||"This game room no longer exists",i=n?.suggestion||"Please return to the start page";this.setState({...this.state,error:`${o}. ${i}`,phase:"waiting"},"ROOM_NOT_FOUND"),typeof window<"u"&&window.showToast&&window.showToast({type:"error",title:"Room Not Found",message:`${o}. ${i}`,duration:8e3}),setTimeout(()=>{typeof window<"u"&&(window.location.href="/")},3e3)}handleNetworkEvent(a){let r=a,{roomId:n,data:o}=r.detail;if(n===this.state.roomId)try{let i=this.processGameEvent(a.type,o);this.setState(i,`NETWORK_EVENT:${a.type.toUpperCase()}`)}catch(i){let l=i instanceof Error?i.message:"Unknown error";console.error(`Failed to process ${a.type} event:`,i),this.setState({...this.state,error:`Event processing error: ${l}`},"EVENT_ERROR")}}processGameEvent(a,r){let n={...this.state};switch(a){case"phase_change":n=this.handlePhaseChange(n,r);break;case"weak_hands_found":n=this.handleWeakHandsFound(n,r);break;case"redeal_decision_needed":n=this.handleRedealDecisionNeeded(n,r);break;case"redeal_executed":n=this.handleRedealExecuted(n,r);break;case"declare":n=this.handleDeclare(n,r);break;case"play":n=this.handlePlay(n,r);break;case"turn_resolved":n=this.handleTurnResolved(n,r);break;case"turn_complete":n=this.handleTurnComplete(n,r);break;case"score_update":n=this.handleScoreUpdate(n,r);break;case"round_complete":n=this.handleRoundComplete(n,r);break;case"game_ended":n=this.handleGameEnded(n,r);break;case"player_disconnected":n=this.handlePlayerDisconnected(n,r);break;case"player_reconnected":n=this.handlePlayerReconnected(n,r);break;case"host_changed":n=this.handleHostChanged(n,r);break;case"play_rejected":{let o=r.details||r.message||"Invalid play. Please try again.";alert(o);break}case"critical_error":alert(r.message||"Game ended due to critical error. Returning to lobby..."),window.location.href="/lobby";break;default:return console.warn(`Unknown game event: ${a}`,r),n}return n=this.updateDerivedState(n),n}handlePhaseChange(a,r){let n={...a};if(n.phase=r.phase,n.currentRound=r.round||a.currentRound,r.players&&a.playerName&&r.players[a.playerName]){let o=r.players[a.playerName];if(o.hand){let i=o.hand.map((l,s)=>{let c=l.match(/^(.+)\((\d+)\)$/);if(c){let[,f,d]=c,[u,m]=f.split("_");return{kind:u,color:m.toLowerCase(),value:parseInt(d),displayName:`${u} ${m}`,originalIndex:s}}return{kind:"UNKNOWN",color:"red",value:0,displayName:l,originalIndex:s}});n.myHand=[...i].sort((l,s)=>l.color==="red"&&s.color!=="red"?-1:l.color!=="red"&&s.color==="red"?1:(s.value||0)-(l.value||0))}}if(r.players&&(n.players=Object.entries(r.players).map(([o,i])=>({name:o,score:i.score||0,is_bot:i.is_bot||!1,is_host:i.is_host||!1,avatar_color:i.avatar_color||null,zero_declares_in_a_row:i.zero_declares_in_a_row||0,hand_size:i.hand_size||0,captured_piles:i.captured_piles||0,declared:i.declared||0}))),r.phase_data){let o=r.phase_data;if(o.players){let i=new Map(n.players.map(l=>[l.name,l]));n.players=o.players.map(l=>{let s=i.get(l.name);return{...l,avatar_color:l.avatar_color,zero_declares_in_a_row:s?.zero_declares_in_a_row||0,is_connected:l.is_connected!==void 0?l.is_connected:s?.is_connected,disconnect_time:l.disconnect_time||s?.disconnect_time,original_is_bot:l.original_is_bot!==void 0?l.original_is_bot:s?.original_is_bot}}),n.disconnectedPlayers=n.players.filter(l=>l.is_bot&&l.original_is_bot===!1).map(l=>l.name)}switch(r.phase){case"preparation":o.my_hand&&!n.myHand.length&&(n.myHand=o.my_hand,n.myHand.sort((i,l)=>i.color==="red"&&l.color!=="red"?-1:i.color!=="red"&&l.color==="red"?1:(l.value||0)-(i.value||0))),o.round_starter&&(n.roundStarter=o.round_starter),n.redealMultiplier=o.redeal_multiplier||1,o.weak_hands&&(n.weakHands=o.weak_hands),o.current_weak_player&&(n.currentWeakPlayer=o.current_weak_player),n.simultaneousMode=o.simultaneous_mode||!1,n.weakPlayersAwaiting=o.weak_players_awaiting||[],n.decisionsReceived=o.decisions_received||0,n.decisionsNeeded=o.decisions_needed||0,o.dealing_cards!==void 0&&(n.dealingCards=o.dealing_cards),n.myHand.length>0&&(n.isMyHandWeak=this.calculateWeakHand(n.myHand),n.handValue=this.calculateHandValue(n.myHand),n.highestCardValue=this.calculateHighestCardValue(n.myHand)),n.simultaneousMode&&n.playerName?n.isMyDecision=n.weakPlayersAwaiting.includes(n.playerName):o.current_weak_player&&n.playerName&&(n.isMyDecision=o.current_weak_player===n.playerName);break;case"round_start":o.current_starter&&(n.currentStarter=o.current_starter),o.starter_reason&&(n.starterReason=o.starter_reason);break;case"declaration":o.my_hand&&!n.myHand.length&&(n.myHand=o.my_hand,n.myHand.sort((i,l)=>i.color==="red"&&l.color!=="red"?-1:i.color!=="red"&&l.color==="red"?1:(l.value||0)-(i.value||0))),o.declaration_order&&(n.declarationOrder=o.declaration_order),o.current_declarer&&(n.currentDeclarer=o.current_declarer),n.declarations=o.declarations||{},n.currentTotal=o.declaration_total??Object.values(o.declarations||{}).reduce((i,l)=>i+l,0),o.declaration_order?(n.declarationProgress={declared:Object.keys(o.declarations||{}).length,total:o.declaration_order.length},n.isLastPlayer=Object.keys(o.declarations||{}).length===o.declaration_order.length-1):o.players&&(n.declarationProgress={declared:Object.keys(o.declarations||{}).length,total:o.players.length},n.isLastPlayer=Object.keys(o.declarations||{}).length===o.players.length-1),n.myHand.length>0&&(n.estimatedPiles=this.calculateEstimatedPiles(n.myHand),n.handStrength=this.calculateHandStrength(n.myHand));break;case"turn":o.turn_order&&(n.turnOrder=o.turn_order),o.current_turn_starter&&(n.currentTurnStarter=o.current_turn_starter),o.current_player&&(n.currentPlayer=o.current_player),o.required_piece_count!==void 0&&(n.requiredPieceCount=o.required_piece_count),o.pile_counts!==void 0&&(n.pileCounts=o.pile_counts),o.turn_plays!==void 0?typeof o.turn_plays=="object"&&Object.keys(o.turn_plays).length===0?n.currentTurnPlays=[]:o.turn_plays&&typeof o.turn_plays=="object"&&(n.currentTurnPlays=Object.entries(o.turn_plays).map(([i,l])=>{let s=l.type||l.play_type||"UNKNOWN",c=l.is_valid!==!1&&s!=="INVALID";return{player:i,pieces:n8(l.pieces||[]),isValid:c,playType:s,totalValue:l.play_value||0}})):n.currentTurnPlays=(o.current_turn_plays||[]).map(i=>({...i,pieces:n8(i.pieces||i.cards||[])})),n.currentTurnNumber=o.current_turn_number||0,n.canPlayAnyCount=!n.requiredPieceCount&&n.isMyTurn,n.selectedPlayValue=0;break;case"scoring":{let i={},l=o.round_scores||{};Object.entries(l).forEach(([f,d])=>{typeof d=="object"&&d!==null?d.final_score!==void 0?i[f]=d.final_score:i[f]=0:i[f]=d||0}),n.roundScores=i;let s={},c=o.total_scores||{};Object.entries(c).forEach(([f,d])=>{typeof d=="object"&&d!==null?d.total_score!==void 0?s[f]=d.total_score:s[f]=0:s[f]=d||0}),n.totalScores=s,n.gameOver=o.game_complete||!1,n.winners=o.winners||[],n.redealMultiplier=o.redeal_multiplier||1,o.scoring_players_data&&o.round_scores&&o.total_scores?n.playersWithScores=this.calculatePlayersWithScores(o.scoring_players_data,o.round_scores,o.total_scores,o.redeal_multiplier||1,o.winners||[]):!o.scoring_players_data&&n.players&&n.players.length>0&&o.round_scores&&o.total_scores&&(n.playersWithScores=this.calculatePlayersWithScores(n.players,o.round_scores,o.total_scores,o.redeal_multiplier||1,o.winners||[]));break}case"game_over":n.gameOver=!0,o.winners&&(n.winners=o.winners),o.final_rankings&&(n.final_rankings=o.final_rankings),o.game_stats&&(n.game_stats=o.game_stats);break}}if(n.error=null,a.roomId&&a.playerName){let o=`${a.roomId}-${a.playerName}-${Date.now()}`;C4(a.roomId,a.playerName,o,n.phase)}return n}handleWeakHandsFound(a,r){return{...a,weakHands:r.weak_hands||[],currentWeakPlayer:r.current_weak_player||null}}handleRedealDecisionNeeded(a,r){return{...a,currentWeakPlayer:r.player}}handleRedealExecuted(a,r){let n=r.my_hand||a.myHand;return Array.isArray(n)&&n.sort((o,i)=>o.color==="red"&&i.color!=="red"?-1:o.color!=="red"&&i.color==="red"?1:(i.value||0)-(o.value||0)),{...a,myHand:n,redealMultiplier:r.redeal_multiplier||a.redealMultiplier,weakHands:[],currentWeakPlayer:null,redealRequests:{}}}handleDeclare(a,r){let n={...a.declarations,[r.player]:r.value},o=Object.values(n).reduce((d,u)=>d+u,0),l=a.declarationOrder.indexOf(r.player)+1,s=l<a.declarationOrder.length?a.declarationOrder[l]:null,c={...a,declarations:n,declarationTotal:o,currentDeclarer:s,currentTotal:o},f=a.players&&a.players.length>0?a.players.length:a.declarationOrder&&a.declarationOrder.length>0?a.declarationOrder.length:4;return c.declarationProgress={declared:Object.keys(n).length,total:f},c}handlePlay(a,r){let n=a.currentRound||0,o=a.currentTurnNumber||0,i=r.required_count||a.requiredPieceCount,l=a.phase;a.phase==="turn_results"&&(l="turn");let s={player:r.player,cards:r.pieces||[],isValid:r.is_valid,playType:r.play_type,totalValue:r.play_value||0},c=a.requiredPieceCount;l==="turn"&&a.phase==="turn_results"&&(c=null);let f=a.currentPlayer;return r.next_player?f=r.next_player:r.turn_complete,r.turn_complete,{...a,phase:l,requiredPieceCount:c,currentPlayer:f,...l==="turn"&&a.phase==="turn_results"?{turnWinner:null,winningPlay:null,currentTurnPlays:[]}:{}}}handleTurnResolved(a,r){let n=r.my_hand||a.myHand;return Array.isArray(n)&&n.sort((o,i)=>o.color==="red"&&i.color!=="red"?-1:o.color!=="red"&&i.color==="red"?1:(i.value||0)-(o.value||0)),{...a,currentTurnPlays:[],requiredPieceCount:null,myHand:n,currentTurnNumber:a.currentTurnNumber+1}}handleTurnComplete(a,r){let n=a.currentRound||0,o=r.turn_number||a.currentTurnNumber||0,i=r.winner||"No winner";return{...a,phase:"turn_results",turnWinner:r.winner||null,winningPlay:r.winning_play||null,playerPiles:r.player_piles||{},players:r.turn_players_data||a.players,turnNumber:r.turn_number||a.currentTurnNumber||1,nextStarter:r.next_starter||null,allHandsEmpty:r.all_hands_empty||!1,willContinue:r.will_continue||!1}}handleScoreUpdate(a,r){return{...a,roundScores:r.round_scores||a.roundScores,totalScores:r.total_scores||a.totalScores}}handleRoundComplete(a,r){return{...a,roundScores:r.round_scores||a.roundScores,totalScores:r.total_scores||a.totalScores,currentRound:a.currentRound+1}}handleGameEnded(a,r){return{...a,gameOver:!0,winners:r.winners||[],totalScores:r.final_scores||a.totalScores}}handlePlayerDisconnected(a,r){let n={...a};return r.player_name&&!n.disconnectedPlayers.includes(r.player_name)&&(n.disconnectedPlayers=[...n.disconnectedPlayers,r.player_name]),r.player_name&&a.players&&(n.players=a.players.map(o=>o.name===r.player_name?{...o,is_bot:r.is_bot!==void 0?r.is_bot:!0,is_connected:!1,disconnect_time:r.disconnect_time||new Date().toISOString()}:o)),n}handlePlayerReconnected(a,r){let n={...a};return r.player_name&&(n.disconnectedPlayers=n.disconnectedPlayers.filter(o=>o!==r.player_name)),r.player_name&&a.players&&(n.players=a.players.map(o=>o.name===r.player_name?{...o,is_bot:r.original_is_bot!==void 0?r.original_is_bot:!1,is_connected:!0,disconnect_time:void 0}:o)),n}handleHostChanged(a,r){return{...a,host:r.new_host||null}}updateDerivedState(a){let r={...a};return r.isMyTurn=this.calculateIsMyTurn(a),r.allowedActions=this.calculateAllowedActions(a),r.validOptions=this.calculateValidOptions(a),r}calculateIsMyTurn(a){switch(a.phase){case"preparation":return a.currentWeakPlayer===a.playerName;case"declaration":return a.currentDeclarer===a.playerName;case"turn":return a.currentPlayer===a.playerName;case"turn_results":return!1;case"scoring":return!1;default:return!1}}calculateAllowedActions(a){let r=[];switch(a.phase){case"preparation":a.currentWeakPlayer===a.playerName&&r.push("acceptRedeal","declineRedeal");break;case"declaration":a.currentDeclarer===a.playerName&&r.push("makeDeclaration");break;case"turn":this.calculateIsMyTurn(a)&&r.push("playPieces");break;case"turn_results":break;case"scoring":a.gameOver&&r.push("startNextRound");break}return r}calculateValidOptions(a){switch(a.phase){case"declaration":if(a.currentDeclarer===a.playerName)return this.calculateValidDeclarations(a);break;case"turn":if(this.calculateIsMyTurn(a))return this.calculateValidPlays(a);break}return[]}calculateValidDeclarations(a){let r=[],n=Object.values(a.declarations).reduce((s,c)=>s+c,0),o=Object.keys(a.declarations).length,i=a.players.length,l=o===i-1;for(let s=0;s<=8;s++)l&&n+s===8||r.push(s);return r}calculateValidPlays(a){if(!a.myHand||a.myHand.length===0)return[];let r=[],n=a.myHand.length,o=1,i=a.requiredPieceCount||Math.min(6,n);for(let l=o;l<=i;l++){let s=this.generateCombinations(n,l);r.push(...s)}return r}generateCombinations(a,r){let n=[];function o(i,l){if(l.length===r){n.push([...l]);return}for(let s=i;s<a;s++)l.push(s),o(s+1,l),l.pop()}return o(0,[]),n}validateAction(a,r){if(this.isDestroyed)throw new Error("GameService has been destroyed");if(!this.state.isConnected)throw new Error("Not connected to game");if(this.state.phase!==r)throw new Error(`Cannot ${a} during ${this.state.phase} phase`);if(this.state.error)throw new Error(`Game error: ${this.state.error}`)}sendAction(a,r){if(!this.state.roomId)throw new Error("No room connected");U.send(this.state.roomId,a,r)||console.warn(`Action ${a} queued due to connection issue`),console.log(`\u{1F3AE} Action sent: ${a}`,r)}setState(a,r){let n=this.state;this.state=a;let o={oldState:{...n},newState:{...a},reason:r,sequence:++this.sequenceNumber,timestamp:Date.now()};this.eventHistory.push(o),this.eventHistory.length>1e3&&this.eventHistory.shift(),this.state.lastEventSequence=this.sequenceNumber,console.group(`\u{1F3AE} State Change: ${r}`),console.log("Previous:",n),console.log("New:",a),console.log("Diff:",this.stateDiff(n,a)),console.groupEnd(),typeof window<"u"&&(window.__GAME_STATE_HISTORY__=window.__GAME_STATE_HISTORY__||[],window.__GAME_STATE_HISTORY__.push(o),window.__GAME_STATE_HISTORY__.length>100&&window.__GAME_STATE_HISTORY__.shift(),window.debugReplayToEvent=i=>{this.replayToSequence(i)}),this.notifyListeners()}applyEvent(a,r){return r.newState}stateDiff(a,r){let n={};for(let o in r)JSON.stringify(a[o])!==JSON.stringify(r[o])&&(n[o]={from:a[o],to:r[o]});return n}notifyListeners(){let a=this.getState();for(let r of this.listeners)try{r(a)}catch(n){console.error("Listener error:",n)}this.dispatchEvent(new CustomEvent("stateChange",{detail:{state:a}}))}calculateWeakHand(a){return!a||a.length===0?!1:a.every(r=>(r.value||0)<=9)}calculateHandValue(a){return!a||a.length===0?0:a.reduce((r,n)=>r+(n.value||0),0)}calculateHighestCardValue(a){return!a||a.length===0?0:Math.max(...a.map(r=>r.value||0))}calculateEstimatedPiles(a){if(!a||a.length===0)return 0;let r=a.map(i=>i.value||0),n=r.reduce((i,l)=>i+l,0)/r.length,o=r.filter(i=>i>10).length;return Math.max(0,Math.min(8,Math.floor(n/4)+o))}calculateHandStrength(a){if(!a||a.length===0)return 0;let r=a.map(i=>i.value||0),n=r.reduce((i,l)=>i+l,0)/r.length,o=Math.max(...r);return Math.min(100,Math.round(n*2+o/2))}calculatePlayersWithScores(a,r,n,o,i){return a.map(l=>{let s=r[l.name],c=typeof s=="object"&&s?.final_score!==void 0?s.final_score:s||0,f=typeof s=="object"&&s?.base_score!==void 0?s.base_score:Math.round(c/Math.max(1,o)),d=typeof s=="object"&&s?.actual!==void 0?s.actual:this.deriveActualPiles(l,c),u=typeof s=="object"&&s?.declared!==void 0?s.declared:l.pile_count||0,m=typeof s=="object"&&s?.total_score!==void 0?s.total_score:n[l.name]||0,b=typeof s=="object"&&s?.bonus!==void 0?s.bonus:0,R=typeof s=="object"&&s?.hit_value!==void 0?s.hit_value:d===u?u:-Math.abs(u-d);return{...l,roundScore:c,totalScore:m,baseScore:f,actualPiles:d,pile_count:u,bonus:b,hitValue:R,scoreExplanation:this.generateScoreExplanation(l,c,o),isWinner:i.includes(l.name)}}).sort((l,s)=>s.totalScore-l.totalScore)}deriveActualPiles(a,r){let n=a.pile_count||0;return n===0&&r===3?0:n===0&&r<0?Math.abs(r):r===n+5?n:"?"}generateScoreExplanation(a,r,n){let o=a.pile_count||0,i=Math.round(r/Math.max(1,n)),l="";return o===0&&i===3?l="Perfect zero prediction bonus":o===0&&i<0?l="Penalty for breaking zero declaration":i===o+5?l="Perfect prediction bonus":i<0?l="Penalty for missing target":l="Score calculation applied",n>1&&(l+=` (\xD7${n} redeal multiplier)`),l}},f1=p4.getInstance();var m4=class e extends EventTarget{constructor(){super();this.roomStates=new Map;this.eventBuffers=new Map;this.isDestroyed=!1;if(e.instance)throw new Error("RecoveryService is a singleton. Use RecoveryService.getInstance()");this.config={snapshotInterval:50,maxEventBuffer:ra.EVENT_BUFFER_SIZE,recoveryTimeout:I1.HEARTBEAT_INTERVAL,enablePersistence:!0,maxRetries:3,gapDetectionThreshold:5},this.setupEventListeners(),console.log("\u{1F504} RecoveryService: Initialized")}static{this.instance=null}static getInstance(){return e.instance||(e.instance=new e),e.instance}initializeRoom(a){if(this.isDestroyed)throw new Error("RecoveryService has been destroyed");if(this.roomStates.has(a)){console.log(`\u{1F504} RecoveryService: Room ${a} already initialized`);return}let r={roomId:a,lastSequence:0,expectedSequence:1,snapshots:[],isRecovering:!1,recoveryAttempts:0,gapsDetected:[],lastSnapshotSequence:0,recoveryStartTime:null};this.roomStates.set(a,r),this.eventBuffers.set(a,{events:[],maxSize:this.config.maxEventBuffer,nextExpectedSequence:1}),this.restoreFromPersistence(a),console.log(`\u{1F504} RecoveryService: Initialized tracking for room ${a}`)}recordEvent(a,r){let n=this.roomStates.get(a),o=this.eventBuffers.get(a);if(!n||!o){console.warn(`RecoveryService: Room ${a} not initialized`);return}this.detectSequenceGaps(a,r.sequence),this.addToEventBuffer(a,r),n.lastSequence=Math.max(n.lastSequence,r.sequence),n.expectedSequence=n.lastSequence+1,this.shouldCreateSnapshot(n)&&this.createSnapshot(a),this.config.enablePersistence&&this.persistState(a),console.log(`\u{1F504} Event recorded: ${r.type} (seq: ${r.sequence}) for room ${a}`)}async startRecovery(a,r){let n=this.roomStates.get(a);if(!n)throw new Error(`Room ${a} not initialized for recovery`);if(n.isRecovering)return console.log(`Recovery already in progress for room ${a}`),!1;n.isRecovering=!0,n.recoveryStartTime=Date.now(),n.recoveryAttempts++,this.dispatchEvent(new CustomEvent("recoveryStarted",{detail:{roomId:a,attempt:n.recoveryAttempts,timestamp:Date.now()}}));try{let o=r||this.findOptimalRecoveryPoint(a);if(console.log(`\u{1F504} Starting recovery for room ${a} from sequence ${o}`),await this.requestMissingEvents(a,o),await this.applyRecovery(a,o))return n.isRecovering=!1,n.recoveryAttempts=0,n.gapsDetected=[],this.dispatchEvent(new CustomEvent("recoveryCompleted",{detail:{roomId:a,timestamp:Date.now()}})),console.log(`\u2705 Recovery completed for room ${a}`),!0;throw new Error("Recovery application failed")}catch(o){n.isRecovering=!1;let i=o instanceof Error?o.message:"Unknown error";return console.error(`\u274C Recovery failed for room ${a}:`,o),this.dispatchEvent(new CustomEvent("recoveryFailed",{detail:{roomId:a,error:i,attempt:n.recoveryAttempts,timestamp:Date.now()}})),n.recoveryAttempts<this.config.maxRetries&&(console.log(`\u{1F504} Scheduling retry for room ${a} (attempt ${n.recoveryAttempts+1})`),setTimeout(()=>this.startRecovery(a),2e3*n.recoveryAttempts)),!1}}getRecoveryStatus(a){let r=this.roomStates.get(a),n=this.eventBuffers.get(a);return!r||!n?{roomId:a,initialized:!1,isRecovering:!1,lastSequence:0,expectedSequence:1,gapsDetected:0,snapshotCount:0,eventBufferSize:0,recoveryAttempts:0}:{roomId:a,initialized:!0,isRecovering:r.isRecovering,lastSequence:r.lastSequence,expectedSequence:r.expectedSequence,gapsDetected:r.gapsDetected.length,snapshotCount:r.snapshots.length,eventBufferSize:n.events.length,recoveryAttempts:r.recoveryAttempts,lastSnapshotSequence:r.lastSnapshotSequence,recoveryStartTime:r.recoveryStartTime}}createSnapshot(a){let r=this.roomStates.get(a);if(!r)return!1;try{let n=f1.getState(),o={sequence:r.lastSequence,timestamp:Date.now(),gameState:JSON.parse(JSON.stringify(n)),roomId:a};return r.snapshots.push(o),r.lastSnapshotSequence=r.lastSequence,r.snapshots.length>10&&r.snapshots.shift(),this.config.enablePersistence&&this.persistState(a),console.log(`\u{1F4F8} Snapshot created for room ${a} at sequence ${o.sequence}`),!0}catch(n){return console.error(`Failed to create snapshot for room ${a}:`,n),!1}}cleanupRoom(a){this.roomStates.delete(a),this.eventBuffers.delete(a),this.config.enablePersistence&&this.clearPersistedState(a),console.log(`\u{1F9F9} RecoveryService: Cleaned up room ${a}`)}destroy(){this.isDestroyed=!0;let a=Array.from(this.roomStates.keys());for(let r of a)this.cleanupRoom(r);e.instance=null,console.log("\u{1F504} RecoveryService: Destroyed")}setupEventListeners(){U.addEventListener("message",this.handleNetworkMessage.bind(this)),U.addEventListener("connected",this.handleReconnection.bind(this)),U.addEventListener("reconnected",this.handleReconnection.bind(this)),f1.addEventListener("stateChange",this.handleStateChange.bind(this))}handleNetworkMessage(a){let r=a,{roomId:n,message:o}=r.detail;if(!o||!o.sequence)return;let i={sequence:o.sequence,type:o.event,data:o.data,timestamp:o.timestamp,id:o.id};this.recordEvent(n,i)}handleReconnection(a){let r=a,{roomId:n}=r.detail;this.roomStates.get(n)&&this.hasSequenceGaps(n)&&(console.log(`\u{1F504} Detected sequence gaps after reconnection, starting recovery for ${n}`),this.startRecovery(n))}handleStateChange(){}detectSequenceGaps(a,r){let n=this.roomStates.get(a);if(!n)return;let o=n.expectedSequence;if(r>o){let i={start:o,end:r-1,detected:Date.now()};n.gapsDetected.push(i),console.warn(`\u26A0\uFE0F Sequence gap detected in room ${a}: ${i.start}-${i.end}`),this.dispatchEvent(new CustomEvent("sequenceGap",{detail:{roomId:a,gap:i,timestamp:Date.now()}})),r-o>=this.config.gapDetectionThreshold&&(console.log(`\u{1F504} Large gap detected, starting automatic recovery for room ${a}`),this.startRecovery(a))}}addToEventBuffer(a,r){let n=this.eventBuffers.get(a);if(!n)return;if(n.events.find(i=>i.sequence===r.sequence&&i.id===r.id)){console.log(`Duplicate event detected: ${r.type} (seq: ${r.sequence})`);return}n.events.push(r),n.events.sort((i,l)=>i.sequence-l.sequence),n.events.length>n.maxSize&&n.events.shift()}shouldCreateSnapshot(a){return a.lastSequence-a.lastSnapshotSequence>=this.config.snapshotInterval}findOptimalRecoveryPoint(a){let r=this.roomStates.get(a);return r?r.snapshots.length>0?r.snapshots[r.snapshots.length-1].sequence+1:r.gapsDetected.length>0?r.gapsDetected[0].start:1:1}async requestMissingEvents(a,r){return new Promise((n,o)=>{let i=setTimeout(()=>{o(new Error("Recovery request timeout"))},this.config.recoveryTimeout),l=c=>{c.detail.roomId===a&&(clearTimeout(i),U.removeEventListener("recovery_response",l),n())};U.addEventListener("recovery_response",l),U.send(a,"request_recovery",{from_sequence:r,to_sequence:this.roomStates.get(a)?.lastSequence||r})||(clearTimeout(i),U.removeEventListener("recovery_response",l),o(new Error("Failed to send recovery request")))})}async applyRecovery(a,r){let n=this.roomStates.get(a);if(!n)return!1;try{let o=this.findBestSnapshot(a,r);return o&&console.log(`\u{1F504} Restoring from snapshot at sequence ${o.sequence}`),n.gapsDetected=[],!0}catch(o){return console.error(`Failed to apply recovery for room ${a}:`,o),!1}}findBestSnapshot(a,r){let n=this.roomStates.get(a);if(!n||n.snapshots.length===0)return null;let o=null;for(let i of n.snapshots)i.sequence<=r&&(!o||i.sequence>o.sequence)&&(o=i);return o}hasSequenceGaps(a){let r=this.roomStates.get(a);return r?r.gapsDetected.length>0:!1}persistState(a){try{let r=this.roomStates.get(a),n=this.eventBuffers.get(a);if(r&&n){let o={recoveryState:r,eventBuffer:{...n,events:n.events.slice(-100)}};localStorage.setItem(`recovery_${a}`,JSON.stringify(o))}}catch(r){console.warn(`Failed to persist recovery state for room ${a}:`,r)}}restoreFromPersistence(a){try{let r=localStorage.getItem(`recovery_${a}`);if(r){let n=JSON.parse(r);n.recoveryState&&this.roomStates.set(a,n.recoveryState),n.eventBuffer&&this.eventBuffers.set(a,n.eventBuffer),console.log(`\u{1F504} Restored recovery state for room ${a} from persistence`)}}catch(r){console.warn(`Failed to restore recovery state for room ${a}:`,r)}}clearPersistedState(a){try{localStorage.removeItem(`recovery_${a}`)}catch(r){console.warn(`Failed to clear persisted state for room ${a}:`,r)}}},z2=m4.getInstance();var g4=class e extends EventTarget{constructor(){super();this.errorHistory=[];this.metrics={totalErrors:0,recoveryAttempts:0,successfulRecoveries:0,uptime:Date.now(),lastHealthCheck:0};this.isInitialized=!1;this.isDestroyed=!1;this.healthCheckInterval=null;this.recoveryStrategies=new Map;if(e.instance)throw new Error("ServiceIntegration is a singleton. Use ServiceIntegration.getInstance()");this.config={healthCheckInterval:I1.HEARTBEAT_INTERVAL,errorRetention:100,autoRecovery:!0,recoveryTimeout:I1.RECOVERY_TIMEOUT,maxRecoveryAttempts:3,errorThreshold:10,errorWindowMs:I1.ERROR_WINDOW_MS,enableMetrics:!0},this.setupRecoveryStrategies(),console.log("\u{1F517} ServiceIntegration: Initialized")}static{this.instance=null}static getInstance(){return e.instance||(e.instance=new e),e.instance}async initialize(){if(this.isInitialized){console.log("ServiceIntegration already initialized");return}if(this.isDestroyed)throw new Error("ServiceIntegration has been destroyed");try{console.log(""),console.log("\u{1F3AF} ============================================="),console.log("\u{1F680} PHASE 1-4 ENTERPRISE ARCHITECTURE STARTING"),console.log("\u{1F3AF} ============================================="),console.log("\u{1F527} Initializing integrated service layer..."),this.setupErrorListeners(),await this.initializeNetworkService(),await this.initializeGameService(),await this.initializeRecoveryService(),this.setupServiceIntegrations(),this.startHealthMonitoring(),this.isInitialized=!0,this.dispatchEvent(new CustomEvent("initialized",{detail:{timestamp:Date.now()}})),console.log(""),console.log("\u2705 ============================================="),console.log("\u{1F389} PHASE 1-4 ARCHITECTURE FULLY OPERATIONAL!"),console.log("\u2705 ============================================="),console.log("\u{1F517} NetworkService: Advanced WebSocket with auto-reconnection"),console.log("\u{1F3AE} GameService: React hooks with TypeScript state management"),console.log("\u{1F6E0}\uFE0F RecoveryService: Automatic error recovery and health monitoring"),console.log("\u{1F3E2} Enterprise Features: Event sourcing, logging, metrics"),console.log("\u2705 Service integration layer initialized successfully"),console.log("")}catch(a){let r=this.createServiceError("INITIALIZATION_FAILED","CRITICAL",a instanceof Error?a.message:"Unknown initialization error","ServiceIntegration");throw this.handleError(r),new Error(`Service integration initialization failed: ${r.message}`)}}async connectToRoom(a,r){if(!this.isInitialized)throw new Error("ServiceIntegration not initialized");try{console.log(`\u{1F517} Connecting to room ${a} as ${r}...`),z2.initializeRoom(a),await f1.joinRoom(a,r),this.dispatchEvent(new CustomEvent("roomConnected",{detail:{roomId:a,playerName:r,timestamp:Date.now()}})),console.log(`\u2705 Successfully connected to room ${a}`)}catch(n){let o=this.createServiceError("ROOM_CONNECTION_FAILED","HIGH",n instanceof Error?n.message:"Unknown connection error","ServiceIntegration",{roomId:a,playerName:r});throw await this.handleError(o),n}}async disconnectFromRoom(){try{let r=f1.getState().roomId;r&&(console.log(`\u{1F517} Disconnecting from room ${r}...`),await f1.leaveRoom(),z2.cleanupRoom(r),this.dispatchEvent(new CustomEvent("roomDisconnected",{detail:{roomId:r,timestamp:Date.now()}})),console.log(`\u2705 Successfully disconnected from room ${r}`))}catch(a){let r=this.createServiceError("ROOM_DISCONNECTION_FAILED","MEDIUM",a instanceof Error?a.message:"Unknown disconnection error","ServiceIntegration");await this.handleError(r)}}getHealthStatus(){let a=U.getStatus(),r=f1.getState(),n=r.roomId?z2.getRecoveryStatus(r.roomId):null;return{overall:this.calculateOverallHealth(a,r,n),network:{healthy:!a.isDestroyed&&a.activeConnections>=0,connections:a.activeConnections,queuedMessages:a.totalQueuedMessages,status:a.isDestroyed?"destroyed":"operational"},game:{healthy:r.error===null&&!r.gameOver,connected:r.isConnected,phase:r.phase,roomId:r.roomId,playersCount:r.players.length,status:r.error?"error":"operational"},recovery:n?{healthy:!n.isRecovering&&n.gapsDetected===0,initialized:n.initialized,isRecovering:n.isRecovering,eventBufferSize:n.eventBufferSize,gapsDetected:n.gapsDetected,status:n.isRecovering?"recovering":"operational"}:null,integration:this.getIntegrationStatus(),metrics:{...this.metrics},errors:this.getRecentErrors(5)}}async triggerRecovery(a){if(!this.isInitialized)throw new Error("ServiceIntegration not initialized");console.log(`\u{1F504} Triggering manual recovery${a?` for ${a}`:""}...`);try{this.metrics.recoveryAttempts++;let r=f1.getState(),n=a?this.recoveryStrategies.get(a)||[]:this.getAllRecoveryStrategies(),o=!1,i=[];for(let s of n)try{console.log(`\u{1F527} Applying recovery strategy: ${s.name}`),await s.execute(r),i.push(s.name),o=!0}catch(c){console.warn(`Strategy ${s.name} failed:`,c)}o&&(this.metrics.successfulRecoveries++,console.log(`\u2705 Recovery completed with strategies: ${i.join(", ")}`));let l={success:o,appliedStrategies:i,timestamp:Date.now(),errorType:a||"MANUAL_RECOVERY"};return this.dispatchEvent(new CustomEvent("recoveryCompleted",{detail:{recoveryResult:l,timestamp:Date.now()}})),l}catch(r){let n=r instanceof Error?r.message:"Unknown recovery error";return console.error("\u274C Recovery failed:",r),{success:!1,appliedStrategies:[],timestamp:Date.now(),errorType:a||"MANUAL_RECOVERY",error:n}}}getMetrics(){return{...this.metrics}}async emergencyReset(){console.log("\u{1F6A8} Performing emergency service reset...");try{await this.disconnectFromRoom(),f1.destroy(),z2.destroy(),U.destroy(),this.errorHistory.length=0,this.metrics.totalErrors=0,this.metrics.recoveryAttempts=0,this.metrics.successfulRecoveries=0,this.metrics.uptime=Date.now(),this.dispatchEvent(new CustomEvent("emergencyReset",{detail:{timestamp:Date.now()}})),console.log("\u2705 Emergency reset completed")}catch(a){throw console.error("\u274C Emergency reset failed:",a),a}}destroy(){this.isDestroyed=!0,this.healthCheckInterval&&(clearInterval(this.healthCheckInterval),this.healthCheckInterval=null),z2.destroy(),f1.destroy(),U.destroy(),this.errorHistory.length=0,this.recoveryStrategies.clear(),e.instance=null,console.log("\u{1F517} ServiceIntegration: Destroyed")}setupRecoveryStrategies(){this.recoveryStrategies.set("NETWORK_CONNECTION_FAILED",[{name:"reconnect",execute:async a=>{a.roomId&&await U.connectToRoom(a.roomId)}}]),this.recoveryStrategies.set("SEQUENCE_GAP",[{name:"triggerRecovery",execute:async a=>{a.roomId&&await z2.startRecovery(a.roomId)}}]),this.recoveryStrategies.set("GAME_STATE_ERROR",[{name:"requestStateSync",execute:async a=>{a.roomId&&a.isConnected&&U.send(a.roomId,"request_state_sync",{})}}]),this.recoveryStrategies.set("CONNECTION_LOST",[{name:"reconnectAndRecover",execute:async a=>{a.roomId&&(await U.connectToRoom(a.roomId),await z2.startRecovery(a.roomId))}}])}setupErrorListeners(){U.addEventListener("connectionFailed",a=>{let r=a,n=this.createServiceError("NETWORK_CONNECTION_FAILED","HIGH","Network connection failed","NetworkService",r.detail);this.handleError(n)}),U.addEventListener("connectionError",a=>{let r=a,n=this.createServiceError("NETWORK_CONNECTION_ERROR","MEDIUM","Network connection error","NetworkService",r.detail);this.handleError(n)}),z2.addEventListener("recoveryFailed",a=>{let r=a,n=this.createServiceError("RECOVERY_FAILED","HIGH",`Recovery failed: ${r.detail.error}`,"RecoveryService",r.detail);this.handleError(n)}),z2.addEventListener("sequenceGap",a=>{let r=a,n=this.createServiceError("SEQUENCE_GAP","MEDIUM",`Sequence gap detected: ${r.detail.gap.start}-${r.detail.gap.end}`,"RecoveryService",r.detail);this.handleError(n)}),f1.addEventListener("stateChange",a=>{let n=a.detail.state;if(n.error){let o=this.createServiceError("GAME_STATE_ERROR","HIGH",n.error,"GameService",{phase:n.phase,roomId:n.roomId});this.handleError(o)}})}setupServiceIntegrations(){f1.addEventListener("stateChange",a=>{let n=a.detail.state;n.roomId&&n.isConnected&&(z2.getRecoveryStatus(n.roomId).initialized||z2.initializeRoom(n.roomId))}),z2.addEventListener("sequenceGap",a=>{let r=a,{roomId:n,gap:o}=r.detail;o.end-o.start>=5&&(console.log(`\u{1F504} Auto-triggering recovery for large gap in ${n}`),this.triggerRecovery("SEQUENCE_GAP"))}),U.addEventListener("disconnected",a=>{a.detail.intentional||console.log("\u{1F504} Unintentional disconnection detected, monitoring for recovery")})}async initializeNetworkService(){console.log("\u2705 NetworkService integrated")}async initializeGameService(){console.log("\u2705 GameService integrated")}async initializeRecoveryService(){console.log("\u2705 RecoveryService integrated")}startHealthMonitoring(){this.healthCheckInterval=setInterval(()=>{this.performHealthCheck()},this.config.healthCheckInterval),console.log(`\u{1FA7A} Health monitoring started (${this.config.healthCheckInterval}ms interval)`)}performHealthCheck(){this.metrics.lastHealthCheck=Date.now();let a=this.getHealthStatus();a.overall.healthy||(console.warn("\u26A0\uFE0F Health check detected issues:",a.overall.issues),this.dispatchEvent(new CustomEvent("healthIssue",{detail:{healthStatus:a,timestamp:Date.now()}})),this.config.autoRecovery&&this.triggerRecovery())}async handleError(a){this.metrics.totalErrors++,this.errorHistory.push(a),this.errorHistory.length>this.config.errorRetention&&this.errorHistory.shift(),console.error(`\u{1F6A8} Service Error [${a.severity}] ${a.type}:`,a.message,a.context),this.dispatchEvent(new CustomEvent("error",{detail:{error:a,timestamp:Date.now()}})),this.config.autoRecovery&&this.shouldTriggerAutoRecovery(a)&&await this.triggerRecovery(a.type),this.checkErrorThreshold()}createServiceError(a,r,n,o,i){return{type:a,severity:r,message:n,source:o,timestamp:Date.now(),context:i}}shouldTriggerAutoRecovery(a){return a.severity==="HIGH"||a.severity==="CRITICAL"}checkErrorThreshold(){let a=this.getRecentErrors(this.config.errorWindowMs);a.length>=this.config.errorThreshold&&(console.warn(`\u26A0\uFE0F Error threshold exceeded: ${a.length} errors in ${this.config.errorWindowMs}ms`),this.dispatchEvent(new CustomEvent("errorThresholdExceeded",{detail:{errorCount:a.length,windowMs:this.config.errorWindowMs,timestamp:Date.now()}})))}getRecentErrors(a){let r=Date.now()-a;return this.errorHistory.filter(n=>n.timestamp>=r)}calculateOverallHealth(a,r,n){let o=[];return a.isDestroyed&&o.push("NetworkService destroyed"),r.error&&o.push(`Game error: ${r.error}`),n?.isRecovering&&o.push("Recovery in progress"),n?.gapsDetected>0&&o.push(`Sequence gaps detected: ${n.gapsDetected}`),{healthy:o.length===0,issues:o}}getIntegrationStatus(){return{initialized:this.isInitialized,destroyed:this.isDestroyed,errorCount:this.errorHistory.length,lastError:this.errorHistory[this.errorHistory.length-1]||null,healthCheckEnabled:this.healthCheckInterval!==null,autoRecoveryEnabled:this.config.autoRecovery}}getAllRecoveryStrategies(){let a=[];for(let r of this.recoveryStrategies.values())a.push(...r);return a}},Y1=g4.getInstance();function o8(){return Y1.getHealthStatus()}async function Gc(){await Y1.initialize()}function Vc(){Y1.destroy()}var Fc=x(L(),1),Eg=(0,v3.createContext)(null);var jc=({children:e,roomId:t,playerName:a,initialData:r={}})=>{let[n,o]=(0,v3.useState)(!1),[i,l]=(0,v3.useState)(null),[s,c]=(0,v3.useState)(null);(0,v3.useEffect)(()=>{t&&a&&(async()=>{try{if(o8().overall.healthy&&t&&a){console.log("\u{1F680} GAME_CONTEXT: Phase 1-4 Enterprise Architecture initializing");let m=f1.addListener(b=>{c(b)});return c(f1.getState()),o(!0),m}else throw new Error("Phase 1-4 services not healthy or missing room/player data")}catch(u){console.error("Failed to initialize GameContext:",u),l(u.message)}})()},[t,a]);let f={isInitialized:n,error:i,playerName:a,roomId:t,gameState:s,currentPhase:s?.phase||"waiting",isConnected:o8().network.healthy,actions:{leaveGame:()=>f1.disconnect()},myHand:s?.hand||[],scores:s?.scores||{},isMyTurn:s?.currentPlayer===a};return(0,Fc.jsx)(Eg.Provider,{value:f,children:e})};var rt=x(z(),1);var i8={};ka(i8,{ADVISOR_BLACK:()=>v4,ADVISOR_RED:()=>h4,CANNON_BLACK:()=>E4,CANNON_RED:()=>R4,CHARIOT_BLACK:()=>w4,CHARIOT_RED:()=>x4,ELEPHANT_BLACK:()=>b4,ELEPHANT_RED:()=>y4,GENERAL_BLACK:()=>j0,GENERAL_RED:()=>V0,HORSE_BLACK:()=>S4,HORSE_RED:()=>F0,SOLDIER_BLACK:()=>Y0,SOLDIER_RED:()=>N4,default:()=>Gg,getPieceAsset:()=>Vg});var V0=`data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">%0A    <text x="50" y="50" %0A          font-family="'SimSun', '\u5B8B\u4F53', serif" %0A          font-size="70" %0A          font-weight="bold" %0A          fill="%23dc3545" %0A          text-anchor="middle" %0A          dominant-baseline="central">\u5E25</text>%0A</svg>`;var j0=`data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">%0A    <text x="50" y="50" %0A          font-family="'SimSun', '\u5B8B\u4F53', serif" %0A          font-size="70" %0A          font-weight="bold" %0A          fill="%23495057" %0A          text-anchor="middle" %0A          dominant-baseline="central">\u5C07</text>%0A</svg>`;var h4=`data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">%0A    <text x="50" y="50" %0A          font-family="'SimSun', '\u5B8B\u4F53', serif" %0A          font-size="70" %0A          font-weight="bold" %0A          fill="%23dc3545" %0A          text-anchor="middle" %0A          dominant-baseline="central">\u4ED5</text>%0A</svg>`;var v4=`data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">%0A    <text x="50" y="50" %0A          font-family="'SimSun', '\u5B8B\u4F53', serif" %0A          font-size="70" %0A          font-weight="bold" %0A          fill="%23495057" %0A          text-anchor="middle" %0A          dominant-baseline="central">\u58EB</text>%0A</svg>`;var y4=`data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">%0A    <text x="50" y="50" %0A          font-family="'SimSun', '\u5B8B\u4F53', serif" %0A          font-size="70" %0A          font-weight="bold" %0A          fill="%23dc3545" %0A          text-anchor="middle" %0A          dominant-baseline="central">\u76F8</text>%0A</svg>`;var b4=`data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">%0A    <text x="50" y="50" %0A          font-family="'SimSun', '\u5B8B\u4F53', serif" %0A          font-size="70" %0A          font-weight="bold" %0A          fill="%23495057" %0A          text-anchor="middle" %0A          dominant-baseline="central">\u8C61</text>%0A</svg>`;var x4=`data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">%0A    <text x="50" y="50" %0A          font-family="'SimSun', '\u5B8B\u4F53', serif" %0A          font-size="70" %0A          font-weight="bold" %0A          fill="%23dc3545" %0A          text-anchor="middle" %0A          dominant-baseline="central">\u4FE5</text>%0A</svg>`;var w4=`data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">%0A    <text x="50" y="50" %0A          font-family="'SimSun', '\u5B8B\u4F53', serif" %0A          font-size="70" %0A          font-weight="bold" %0A          fill="%23495057" %0A          text-anchor="middle" %0A          dominant-baseline="central">\u8ECA</text>%0A</svg>`;var F0=`data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">%0A    <text x="50" y="50" %0A          font-family="'SimSun', '\u5B8B\u4F53', serif" %0A          font-size="70" %0A          font-weight="bold" %0A          fill="%23dc3545" %0A          text-anchor="middle" %0A          dominant-baseline="central">\u508C</text>%0A</svg>`;var S4=`data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">%0A    <text x="50" y="50" %0A          font-family="'SimSun', '\u5B8B\u4F53', serif" %0A          font-size="70" %0A          font-weight="bold" %0A          fill="%23495057" %0A          text-anchor="middle" %0A          dominant-baseline="central">\u99AC</text>%0A</svg>`;var R4=`data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">%0A    <text x="50" y="50" %0A          font-family="'SimSun', '\u5B8B\u4F53', serif" %0A          font-size="70" %0A          font-weight="bold" %0A          fill="%23dc3545" %0A          text-anchor="middle" %0A          dominant-baseline="central">\u70AE</text>%0A</svg>`;var E4=`data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">%0A    <text x="50" y="50" %0A          font-family="'SimSun', '\u5B8B\u4F53', serif" %0A          font-size="70" %0A          font-weight="bold" %0A          fill="%23495057" %0A          text-anchor="middle" %0A          dominant-baseline="central">\u7832</text>%0A</svg>`;var N4=`data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">%0A    <text x="50" y="50" %0A          font-family="'SimSun', '\u5B8B\u4F53', serif" %0A          font-size="70" %0A          font-weight="bold" %0A          fill="%23dc3545" %0A          text-anchor="middle" %0A          dominant-baseline="central">\u5175</text>%0A</svg>`;var Y0=`data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">%0A    <text x="50" y="50" %0A          font-family="'SimSun', '\u5B8B\u4F53', serif" %0A          font-size="70" %0A          font-weight="bold" %0A          fill="%23495057" %0A          text-anchor="middle" %0A          dominant-baseline="central">\u5352</text>%0A</svg>`;var Yc={GENERAL_RED:V0,GENERAL_BLACK:j0,ADVISOR_RED:h4,ADVISOR_BLACK:v4,ELEPHANT_RED:y4,ELEPHANT_BLACK:b4,CHARIOT_RED:x4,CHARIOT_BLACK:w4,HORSE_RED:F0,HORSE_BLACK:S4,CANNON_RED:R4,CANNON_BLACK:E4,SOLDIER_RED:N4,SOLDIER_BLACK:Y0},Gg=Yc,Vg=e=>Yc[e]||null;var h8={};ka(h8,{ADVISOR_BLACK:()=>s8,ADVISOR_RED:()=>l8,CANNON_BLACK:()=>sa,CANNON_RED:()=>m8,CHARIOT_BLACK:()=>f8,CHARIOT_RED:()=>d8,ELEPHANT_BLACK:()=>u8,ELEPHANT_RED:()=>c8,GENERAL_BLACK:()=>la,GENERAL_RED:()=>ia,HORSE_BLACK:()=>p8,HORSE_RED:()=>C8,SOLDIER_BLACK:()=>ca,SOLDIER_RED:()=>g8,default:()=>ah,getPieceAsset:()=>rh});var ia='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="448" height="448" viewBox="0 0 448 448" version="1.1"><path d="" stroke="none" fill="%23ffc107" fill-rule="evenodd"/><path d="M 145.264 44.804 C 129.579 51.083, 123.607 63.909, 130.405 76.716 C 133.777 83.067, 133.396 86.190, 128.334 93.696 C 124.758 98.999, 124.442 103, 127.600 103 C 130.347 103, 136.391 99.941, 141.631 95.899 C 147.300 91.525, 155 82.248, 155 79.791 C 155 78.952, 153.208 77.080, 151.019 75.631 C 141.039 69.027, 147.188 60.219, 160.500 62.051 C 167.437 63.006, 172.875 62.145, 174.314 59.864 C 175.588 57.844, 174.573 55.122, 172.273 54.393 C 166.320 52.505, 162.396 50.131, 159.715 46.795 C 157.181 43.642, 156.059 43.009, 153.083 43.054 C 151.112 43.084, 147.594 43.872, 145.264 44.804 M 315.173 50.075 C 308.516 50.938, 302.262 52.659, 300.380 54.145 C 299.764 54.631, 297.796 58.003, 296.007 61.638 C 290.482 72.860, 279.234 82.535, 267.294 86.336 C 259.084 88.950, 254.806 89.184, 246.527 87.474 C 239.873 86.099, 237.600 86.033, 232.066 87.049 C 228.455 87.713, 223.983 88.873, 222.128 89.628 C 217.440 91.535, 216.641 91.351, 218.443 88.777 C 219.299 87.555, 220 85.322, 220 83.815 C 220 78.981, 223.835 70.564, 227.744 66.819 C 232.854 61.924, 237.030 60, 242.550 60 C 246.483 60, 247.712 60.512, 250.521 63.321 C 252.614 65.414, 254.105 68.096, 254.552 70.571 C 255.583 76.284, 256.521 77, 262.973 77 C 270.087 77, 274.721 75.456, 275.562 72.805 C 276.678 69.288, 274.044 67.751, 268.921 68.932 C 262.516 70.408, 262.228 70.324, 261.470 66.750 C 260.495 62.152, 256.585 57.354, 251.692 54.754 C 248.212 52.904, 245.887 52.523, 238 52.513 C 229.637 52.502, 227.827 52.830, 222.879 55.261 C 215.423 58.922, 208.880 64.821, 203.021 73.163 L 198.219 80.002 197.749 76.251 C 197.187 71.769, 198.094 69.695, 202.746 64.827 C 205.558 61.884, 206.127 60.642, 205.609 58.577 C 204.734 55.091, 201.918 55.255, 197.603 59.044 C 192.325 63.678, 189.644 70.006, 190.285 76.316 C 191.832 91.540, 184.912 102.475, 169.106 109.777 C 162.047 113.039, 148.636 118, 146.879 118 C 145.670 118, 149.790 106.916, 152.546 102.751 C 153.911 100.688, 155.520 99, 156.120 99 C 156.720 99, 158.548 100.125, 160.182 101.500 C 163.947 104.668, 168.495 104.813, 170.098 101.817 C 171.093 99.958, 170.933 99.364, 169.022 97.817 C 167.788 96.818, 166.144 96, 165.368 96 C 164.592 96, 163.445 94.875, 162.818 93.500 C 161.891 91.466, 160.964 91, 157.842 91 C 151.498 91, 143.742 99.343, 141.573 108.500 C 140.421 113.369, 136.079 119.981, 132.671 122.059 C 128.407 124.659, 128 124.539, 128 120.674 C 128 115.864, 124.595 113, 118.877 113 C 116.405 113, 113.509 113.661, 112.441 114.468 C 111.374 115.276, 108.475 115.961, 106 115.990 C 103.525 116.020, 99.538 116.934, 97.141 118.022 C 94.743 119.110, 91.143 120.007, 89.141 120.015 C 81.697 120.045, 76.698 125.036, 76.392 132.743 L 76.205 137.445 71.602 138.619 C 69.071 139.264, 67.011 139.502, 67.024 139.146 C 67.037 138.791, 67.441 136.806, 67.922 134.735 C 68.609 131.777, 68.441 130.531, 67.139 128.924 C 64.911 126.172, 63.272 127.006, 58.052 133.547 C 52.233 140.840, 41.892 149.187, 32.309 154.327 C 23.983 158.792, 22.505 160.979, 26.189 163.380 C 30.808 166.391, 54.170 168.110, 63.500 166.125 C 67.105 165.359, 68.242 161.381, 65.441 159.334 C 63.404 157.843, 63.145 157.975, 73.750 155.096 C 80.440 153.280, 81.001 153.258, 81.010 154.814 C 81.027 157.868, 85.698 166.617, 88.478 168.804 L 91.207 170.951 88.198 178.225 C 78.991 200.484, 73.514 225.476, 72.358 250.500 C 71.821 262.141, 71.379 264.975, 69.736 267.322 C 68.650 268.875, 67.134 272.228, 66.368 274.773 C 63.295 284.981, 70.071 295.530, 81.318 298.047 C 85.591 299.003, 88.851 299.024, 95.737 298.141 C 100.631 297.514, 105.462 297, 106.473 297 C 108.173 297, 108.190 297.133, 106.693 298.787 C 103.157 302.694, 100.631 310.345, 100.680 317 C 100.776 329.990, 108.198 339.222, 120.312 341.422 C 125.478 342.360, 130.269 340.597, 133.950 336.404 C 138.945 330.715, 137.958 323.227, 131.936 321.127 C 129.517 320.284, 128.034 320.377, 125.238 321.545 C 121.192 323.236, 118.798 322.153, 120.922 319.594 C 123.077 316.998, 128.658 315.685, 132.237 316.933 C 142.851 320.633, 144.003 331.559, 134.845 341.671 C 130.466 346.507, 129.879 347.644, 130.405 350.276 C 132.511 360.805, 151.017 371.910, 164.584 370.785 L 169.885 370.345 171.986 375.922 C 173.141 378.990, 175.596 383.568, 177.441 386.096 C 180.260 389.958, 181.942 391.117, 187.965 393.350 C 211.909 402.225, 236.434 405.896, 259.500 404.057 C 274.755 402.841, 286.109 399.961, 297.569 394.400 C 305.061 390.765, 307.634 390, 312.376 390 C 321.762 390, 326.245 388.349, 333.196 382.333 C 336.663 379.332, 340.092 375.751, 340.815 374.375 C 343.393 369.471, 339.704 362.491, 333.923 361.335 C 327.386 360.027, 332.703 356.702, 343.952 355.063 C 359.256 352.833, 381.376 343.225, 386.046 336.778 C 391.849 328.767, 392.042 318.326, 386.543 309.924 C 385.256 307.958, 383.219 302.783, 382.017 298.424 C 377.146 280.764, 370.810 266.707, 364.110 258.698 L 360.093 253.895 363.340 249.642 C 376.876 231.909, 372.914 211.114, 354.236 201.861 C 349.964 199.744, 348.067 199.503, 334.873 199.393 C 326.829 199.325, 319.729 198.950, 319.095 198.559 C 318.462 198.167, 317.165 196.194, 316.214 194.174 C 314.057 189.593, 312.261 189.516, 310.143 193.912 C 306.673 201.116, 298.008 204.022, 291.673 200.107 C 287.609 197.595, 284.561 191.885, 285.432 188.415 C 286.328 184.844, 289 185.316, 289 189.045 C 289 190.985, 289.936 193.027, 291.576 194.667 C 293.745 196.836, 294.784 197.158, 298.154 196.706 C 300.355 196.411, 303.082 195.344, 304.216 194.335 C 308.890 190.172, 310.347 181.159, 307.462 174.254 C 304.374 166.863, 300.360 164.319, 290.424 163.456 C 278.874 162.453, 273.296 158.266, 270.444 148.457 C 266.795 135.903, 257.326 127.286, 244.594 124.933 C 240.330 124.145, 238.275 124.270, 234.511 125.548 C 230.985 126.745, 229.112 126.895, 227.142 126.139 C 221.698 124.050, 217.979 123.865, 212.767 125.424 C 202.491 128.499, 192.976 138.692, 186.613 153.442 C 182.148 163.794, 178.516 167.451, 170.130 170.041 C 162.643 172.354, 159.549 174.807, 157.930 179.712 C 155.518 187.021, 159.825 194.126, 167.546 195.575 C 174.442 196.868, 180.891 191.398, 179.413 185.509 C 178.543 182.044, 181.699 182.078, 183.018 185.548 C 184.374 189.114, 181.973 194.417, 177.810 197.050 C 174.882 198.903, 173.489 199.080, 165.740 198.583 C 155.352 197.916, 154.477 198.467, 149.905 208.550 C 147.111 214.712, 146.826 214.981, 138.519 219.293 L 130 223.716 129.984 216.108 C 129.970 208.908, 129.228 204.894, 125.533 192 C 124.666 188.975, 123.678 183.267, 123.337 179.316 L 122.718 172.132 126.352 168.704 C 131.498 163.851, 133 159.553, 133 149.681 L 133 141.297 139.550 139.524 C 147.420 137.394, 152.537 137.836, 160.016 141.294 C 168.103 145.033, 170.419 145.438, 172.401 143.456 C 174.760 141.097, 174.064 139.804, 169.208 137.526 C 164.745 135.432, 163.790 134, 166.856 134 C 167.877 134, 170.747 132.447, 173.233 130.548 C 181.913 123.921, 185.037 122.843, 198.276 121.906 C 225.493 119.979, 231.976 117.976, 227.023 113.023 C 225.910 111.910, 224.100 111, 223 111 C 220.534 111, 220.377 109.453, 222.750 108.542 C 227.429 106.743, 238.959 105, 246.171 105 C 260.171 105, 272.112 109.210, 276.012 115.520 C 279.786 121.627, 281.623 122.290, 292.500 121.474 C 300.079 120.906, 302.252 120.397, 302.991 119.017 C 303.618 117.844, 303.494 116.690, 302.608 115.479 C 301.461 113.910, 300.276 113.759, 293.303 114.297 C 284.538 114.973, 282.985 114.332, 283.022 110.050 C 283.048 107.056, 286.379 99.345, 288.805 96.662 C 289.737 95.631, 292.265 93.886, 294.423 92.785 C 299.592 90.147, 304.530 90.844, 311.223 95.157 C 322.312 102.304, 329.345 102.077, 335.662 94.368 C 339.413 89.790, 346.013 86, 350.234 86 C 354.341 86, 356 84.972, 356 82.428 C 356 78.857, 353.068 77.797, 346.811 79.107 C 340.299 80.470, 336.819 82.529, 331.042 88.439 C 324.978 94.642, 321.436 94.485, 314.260 87.694 C 307.744 81.527, 309.192 74.572, 317.784 70.771 C 321.903 68.949, 323.425 68.818, 331.949 69.549 C 337.202 69.999, 344.906 70.396, 349.068 70.432 C 356.011 70.491, 357.251 70.171, 364.068 66.563 C 368.156 64.401, 373.300 62.376, 375.500 62.065 C 379.152 61.549, 379.500 61.239, 379.500 58.500 C 379.500 55.631, 379.292 55.487, 374.760 55.196 C 370.866 54.946, 368.901 55.516, 363.760 58.388 C 348.924 66.676, 336 65.069, 336 54.936 C 336 51.578, 335.596 50.797, 333.435 49.975 C 330.497 48.858, 324.287 48.892, 315.173 50.075 M 183.200 55.200 C 181.400 57, 181.753 59.798, 183.928 60.961 C 187.664 62.961, 190.961 59.664, 188.961 55.928 C 187.798 53.753, 185 53.400, 183.200 55.200 M 282.046 59.445 C 279.957 61.962, 281.163 65.461, 284.242 65.816 C 286.361 66.060, 287.242 65.563, 288.123 63.629 C 288.750 62.253, 288.993 60.424, 288.663 59.564 C 287.909 57.599, 283.641 57.523, 282.046 59.445 M 368 94 C 365.590 96.410, 365.513 97.370, 367.564 99.421 C 368.949 100.806, 369.450 100.818, 371.943 99.530 C 375.272 97.808, 376.482 95.285, 374.895 93.373 C 373.266 91.410, 370.322 91.678, 368 94 M 354.500 104.878 C 352.300 105.886, 347.294 109.691, 343.376 113.332 C 339.458 116.974, 335.041 120.414, 333.561 120.977 C 329.773 122.417, 324.378 122.250, 317.586 120.480 C 313.179 119.332, 311.416 119.240, 310.376 120.103 C 307.522 122.471, 308.941 124.865, 315.847 129.332 C 323.294 134.150, 325.144 136.310, 329.866 145.707 C 335.787 157.489, 341.638 162, 351 162 C 356.297 162, 358.545 160.292, 357.515 157.048 C 356.979 155.360, 356.024 155, 352.080 155 C 346.181 155, 341.460 152.081, 338.282 146.470 C 337.045 144.287, 336.025 142.221, 336.016 141.879 C 336.007 141.538, 339.712 140.935, 344.250 140.541 C 348.788 140.146, 353.069 139.352, 353.764 138.777 C 354.665 138.032, 354.849 135.976, 354.405 131.616 C 353.621 123.929, 354.987 118.776, 359.486 112.449 C 363.513 106.785, 363.539 106.681, 361.429 104.571 C 359.484 102.627, 359.401 102.631, 354.500 104.878 M 77.086 109.618 C 74.728 112.616, 74.774 113.824, 77.310 115.423 C 80.500 117.436, 85.405 112.454, 83.388 109.250 C 81.668 106.519, 79.420 106.650, 77.086 109.618 M 117 120.733 C 114.599 121.640, 114.032 123.165, 114.015 128.750 C 113.999 134.227, 114.337 134.552, 118.794 133.358 C 120.911 132.791, 121.066 132.275, 120.794 126.701 C 120.501 120.682, 119.849 119.657, 117 120.733 M 97.693 125.944 C 95.699 127.221, 93.661 127.603, 90.654 127.264 C 84.715 126.595, 83.845 127.998, 84.206 137.655 C 84.492 145.278, 84.571 145.500, 87 145.500 C 89.333 145.500, 89.534 145.099, 90.004 139.500 C 90.582 132.623, 91.349 131, 94.024 131 C 96.878 131, 98 134.086, 98 141.934 C 98 148.304, 98.195 149, 99.975 149 C 101.682 149, 101.818 148.652, 100.975 146.435 C 98.908 140.996, 100.992 136, 105.329 136 C 106.705 136, 107 134.940, 107 130 L 107 124 103.750 124.073 C 101.963 124.113, 99.237 124.955, 97.693 125.944 M 179.071 140.867 C 178.486 141.960, 178.279 143.563, 178.611 144.428 C 179.428 146.559, 184.867 146.510, 185.691 144.364 C 187.222 140.374, 181.074 137.125, 179.071 140.867 M 112.190 142.178 C 107.110 143.314, 107.148 144.785, 112.322 147.258 C 116.908 149.450, 117.098 152.082, 112.887 155.081 C 111.175 156.300, 109.132 158.834, 108.347 160.711 C 107.155 163.565, 106.476 164.074, 104.210 163.813 C 102.396 163.603, 101.405 162.839, 101.213 161.500 C 100.968 159.787, 100.164 159.500, 95.611 159.500 C 90.890 159.500, 90.412 159.687, 91.341 161.175 C 91.916 162.096, 94.100 163.812, 96.193 164.989 C 98.287 166.165, 100 167.718, 100 168.440 C 100 169.161, 98.821 172.395, 97.380 175.626 C 87.476 197.836, 80.042 229.993, 80.013 250.750 L 80 260 82.599 260 C 92.256 260, 99.883 271.311, 95.374 278.944 C 93.958 281.341, 92.922 282.017, 91.009 281.793 C 88.669 281.520, 88.517 281.168, 88.759 276.588 C 89.072 270.641, 87.154 268, 82.519 268 C 79.289 268, 76.371 270.323, 74.125 274.684 C 71.490 279.801, 73.892 286.859, 79.205 289.606 C 81.868 290.983, 84.066 291.123, 92.938 290.482 C 107.770 289.411, 128.361 289.345, 135.738 290.347 L 141.976 291.194 139.588 285.794 C 136.938 279.802, 137.488 277, 141.314 277 C 143.075 277, 144.185 278.407, 146.728 283.867 C 152.187 295.582, 162.788 303.717, 178.141 307.972 C 188.354 310.802, 194.576 310.652, 199.268 307.464 C 201.321 306.069, 202.971 304.607, 202.935 304.214 C 202.899 303.821, 199.497 300.800, 195.375 297.500 C 184.679 288.938, 180.084 280.382, 181.543 271.748 C 182.099 268.452, 183.539 266.401, 189.115 260.956 C 195.392 254.826, 196 253.875, 196 250.175 C 196 245.908, 194.381 243.789, 192.904 246.122 C 192.423 246.880, 192.024 248.758, 192.015 250.295 C 191.995 254.061, 187.940 258, 184.084 258 C 178.027 258, 174.394 250.322, 175.264 239.361 C 175.753 233.203, 179.526 223.287, 182.723 219.753 C 183.958 218.388, 184.072 217.672, 183.194 216.794 C 181.702 215.302, 166.873 217.166, 158.205 219.934 C 142.892 224.827, 124.426 235.333, 118.560 242.492 C 114.597 247.329, 113.043 247.900, 110.573 245.431 C 108.557 243.414, 109.617 241.270, 115.999 234.456 C 120.124 230.052, 120.868 228.576, 121.872 222.812 C 123.193 215.226, 122.322 207.137, 119.092 197 C 117.953 193.425, 116.475 185.655, 115.808 179.732 L 114.595 168.964 119.493 164.655 C 124.320 160.407, 124.401 160.237, 125.111 152.922 C 126.154 142.159, 125.706 140.976, 120.642 141.107 C 118.364 141.166, 114.561 141.648, 112.190 142.178 M 364.200 153.200 C 362.428 154.972, 362.734 156.700, 365.115 158.368 C 368.598 160.808, 371.802 158.102, 370.455 153.859 C 369.786 151.749, 366.045 151.355, 364.200 153.200 M 222.483 158.535 C 218.527 160.488, 216.759 163.423, 215.976 169.339 C 215.399 173.700, 215.552 174.259, 217.532 175.012 C 221.968 176.699, 221.627 182, 217.082 182 C 214.612 182, 214.203 182.583, 212.344 188.750 C 210.510 194.836, 210.467 195.567, 211.905 196.180 C 214.668 197.357, 215 197.084, 215 193.635 C 215 189.356, 218.331 185, 221.604 185 C 224.866 185, 225.696 187.551, 223.593 191.111 C 221.914 193.954, 221.924 194, 224.193 194.011 C 225.462 194.017, 228.554 194.645, 231.065 195.407 C 233.576 196.170, 236.849 196.560, 238.338 196.276 C 242.164 195.544, 245 191.521, 245 186.823 C 245 182.058, 242.314 168.690, 240.469 164.272 C 237.840 157.978, 229.197 155.221, 222.483 158.535 M 228 174.694 C 225.304 175.657, 223.987 178.108, 225.074 180.138 C 227.349 184.388, 237.007 180.750, 235.560 176.188 C 234.869 174.012, 231.674 173.381, 228 174.694 M 285.440 215.451 C 282.235 220.343, 285.962 224.078, 299.393 229.431 C 306.274 232.173, 306.289 232.174, 308.893 230.240 C 315.022 225.685, 311.526 219.372, 300.705 215.458 C 291.791 212.234, 287.549 212.232, 285.440 215.451 M 275.592 239.560 C 272.287 244.537, 272 245.556, 272 252.306 C 272 261.833, 269.885 267.799, 264.310 274 C 258.511 280.451, 253.190 282.055, 250.250 278.240 C 247.450 274.606, 248.999 270.336, 254.500 266.521 C 256.080 265.426, 256.243 264.874, 255.277 263.894 C 252.262 260.837, 245.002 268.338, 245.013 274.500 C 245.016 276.150, 246.090 279.712, 247.399 282.416 C 249.371 286.489, 249.602 287.844, 248.742 290.312 C 245.594 299.341, 226.782 309.127, 215.177 307.772 C 212.013 307.403, 210.560 308.046, 204.507 312.493 C 194.242 320.036, 184.328 326.253, 172.487 332.577 C 164.419 336.885, 162 338.648, 162 340.220 C 162 342.207, 168.229 349, 170.051 349 C 172.037 349, 192.289 339.587, 202.401 333.963 C 213.721 327.669, 214.884 327.284, 216.800 329.200 C 218.935 331.335, 218.110 333.058, 211.750 339.736 C 204.741 347.095, 193.748 355.619, 183.629 361.538 C 176.948 365.446, 176.877 365.532, 177.514 368.996 C 178.556 374.661, 182.269 380.556, 184.547 380.163 C 185.621 379.977, 190.700 377.277, 195.834 374.163 C 226.050 355.831, 255.285 327.176, 265.484 305.892 C 267.418 301.858, 269 297.978, 269 297.271 C 269 296.564, 265.288 298.804, 260.750 302.248 C 250.841 309.769, 243.909 313.563, 241.655 312.698 C 238.047 311.313, 239.993 307.689, 249.765 297.591 C 260.205 286.803, 268.097 276.777, 275.026 265.500 C 279.921 257.533, 287.019 242.876, 286.962 240.853 C 286.941 240.109, 285.183 238.296, 283.054 236.825 L 279.184 234.150 275.592 239.560 M 309.393 247.082 C 306.458 247.933, 306.251 248.323, 305.643 254.138 C 305.290 257.524, 305 263.719, 305 267.907 C 305 283.836, 300.476 329.372, 297.330 345.100 C 296.743 348.033, 296.854 348.184, 299.102 347.520 C 308.671 344.692, 319.350 333.965, 321.992 324.528 C 323.440 319.357, 322.926 297.836, 320.964 281.500 C 319.655 270.596, 316.245 251.776, 314.974 248.431 C 313.965 245.779, 313.921 245.768, 309.393 247.082 M 329.235 251.445 C 327.439 252.254, 325.710 253.591, 325.394 254.416 C 325.077 255.241, 325.739 262.347, 326.863 270.208 C 327.988 278.069, 329.221 288.506, 329.604 293.402 C 330.202 301.060, 330.668 302.716, 332.932 305.250 C 334.973 307.534, 336.681 308.316, 340.532 308.729 C 346.142 309.330, 348 310.415, 348 313.087 C 348 315.191, 345.990 316.435, 341.084 317.367 C 335.346 318.458, 331.338 322.258, 330.578 327.330 C 329.511 334.445, 323.531 342.197, 314.074 348.724 C 313.840 348.886, 312.701 356.439, 311.542 365.509 L 309.436 382 315.632 382 C 321.668 382, 321.987 381.864, 327.914 376.750 C 331.261 373.863, 334 370.964, 334 370.309 C 334 368.030, 332.103 367.976, 327.671 370.129 C 319.519 374.090, 317.342 370.867, 321.933 361.634 C 326.882 351.683, 329.095 350.091, 340.942 347.963 C 357.469 344.995, 376.193 337.328, 380.259 331.864 C 383.033 328.135, 383.711 320.733, 381.576 317.475 C 377.749 311.635, 370 312.671, 370 319.023 C 370 321.617, 370.360 322, 372.800 322 C 377.852 322, 379.986 326.867, 375.895 329.056 C 369.194 332.642, 360.409 324.476, 362.406 316.518 C 363.428 312.447, 368.781 307.132, 372.576 306.420 C 376.556 305.673, 376.590 305.463, 374.054 297.375 C 369.550 283.011, 361.004 268.099, 352.271 259.366 C 344.249 251.344, 335.860 248.460, 329.235 251.445 M 293.046 260.250 C 290.175 278.582, 286.472 293.720, 281.287 308.317 C 279.369 313.716, 278.065 318.399, 278.390 318.723 C 279.083 319.416, 285.974 316.517, 291.083 313.384 L 294.665 311.186 295.830 294.343 C 298.326 258.229, 298.416 254.876, 296.906 253.921 C 294.477 252.383, 294.208 252.824, 293.046 260.250 M 178.040 298.452 C 175.075 302.025, 179.809 306.018, 185.360 304.625 C 189.333 303.627, 189.015 299.549, 184.851 298.098 C 180.695 296.649, 179.484 296.712, 178.040 298.452 M 169.557 314.824 C 169.949 315.746, 170.843 318.075, 171.542 320 C 172.242 321.925, 173.111 323.443, 173.474 323.373 C 173.837 323.303, 176.360 322.033, 179.082 320.552 C 184.115 317.812, 184.720 316, 180.600 316 C 179.345 316, 176.186 315.358, 173.580 314.574 C 169.214 313.260, 168.899 313.280, 169.557 314.824 M 225.611 319.572 C 225.279 320.437, 225.486 322.040, 226.071 323.133 C 228.074 326.875, 234.222 323.626, 232.691 319.636 C 231.867 317.490, 226.428 317.441, 225.611 319.572 M 258.496 340.927 C 249.212 351.452, 237.205 362, 226 369.474 C 216.145 376.047, 200.533 384.333, 195.750 385.529 C 194.238 385.907, 193 386.522, 193 386.894 C 193 387.674, 209.876 392.482, 217.917 393.993 C 224.260 395.186, 224.314 395.159, 235.392 385.498 C 246.987 375.385, 258.604 360.158, 267.968 342.798 L 271.923 335.465 268.550 334.409 C 265.195 333.360, 265.139 333.396, 258.496 340.927 M 278.368 346.601 C 264.801 366.716, 250.339 383.636, 239.796 391.730 C 237.209 393.716, 235.323 395.714, 235.605 396.170 C 235.887 396.627, 241.662 397, 248.438 397 L 260.758 397 267.129 390.240 C 273.729 383.237, 279.527 375.158, 282.646 368.615 C 284.344 365.055, 284.349 364.775, 282.738 363.873 C 279.296 361.947, 278.859 359.432, 281.016 353.959 C 283.183 348.463, 287.099 335, 286.532 335 C 286.345 335, 282.671 340.220, 278.368 346.601" stroke="none" fill="%23ffc107" fill-rule="evenodd"/></svg>';var la='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="446" height="446" viewBox="0 0 446 446" version="1.1"><path d="" stroke="none" fill="%230d6efd" fill-rule="evenodd"/><path d="M 276.676 61.467 C 273.070 65.073, 273.707 128.490, 277.471 140.764 C 280.888 151.905, 289.970 157.973, 303.250 157.990 L 311 158 311 179 C 311 190.550, 310.605 200, 310.122 200 C 309.640 200, 308.663 199.299, 307.952 198.442 C 304.450 194.223, 287.070 186.430, 272.236 182.429 C 261.968 179.659, 259.598 178.475, 262.272 177.449 C 264.363 176.647, 273.526 178.540, 283.191 181.771 C 289.821 183.988, 291.112 184.152, 292.548 182.960 C 296.565 179.626, 290.385 164.185, 282.073 156.789 C 275.918 151.313, 266.623 147.054, 259.374 146.388 C 251.847 145.697, 248.223 143.936, 242.844 138.354 C 234.366 129.557, 226.374 126.030, 214.876 126.011 C 202.910 125.991, 195.194 130.151, 191.260 138.742 C 189.191 143.263, 188.863 145.192, 189.290 150.333 C 189.572 153.725, 190.124 157.512, 190.518 158.750 C 191.051 160.427, 190.836 161, 189.676 161 C 187.632 161, 186.960 159.787, 185.592 153.627 C 184.605 149.186, 184.130 148.500, 182.036 148.500 C 178.380 148.500, 174.656 156.399, 174.158 165.210 C 173.771 172.062, 173.771 172.062, 169.259 175.165 C 160.240 181.371, 146.527 197.358, 147.219 200.861 C 147.373 201.645, 148.331 202.784, 149.348 203.393 C 150.918 204.334, 151.663 203.900, 154.318 200.500 C 158.597 195.019, 173.594 180, 174.788 180 C 175.321 180, 176.286 181.276, 176.932 182.835 C 177.578 184.395, 179.449 187.141, 181.091 188.939 C 183.916 192.031, 184.040 192.523, 183.409 198.101 C 182.811 203.389, 182.399 204.208, 179.411 206.055 C 177.580 207.187, 173.981 209.848, 171.415 211.968 C 168.849 214.089, 164.711 216.602, 162.220 217.554 C 159.729 218.505, 154.996 220.806, 151.704 222.667 C 148.411 224.528, 145.623 225.927, 145.507 225.775 C 145.392 225.624, 144.117 223.025, 142.674 220 C 141.231 216.975, 139.494 213.735, 138.813 212.801 C 137.796 211.405, 137.954 210.423, 139.698 207.301 C 143.527 200.445, 145.311 192.293, 144.713 184.382 C 143.807 172.404, 139.025 164.433, 128.817 157.882 L 123.689 154.592 131.818 146.878 C 150.951 128.720, 175.213 116.346, 200.371 111.915 C 219.795 108.493, 239.721 110.113, 256.500 116.476 C 267.055 120.479, 267.163 120.498, 268.611 118.518 C 270.694 115.668, 268.764 113.611, 261.312 110.742 C 231.326 99.197, 200.012 100.629, 166.719 115.069 C 154.479 120.378, 137.628 131.870, 125.786 142.986 C 116.544 151.660, 115.904 152.073, 112.620 151.457 C 110.525 151.064, 107 151.440, 103.651 152.413 C 92.099 155.771, 84.455 165.285, 84.603 176.122 C 84.707 183.792, 87.668 188.471, 94.404 191.608 C 102.706 195.473, 109.074 194.508, 113.360 188.735 L 115.414 185.969 113.225 183.780 L 111.036 181.591 108.213 184.296 C 104.096 188.241, 99.762 187.962, 95.264 183.464 C 91.874 180.074, 91.751 179.702, 92.291 174.471 C 92.985 167.742, 95.898 163.404, 101.401 160.905 C 117.993 153.371, 136.407 169.728, 132.141 188.211 C 129.902 197.910, 122.728 206.103, 113 210.072 C 107.382 212.364, 93.507 211.872, 87.969 209.185 C 78.574 204.625, 72.944 198.286, 69.664 188.572 C 64.677 173.804, 71.602 149.199, 86.308 129.431 C 103.905 105.776, 137.398 85.250, 174 75.689 C 193.763 70.527, 199.620 69.747, 219 69.697 C 233.123 69.660, 239.127 70.049, 244.379 71.340 C 251.741 73.150, 254 72.580, 254 68.913 C 254 64.751, 243.435 62.998, 218.418 63.007 C 181.650 63.020, 152.852 70.980, 121 89.934 C 88.286 109.402, 68.053 135.413, 62.387 165.284 C 61.187 171.606, 60.085 174.309, 57.046 178.375 C 47.309 191.407, 42.553 206.519, 43.188 222.407 C 43.661 234.226, 46.676 242.330, 52.831 248.327 C 59.426 254.752, 71.573 258.518, 81 257.062 C 84.848 256.467, 85.863 256.695, 88.007 258.638 C 89.387 259.887, 92.829 262.175, 95.658 263.722 L 100.801 266.535 94.107 275.710 C 90.425 280.756, 85.230 286.806, 82.563 289.154 C 77.138 293.929, 74.055 299.696, 74.022 305.128 C 73.997 309.281, 76.155 315.054, 78.442 316.952 C 79.299 317.663, 80 319.226, 80 320.426 C 80 324.606, 85.138 332.963, 90.823 338.030 C 94.260 341.093, 100.581 345.052, 106.984 348.150 C 112.768 350.949, 118.857 353.906, 120.516 354.721 C 122.175 355.536, 124.627 357.089, 125.964 358.172 L 128.395 360.140 125.178 362.658 C 120.887 366.016, 119 369.935, 119 375.490 C 119 390.129, 133.794 398.218, 147.314 390.972 L 150.964 389.015 152.521 391.391 C 155.398 395.782, 173.208 402.506, 190.263 405.641 C 202.867 407.957, 231.247 407.989, 243 405.699 C 261.236 402.147, 266.328 400.115, 269.805 395 C 271.908 391.906, 272.096 390.862, 271.422 386 C 270.070 376.239, 270.710 371.895, 273.997 368.503 C 280.138 362.167, 280.054 354.631, 273.806 351.400 C 271.037 349.968, 270.927 349.663, 271.573 345.197 C 272.494 338.837, 274.640 334.629, 281.066 326.578 C 286.141 320.221, 296.474 312.140, 297.814 313.481 C 298.142 313.809, 298.454 315.849, 298.509 318.015 C 298.573 320.593, 299.366 322.761, 300.804 324.291 C 302.183 325.759, 303.001 327.907, 303.004 330.064 C 303.008 333.996, 305.929 339.356, 308.946 340.971 C 310.872 342.002, 311 342.969, 311 356.458 L 311 370.846 305.250 374.456 C 302.087 376.442, 296.238 379.707, 292.250 381.711 C 286.445 384.628, 285 385.808, 285 387.628 C 285 391.923, 287.840 392.106, 295.406 388.295 C 299.249 386.360, 304.096 383.702, 306.177 382.388 C 308.258 381.075, 310.194 380, 310.480 380 C 310.766 380, 311 385.384, 311 391.965 C 311 402.771, 311.187 404.030, 312.934 404.965 C 315.436 406.304, 315.569 406.288, 317.429 404.429 C 318.775 403.082, 319 399.205, 319 377.345 C 319 357.380, 319.272 351.924, 320.250 352.250 C 321.197 352.565, 321.565 358.876, 321.767 378.307 C 322.024 402.981, 322.111 403.989, 324.081 405.043 C 328.468 407.391, 329 405.270, 329 385.421 L 329 367.086 340.352 355.543 C 349.988 345.745, 352.172 344, 354.803 344 C 359.916 344, 368.130 341.926, 374.500 339.027 C 385.174 334.170, 389.192 329.324, 398.981 309.500 C 400.067 307.300, 400.966 303.955, 400.978 302.066 C 401.025 294.716, 394.104 285.713, 384.667 280.850 C 382.118 279.536, 381.021 278.387, 381.393 277.418 C 382.618 274.227, 384.882 256.864, 385.491 246 C 387.013 218.824, 381.276 185.704, 371.235 163.699 C 368.016 156.646, 367.428 155.927, 365.096 156.199 C 363.628 156.371, 362.379 157.229, 362.196 158.194 C 362.020 159.125, 363.903 164.975, 366.381 171.194 C 374.183 190.768, 377.646 207.105, 378.633 229 C 379.180 241.149, 378.019 260.577, 376.378 266.714 C 375.846 268.702, 375.355 268.344, 371.578 263.214 C 362.800 251.294, 348.712 241.169, 335.002 236.928 L 329.500 235.226 329.280 209.863 C 329.074 186.093, 329.161 184.685, 330.665 187.447 C 333.077 191.876, 336.775 207.867, 338.035 219.321 C 339.232 230.192, 340.126 232.268, 343.412 231.798 C 345.113 231.555, 345.559 230.675, 345.817 227.050 C 346.681 214.939, 341.753 194.545, 333.955 177.961 C 330.208 169.990, 329 166.273, 329 162.711 L 329 158 336.374 158 C 349.059 158, 357.036 153.714, 361.559 144.470 C 364.930 137.578, 366.136 125.106, 366.340 95 C 366.515 69.270, 365.768 61.378, 363.075 60.524 C 360.058 59.566, 358.711 60.711, 352.494 69.518 C 344.034 81.502, 343.853 82.092, 346.070 90.500 C 349.054 101.818, 350.232 111.707, 349.485 119.154 L 348.792 126.046 344.718 121.273 C 342.477 118.648, 338.024 113.943, 334.822 110.817 C 331.620 107.692, 329 104.668, 329 104.098 C 329 103.528, 329.959 101.222, 331.131 98.973 C 333.788 93.876, 333.303 88.231, 329.155 75.959 C 324.179 61.237, 321.572 57.984, 317.785 61.770 C 315.629 63.926, 310.888 75.199, 308.961 82.750 C 308.225 85.638, 307.273 88, 306.846 88 C 306.419 88, 303.937 86.648, 301.331 84.995 C 297.975 82.867, 294.884 79.439, 290.735 73.245 C 285.075 64.796, 280.831 60, 279.016 60 C 278.536 60, 277.483 60.660, 276.676 61.467 M 261.200 70.200 C 259.361 72.039, 259.770 74.807, 262.064 76.034 C 264.666 77.427, 267 75.748, 267 72.485 C 267 69.335, 263.459 67.941, 261.200 70.200 M 319.029 75.500 C 314.573 86.426, 313.962 93.250, 316.996 98.226 C 318.811 101.202, 318.993 103.272, 318.993 121 C 318.993 138.729, 318.811 140.797, 316.996 143.775 C 314.610 147.688, 311.573 149, 304.903 149 C 296.224 149, 288.163 144.120, 286.047 137.585 C 284.401 132.499, 283.207 112.031, 284.118 104.500 C 284.584 100.650, 285.712 94.315, 286.625 90.421 L 288.285 83.342 285.425 78.462 L 282.565 73.582 281.752 77.041 C 280.757 81.276, 281.765 122.836, 283.098 132.499 C 284.296 141.184, 287.292 145.995, 293.322 148.914 C 297.188 150.785, 299.198 151.032, 308.551 150.785 L 319.326 150.500 320.587 147 C 321.439 144.635, 321.873 136.725, 321.924 122.610 C 321.994 103.240, 322.159 101.402, 324.177 97.361 C 326.146 93.417, 326.249 92.440, 325.254 87.092 C 324.650 83.842, 323.277 79.229, 322.204 76.841 L 320.253 72.500 319.029 75.500 M 292.863 96.750 C 291.181 105.081, 291.237 129.159, 292.951 134.353 C 294.473 138.962, 297.315 140.895, 303.685 141.649 C 311.776 142.607, 312 142.059, 312 121.333 C 312 100.658, 311.736 99.914, 302.275 93.934 C 298.850 91.770, 295.639 90, 295.138 90 C 294.637 90, 293.613 93.037, 292.863 96.750 M 329.038 127.128 C 328.993 141.963, 329.336 142.594, 336.941 141.693 C 342.159 141.075, 345.621 139.429, 346.496 137.151 C 346.984 135.879, 341.914 129.076, 332.598 118.500 L 329.075 114.500 329.038 127.128 M 202.274 168.093 C 197.818 170.299, 194.396 174.770, 193.417 179.665 C 192.923 182.136, 193.240 182.788, 195.415 183.779 C 199.976 185.857, 197.736 191.528, 192.858 190.253 C 191.277 189.839, 191 190.360, 191 193.744 C 191 195.931, 190.707 199.861, 190.348 202.477 C 189.713 207.112, 189.751 207.204, 191.848 206.081 C 193.531 205.180, 194 204.006, 194 200.687 C 194 194.013, 198.957 188.904, 203.250 191.153 C 205.561 192.364, 205.463 194.271, 202.976 196.522 C 199.234 199.908, 201.043 200.486, 215.408 200.493 L 229.153 200.500 228.515 193.500 C 226.941 176.245, 225.010 171.576, 217.956 167.977 C 212.961 165.429, 207.576 165.469, 202.274 168.093 M 319 238.917 C 319 299.798, 319.179 308, 320.507 308 C 321.837 308, 321.984 299.957, 321.757 239.333 C 321.555 185.473, 321.230 170.577, 320.250 170.250 C 319.258 169.919, 319 184.094, 319 238.917 M 207.750 183.547 C 204.648 185.258, 204.251 187.134, 206.582 189.068 C 207.892 190.156, 208.882 190.134, 212.332 188.941 C 215.727 187.767, 216.500 187.036, 216.500 185 C 216.500 182.941, 215.971 182.459, 213.500 182.265 C 211.850 182.136, 209.262 182.713, 207.750 183.547 M 57.696 190.618 C 52.645 198.981, 49.875 209.162, 49.818 219.574 C 49.773 227.909, 50.088 229.590, 52.765 235.312 C 57.375 245.162, 64.934 249.912, 76 249.912 C 90.506 249.912, 100.738 240.389, 101.773 225.925 L 102.269 219 98.723 219 C 94.035 219, 83.939 215.805, 80.187 213.133 C 76.255 210.333, 75.918 210.400, 73.099 214.539 C 70.194 218.804, 70.123 223.568, 72.922 226.366 C 74.738 228.182, 75.345 228.277, 78.305 227.207 C 82.875 225.554, 84.771 225.691, 85.830 227.750 C 87.086 230.193, 86.287 231.800, 82.959 233.521 C 79.538 235.290, 73.706 235.443, 70.684 233.843 C 62.412 229.461, 61.143 218.616, 67.825 209.402 L 70.655 205.500 67.343 200.322 C 65.521 197.474, 63.481 193.087, 62.808 190.572 C 62.135 188.058, 61.338 186, 61.035 186 C 60.733 186, 59.230 188.078, 57.696 190.618 M 261.687 211.072 C 252.493 212.563, 249.789 216.824, 253.492 223.985 C 255.679 228.213, 266.227 235.904, 274.390 239.222 C 283.709 243.009, 289.382 246.389, 294.795 251.379 C 309.611 265.035, 313.125 284.114, 304.087 301.829 C 302.939 304.079, 302 306.358, 302 306.893 C 302 308.338, 305.470 309.171, 308.415 308.432 L 311 307.783 311 270.607 L 311 233.432 305.750 228.310 C 292.576 215.458, 275.596 208.815, 261.687 211.072 M 144.316 235.906 C 126.764 247.665, 110.758 263.497, 99.738 280 C 96.984 284.125, 91.924 290.212, 88.494 293.526 C 81.062 300.707, 79.927 303.976, 82.865 309.736 C 85.276 314.461, 87.315 316.279, 89.690 315.821 C 92.113 315.355, 92.547 312.262, 90.507 310.008 C 88.072 307.317, 88.902 303.560, 92 303.251 C 95.278 302.924, 98.114 306.834, 98.761 312.571 C 99.192 316.395, 98.891 317.263, 96.202 319.952 C 94.525 321.629, 92.219 323, 91.077 323 C 88.521 323, 88.495 323.659, 90.893 327.593 C 94.038 332.750, 100.817 337.470, 115.391 344.654 C 129.792 351.751, 137.566 357.424, 138.615 361.601 C 139.417 364.796, 137.464 367, 133.832 367 C 126.333 367, 123.178 377.332, 128.923 383.077 C 131.256 385.410, 132.722 386, 136.189 386 C 141.120 386, 146.596 383.434, 149.208 379.899 C 150.932 377.565, 150.885 377.231, 147.437 367.500 C 143.375 356.038, 139.964 344.019, 137.504 332.500 C 134.321 317.600, 125.019 304.050, 114.618 299.160 C 109.811 296.901, 108.660 294.357, 111.413 292.073 C 112.504 291.167, 113.669 291.253, 116.535 292.450 C 121.524 294.535, 125.220 294.401, 128.238 292.027 C 131.774 289.246, 133.769 284.509, 136.140 273.263 C 139.370 257.948, 144.278 245.440, 151.624 233.803 C 152.945 231.711, 153.824 230, 153.578 230 C 153.332 230, 149.164 232.658, 144.316 235.906 M 179.194 236.790 C 176.554 239.647, 172.426 245.701, 170.022 250.242 C 167.617 254.784, 165.191 258.806, 164.629 259.180 C 163.096 260.201, 160.226 258.300, 159.452 255.751 C 158.622 253.019, 154.224 247, 153.058 247 C 150.435 247, 144.327 268.093, 142.310 284.110 C 140.823 295.927, 140.747 299.498, 141.771 309.673 C 145.702 348.758, 152.685 365.194, 170.014 376.148 C 174.607 379.051, 186.861 382.930, 193.632 383.624 L 200.313 384.308 194.571 377.540 C 187.017 368.635, 182.650 361.690, 176.953 349.519 C 167.004 328.261, 163.756 314.384, 163.726 293 C 163.706 278.992, 163.965 276.637, 166.409 268.537 C 169.757 257.445, 174.449 248.387, 181.115 240.150 C 184.882 235.495, 185.935 233.535, 185.112 232.712 C 184.289 231.889, 182.730 232.964, 179.194 236.790 M 329 274.921 C 329 302.970, 329.191 307, 330.521 307 C 331.358 307, 334.572 304.511, 337.662 301.470 C 344.161 295.074, 360.242 284, 363.030 284 C 365.194 284, 367.209 287.044, 366.164 288.735 C 365.780 289.355, 362.022 292.112, 357.811 294.861 C 353.600 297.609, 346.833 303.014, 342.773 306.870 L 335.391 313.882 320.969 314.968 C 313.037 315.564, 306.100 316.500, 305.554 317.046 C 304.897 317.703, 305.481 318.891, 307.281 320.560 C 309.532 322.647, 310 323.931, 310 328.017 C 310 334.942, 311.365 335.575, 328.500 336.604 C 356.215 338.269, 366.340 336.740, 376.931 329.291 C 383.525 324.653, 387.259 319.983, 385 319.199 C 384.175 318.913, 382.038 317.221, 380.250 315.439 C 375.832 311.035, 375.798 306.439, 380.148 301.485 C 382.233 299.110, 384.005 298.001, 385.398 298.200 C 388.440 298.634, 388.691 302.635, 385.866 305.643 C 384.058 307.567, 383.797 308.454, 384.642 309.795 C 387.406 314.177, 393.455 308.895, 393.455 302.099 C 393.455 296.900, 389.435 291.870, 382.002 287.769 C 376.912 284.960, 375.565 283.567, 372.438 277.874 C 367.373 268.653, 360.994 260.810, 354.242 255.505 C 347.665 250.337, 337.015 244.538, 332.250 243.529 L 329 242.841 329 274.921 M 203.200 313.200 C 201.107 315.293, 201.878 318.799, 206.407 327.770 C 212.004 338.855, 219.489 349.468, 226.786 356.663 C 233.217 363.003, 242.126 370, 243.769 370 C 245.119 370, 249 359.856, 249 356.329 C 249 349.904, 247.009 346.617, 241.010 343.144 C 232.631 338.291, 219.258 327.245, 211.885 319.085 C 208.373 315.199, 205.252 312.015, 204.950 312.010 C 204.648 312.004, 203.860 312.540, 203.200 313.200 M 228.083 316.116 C 233.426 323.620, 259.353 345, 263.109 345 C 263.578 345, 264.241 343.762, 264.581 342.250 C 266.609 333.244, 267.545 331.188, 271.731 326.542 L 276.272 321.500 271.386 321.257 C 263.672 320.872, 255.137 319.036, 249.517 316.550 C 245.773 314.894, 241.823 314.141, 235.242 313.826 L 226.142 313.391 228.083 316.116 M 182.667 315.667 C 179.853 318.480, 187.013 343.620, 194.722 358 C 201.494 370.630, 209.867 378.102, 220.932 381.387 C 226.668 383.091, 240.512 383.599, 241.414 382.139 C 241.707 381.665, 239.146 379.816, 235.723 378.030 C 215.936 367.705, 200.828 350.770, 188.963 325.617 C 186.209 319.778, 183.815 315, 183.644 315 C 183.473 315, 183.033 315.300, 182.667 315.667 M 329.607 343.726 C 329.273 344.060, 329 347.057, 329 350.385 L 329 356.437 334.974 350.526 C 338.259 347.275, 340.847 344.539, 340.724 344.447 C 339.950 343.870, 330.102 343.231, 329.607 343.726" stroke="none" fill="%230d6efd" fill-rule="evenodd"/></svg>';var l8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="448" height="448" viewBox="0 0 448 448" version="1.1"><path d="" stroke="none" fill="%23ffc107" fill-rule="evenodd"/><path d="M 65.200 47.200 C 64.320 48.080, 64 56.428, 64 78.526 L 64 108.651 66.576 111.076 C 67.993 112.409, 77.555 119.408, 87.826 126.630 C 105.066 138.752, 109.668 143, 105.558 143 C 104.684 143, 101.507 141.365, 98.497 139.367 C 93.578 136.100, 92.594 135.806, 88.762 136.451 C 86.418 136.846, 83.032 137.406, 81.237 137.695 C 78.915 138.070, 76.365 137.435, 72.392 135.491 C 67.548 133.121, 66.622 132.950, 65.378 134.193 C 63.309 136.263, 65.687 141.444, 71.338 147.176 C 75.414 151.311, 76.319 151.748, 82.042 152.347 C 85.480 152.706, 91.265 153.016, 94.897 153.035 C 104.198 153.084, 115.940 155.368, 122.626 158.429 C 127.623 160.717, 139.899 169.763, 142.879 173.354 C 143.642 174.273, 143.320 175.856, 141.719 179.063 C 140.125 182.256, 139.406 185.774, 139.155 191.612 C 138.758 200.846, 140.052 204.476, 144.994 207.996 C 146.657 209.180, 148.891 212.067, 149.959 214.411 C 151.070 216.849, 154.275 220.701, 157.450 223.413 C 162.577 227.793, 162.995 228.473, 162.939 232.327 C 162.906 234.622, 162.075 240.550, 161.093 245.500 L 159.307 254.500 155.904 254.019 C 150.717 253.287, 132.083 253.410, 126.897 254.211 L 122.293 254.922 121.050 250.711 C 119.266 244.664, 114.548 234.700, 112.771 233.225 C 110.850 231.631, 108 232.666, 108 234.958 C 108 235.917, 109.135 238.838, 110.523 241.448 C 111.911 244.058, 113.906 249.294, 114.956 253.083 C 117.499 262.259, 117.554 262.323, 122.322 261.684 C 130.481 260.589, 145.297 265.272, 152.288 271.154 L 155.076 273.500 152.650 283 C 149.098 296.906, 144.642 312.067, 137.841 333.384 C 132.004 351.682, 131.827 352.554, 132.158 361.441 C 132.465 369.671, 132.887 371.397, 136.266 378.229 C 140.282 386.349, 146.862 393.283, 153.574 396.468 C 156.846 398.021, 157.386 398.043, 158.750 396.678 C 160.883 394.545, 159.743 392.420, 155.231 390.118 C 146.045 385.432, 138.822 373.272, 138.181 361.418 C 137.862 355.510, 138.329 352.693, 141.001 344.418 C 145.149 331.575, 148.431 320.912, 152.056 308.500 C 153.662 303, 155.390 297.150, 155.895 295.500 C 156.401 293.850, 157.393 290.129, 158.101 287.230 L 159.388 281.961 163.709 290.230 C 169.318 300.966, 174.083 307.365, 178.784 310.476 C 182.542 312.963, 182.627 312.971, 190.035 311.553 C 194.141 310.767, 197.782 310.434, 198.127 310.812 C 198.472 311.190, 199.436 314.425, 200.270 318 C 201.103 321.575, 202.469 326.975, 203.304 330 C 207.629 345.659, 206.924 350.169, 198.836 358.592 C 192.643 365.042, 191.620 368.227, 195.560 368.793 C 197.937 369.135, 209.346 357.851, 210.986 353.536 C 212.594 349.308, 212.125 338.123, 210.021 330.500 C 208.958 326.650, 207.399 321.025, 206.556 318 C 204.123 309.268, 203.704 309.665, 214.750 310.240 C 220.113 310.520, 225.122 310.917, 225.883 311.124 C 226.709 311.349, 228.600 309.254, 230.574 305.927 C 235.823 297.084, 244.980 292, 255.657 292 C 265.213 292, 263.951 289.103, 248.585 275.763 C 241.787 269.862, 241.590 269.770, 236.889 270.327 C 229.812 271.165, 226.386 273.334, 217.163 282.815 C 208.845 291.365, 208.812 291.386, 203.073 291.801 C 193.805 292.471, 188.897 288.770, 177.993 272.889 C 174.741 268.153, 170.470 262.864, 168.502 261.136 C 165.120 258.166, 164.976 257.790, 165.867 254.247 C 166.385 252.186, 167.379 246.812, 168.076 242.305 L 169.342 234.110 172.198 236.513 C 175.372 239.184, 178 238.850, 178 235.775 C 178 233.627, 174.775 230.192, 163.292 220.111 C 158.681 216.063, 155.681 212.563, 154.966 210.396 C 154.331 208.473, 151.936 205.442, 149.424 203.384 C 145.331 200.030, 145.003 199.413, 145.044 195.130 C 145.125 186.505, 146.579 181.774, 150.156 178.497 C 153.898 175.068, 173.712 166, 177.461 166 C 182.615 166, 180.637 168.037, 171.012 172.642 C 161.582 177.154, 158.950 179.493, 160.494 181.991 C 161.698 183.939, 165.070 182.951, 175.825 177.500 C 187.184 171.743, 193.459 170.426, 194.657 173.548 C 195.299 175.221, 193.740 176.651, 188.063 179.594 C 186.103 180.609, 181.663 183.197, 178.197 185.344 C 173.270 188.395, 171.959 189.709, 172.197 191.363 C 172.363 192.527, 173.177 193.608, 174.005 193.766 C 174.833 193.924, 180.626 191.116, 186.878 187.526 C 203.557 177.950, 208 178.465, 208 189.970 L 208 195.072 204.341 192.586 C 201.694 190.787, 200.210 190.352, 198.976 191.013 C 196.392 192.395, 181 209.094, 181 210.514 C 181 211.197, 181.673 212.313, 182.495 212.996 C 183.698 213.995, 184.465 213.925, 186.428 212.639 C 188.795 211.088, 188.953 211.152, 191.903 214.877 C 197.416 221.839, 197.452 222.100, 197.477 255.284 C 197.496 281.041, 197.736 286.215, 198.946 286.965 C 199.810 287.500, 201.112 287.475, 202.181 286.903 C 203.825 286.023, 203.991 283.644, 204.235 257.488 L 204.500 229.031 209.500 233.694 C 212.250 236.259, 221.474 244.915, 229.997 252.929 C 238.520 260.943, 249.086 270.875, 253.477 275 C 257.867 279.125, 270.267 291.275, 281.032 302 C 301.586 322.479, 303.196 324.665, 307.538 338 L 309.655 344.500 315.077 345.312 C 326.525 347.026, 337.563 350.106, 341.457 352.674 C 343.681 354.140, 350.675 359.445, 357 364.463 C 372.389 376.672, 390.101 390.637, 396.099 395.289 C 400.179 398.454, 401.315 398.902, 402.992 398.004 C 404.096 397.413, 405 396.546, 405 396.078 C 405 395.609, 401.718 390.314, 397.707 384.310 C 391.136 374.474, 386.562 365.948, 377.139 345.962 L 374.056 339.425 367.778 338.108 C 358.090 336.075, 341.239 330.234, 333.832 326.342 C 325.948 322.199, 324.697 320.131, 321.911 306.635 C 319.905 296.913, 319.583 287.652, 320.969 279.500 C 321.631 275.604, 321.479 273.967, 320.279 272.086 C 317.367 267.521, 310.718 260.974, 304.453 256.504 C 293.420 248.630, 287.151 239.257, 284.620 226.849 C 283.298 220.372, 281.048 217.552, 278.907 219.693 C 277.105 221.495, 276.238 233.627, 277.210 243.425 C 278.283 254.248, 281.074 261.261, 285.370 263.930 C 287.091 264.999, 290.267 267.690, 292.426 269.909 C 295.562 273.132, 296.479 274.943, 296.988 278.907 C 297.581 283.527, 297.496 283.801, 295.764 282.873 C 294.740 282.326, 280.987 269.020, 265.201 253.305 C 249.416 237.591, 232.338 220.894, 227.250 216.201 C 222.162 211.508, 218 207.054, 218 206.303 C 218 202.966, 221.202 204.033, 226.550 209.151 C 229.625 212.093, 232.611 214.667, 233.186 214.872 C 235.240 215.602, 235.964 212.386, 235.408 205 C 234.706 195.666, 238.008 181.784, 243.572 170.682 L 247.280 163.284 244.765 157.892 C 243.382 154.926, 241.700 150.025, 241.028 147 C 240.356 143.975, 239.161 140.143, 238.372 138.484 C 235.338 132.106, 222.534 126.051, 208.785 124.492 C 194.143 122.831, 187.959 116.645, 186.153 101.852 C 185.605 97.358, 185.150 96.450, 183.318 96.189 C 179.582 95.658, 178.766 98.964, 179.198 112.866 C 179.526 123.400, 180 126.497, 182.048 131.500 L 184.504 137.500 191.502 138.094 C 200.672 138.871, 205.506 140.301, 211.219 143.924 C 219.248 149.016, 222.448 158.708, 219.997 170.513 C 218.659 176.961, 214.215 187.619, 214.082 184.700 C 213.852 179.642, 208.132 174, 203.235 174 C 202.103 174, 200.740 172.679, 199.768 170.640 C 198.477 167.932, 197.279 167.056, 193.607 166.131 C 191.100 165.500, 188.701 165.087, 188.275 165.214 C 187.849 165.341, 186.044 163.966, 184.264 162.159 C 181.280 159.130, 180.682 158.925, 176.614 159.535 C 172.219 160.194, 172.189 160.178, 169.600 155.761 C 166.545 150.548, 166.281 145.849, 168.834 142.154 C 172.078 137.461, 174 131.110, 174 125.087 C 174 117.925, 172.496 116.911, 167.204 120.507 C 165.187 121.878, 163.190 123, 162.768 123 C 160.632 123, 163.067 107.110, 166.656 97.626 L 168.500 92.751 160.609 85.514 L 152.718 78.277 143.601 77.733 C 134.244 77.175, 126.539 74.656, 120.047 70.034 C 110.914 63.530, 111.020 72.642, 120.194 82.594 C 124.766 87.554, 128.913 89.985, 136.144 91.943 C 138.698 92.635, 142.410 94.538, 144.394 96.173 C 149.109 100.059, 149.129 103.593, 144.500 114.276 C 142.575 118.718, 141 122.948, 141 123.676 C 141 126.164, 139.163 124.997, 130.879 117.250 C 119.099 106.234, 114.149 101.140, 100.476 85.966 C 95.712 80.679, 78.977 59.676, 73.695 52.353 C 70.655 48.140, 68.271 46, 66.618 46 C 66.498 46, 65.860 46.540, 65.200 47.200 M 100.053 55.436 C 97.782 58.173, 103.761 65.272, 106.749 63.387 C 109.330 61.758, 109.270 60.474, 106.452 57.126 C 103.565 53.695, 101.870 53.247, 100.053 55.436 M 182.950 64.450 C 181.345 66.055, 181.858 67.475, 185.646 71.900 C 189.730 76.671, 195.023 80.315, 199.464 81.413 C 212.591 84.658, 230.990 100.370, 228.688 106.369 C 227.754 108.805, 225.237 108.368, 217.588 104.443 C 211.305 101.219, 210.532 101.039, 209.105 102.467 C 206.814 104.757, 208.545 106.967, 215.296 110.372 C 223.476 114.499, 228.834 114.908, 232.567 111.692 C 235.431 109.224, 235.496 108.959, 235.316 100.333 C 235.041 87.078, 230.491 75.951, 221.714 67.068 L 218.322 63.635 201.111 63.568 C 191.475 63.530, 183.482 63.918, 182.950 64.450 M 272.667 80.667 C 271.338 81.995, 272.044 84.953, 273.931 85.963 C 276.675 87.432, 279.432 84.675, 277.963 81.931 C 276.953 80.044, 273.995 79.338, 272.667 80.667 M 344.250 108.296 C 339.245 110.706, 338.971 112.341, 342.750 117.253 C 349.315 125.786, 359.025 128.474, 366.102 123.716 C 371.130 120.336, 370.878 118.324, 364.603 111.742 C 359.224 106.099, 359.038 106.002, 353.815 106.124 C 350.746 106.196, 346.704 107.114, 344.250 108.296 M 289 115.112 C 284.067 118.382, 277.009 121.868, 267 125.978 C 262.129 127.978, 260.420 129.194, 260.180 130.828 C 259.730 133.892, 262.176 134.495, 267.761 132.697 C 277.422 129.585, 287.312 128.529, 293.658 129.932 C 301.030 131.561, 302 132.379, 302 136.967 C 302 140.126, 301.013 141.812, 295.482 148.095 C 284.124 160.999, 278.496 175.489, 277.316 194.862 C 276.747 204.192, 276.834 204.841, 278.786 205.886 C 281.692 207.441, 283.580 205.289, 284.460 199.419 C 284.846 196.845, 285.629 193.561, 286.200 192.120 C 293.061 174.807, 303.543 162.391, 316.259 156.516 C 320.465 154.573, 324.102 152.219, 324.396 151.251 C 326.909 142.970, 327.152 128.406, 324.880 122.250 C 324.145 120.260, 323.359 120, 318.062 120 C 311.811 120, 303.922 117.505, 298.927 113.948 C 295.378 111.421, 294.393 111.537, 289 115.112 M 247.046 133.444 C 244.345 136.699, 248.815 140.614, 251.811 137.618 C 253.084 136.344, 253.215 135.563, 252.376 134.231 C 250.916 131.913, 248.601 131.571, 247.046 133.444 M 104.217 163.561 C 97.436 168.310, 97.283 180.824, 103.921 187.750 C 106.220 190.148, 110.783 190.721, 113.976 189.013 C 117.151 187.314, 120.176 181.295, 120.248 176.536 C 120.329 171.176, 116.534 165.539, 111.400 163.394 C 107.224 161.649, 106.936 161.656, 104.217 163.561 M 344.089 189.393 C 342.633 191.147, 344.230 195, 346.413 195 C 348.737 195, 350.521 192.049, 349.335 190.166 C 347.926 187.929, 345.590 187.584, 344.089 189.393 M 82.752 208.322 C 76.870 216.200, 70.878 224.756, 69.435 227.337 C 66.531 232.534, 64.090 241.511, 64.036 247.201 C 63.953 255.781, 69.775 271.035, 79.700 288.241 L 84.303 296.223 87.902 295.635 C 89.881 295.312, 93.750 294.578, 96.500 294.004 C 102.806 292.686, 105.960 293.347, 113.665 297.600 C 120.029 301.113, 123 301.214, 123 297.917 C 123 296.890, 120.090 291.550, 116.534 286.052 C 111.496 278.264, 109.452 275.920, 107.284 275.445 C 94.116 272.560, 85.840 264.945, 83.021 253.122 C 81.237 245.639, 82.894 238.670, 88.099 231.757 C 92.313 226.161, 92.869 224.572, 95.535 210.500 C 98.555 194.564, 98.565 194, 95.829 194 C 93.929 194, 91.285 196.896, 82.752 208.322 M 98.465 216.057 C 97.405 217.772, 98.870 221.860, 100.942 222.969 C 102.384 223.741, 103.249 223.608, 104.423 222.434 C 105.826 221.031, 105.831 220.573, 104.467 217.936 C 102.949 215, 99.739 213.995, 98.465 216.057 M 355.394 216.454 C 353.727 217.672, 353.500 219.204, 353.500 229.211 L 353.500 240.584 357.750 245.923 C 362.815 252.286, 365 258.961, 365 268.075 C 365 275.970, 366.589 277.502, 370.611 273.480 C 375.648 268.443, 378.911 256.850, 378.964 243.798 L 379 235.096 374.635 232.093 C 372.235 230.442, 367.350 225.935, 363.780 222.079 C 357.847 215.672, 357.126 215.188, 355.394 216.454 M 93.047 336.443 C 91.060 338.838, 92.424 340.579, 97.374 341.965 C 102.704 343.457, 105 342.867, 105 340.007 C 105 336.699, 95.248 333.791, 93.047 336.443 M 311.144 359.327 C 308.671 362.306, 310.856 364, 317.173 364 C 323.085 364, 323.130 363.978, 322.816 361.250 C 322.523 358.698, 322.133 358.479, 317.411 358.203 C 313.936 358.001, 311.949 358.357, 311.144 359.327" stroke="none" fill="%23ffc107" fill-rule="evenodd"/></svg>';var s8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="446" height="446" viewBox="0 0 446 446" version="1.1"><path d="" stroke="none" fill="%230d6efd" fill-rule="evenodd"/><path d="M 218.344 41.630 C 216.370 45.903, 213.888 51.897, 212.829 54.950 C 211.770 58.002, 210.025 64.921, 208.951 70.324 C 207.878 75.726, 207 81.600, 207 83.377 C 207 85.354, 208.116 88.136, 209.879 90.553 C 211.463 92.724, 213.289 96.975, 213.936 100 C 214.584 103.025, 215.379 110.080, 215.703 115.677 C 216.028 121.274, 215.744 132.974, 215.073 141.677 C 214.403 150.380, 213.631 158.287, 213.360 159.250 C 212.983 160.582, 211.797 161, 208.393 161 C 205.933 161, 202.251 160.141, 200.210 159.092 C 198.170 158.042, 195.337 155.904, 193.916 154.342 C 192.495 152.779, 190.422 149.896, 189.310 147.936 C 188.197 145.976, 186.355 141.476, 185.217 137.936 C 184.078 134.396, 182.583 127.450, 181.895 122.500 C 181.207 117.550, 180.678 106.525, 180.719 98 C 180.761 89.475, 181.231 79.585, 181.763 76.021 C 182.445 71.462, 182.404 69.018, 181.625 67.771 C 181.017 66.797, 179.840 66.003, 179.009 66.007 C 178.179 66.011, 176.525 67.473, 175.334 69.257 C 174.142 71.041, 171.875 74.750, 170.295 77.500 C 168.715 80.250, 165.983 85.875, 164.223 90 C 162.464 94.125, 160.365 100.396, 159.558 103.936 C 158.092 110.367, 158.093 110.377, 161.095 116.863 C 163.758 122.616, 164.201 124.955, 164.993 137.427 C 165.485 145.167, 166.410 153.284, 167.049 155.464 C 167.689 157.644, 169.671 161.708, 171.453 164.494 C 173.236 167.281, 176.845 171.454, 179.473 173.767 C 182.102 176.081, 186.558 179.055, 189.376 180.377 C 192.194 181.698, 197.819 183.711, 201.875 184.848 C 205.932 185.986, 210.099 187.684, 211.135 188.622 C 212.172 189.560, 213.690 192.586, 214.510 195.346 C 215.587 198.971, 216 205.307, 216 218.182 C 216 232.620, 215.740 236, 214.627 236 C 213.872 236, 211.104 235.049, 208.477 233.887 C 204.376 232.073, 203.165 231.934, 199.923 232.905 C 197.847 233.527, 195.007 235.391, 193.613 237.047 C 192.220 238.704, 190.800 241.548, 190.459 243.368 C 190.079 245.392, 190.419 248.068, 191.336 250.261 C 192.159 252.232, 193.948 254.575, 195.311 255.468 C 196.673 256.361, 199.349 257.345, 201.255 257.654 C 203.597 258.034, 206.227 257.551, 209.361 256.165 L 214 254.112 214.001 305.806 L 214.001 357.500 199.751 357.168 C 191.913 356.986, 182.412 357.253, 178.637 357.762 C 173.416 358.467, 170.816 358.358, 167.767 357.308 C 165.563 356.548, 162.351 355.210, 160.630 354.334 C 158.908 353.458, 155.381 351.200, 152.792 349.316 C 150.202 347.432, 145.373 342.749, 142.059 338.908 C 137.718 333.877, 135.591 330.399, 134.446 326.463 C 132.996 321.476, 132.996 320.525, 134.443 315.549 C 135.440 312.118, 137.858 307.818, 140.968 303.942 C 144.539 299.492, 146.092 296.568, 146.567 293.399 C 146.929 290.987, 146.937 287.476, 146.584 285.597 C 146.171 283.396, 144.540 280.914, 141.997 278.616 C 139.826 276.655, 136.887 274.759, 135.466 274.402 C 134.044 274.045, 130.854 273.982, 128.376 274.261 C 125.318 274.606, 122.585 275.802, 119.869 277.985 C 117.668 279.754, 115.637 280.971, 115.356 280.689 C 115.074 280.408, 114.593 275.066, 114.285 268.819 C 113.863 260.262, 114.145 255.390, 115.427 249.065 C 116.362 244.448, 118.002 238.957, 119.070 236.863 C 120.138 234.769, 122.453 231.415, 124.214 229.409 C 125.975 227.404, 129.009 224.778, 130.958 223.574 C 132.906 222.370, 136.598 220.601, 139.163 219.643 C 141.728 218.685, 145.055 216.686, 146.556 215.200 C 148.058 213.715, 150.112 210.700, 151.121 208.500 C 152.130 206.300, 152.966 202.908, 152.978 200.962 C 152.990 199.016, 151.988 195.442, 150.750 193.020 C 149.512 190.599, 147.230 187.691, 145.677 186.559 C 143.358 184.868, 141.393 184.508, 134.677 184.542 C 128.622 184.573, 125.319 185.120, 121.949 186.648 C 119.446 187.783, 115.798 190.116, 113.842 191.834 L 110.286 194.956 109.720 188.228 C 109.408 184.528, 108.390 178.464, 107.456 174.754 C 106.523 171.044, 104.351 165.681, 102.629 162.836 C 100.908 159.991, 97.787 156.290, 95.694 154.611 C 92.460 152.018, 90.880 151.508, 85.194 151.220 C 80.025 150.959, 77.703 151.317, 75 152.793 C 73.075 153.844, 70.081 156.549, 68.346 158.804 C 66.611 161.059, 64.884 164.725, 64.508 166.952 C 64.132 169.178, 64.132 172.822, 64.508 175.048 C 64.903 177.385, 66.627 180.873, 68.587 183.298 C 70.455 185.609, 73.336 189.255, 74.991 191.400 C 76.646 193.545, 78 195.733, 78 196.261 C 78 196.822, 76.514 196.944, 74.438 196.554 C 72.478 196.187, 69.321 196.399, 67.420 197.026 C 65.322 197.719, 63.383 199.292, 62.483 201.034 C 61.667 202.611, 61 205.766, 61 208.046 C 61 210.636, 61.777 213.283, 63.071 215.100 C 64.210 216.700, 67.534 219.140, 70.458 220.523 C 74.222 222.304, 76.138 223.919, 77.023 226.057 C 78.004 228.423, 78.028 231.235, 77.137 239.073 C 76.512 244.572, 76.010 252.993, 76.021 257.786 C 76.033 262.579, 76.677 271.900, 77.452 278.500 C 78.228 285.100, 79.551 293.650, 80.392 297.500 C 81.234 301.351, 83.081 307.876, 84.496 312 C 85.912 316.125, 87.317 320.231, 87.619 321.125 C 88.074 322.472, 87.058 322.868, 81.668 323.445 C 77.031 323.942, 73.840 324.984, 70.530 327.083 C 67.381 329.080, 65.273 331.386, 63.967 334.263 C 62.910 336.593, 62.034 339.683, 62.022 341.128 C 62.010 342.573, 62.668 345.273, 63.483 347.128 C 64.299 348.983, 65.802 351.473, 66.822 352.662 C 67.843 353.851, 70.431 355.763, 72.574 356.912 C 76.005 358.751, 78.204 359.003, 90.985 359.024 C 103.746 359.045, 106.165 359.321, 111.005 361.312 C 114.032 362.558, 119.057 365.585, 122.170 368.039 C 125.284 370.492, 129.028 373.334, 130.491 374.353 C 133.134 376.196, 133.138 376.215, 131.090 377.649 C 129.957 378.443, 127.844 381.116, 126.395 383.589 C 124.203 387.330, 123.833 388.977, 124.199 393.385 C 124.476 396.724, 125.476 399.860, 126.903 401.864 C 128.149 403.614, 130.913 405.935, 133.044 407.023 C 135.176 408.110, 138.303 409, 139.992 409 C 141.682 409, 144.541 408.383, 146.345 407.629 C 148.149 406.875, 151.998 404.063, 154.898 401.379 C 157.797 398.696, 161.744 395.538, 163.668 394.363 C 166.950 392.358, 167.488 392.311, 172.334 393.607 C 175.175 394.367, 184.700 395.937, 193.500 397.096 C 206.885 398.859, 212.769 399.119, 229.500 398.685 C 241.316 398.378, 252.978 397.513, 258 396.571 C 262.675 395.694, 268.819 394.307, 271.654 393.488 C 274.489 392.670, 278.230 392, 279.969 392 C 281.707 392, 285.463 392.989, 288.315 394.198 C 291.167 395.408, 297.195 399.197, 301.712 402.620 C 308.005 407.388, 311.204 409.108, 315.401 409.980 C 319.501 410.831, 321.837 410.829, 324.689 409.974 C 326.785 409.345, 329.758 407.748, 331.295 406.425 C 332.832 405.102, 334.959 402.102, 336.023 399.760 C 337.086 397.417, 337.966 394.133, 337.978 392.462 C 337.990 390.791, 336.988 387.422, 335.750 384.976 C 334.106 381.726, 331.684 379.314, 326.761 376.024 L 320.021 371.519 324.670 367.510 C 327.227 365.304, 331.835 362.506, 334.910 361.290 C 339.827 359.347, 342.252 359.093, 355.062 359.178 C 368.648 359.269, 369.901 359.117, 373.738 356.909 C 376 355.607, 379.004 352.762, 380.414 350.587 C 381.824 348.413, 383.253 345.170, 383.588 343.382 C 383.924 341.594, 383.665 338.515, 383.013 336.540 C 382.361 334.565, 380.770 331.692, 379.477 330.155 C 378.183 328.618, 375.410 326.632, 373.313 325.742 C 371.216 324.851, 366.870 323.833, 363.655 323.478 C 358.793 322.941, 357.905 322.552, 358.370 321.166 C 358.678 320.250, 360.088 316.125, 361.504 312 C 362.919 307.876, 364.766 301.351, 365.608 297.500 C 366.449 293.650, 367.772 285.100, 368.548 278.500 C 369.323 271.900, 369.967 262.579, 369.979 257.786 C 369.990 252.993, 369.488 244.572, 368.863 239.073 C 367.957 231.109, 367.989 228.440, 369.021 225.950 C 369.958 223.688, 371.797 222.123, 375.681 220.284 C 378.632 218.887, 381.936 216.495, 383.023 214.968 C 384.236 213.264, 385 210.572, 385 208 C 385 205.695, 384.270 202.572, 383.377 201.061 C 382.484 199.549, 380.250 197.769, 378.412 197.104 C 376.505 196.415, 373.553 196.181, 371.535 196.559 C 369.591 196.924, 368 196.823, 368 196.334 C 368 195.845, 368.759 194.332, 369.687 192.973 C 370.614 191.613, 373.308 188.321, 375.673 185.657 C 378.066 182.962, 380.465 178.988, 381.081 176.699 C 381.690 174.436, 381.910 170.836, 381.568 168.700 C 381.226 166.564, 380.089 163.134, 379.039 161.077 C 377.990 159.021, 375.462 156.065, 373.422 154.508 C 370.934 152.611, 368.131 151.527, 364.912 151.218 C 362.272 150.964, 358.585 151.043, 356.719 151.393 C 354.853 151.743, 351.432 153.650, 349.119 155.630 C 346.805 157.611, 343.638 161.767, 342.082 164.866 C 340.525 167.964, 338.520 173.739, 337.626 177.697 C 336.731 181.656, 336 187.215, 336 190.051 L 336 195.207 332.487 192.123 C 330.555 190.426, 326.842 188.040, 324.237 186.819 C 320.599 185.115, 317.603 184.589, 311.323 184.550 C 304.599 184.509, 302.645 184.866, 300.323 186.559 C 298.770 187.691, 296.488 190.599, 295.250 193.020 C 294.012 195.442, 293.010 199.016, 293.022 200.962 C 293.034 202.908, 293.870 206.300, 294.879 208.500 C 295.888 210.700, 297.942 213.715, 299.444 215.200 C 300.945 216.686, 304.272 218.685, 306.837 219.643 C 309.402 220.601, 313.135 222.396, 315.133 223.631 C 317.131 224.866, 320.317 227.817, 322.213 230.188 C 324.109 232.560, 326.593 236.750, 327.732 239.500 C 328.872 242.250, 330.365 248.016, 331.050 252.312 C 331.823 257.164, 332.062 263.941, 331.681 270.195 C 331.344 275.734, 330.826 280.508, 330.530 280.804 C 330.234 281.099, 328.981 280.417, 327.746 279.288 C 326.511 278.158, 324.060 276.506, 322.300 275.617 C 320.539 274.728, 317.531 274, 315.615 274 C 313.698 274, 311.026 274.420, 309.676 274.933 C 308.326 275.446, 305.611 277.281, 303.642 279.009 C 301.381 280.995, 299.825 283.416, 299.418 285.583 C 299.065 287.470, 299.075 291.016, 299.442 293.464 C 299.910 296.581, 301.313 299.352, 304.123 302.708 C 306.330 305.343, 309.058 309.274, 310.186 311.442 C 311.341 313.662, 312.268 317.422, 312.307 320.046 C 312.355 323.243, 311.489 326.524, 309.550 330.487 C 307.993 333.670, 303.978 339.046, 300.612 342.456 C 297.250 345.861, 291.800 350.465, 288.500 352.686 C 285.200 354.908, 279.689 358.144, 276.253 359.876 C 272.817 361.609, 267.493 363.966, 264.423 365.115 C 261.352 366.264, 257.639 366.984, 256.170 366.716 C 254.702 366.448, 249.563 365.221, 244.750 363.991 L 236 361.753 236 307.984 L 236 254.216 239.750 256.173 C 242.437 257.576, 244.766 257.998, 247.966 257.664 C 251.492 257.295, 253.122 256.443, 255.716 253.613 C 258.324 250.767, 259 249.176, 259 245.883 C 259 243.468, 258.157 240.371, 256.981 238.469 C 255.778 236.523, 253.344 234.554, 250.961 233.601 C 248.760 232.720, 246.389 232, 245.691 232 C 244.994 232, 242.750 232.853, 240.705 233.895 C 238.660 234.938, 236.290 236.058, 235.439 236.385 C 234.065 236.912, 233.924 234.577, 234.195 215.663 C 234.493 194.831, 234.557 194.264, 236.988 190.719 C 239.169 187.539, 240.467 186.825, 247.488 184.948 C 251.895 183.769, 258.118 181.420, 261.318 179.727 C 264.517 178.034, 269.377 174.419, 272.117 171.693 C 274.857 168.968, 278.167 164.630, 279.472 162.055 C 280.777 159.480, 282.321 154.702, 282.904 151.437 C 283.487 148.172, 284.344 140.325, 284.807 134 C 285.498 124.568, 286.153 121.445, 288.453 116.632 L 291.257 110.764 289.604 103.243 C 288.695 99.106, 285.878 91.396, 283.345 86.111 C 280.811 80.825, 277.447 74.619, 275.869 72.320 C 274.291 70.021, 273 67.706, 273 67.177 C 273 66.647, 272.338 65.960, 271.529 65.649 C 270.720 65.339, 269.313 65.829, 268.404 66.739 C 267.044 68.098, 266.863 69.621, 267.389 75.277 C 267.741 79.062, 268.309 86.745, 268.652 92.349 C 269.010 98.188, 268.753 107.606, 268.052 114.409 C 267.379 120.939, 265.932 129.705, 264.837 133.890 C 263.742 138.076, 261.700 143.610, 260.298 146.188 C 258.896 148.767, 256.367 152.291, 254.677 154.019 C 252.988 155.747, 250.007 157.959, 248.053 158.936 C 246.099 159.912, 243.077 160.982, 241.337 161.313 C 239.352 161.691, 237.788 161.449, 237.136 160.663 C 236.564 159.975, 235.574 154.257, 234.935 147.956 C 234.295 141.655, 233.722 130.425, 233.661 123 C 233.597 115.231, 234.128 106.528, 234.910 102.500 C 235.658 98.650, 236.854 94.342, 237.569 92.927 C 238.283 91.512, 239.573 89.770, 240.434 89.055 C 241.504 88.167, 242 86.033, 242 82.325 C 242 79.338, 241.283 73.656, 240.407 69.697 C 239.531 65.739, 237.945 59.575, 236.883 56 C 235.821 52.425, 233.275 46.125, 231.226 42 C 228.066 35.640, 227.077 34.451, 224.717 34.180 C 222.133 33.884, 221.678 34.415, 218.344 41.630 M 80.643 158.018 C 79.071 158.495, 76.887 159.697, 75.790 160.690 C 74.693 161.683, 73.166 163.711, 72.398 165.198 C 71.629 166.684, 71 169.303, 71 171.016 C 71 172.730, 71.514 175.114, 72.142 176.316 C 72.770 177.517, 74.988 180.368, 77.071 182.651 C 79.154 184.933, 81.791 188.631, 82.932 190.868 C 84.073 193.104, 85.496 197.216, 86.094 200.005 C 86.921 203.859, 86.891 205.427, 85.969 206.538 C 85.301 207.342, 84.092 208, 83.282 208 C 82.472 208, 80.614 207.156, 79.154 206.124 C 77.694 205.093, 75.093 203.944, 73.374 203.572 C 71.128 203.086, 69.790 203.353, 68.624 204.519 C 67.731 205.412, 67 206.725, 67 207.437 C 67 208.148, 67.905 209.881, 69.012 211.288 C 70.119 212.695, 72.301 214.127, 73.861 214.469 C 75.421 214.812, 78.077 216.534, 79.764 218.296 C 81.451 220.058, 83.322 223.362, 83.923 225.637 C 84.719 228.649, 84.707 232.591, 83.881 240.137 C 83.217 246.198, 82.988 256.727, 83.329 265.500 C 83.651 273.750, 84.334 282.181, 84.848 284.235 C 85.362 286.289, 88.190 291.318, 91.133 295.410 C 94.076 299.501, 96.652 302.681, 96.858 302.476 C 97.063 302.270, 96.713 300.617, 96.080 298.801 C 95.446 296.985, 94.269 290.809, 93.464 285.076 C 92.659 279.343, 92 269.859, 92 264 C 92 258.141, 92.681 248.500, 93.512 242.574 C 94.344 236.649, 95.886 228.583, 96.938 224.650 C 97.990 220.718, 99.785 214.842, 100.926 211.593 C 102.232 207.873, 102.993 203.246, 102.981 199.093 C 102.970 195.467, 102.353 188.207, 101.609 182.959 C 100.772 177.058, 99.230 171.249, 97.567 167.734 C 96.088 164.607, 93.668 161.194, 92.189 160.149 C 90.710 159.104, 88.150 158.002, 86.500 157.700 C 84.850 157.398, 82.214 157.541, 80.643 158.018 M 358.500 157.723 C 357.400 158.004, 355.290 159.092, 353.811 160.141 C 352.332 161.191, 349.924 164.581, 348.461 167.674 C 346.997 170.768, 345.172 177.169, 344.404 181.900 C 343.636 186.630, 343.006 193.917, 343.004 198.093 C 343.001 203.225, 343.673 207.602, 345.076 211.593 C 346.218 214.842, 348.206 221.550, 349.495 226.500 C 350.783 231.450, 352.583 240.900, 353.495 247.500 C 354.407 254.100, 355.006 261.704, 354.826 264.398 C 354.607 267.696, 353.935 269.649, 352.769 270.381 C 351.458 271.203, 350.689 271.106, 349.601 269.983 C 348.638 268.989, 347.784 264.052, 347.009 255 C 346.374 247.575, 345.006 237.450, 343.969 232.500 C 342.932 227.550, 341.220 221.003, 340.165 217.952 C 339.110 214.900, 337.272 210.493, 336.080 208.157 C 334.888 205.821, 332.245 202.060, 330.207 199.798 C 328.168 197.536, 324.250 194.636, 321.500 193.353 C 318.295 191.857, 314.635 191.016, 311.306 191.010 C 307.344 191.002, 305.497 191.534, 303.522 193.250 C 302.021 194.554, 300.695 196.992, 300.368 199.048 C 300.023 201.218, 300.411 204.048, 301.367 206.337 C 302.647 209.401, 303.980 210.541, 308.715 212.625 C 311.897 214.026, 316.010 215.921, 317.856 216.836 C 319.702 217.751, 323.226 220.726, 325.687 223.448 C 328.148 226.169, 331.085 230.207, 332.215 232.422 C 333.345 234.636, 335.112 239.385, 336.141 242.974 C 337.170 246.563, 338.288 253.775, 338.626 259 C 338.965 264.256, 338.731 272.621, 338.102 277.724 C 337.477 282.797, 336.410 288.647, 335.732 290.724 C 334.874 293.349, 333.835 294.594, 332.324 294.810 C 330.671 295.045, 329.743 294.260, 328.446 291.527 C 327.508 289.551, 324.918 286.374, 322.690 284.467 C 319.874 282.056, 317.652 281, 315.397 281 C 313.366 281, 311.003 281.968, 309.077 283.589 C 306.563 285.704, 306 286.928, 306 290.275 C 306 293.592, 306.756 295.267, 309.975 299.085 C 312.161 301.677, 315.086 305.936, 316.475 308.548 C 318.453 312.269, 319 314.753, 319 320.015 C 319 325.709, 318.460 327.811, 315.451 333.825 C 313.043 338.639, 309.621 343.191, 304.801 347.991 C 299.182 353.588, 298.299 354.837, 300.572 353.973 C 302.151 353.372, 306.080 351.475, 309.303 349.758 C 312.747 347.922, 317.431 344.133, 320.663 340.567 C 323.688 337.230, 328.203 331.437, 330.696 327.694 C 333.189 323.950, 336.970 316.975, 339.099 312.194 C 341.227 307.412, 342.976 302.683, 342.985 301.684 C 342.993 300.686, 343.466 298.998, 344.035 297.934 C 344.605 296.870, 345.899 296, 346.913 296 C 347.926 296, 349.284 296.637, 349.929 297.415 C 350.841 298.514, 350.671 300.134, 349.170 304.665 C 348.106 307.874, 346.092 313.065, 344.695 316.200 C 343.297 319.336, 340.529 324.736, 338.543 328.200 L 334.931 334.500 343.362 325.900 C 348 321.170, 352.555 315.828, 353.484 314.030 C 354.414 312.232, 355.811 308.452, 356.589 305.630 C 357.366 302.809, 358.943 295.775, 360.093 290 C 361.362 283.624, 362.395 273.572, 362.721 264.404 C 363.033 255.627, 362.778 245.235, 362.111 239.579 C 361.268 232.436, 361.257 228.740, 362.066 225.675 C 362.673 223.379, 364.549 220.058, 366.236 218.296 C 367.923 216.534, 370.579 214.812, 372.139 214.469 C 373.699 214.127, 375.881 212.695, 376.988 211.288 C 378.095 209.881, 379 208.148, 379 207.437 C 379 206.725, 378.269 205.412, 377.376 204.519 C 376.210 203.353, 374.872 203.086, 372.626 203.572 C 370.907 203.944, 368.306 205.093, 366.846 206.124 C 365.386 207.156, 363.528 208, 362.718 208 C 361.908 208, 360.698 207.341, 360.029 206.535 C 359.225 205.567, 359.051 203.660, 359.514 200.919 C 359.899 198.636, 361.066 194.845, 362.105 192.495 C 363.145 190.144, 365.953 186.034, 368.344 183.360 C 370.736 180.687, 373.212 177.517, 373.846 176.316 C 374.481 175.114, 374.998 172.639, 374.996 170.816 C 374.994 168.992, 374.116 166.062, 373.044 164.304 C 371.972 162.547, 370.061 160.453, 368.798 159.652 C 367.534 158.852, 365.150 157.975, 363.500 157.705 C 361.850 157.434, 359.600 157.443, 358.500 157.723 M 124.199 193.588 C 121.342 195.012, 117.399 198.049, 115.437 200.338 C 113.475 202.627, 110.326 207.650, 108.438 211.500 C 106.551 215.350, 104.100 222.100, 102.991 226.500 C 101.883 230.900, 100.482 239.450, 99.879 245.500 C 99.242 251.889, 99.058 262.296, 99.439 270.327 C 99.800 277.931, 100.931 288.145, 101.952 293.023 C 102.973 297.902, 105.245 305.697, 106.999 310.346 C 109.470 316.892, 111.315 319.948, 115.179 323.894 C 117.923 326.696, 122.492 330.921, 125.334 333.282 C 128.175 335.643, 131.400 338.225, 132.500 339.020 C 134.427 340.413, 134.438 340.393, 132.805 338.465 C 131.873 337.364, 130.195 334.447, 129.077 331.982 C 127.708 328.964, 127.040 325.377, 127.032 321 C 127.023 316.247, 127.650 313.156, 129.367 309.500 C 130.658 306.750, 133.579 302.258, 135.857 299.518 C 139.226 295.467, 139.994 293.786, 139.968 290.518 C 139.951 288.308, 139.388 285.786, 138.718 284.913 C 138.048 284.041, 136.517 282.803, 135.316 282.163 C 134.114 281.524, 131.753 281, 130.069 281 C 127.969 281, 125.779 282.108, 123.106 284.523 C 120.961 286.461, 118.450 289.638, 117.528 291.583 C 116.255 294.265, 115.324 295.045, 113.676 294.810 C 112.165 294.594, 111.126 293.349, 110.268 290.724 C 109.590 288.647, 108.523 282.797, 107.897 277.724 C 107.272 272.651, 107.025 264.225, 107.350 259 C 107.674 253.775, 108.793 246.563, 109.835 242.974 C 110.878 239.385, 112.652 234.660, 113.778 232.474 C 114.904 230.288, 117.505 226.552, 119.559 224.170 C 121.612 221.789, 124.914 218.821, 126.896 217.574 C 128.878 216.327, 132.300 214.725, 134.500 214.015 C 136.700 213.304, 139.705 211.877, 141.178 210.844 C 142.651 209.811, 144.383 207.370, 145.027 205.418 C 145.671 203.466, 145.912 200.343, 145.562 198.478 C 145.203 196.566, 143.793 194.195, 142.328 193.043 C 140.473 191.584, 138.253 191, 134.561 191 C 131.006 191, 127.772 191.808, 124.199 193.588 M 223 224.263 C 223 232.828, 222.727 240.548, 222.393 241.418 C 221.943 242.590, 220.388 243, 216.389 243 C 213.034 243, 209.677 242.295, 207.514 241.135 C 205.600 240.110, 202.955 239.477, 201.636 239.729 C 200.317 239.981, 198.639 241.306, 197.908 242.673 C 196.784 244.772, 196.809 245.571, 198.070 247.829 C 198.992 249.478, 200.581 250.619, 202.224 250.811 C 203.687 250.982, 206.128 250.307, 207.647 249.311 C 209.834 247.877, 212.917 247.429, 222.455 247.161 C 231.885 246.896, 235.477 247.185, 239 248.493 C 241.475 249.412, 244.528 250.408, 245.785 250.705 C 247.201 251.041, 248.817 250.571, 250.035 249.468 C 251.116 248.490, 252 246.721, 252 245.536 C 252 244.352, 251.424 242.594, 250.719 241.630 C 249.992 240.636, 248.046 239.839, 246.216 239.787 C 244.444 239.737, 242.146 240.463, 241.109 241.401 C 239.684 242.691, 237.796 243.033, 233.362 242.803 L 227.500 242.500 227.225 227.382 C 226.977 213.800, 226.749 212.083, 224.975 210.477 C 223.016 208.705, 223 208.820, 223 224.263 M 139.462 231.028 C 137.792 231.533, 135.245 233.196, 133.802 234.724 C 132.359 236.251, 130.232 239.338, 129.075 241.584 C 127.918 243.830, 126.881 247.738, 126.771 250.268 C 126.630 253.498, 127.104 255.457, 128.359 256.844 C 129.342 257.931, 131.194 259.083, 132.473 259.404 C 134.094 259.811, 137.368 258.620, 143.287 255.472 C 149.682 252.069, 152.082 250.217, 153.016 247.961 C 153.722 246.256, 154.033 242.986, 153.738 240.366 C 153.399 237.363, 152.399 234.945, 150.860 233.407 C 149.562 232.110, 147.150 230.837, 145.500 230.578 C 143.850 230.320, 141.133 230.522, 139.462 231.028 M 296.096 232.573 C 294.397 234.002, 292.585 236.826, 292.020 238.925 C 291.265 241.731, 291.347 243.709, 292.339 246.602 C 293.519 250.042, 294.703 251.059, 302.405 255.252 C 308.627 258.639, 311.812 259.834, 313.493 259.412 C 314.791 259.087, 316.655 257.933, 317.636 256.849 C 318.791 255.574, 319.365 253.493, 319.264 250.955 C 319.178 248.796, 318.161 244.892, 317.005 242.278 C 315.848 239.664, 313.912 236.449, 312.701 235.134 C 311.491 233.818, 309.052 232.125, 307.282 231.371 C 305.512 230.617, 302.959 230, 301.609 230 C 300.258 230, 297.777 231.158, 296.096 232.573 M 138.255 240.362 C 136.581 242.269, 134.669 245.472, 134.006 247.481 C 133.343 249.490, 133.085 251.418, 133.432 251.766 C 133.780 252.113, 137 250.950, 140.589 249.180 L 147.113 245.963 146.807 241.731 C 146.537 238.013, 146.185 237.463, 143.899 237.198 C 141.969 236.974, 140.514 237.790, 138.255 240.362 M 299.667 237.667 C 299.300 238.033, 299 240.063, 299 242.176 C 299 245.908, 299.186 246.110, 305.468 249.208 C 309.025 250.962, 312.180 252.153, 312.479 251.855 C 312.777 251.556, 312.324 249.336, 311.472 246.920 C 310.620 244.505, 308.731 241.284, 307.274 239.764 C 305.818 238.244, 303.660 237, 302.480 237 C 301.299 237, 300.033 237.300, 299.667 237.667 M 48.968 254.921 C 47.576 255.355, 45.433 256.337, 44.206 257.103 C 42.980 257.869, 41.253 260.390, 40.369 262.705 C 39.282 265.550, 38.988 268.143, 39.460 270.707 C 39.844 272.793, 40.958 276.323, 41.935 278.551 C 42.912 280.779, 45.124 284.211, 46.851 286.178 C 48.578 288.144, 51.343 290.314, 52.995 290.998 C 55.378 291.985, 56.615 291.988, 58.967 291.014 C 60.599 290.338, 62.401 289.222, 62.972 288.533 C 63.544 287.845, 64.232 282.381, 64.503 276.391 C 64.912 267.329, 64.701 264.924, 63.247 262.071 C 62.286 260.185, 60.375 257.843, 59 256.866 C 57.625 255.889, 55.375 254.875, 54 254.611 C 52.625 254.347, 50.361 254.487, 48.968 254.921 M 389.020 255.738 C 387.106 256.707, 384.492 259.068, 383.212 260.984 C 380.998 264.297, 380.916 265.032, 381.535 275.984 C 382.149 286.840, 382.339 287.629, 384.843 289.745 C 386.304 290.980, 388.400 291.991, 389.500 291.991 C 390.600 291.992, 392.949 291.109, 394.720 290.029 C 396.491 288.950, 399.304 286.182, 400.973 283.879 C 402.641 281.576, 404.530 277.849, 405.172 275.596 C 405.813 273.343, 406.363 269.925, 406.395 268 C 406.426 266.075, 405.881 263.123, 405.184 261.441 C 404.486 259.758, 402.697 257.672, 401.208 256.806 C 399.718 255.940, 397.150 254.949, 395.500 254.604 C 393.539 254.194, 391.294 254.587, 389.020 255.738 M 49.354 262.244 C 48.173 262.777, 46.964 264.430, 46.666 265.918 C 46.369 267.405, 46.492 270.248, 46.940 272.235 C 47.388 274.222, 48.661 277.119, 49.770 278.674 C 50.878 280.228, 52.704 282.332, 53.829 283.348 C 54.954 284.364, 56.352 284.900, 56.937 284.539 C 57.564 284.151, 58 280.075, 58 274.596 C 58 266.991, 57.683 265.038, 56.250 263.807 C 55.288 262.980, 53.825 262.073, 53 261.790 C 52.175 261.507, 50.534 261.712, 49.354 262.244 M 390.548 263.141 C 388.141 265.034, 388 265.665, 388 274.514 C 388 280.051, 388.435 284.151, 389.063 284.539 C 389.648 284.900, 391.046 284.364, 392.171 283.348 C 393.296 282.332, 395.138 280.206, 396.265 278.625 C 397.392 277.044, 398.664 273.894, 399.091 271.625 C 399.518 269.356, 399.631 266.517, 399.342 265.316 C 399.043 264.074, 397.582 262.701, 395.956 262.134 C 393.620 261.320, 392.627 261.505, 390.548 263.141 M 222.557 277.223 C 221.431 278.830, 221 281.908, 221 288.345 C 221 296.012, 221.201 297.078, 222.452 296.040 C 223.251 295.377, 224.826 295.127, 225.952 295.485 C 227.908 296.106, 228 295.747, 228 287.502 C 228 282.753, 227.534 277.998, 226.965 276.934 C 226.395 275.870, 225.521 275, 225.022 275 C 224.522 275, 223.413 276, 222.557 277.223 M 347.601 281.303 C 346.601 282.034, 345.948 283.502, 346.150 284.566 C 346.387 285.813, 347.492 286.613, 349.264 286.817 C 351.133 287.033, 352.220 286.589, 352.665 285.431 C 353.024 284.494, 352.877 283.029, 352.338 282.174 C 351.798 281.319, 350.921 280.474, 350.388 280.296 C 349.855 280.118, 348.601 280.571, 347.601 281.303 M 222.655 304.829 C 221.367 306.252, 221 308.702, 221 315.878 C 221 324.136, 221.172 325.003, 222.642 324.180 C 223.545 323.675, 225.120 323.480, 226.142 323.747 C 227.847 324.193, 228 323.520, 228 315.551 C 228 310.776, 227.534 305.998, 226.965 304.934 C 226.395 303.870, 225.565 303, 225.120 303 C 224.674 303, 223.565 303.823, 222.655 304.829 M 222.557 333.223 C 221.362 334.929, 221 338.181, 221 347.223 C 221 355.971, 221.322 359.004, 222.250 359.014 C 222.938 359.021, 224.512 359.299, 225.750 359.630 C 227.999 360.233, 228 360.228, 228 347.188 C 228 336.662, 227.697 333.839, 226.429 332.571 C 225.564 331.707, 224.690 331, 224.485 331 C 224.281 331, 223.413 332, 222.557 333.223 M 167 368.556 C 160.125 370.955, 153.668 372.937, 152.651 372.959 C 151.634 372.982, 149.159 373.751, 147.151 374.670 C 145.143 375.588, 141.538 377.909, 139.140 379.827 C 136.741 381.746, 133.930 384.707, 132.893 386.407 C 131.856 388.108, 131.006 390.862, 131.004 392.527 C 131.002 394.193, 131.657 396.493, 132.460 397.640 C 133.263 398.786, 135.280 400.287, 136.941 400.975 C 138.602 401.664, 141.122 401.935, 142.540 401.579 C 143.958 401.223, 147.004 399.237, 149.309 397.164 C 151.614 395.092, 155.300 392.049, 157.500 390.401 C 159.700 388.753, 164.200 386.005, 167.500 384.294 C 170.800 382.582, 176.875 380.128, 181 378.841 C 187.736 376.738, 190.385 376.501, 207 376.512 C 222.861 376.522, 226.855 376.852, 235 378.825 C 240.225 380.090, 249.155 382.498, 254.844 384.175 C 264.463 387.010, 265.600 387.142, 271.080 386.064 C 274.321 385.426, 278.666 384.283, 280.736 383.523 C 283.932 382.350, 284.122 382.129, 282 382.063 C 280.625 382.020, 276.800 381.128, 273.500 380.080 C 270.200 379.033, 265.025 377.232, 262 376.079 C 258.975 374.926, 252.450 372.900, 247.500 371.575 C 242.550 370.251, 236.025 368.658, 233 368.035 C 229.975 367.412, 222.579 366.249, 216.564 365.451 C 210.549 364.653, 199.749 364.043, 192.564 364.097 C 179.833 364.191, 179.182 364.304, 167 368.556" stroke="none" fill="%230d6efd" fill-rule="evenodd"/></svg>';var c8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="447" height="447" viewBox="0 0 447 447" version="1.1"><path d="" stroke="none" fill="%23ffc107" fill-rule="evenodd"/><path d="M 240.258 69.120 C 239.953 70.287, 238.533 73.526, 237.102 76.319 C 235.671 79.112, 233.228 82.321, 231.672 83.449 C 229.166 85.267, 227.646 85.464, 218.292 85.182 C 212.479 85.006, 205.440 85.393, 202.619 86.044 C 199.804 86.693, 195.584 88.320, 193.243 89.659 C 190.901 90.997, 188.262 93.197, 187.378 94.546 C 186.493 95.896, 184.830 97, 183.682 97 C 182.533 97, 177.297 98.298, 172.047 99.884 C 166.634 101.520, 156.715 103.438, 149.139 104.314 C 138.066 105.595, 135.379 106.235, 133.445 108.051 C 132.162 109.257, 130.444 111.652, 129.627 113.374 C 128.809 115.096, 126.746 118.431, 125.042 120.783 C 123.338 123.136, 119.455 126.653, 116.414 128.598 C 113.373 130.543, 110.611 132.850, 110.275 133.725 C 109.889 134.733, 110.663 136.173, 112.388 137.658 C 114.184 139.202, 116.373 140, 118.815 140 C 122.330 140, 122.519 140.167, 122.510 143.250 C 122.501 146.175, 122.819 146.531, 125.686 146.809 C 127.439 146.978, 130.139 146.461, 131.686 145.660 C 133.234 144.858, 136.018 142.749, 137.874 140.974 C 141.016 137.968, 141.608 137.783, 146.487 138.286 C 149.368 138.584, 154.150 140.073, 157.113 141.597 C 160.076 143.120, 165.200 144.853, 168.500 145.449 C 174.460 146.524, 174.518 146.568, 177.218 152.016 C 179.293 156.202, 179.943 158.999, 179.968 163.835 L 180 170.170 175.475 166.187 C 172.987 163.997, 169.315 161.428, 167.315 160.479 C 164.594 159.188, 162.022 158.873, 157.090 159.226 C 152.468 159.557, 148.554 160.636, 143.984 162.840 C 140.400 164.569, 135.921 167.044, 134.030 168.339 L 130.591 170.695 123.870 166.347 C 120.173 163.956, 114.886 161.477, 112.122 160.839 C 107.326 159.732, 106.784 159.831, 100.298 163.002 C 94.932 165.626, 91.165 168.702, 82.415 177.603 C 75.029 185.115, 70.357 189.089, 68.415 189.509 C 66.812 189.855, 64.487 190.548, 63.250 191.048 C 62.013 191.548, 61 192.767, 61 193.756 C 61 194.745, 61.728 196.594, 62.617 197.863 C 63.506 199.133, 65.537 200.964, 67.131 201.933 C 70.024 203.693, 70.025 203.698, 68.136 206.100 C 67.095 207.423, 64.790 211.278, 63.014 214.668 C 60.667 219.144, 59.637 222.653, 59.249 227.491 C 58.778 233.354, 58.372 234.404, 55.857 236.264 C 54.286 237.426, 53 239.214, 53 240.239 C 53 241.420, 54.270 242.633, 56.468 243.551 C 58.375 244.348, 61.277 245, 62.916 245 C 65.756 245, 65.849 245.133, 64.905 247.843 C 64.360 249.406, 64.046 254.469, 64.207 259.093 L 64.500 267.500 68.500 267.500 L 72.500 267.500 72.613 273.582 C 72.697 278.116, 73.435 281.043, 75.511 285.082 C 77.043 288.062, 79.142 292.190, 80.175 294.256 C 81.207 296.322, 82.329 299.472, 82.667 301.256 C 83.005 303.040, 83.684 305.288, 84.176 306.250 C 84.668 307.213, 86.141 308, 87.450 308 C 88.796 308, 91.054 306.704, 92.645 305.018 L 95.460 302.035 99.480 305.841 C 101.691 307.934, 104.631 310.341, 106.013 311.191 C 107.663 312.205, 109.621 315.445, 111.710 320.618 C 113.460 324.953, 115.367 331.736, 115.946 335.692 C 116.526 339.647, 117 346.681, 117 351.323 L 117 359.763 113.491 362.439 C 111.561 363.911, 109.062 366.918, 107.939 369.120 C 106.532 371.878, 105.990 374.585, 106.198 377.813 L 106.500 382.500 116.549 382.783 C 123.645 382.982, 127.625 382.637, 130.088 381.608 C 132.007 380.806, 134.851 378.878, 136.406 377.325 C 137.962 375.771, 139.712 373.375, 140.295 372 C 140.878 370.625, 141.676 365, 142.068 359.500 C 142.486 353.646, 143.691 346.805, 144.975 343 C 146.181 339.425, 148.527 334.363, 150.188 331.751 C 152.181 328.616, 154.617 326.333, 157.354 325.034 C 159.634 323.951, 162.715 322.080, 164.199 320.875 L 166.899 318.685 170.528 321.454 C 172.524 322.976, 177.835 327.995, 182.329 332.607 C 186.823 337.219, 191.255 340.994, 192.177 340.996 C 193.100 340.998, 194.794 339.806, 195.941 338.347 C 197.089 336.888, 198.186 335.876, 198.379 336.097 C 198.571 336.319, 199.256 337.512, 199.900 338.750 C 200.544 339.988, 201.943 341, 203.010 341 C 204.115 341, 205.558 339.817, 206.366 338.250 C 207.145 336.738, 208.519 333.025, 209.419 330 C 210.319 326.975, 211.943 320.266, 213.028 315.091 C 214.113 309.916, 215 304.628, 215 303.341 C 215 301.667, 215.570 301, 217 301 C 218.236 301, 219.002 301.669, 219.006 302.750 C 219.009 303.712, 219.493 306.235, 220.081 308.355 C 220.670 310.475, 222.980 314.193, 225.214 316.616 C 227.448 319.040, 230.451 321.580, 231.888 322.262 C 233.328 322.945, 235.515 325.543, 236.762 328.054 C 238.006 330.559, 239.553 335.133, 240.200 338.218 C 241.146 342.728, 241.110 344.637, 240.015 347.954 C 239.239 350.307, 237.072 353.460, 234.973 355.290 C 232.949 357.056, 229.605 359.795, 227.541 361.377 C 225.477 362.959, 222.946 366.109, 221.916 368.377 C 220.886 370.645, 220.034 374.589, 220.022 377.143 C 220.006 380.469, 220.449 381.958, 221.582 382.393 C 222.452 382.727, 225.760 383, 228.933 383 C 232.106 383, 236.231 382.478, 238.101 381.840 C 239.970 381.202, 242.553 379.868, 243.840 378.875 C 245.128 377.882, 247.539 375.019, 249.200 372.513 C 250.860 370.006, 254.223 366.313, 256.673 364.305 C 259.123 362.297, 261.773 359.405, 262.564 357.877 C 263.354 356.349, 264 354.251, 264 353.215 C 264 352.178, 264.944 348.443, 266.098 344.915 C 267.251 341.387, 268.628 337.972, 269.157 337.326 C 269.888 336.434, 270.937 336.494, 273.527 337.576 C 275.448 338.378, 280.209 339, 284.433 339 C 290.563 339, 292.094 338.681, 292.830 337.250 C 293.325 336.288, 293.514 334.825, 293.250 334 C 292.973 333.133, 293.438 333.344, 294.353 334.500 C 295.580 336.049, 295.944 339.031, 295.968 347.727 C 296 358.908, 295.989 358.961, 293.250 360.662 C 291.738 361.601, 289.444 363.299, 288.153 364.435 C 286.862 365.571, 284.949 368.170, 283.903 370.210 C 282.856 372.251, 282 375.690, 282 377.853 C 282 380.517, 282.510 381.982, 283.582 382.393 C 284.452 382.727, 287.811 383, 291.047 383 C 294.283 383, 299.083 382.280, 301.715 381.399 C 304.347 380.519, 307.568 378.831, 308.873 377.649 C 310.178 376.467, 313.103 373.094, 315.373 370.153 C 317.643 367.213, 320.774 362.938, 322.331 360.653 C 324.965 356.788, 325.107 356.083, 324.385 350.500 C 323.958 347.200, 323.562 337.525, 323.505 329 C 323.418 316.168, 323.106 313.054, 321.689 310.909 C 320.748 309.483, 317.477 306.595, 314.421 304.490 C 311.365 302.385, 307.524 298.715, 305.885 296.333 L 302.906 292.003 306.823 284.752 C 308.978 280.763, 311.449 275.250, 312.315 272.500 C 313.181 269.750, 314.205 264.800, 314.590 261.500 C 315.223 256.078, 315.801 254.935, 320.597 249.632 C 323.516 246.405, 327.273 240.927, 328.946 237.458 C 330.619 233.989, 332.659 228.304, 333.479 224.825 C 334.299 221.346, 334.977 215.710, 334.985 212.299 C 334.993 208.889, 334.520 203.714, 333.934 200.799 C 333.348 197.885, 332.121 193.250, 331.207 190.500 C 330.294 187.750, 328.028 182.575, 326.172 179 C 324.316 175.425, 321.851 170.700, 320.696 168.500 C 319.057 165.380, 318.602 162.739, 318.629 156.500 C 318.654 150.616, 319.211 147.282, 320.733 143.897 C 321.871 141.365, 324.259 137.636, 326.039 135.609 C 327.818 133.582, 331.252 130.765, 333.668 129.348 C 336.085 127.932, 339.961 126.343, 342.281 125.818 C 344.602 125.292, 349.539 125.164, 353.253 125.533 C 358.735 126.077, 360.571 126.731, 363.003 129.003 C 365.085 130.948, 366 132.748, 366 134.901 L 366 138 359.136 138 C 355.362 138, 349.849 138.449, 346.886 138.998 C 343.924 139.547, 339.026 141.249, 336.002 142.779 C 331.899 144.856, 329.906 146.647, 328.147 149.836 C 326.244 153.286, 325.916 154.953, 326.445 158.482 C 326.806 160.886, 328.096 164.330, 329.312 166.135 C 330.528 167.939, 333.511 170.932, 335.942 172.786 C 339.163 175.243, 340.878 177.557, 342.272 181.328 C 343.323 184.173, 344.499 188.975, 344.884 192 C 345.270 195.025, 346.088 198.400, 346.701 199.500 C 347.314 200.600, 348.969 202.579, 350.379 203.897 C 352.507 205.887, 353.201 206.078, 354.471 205.024 C 355.312 204.326, 356 202.933, 356 201.927 C 356 200.922, 355.391 199.740, 354.646 199.300 C 353.901 198.860, 352.724 197.419, 352.030 196.098 C 350.880 193.911, 350.934 193.770, 352.634 194.518 C 353.660 194.970, 356.447 195.537, 358.827 195.777 C 363.069 196.205, 363.147 196.159, 362.827 193.392 C 362.569 191.163, 361.866 190.443, 359.479 189.959 C 357.818 189.622, 355.315 188.597, 353.918 187.682 C 352.521 186.767, 350.393 184.265, 349.189 182.123 C 347.825 179.696, 347 176.506, 347 173.661 C 347 171.149, 347.507 167.981, 348.127 166.620 C 349.027 164.646, 349.683 164.306, 351.377 164.937 C 352.545 165.372, 355.535 166.026, 358.022 166.391 C 361.282 166.869, 363.096 166.644, 364.522 165.586 C 366.106 164.410, 366.280 163.757, 365.397 162.309 C 364.680 161.134, 362.577 160.290, 359.397 159.902 C 356.703 159.573, 351.800 158.544, 348.500 157.616 C 344.506 156.493, 340.912 156.139, 337.750 156.558 C 333.551 157.115, 333 156.970, 333 155.316 C 333 154.287, 333.679 152.476, 334.509 151.291 C 335.338 150.106, 338.396 148.247, 341.302 147.160 C 344.209 146.072, 350.630 144.866, 355.571 144.480 C 361.007 144.054, 367.436 144.224, 371.849 144.909 C 377.594 145.800, 379.710 145.769, 381.813 144.761 C 383.281 144.057, 385.091 142.210, 385.836 140.656 C 386.670 138.916, 386.943 136.509, 386.546 134.394 C 386.191 132.504, 384.571 129.442, 382.945 127.590 C 381.318 125.738, 378.399 123.468, 376.457 122.547 C 374.516 121.625, 370.447 120.225, 367.415 119.436 C 364.383 118.646, 358.887 118.007, 355.201 118.015 C 351.516 118.023, 345.673 118.696, 342.219 119.511 C 338.764 120.325, 334.073 121.943, 331.794 123.105 C 329.515 124.268, 325.349 127.532, 322.537 130.359 C 319.724 133.187, 316.355 137.750, 315.050 140.500 C 313.368 144.045, 312.544 147.880, 312.217 153.680 C 311.815 160.824, 312.112 162.849, 314.568 169.680 C 316.635 175.430, 317.380 179.353, 317.382 184.500 C 317.384 189.121, 316.817 192.575, 315.713 194.662 C 314.793 196.401, 312.845 198.763, 311.385 199.912 C 309.925 201.060, 307.505 202, 306.008 202 C 303.327 202, 303.277 201.881, 302.724 194.250 C 302.338 188.909, 301.238 184.283, 299.187 179.367 C 297.549 175.444, 295.447 169.611, 294.515 166.405 C 293.384 162.512, 292.827 157.026, 292.840 149.884 C 292.857 140.622, 293.223 138.276, 295.579 132.346 C 297.074 128.581, 299.539 123.700, 301.057 121.500 C 302.574 119.300, 305.544 115.865, 307.658 113.866 C 309.771 111.868, 313.404 109.055, 315.731 107.616 C 318.059 106.176, 323.313 103.874, 327.408 102.499 C 333.408 100.485, 336.828 100, 345.032 100 C 350.843 100, 357.848 100.658, 361.356 101.534 C 364.735 102.378, 369.912 104.290, 372.861 105.784 C 375.809 107.278, 381.081 111.113, 384.576 114.307 C 389.031 118.378, 391.912 122.108, 394.215 126.786 C 397.101 132.647, 397.500 134.433, 397.500 141.479 C 397.500 148.055, 397.051 150.379, 395.009 154.377 C 393.640 157.059, 390.591 160.950, 388.235 163.025 C 385.879 165.099, 382.294 167.582, 380.269 168.543 C 378.243 169.504, 374.317 170.895, 371.543 171.633 C 368.769 172.372, 363.208 172.982, 359.184 172.988 L 351.867 173 352.184 175.750 L 352.500 178.500 362.500 178.421 C 371.394 178.350, 373.337 177.989, 380.070 175.153 C 384.449 173.308, 389.807 170.045, 392.781 167.411 C 395.837 164.705, 399.027 160.601, 400.648 157.288 C 402.736 153.019, 403.471 149.821, 403.791 143.608 C 404.124 137.136, 403.770 134.205, 402.037 129.083 C 400.843 125.554, 398.587 120.829, 397.023 118.583 C 395.459 116.337, 392.227 112.633, 389.840 110.351 C 387.453 108.070, 382.948 104.591, 379.828 102.620 C 376.708 100.650, 370.633 97.832, 366.328 96.358 C 359.564 94.042, 356.869 93.675, 346.500 93.657 C 337.732 93.643, 332.899 94.125, 328.554 95.447 C 325.284 96.442, 319.467 98.886, 315.629 100.878 C 311.324 103.112, 305.914 107.183, 301.514 111.500 C 297.068 115.861, 293.391 120.573, 291.757 124 C 290.315 127.025, 288.555 131.300, 287.846 133.500 C 287.102 135.808, 286.572 142.154, 286.593 148.500 C 286.616 155.623, 287.249 161.917, 288.388 166.357 C 289.355 170.129, 291.572 176.879, 293.313 181.357 C 295.856 187.897, 296.482 190.976, 296.490 197 C 296.498 203.040, 296.046 205.293, 294.166 208.572 L 291.832 212.643 287.443 210.421 C 285.028 209.198, 280.817 207.625, 278.084 206.925 C 273.212 205.676, 273.092 205.553, 271.905 200.576 C 271.239 197.784, 269.398 191.903, 267.815 187.507 C 266.231 183.110, 263.049 176.392, 260.744 172.576 C 258.439 168.761, 254.647 163.407, 252.319 160.680 L 248.086 155.720 250.543 153.788 C 251.894 152.725, 253 151.078, 253 150.127 C 253 149.177, 252.460 147.860, 251.800 147.200 C 251.140 146.540, 249.632 146, 248.448 146 C 247.264 146, 244.802 144.988, 242.976 143.750 C 241.150 142.512, 236.062 136.775, 231.669 131 C 227.276 125.225, 221.536 118.267, 218.913 115.538 C 216.291 112.808, 214.345 110.251, 214.589 109.855 C 214.834 109.460, 217.614 108.578, 220.767 107.896 C 223.920 107.214, 228.970 105.585, 231.990 104.277 C 235.009 102.968, 238.551 100.908, 239.860 99.699 C 241.168 98.490, 243.411 95.700, 244.843 93.500 C 247.129 89.989, 247.451 88.449, 247.474 80.901 C 247.491 75.343, 246.998 71.365, 246.081 69.651 C 245.300 68.193, 243.796 67, 242.737 67 C 241.617 67, 240.581 67.886, 240.258 69.120 M 237.279 86.588 C 234.671 89.307, 233.279 91.564, 233.636 92.494 C 233.954 93.322, 234.810 94, 235.539 94 C 236.268 94, 237.728 92.763, 238.783 91.250 C 239.839 89.737, 240.984 87.037, 241.327 85.250 C 241.669 83.463, 241.849 82.042, 241.725 82.094 C 241.601 82.146, 239.601 84.168, 237.279 86.588 M 204.250 92.166 C 201.912 92.689, 200.002 93.429, 200.004 93.809 C 200.006 94.189, 200.873 95.919, 201.930 97.653 L 203.852 100.805 208.206 99.240 C 212.312 97.763, 212.538 97.483, 212.171 94.337 C 211.899 92.009, 211.285 91.032, 210.141 91.107 C 209.238 91.166, 206.588 91.642, 204.250 92.166 M 218 93.671 C 218 94.874, 218.744 96.601, 219.654 97.511 C 220.885 98.743, 222.226 98.993, 224.904 98.493 C 226.882 98.124, 228.629 97.695, 228.787 97.540 C 228.946 97.385, 228.555 96.116, 227.918 94.720 C 226.983 92.667, 225.927 92.116, 222.381 91.834 C 218.436 91.520, 218 91.703, 218 93.671 M 191.099 100.557 C 189.944 102.514, 189 105.124, 189 106.357 C 189 107.591, 189.540 109.140, 190.200 109.800 C 190.860 110.460, 192.815 111, 194.545 111 C 196.400 111, 198.418 110.195, 199.466 109.038 C 201.176 107.148, 201.147 106.964, 198.690 104.043 C 197.286 102.375, 195.852 100.108, 195.502 99.005 C 195.152 97.902, 194.490 97, 194.031 97 C 193.573 97, 192.253 98.601, 191.099 100.557 M 173 106.127 C 168.325 107.721, 161.215 109.313, 157.200 109.664 C 150.229 110.273, 149.841 110.441, 148.579 113.401 C 147.852 115.105, 146.187 117.483, 144.879 118.683 C 143.570 119.884, 141.233 121.347, 139.685 121.933 C 138.137 122.520, 135.814 123, 134.524 123 C 133.026 123, 130.116 125.013, 126.476 128.566 L 120.774 134.133 124.389 133.455 C 127.771 132.820, 128.090 132.985, 129.367 136.022 C 130.722 139.244, 130.746 139.253, 132.616 137.284 C 133.652 136.193, 135.318 134.292, 136.318 133.060 C 137.970 131.023, 138.698 130.879, 144.318 131.478 C 147.718 131.841, 152.075 132.619, 154 133.208 C 155.925 133.796, 158.809 135.197, 160.408 136.320 C 162.095 137.504, 165.501 138.543, 168.515 138.793 C 171.505 139.041, 174.669 138.712, 175.963 138.020 C 177.744 137.067, 178.095 136.227, 177.649 133.995 C 177.278 132.142, 177.599 130.748, 178.582 129.932 C 179.708 128.997, 180.939 128.953, 183.540 129.751 C 185.443 130.335, 187 130.612, 187 130.367 C 187 130.121, 186.061 128.080, 184.914 125.832 C 183.055 122.187, 182.992 121.579, 184.337 120.235 C 185.166 119.405, 186.534 118.991, 187.377 119.315 C 188.220 119.638, 189.795 121.639, 190.878 123.761 C 191.961 125.884, 193.556 130.358, 194.423 133.704 C 195.291 137.051, 196 141.200, 196 142.926 C 196 144.852, 195.395 146.295, 194.433 146.664 C 193.571 146.995, 192.356 146.756, 191.733 146.133 C 191.110 145.510, 190.186 145, 189.680 145 C 189.160 145, 189.009 147.500, 189.334 150.750 C 189.649 153.912, 190.583 159.419, 191.409 162.987 C 192.557 167.952, 192.664 170.449, 191.863 173.631 C 191.096 176.676, 191.131 178.376, 191.994 179.988 C 192.984 181.838, 192.837 182.544, 191.076 184.419 L 188.981 186.650 193.240 190.075 C 196.962 193.067, 198.213 193.500, 203.145 193.500 C 207.138 193.500, 209.361 192.983, 210.742 191.734 C 211.815 190.763, 213.257 188.063, 213.945 185.734 C 214.634 183.405, 215.870 180.743, 216.693 179.817 C 217.515 178.892, 218.783 178.363, 219.511 178.642 C 220.238 178.922, 221.966 180.861, 223.349 182.952 C 224.733 185.043, 227.482 187.753, 229.458 188.974 C 231.434 190.195, 233.714 190.940, 234.525 190.629 C 235.366 190.306, 236 188.788, 236 187.096 C 236 185.465, 236.439 182.976, 236.975 181.565 C 237.512 180.154, 238.564 179, 239.315 179 C 240.065 179, 242.112 180.575, 243.864 182.500 C 245.615 184.425, 247.664 186, 248.417 186 C 249.170 186, 250.059 185.288, 250.393 184.418 C 250.727 183.548, 251 180.928, 251 178.596 C 251 176.264, 250.263 172.193, 249.362 169.548 C 248.281 166.377, 246.035 163.112, 242.765 159.961 C 238.880 156.216, 237.951 154.730, 238.471 153.091 C 238.836 151.941, 239.846 151, 240.715 151 C 241.636 151, 240.902 150.060, 238.959 148.750 C 237.124 147.512, 231.860 141.550, 227.261 135.500 C 222.662 129.450, 217.036 122.595, 214.759 120.268 C 211.127 116.555, 210.427 116.209, 209.057 117.448 C 208.199 118.225, 206.308 119.313, 204.855 119.865 C 203.007 120.568, 200.606 120.495, 196.857 119.623 C 193.911 118.937, 190.239 117.550, 188.699 116.540 C 187.158 115.530, 185.246 113.442, 184.449 111.901 C 183.652 110.360, 183 107.727, 183 106.050 C 183 104.372, 182.662 103.051, 182.250 103.114 C 181.838 103.177, 177.675 104.533, 173 106.127 M 137.306 113.468 C 135.147 115.368, 134.890 115.944, 136.194 115.968 C 137.126 115.986, 139.151 114.889, 140.694 113.532 C 142.853 111.632, 143.110 111.056, 141.806 111.032 C 140.874 111.014, 138.849 112.111, 137.306 113.468 M 164.667 113.667 C 164.300 114.033, 164 115.383, 164 116.667 C 164 118.716, 164.479 119, 167.933 119 C 170.981 119, 172.007 118.552, 172.497 117.009 C 172.845 115.914, 172.848 114.564, 172.506 114.009 C 172.163 113.454, 170.409 113, 168.608 113 C 166.807 113, 165.033 113.300, 164.667 113.667 M 359.750 149.668 C 358.688 149.959, 358 151.113, 358 152.605 C 358 153.957, 358.728 155.342, 359.617 155.683 C 360.506 156.025, 362.419 155.887, 363.867 155.378 C 365.753 154.715, 366.500 153.749, 366.500 151.976 C 366.500 150.043, 365.952 149.466, 364 149.345 C 362.625 149.260, 360.712 149.405, 359.750 149.668 M 337.547 166.049 C 339.472 168.059, 340.604 168.655, 340.869 167.799 C 341.090 167.084, 341.675 165.713, 342.170 164.750 C 342.958 163.218, 342.546 163, 338.848 163 L 334.626 163 337.547 166.049 M 104.500 167.682 C 103.400 167.985, 101.150 169.165, 99.500 170.303 C 97.850 171.441, 95.045 173.618, 93.267 175.141 C 91.489 176.663, 87.303 181.082, 83.965 184.961 C 80.625 188.841, 76.014 192.973, 73.712 194.147 C 69.656 196.216, 69.601 196.308, 71.922 197.167 C 73.785 197.856, 74.815 197.583, 76.569 195.936 C 77.808 194.771, 79.644 193.977, 80.649 194.171 C 81.655 194.365, 82.612 195.222, 82.776 196.076 C 82.941 196.930, 80.419 200.888, 77.172 204.872 C 73.925 208.855, 70.024 214.657, 68.502 217.763 C 66.679 221.487, 65.567 225.643, 65.238 229.956 C 64.964 233.555, 64.293 237.063, 63.747 237.750 C 63.058 238.618, 63.153 239, 64.057 239 C 64.772 239, 66.894 238.445, 68.771 237.766 C 71.810 236.667, 72.338 236.742, 73.587 238.450 C 74.746 240.036, 74.765 240.725, 73.693 242.434 C 72.980 243.570, 71.824 246.300, 71.125 248.500 C 70.425 250.700, 69.999 254.525, 70.177 257 L 70.500 261.500 75.313 256.667 C 78.260 253.707, 80.691 252.051, 81.585 252.394 C 82.388 252.703, 83.302 253.624, 83.616 254.442 C 83.930 255.260, 83.132 257.407, 81.843 259.215 C 79.992 261.810, 79.427 264.095, 79.151 270.094 C 78.873 276.158, 79.200 278.474, 80.778 281.594 C 81.865 283.742, 84.349 288.645, 86.298 292.488 C 89.465 298.732, 89.908 299.211, 90.459 296.988 C 90.799 295.620, 90.947 291.800, 90.788 288.500 C 90.527 283.056, 90.695 282.472, 92.602 282.200 C 94.011 281.999, 95.294 282.823, 96.492 284.700 C 97.475 286.240, 100.055 289.137, 102.226 291.138 C 104.396 293.139, 108.405 295.991, 111.134 297.477 C 113.863 298.962, 116.749 299.926, 117.548 299.620 C 118.429 299.282, 119 297.706, 119 295.613 C 119 293.716, 119.273 291.452, 119.607 290.582 C 119.941 289.712, 121.026 289, 122.018 289 C 123.010 289, 124.958 290.350, 126.347 292 C 127.735 293.650, 129.237 294.973, 129.685 294.939 C 130.133 294.905, 131.864 292.999, 133.532 290.703 C 135.514 287.973, 138.641 285.485, 142.565 283.514 C 145.866 281.856, 152.067 278.970, 156.345 277.100 C 160.989 275.071, 165.815 272.048, 168.320 269.600 C 170.778 267.199, 173.756 262.700, 175.508 258.742 C 177.154 255.026, 179.267 251.740, 180.204 251.440 C 181.142 251.140, 183.054 251.645, 184.454 252.562 C 186.882 254.153, 187 254.139, 187 252.280 C 187 251.208, 186.054 247.443, 184.897 243.915 C 183.741 240.387, 181.514 235.065, 179.949 232.088 C 177.719 227.848, 177.327 226.258, 178.137 224.743 C 178.962 223.202, 179.842 222.935, 182.472 223.429 C 185.381 223.974, 185.844 223.757, 186.389 221.587 C 186.728 220.234, 186.495 216.746, 185.871 213.835 C 185.247 210.924, 183.724 206.958, 182.488 205.021 C 181.251 203.084, 179.033 200.375, 177.559 199 C 176.085 197.625, 172.543 195.375, 169.689 194 C 166.207 192.322, 164.401 190.808, 164.200 189.398 C 164.009 188.060, 164.776 186.722, 166.310 185.717 C 167.635 184.848, 169.457 183.401, 170.358 182.499 C 171.495 181.362, 171.721 180.346, 171.095 179.178 C 170.599 178.252, 168.013 176.828, 165.347 176.014 C 162.681 175.200, 157.292 174.526, 153.372 174.517 C 146.756 174.501, 145.852 174.770, 140.798 178.250 C 137.804 180.313, 134.887 182, 134.318 182 C 133.748 182, 131.306 180.282, 128.891 178.182 C 126.476 176.081, 122.304 172.869, 119.620 171.044 C 116.471 168.902, 113.278 167.620, 110.620 167.428 C 108.354 167.264, 105.600 167.379, 104.500 167.682 M 224.985 207.095 C 224.976 208.418, 224.570 210.131, 224.081 210.903 C 223.331 212.089, 221.984 212.110, 215.378 211.045 C 211.079 210.351, 206.630 209.430, 205.490 208.996 C 203.505 208.242, 203.432 208.487, 203.745 214.854 C 203.924 218.509, 204.294 222.930, 204.567 224.677 C 204.861 226.561, 206.924 229.924, 209.634 232.938 C 212.316 235.921, 213.976 238.619, 213.651 239.466 C 213.347 240.260, 211.293 241.830, 209.089 242.955 C 206.884 244.080, 204.407 245, 203.584 245 C 202.263 245, 202.259 245.482, 203.544 249.126 C 204.372 251.472, 205 256.847, 205 261.588 C 205 267.521, 204.414 271.491, 202.968 275.357 C 201.850 278.345, 199.576 282.665, 197.915 284.958 C 196.064 287.514, 194.253 289.003, 193.233 288.806 C 192.319 288.630, 190.603 287.051, 189.421 285.297 L 187.272 282.107 184.638 284.856 L 182.005 287.604 186.465 289.771 C 188.918 290.963, 192.764 293.599, 195.011 295.629 C 197.747 298.100, 198.998 300.008, 198.799 301.400 C 198.634 302.544, 197.665 303.639, 196.644 303.833 C 195.600 304.033, 193.414 302.904, 191.644 301.252 C 189.915 299.638, 187.084 297.349, 185.354 296.165 C 183.624 294.981, 179.356 293.281, 175.869 292.388 C 171.723 291.326, 167.610 290.965, 163.977 291.345 C 160.923 291.664, 156.641 292.661, 154.462 293.561 C 152.283 294.461, 149.050 296.291, 147.277 297.628 C 145.505 298.966, 142.741 301.969, 141.136 304.303 C 139.530 306.637, 137.646 310.451, 136.948 312.779 C 136.250 315.108, 135.934 317.268, 136.246 317.579 C 136.558 317.891, 138.511 317.677, 140.588 317.103 C 143.806 316.215, 144.856 316.366, 147.712 318.131 C 149.790 319.415, 151.932 319.983, 153.354 319.626 C 154.614 319.310, 157.765 317.433, 160.355 315.455 C 162.946 313.477, 167.108 310.955, 169.605 309.850 C 172.103 308.746, 174.788 308.088, 175.573 308.390 C 176.358 308.691, 177 309.826, 177 310.912 C 177 311.998, 176.061 313.544, 174.913 314.348 C 172.852 315.792, 172.851 315.818, 174.815 316.441 C 175.909 316.788, 180.218 320.645, 184.390 325.012 L 191.975 332.952 194.176 329.976 C 195.386 328.339, 197.169 327, 198.138 327 C 199.108 327, 200.339 327.784, 200.875 328.742 C 201.411 329.700, 202.122 330.211, 202.455 329.878 C 202.788 329.545, 203.514 326.624, 204.069 323.386 C 204.623 320.149, 205.719 313.675, 206.504 309 C 207.288 304.325, 208.236 294.997, 208.610 288.271 C 209.214 277.399, 209.504 275.975, 211.220 275.430 C 212.282 275.093, 213.421 275.088, 213.752 275.419 C 214.083 275.750, 215.062 278.140, 215.927 280.732 C 217.298 284.838, 217.950 285.544, 221 286.227 C 222.925 286.658, 226.975 286.743, 230 286.415 C 233.025 286.088, 237.630 284.668, 240.233 283.260 C 242.836 281.852, 245.761 279.530, 246.733 278.100 C 247.705 276.670, 250.075 272.350, 252 268.500 C 254.586 263.328, 256.089 261.416, 257.754 261.180 C 259.152 260.981, 260.252 261.493, 260.649 262.527 C 261.021 263.496, 259.944 266.894, 258.076 270.648 C 256.309 274.198, 254.270 279.442, 253.545 282.301 C 252.820 285.161, 251.936 289.975, 251.582 293 C 251.227 296.025, 251.402 300.927, 251.970 303.893 C 252.538 306.859, 254.014 311.338, 255.251 313.846 C 256.488 316.355, 259.606 320.501, 262.180 323.060 C 264.753 325.620, 268.998 328.719, 271.613 329.948 C 274.227 331.177, 278.654 332.418, 281.450 332.707 L 286.533 333.232 286.517 329.866 C 286.501 326.620, 286.634 326.504, 290.250 326.614 C 292.313 326.677, 294 326.487, 294 326.193 C 294 325.898, 293.352 324.941, 292.560 324.066 C 291.767 323.190, 290.576 320.444, 289.912 317.962 C 289.176 315.208, 288.986 311.581, 289.424 308.656 C 289.863 305.728, 293.416 297.349, 298.546 287.138 C 305.128 274.040, 307.151 268.995, 307.877 263.868 C 308.386 260.267, 308.453 254.126, 308.024 250.221 C 307.531 245.730, 306.121 240.719, 304.187 236.587 C 302.506 232.993, 298.979 227.753, 296.349 224.942 C 293.720 222.132, 289.753 218.784, 287.534 217.504 C 285.315 216.223, 280.415 214.236, 276.645 213.088 C 272.874 211.940, 268.374 210.980, 266.645 210.956 C 264.915 210.932, 261.925 210.318, 260 209.591 C 258.075 208.865, 255.713 207.936, 254.750 207.528 C 253.348 206.934, 253 207.291, 253 209.326 C 253 211.030, 252.307 212.085, 250.892 212.534 C 249.732 212.902, 246.245 212.894, 243.142 212.517 C 240.039 212.139, 235.491 210.951, 233.037 209.877 C 230.582 208.803, 227.769 207.196, 226.787 206.307 C 225.118 204.797, 224.999 204.849, 224.985 207.095 M 109.001 208.761 C 107.077 210.267, 104.505 212.625, 103.285 214 C 102.064 215.375, 99.930 218.787, 98.542 221.582 C 97.153 224.377, 95.732 228.089, 95.384 229.831 C 94.802 232.742, 95.037 233.118, 98.299 234.481 L 101.849 235.964 101.319 243.232 C 100.835 249.883, 101.012 250.822, 103.395 254.294 C 104.828 256.381, 106 258.656, 106 259.349 C 106 260.042, 107.345 262.729, 108.988 265.320 C 110.632 267.912, 113.123 270.555, 114.525 271.193 C 116.564 272.122, 117.343 272.069, 118.419 270.927 C 119.159 270.142, 120.506 267.206, 121.412 264.403 C 122.482 261.091, 123.906 258.853, 125.479 258.011 C 127.442 256.961, 128.478 256.955, 130.958 257.983 C 133.438 259.010, 134.308 260.250, 135.555 264.541 C 136.401 267.451, 137.761 270.386, 138.576 271.063 C 139.704 271.999, 140.653 272.023, 142.541 271.163 C 143.907 270.541, 146.368 267.912, 148.012 265.320 C 149.655 262.729, 151 260.042, 151 259.349 C 151 258.656, 152.125 256.431, 153.500 254.405 C 155.165 251.951, 156 249.346, 156 246.604 C 156 244.339, 155.596 241.078, 155.102 239.355 C 154.240 236.350, 154.364 236.160, 158.191 234.657 C 161.991 233.165, 162.145 232.935, 161.466 229.795 C 161.074 227.983, 159.623 224.250, 158.242 221.500 C 156.860 218.750, 154.915 215.458, 153.919 214.183 C 152.922 212.909, 150.446 210.547, 148.416 208.933 C 146.028 207.035, 143.567 206, 141.445 206 C 139.642 206, 136.043 206.910, 133.449 208.022 L 128.732 210.044 123.329 208.022 C 120.357 206.910, 116.704 206.005, 115.212 206.011 C 113.721 206.017, 110.926 207.255, 109.001 208.761 M 111.914 214.412 C 109.833 215.826, 107.058 219.291, 105.174 222.826 L 101.971 228.835 105.397 229.966 C 107.281 230.588, 109.074 231.750, 109.380 232.548 C 109.687 233.347, 109.662 234.717, 109.326 235.593 C 108.813 236.929, 109.353 236.861, 112.660 235.173 C 114.830 234.066, 117.132 232.005, 117.776 230.592 C 118.848 228.240, 118.696 227.894, 115.973 226.486 C 113.891 225.409, 113 224.207, 113 222.474 C 113 220.574, 113.522 220.001, 115.250 220.004 C 116.487 220.006, 118.950 220.892, 120.723 221.973 C 122.496 223.054, 124.232 225.076, 124.581 226.467 C 124.930 227.858, 124.956 229.672, 124.639 230.498 C 124.187 231.677, 124.907 232, 127.982 232 C 130.138 232, 134.286 232.505, 137.201 233.122 C 140.115 233.739, 143.771 234.892, 145.324 235.685 C 147.921 237.012, 148.132 236.982, 147.959 235.314 C 147.855 234.316, 147.822 232.972, 147.885 232.328 C 147.948 231.683, 149.583 230.633, 151.517 229.994 L 155.034 228.834 152.329 223.863 C 150.841 221.130, 147.883 217.320, 145.755 215.397 C 142.828 212.753, 141.351 212.065, 139.693 212.574 C 138.487 212.944, 135.728 214.091, 133.562 215.123 C 131.396 216.156, 129.118 217, 128.500 217 C 127.882 217, 125.604 216.156, 123.438 215.123 C 121.272 214.091, 118.589 212.968, 117.476 212.628 C 116.182 212.232, 114.176 212.876, 111.914 214.412 M 134.314 220.107 C 132.473 220.637, 130.847 221.906, 130.464 223.113 C 130.100 224.261, 130.262 225.662, 130.826 226.226 C 131.405 226.805, 133.362 226.967, 135.325 226.599 C 137.236 226.240, 139.381 225.246, 140.092 224.390 C 141.003 223.291, 141.085 222.359, 140.371 221.226 C 139.813 220.342, 138.939 219.523, 138.429 219.405 C 137.918 219.287, 136.066 219.603, 134.314 220.107 M 112.951 242.283 C 111.166 243.502, 109.070 245.470, 108.293 246.656 C 107.024 248.593, 107.109 249.023, 109.129 250.906 C 110.857 252.516, 112.675 253, 116.989 253 C 120.075 253, 123.140 252.460, 123.800 251.800 C 124.460 251.140, 125 249.885, 125 249.012 C 125 248.138, 123.020 245.768, 120.599 243.745 L 116.198 240.066 112.951 242.283 M 136.250 243.884 C 133.912 245.903, 132 248.240, 132 249.077 C 132 249.915, 132.540 251.140, 133.200 251.800 C 133.860 252.460, 136.940 253, 140.045 253 C 144.244 253, 146.114 252.531, 147.345 251.171 C 148.255 250.165, 149 248.669, 149 247.846 C 149 247.022, 147.988 245.426, 146.750 244.299 C 145.512 243.172, 143.600 241.792, 142.500 241.231 C 140.850 240.391, 139.755 240.856, 136.250 243.884 M 262.176 253.676 C 262.435 255.935, 263 256.500, 265 256.500 C 267 256.500, 267.500 256, 267.500 254 C 267.500 252, 266.935 251.435, 264.676 251.176 C 262.108 250.882, 261.882 251.108, 262.176 253.676" stroke="none" fill="%23ffc107" fill-rule="evenodd"/></svg>';var u8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="446" height="446" viewBox="0 0 446 446" version="1.1"><path d="" stroke="none" fill="%230d6efd" fill-rule="evenodd"/><path d="M 221.975 58.031 C 220.607 58.397, 217.915 59.507, 215.994 60.497 C 214.072 61.487, 211.076 63.379, 209.335 64.702 C 207.594 66.026, 205.231 69.104, 204.085 71.543 C 202.938 73.982, 202.014 77.446, 202.032 79.239 C 202.049 81.033, 202.612 83.214, 203.282 84.087 C 203.952 84.959, 205.483 86.197, 206.684 86.837 C 207.886 87.476, 211.564 88, 214.858 88 C 219.832 88, 221.364 88.436, 223.904 90.573 C 225.716 92.098, 227.417 94.835, 228.078 97.290 C 228.757 99.811, 228.930 104.258, 228.519 108.641 C 227.936 114.864, 227.391 116.370, 224.526 119.674 L 221.209 123.500 218.651 117.731 C 217.244 114.558, 213.796 108.639, 210.989 104.578 C 208.181 100.517, 203.323 94.761, 200.192 91.787 C 197.062 88.813, 191.584 84.407, 188.019 81.996 C 184.454 79.585, 178.604 76.380, 175.019 74.874 C 171.434 73.368, 165.238 71.394, 161.250 70.488 C 155.611 69.206, 154 68.447, 154 67.075 C 154 66.104, 153.050 64.453, 151.890 63.405 C 150.270 61.943, 148.443 61.539, 144.035 61.668 C 140.875 61.761, 135.966 62.527, 133.125 63.370 C 130.284 64.214, 125.340 66.300, 122.138 68.007 C 118.936 69.714, 114.186 73.273, 111.582 75.917 C 107.996 79.557, 106.717 81.689, 106.313 84.699 C 105.961 87.329, 106.332 89.742, 107.411 91.828 C 108.308 93.562, 110.194 95.736, 111.603 96.660 C 113.657 98.005, 117.074 98.385, 128.832 98.576 C 137.565 98.718, 145.928 99.411, 149.500 100.290 C 152.800 101.102, 157.914 102.732, 160.864 103.913 C 163.814 105.094, 168.099 107.348, 170.387 108.922 C 172.674 110.496, 176.417 113.813, 178.703 116.294 C 180.990 118.775, 183.778 122.817, 184.898 125.276 C 186.018 127.735, 187.403 131.942, 187.975 134.624 C 188.547 137.306, 189.225 140.433, 189.482 141.573 C 189.882 143.349, 189.552 143.588, 187.182 143.240 C 185.660 143.017, 182.121 143.251, 179.317 143.761 L 174.219 144.687 170.030 138.316 C 167.726 134.812, 163.514 130.188, 160.670 128.042 C 157.827 125.895, 153.064 123.010, 150.086 121.631 C 147.108 120.252, 141.549 118.565, 137.732 117.883 C 132.191 116.892, 129.569 116.895, 124.717 117.898 C 121.375 118.588, 116.134 120.428, 113.070 121.988 C 110.007 123.547, 105.643 126.678, 103.373 128.946 C 99.586 132.728, 99.032 132.972, 96.668 131.894 C 94.673 130.986, 93.411 131.001, 91.089 131.963 C 89.130 132.775, 87.742 134.300, 87.094 136.353 C 86.547 138.084, 85.806 141.170, 85.446 143.211 C 84.902 146.299, 84.096 147.266, 80.646 148.972 C 78.366 150.099, 74.370 152.590, 71.766 154.508 C 69.163 156.426, 65.007 160.576, 62.532 163.730 C 60.056 166.884, 56.637 172.081, 54.933 175.278 C 53.229 178.475, 51.387 182.533, 50.841 184.295 C 50.295 186.058, 49.223 189.975, 48.460 193 C 47.696 196.025, 47.055 202.866, 47.036 208.201 C 47.016 213.537, 47.632 220.330, 48.405 223.297 C 49.178 226.265, 50.941 230.899, 52.324 233.596 C 53.706 236.293, 56.433 240.172, 58.384 242.216 C 60.335 244.259, 63.711 247.055, 65.887 248.428 C 68.062 249.802, 72.466 251.797, 75.671 252.861 C 78.877 253.926, 84.200 255.078, 87.500 255.422 C 91.445 255.833, 95.303 255.555, 98.764 254.610 C 101.659 253.820, 106.008 252.014, 108.427 250.596 C 110.846 249.178, 113.790 246.457, 114.969 244.550 C 116.148 242.643, 117.345 239.601, 117.630 237.791 C 117.915 235.981, 117.552 232.744, 116.824 230.597 C 116.081 228.406, 113.965 225.466, 112 223.894 C 109.469 221.869, 106.563 220.789, 101.500 219.991 C 97.650 219.385, 92.700 217.834, 90.500 216.546 C 88.300 215.257, 85.042 212.807, 83.259 211.101 C 81.477 209.396, 79.635 208, 79.167 208 C 78.699 208, 77.770 209.824, 77.102 212.053 L 75.888 216.106 71.490 215.446 C 67.416 214.835, 67.047 214.966, 66.481 217.220 C 66.145 218.559, 66.012 220.969, 66.185 222.577 C 66.439 224.938, 66.116 225.500, 64.500 225.500 C 62.798 225.500, 62.456 224.734, 62.202 220.361 C 61.937 215.797, 62.204 214.985, 64.586 213.111 C 66.062 211.950, 68.504 211, 70.014 211 C 72.122 211, 73.046 210.302, 74.005 207.987 C 74.692 206.330, 76.209 204.752, 77.377 204.479 C 78.544 204.206, 80.826 204.100, 82.447 204.242 C 85.187 204.482, 85.447 204.202, 86.142 200.270 C 86.553 197.943, 87.797 193.986, 88.908 191.476 C 90.018 188.966, 91.874 185.582, 93.031 183.956 C 94.889 181.348, 95.732 181, 100.200 181 C 103.533 181, 106.380 180.310, 108.528 178.982 C 110.324 177.873, 112.525 175.848, 113.420 174.482 C 114.730 172.483, 115.868 172.002, 119.273 172.012 C 121.598 172.018, 125.750 172.623, 128.500 173.356 C 131.250 174.089, 134.919 175.422, 136.653 176.320 L 139.806 177.951 137.752 184.225 C 136.214 188.925, 135.584 194.045, 135.241 204.625 C 134.832 217.263, 135.073 220.123, 137.532 231.790 C 139.043 238.963, 140.030 245.479, 139.726 246.270 C 139.423 247.062, 137.672 247.961, 135.837 248.267 C 134.002 248.573, 128.658 250.221, 123.961 251.930 C 119.265 253.638, 111.507 257.391, 106.723 260.268 C 101.938 263.146, 95.655 267.497, 92.762 269.938 C 89.868 272.380, 85.537 276.655, 83.138 279.438 C 80.739 282.222, 77.053 287.349, 74.948 290.831 C 72.843 294.313, 70.127 300.163, 68.913 303.831 C 67.259 308.828, 66.704 312.890, 66.701 320.033 C 66.699 325.277, 67.280 332.027, 67.993 335.033 C 68.706 338.040, 70.347 342.828, 71.639 345.673 C 72.931 348.518, 75.209 351.806, 76.701 352.979 C 78.609 354.480, 80.168 354.925, 81.957 354.479 C 83.356 354.130, 85.288 353.134, 86.250 352.267 C 87.718 350.944, 88 348.890, 88 339.500 C 88 331.354, 88.497 326.805, 89.826 322.777 C 90.830 319.733, 93.339 314.944, 95.401 312.135 C 97.463 309.325, 100.354 306.080, 101.825 304.923 L 104.499 302.819 105.217 307.022 C 105.611 309.334, 107.018 312.646, 108.344 314.384 C 110.011 316.570, 112.716 318.233, 117.127 319.782 C 122.277 321.591, 125.649 322.018, 134.701 322.010 C 140.970 322.004, 148.236 321.392, 151.201 320.619 C 154.116 319.859, 158.105 318.567, 160.067 317.746 L 163.634 316.255 160.398 322.378 C 158.618 325.745, 156.143 331.650, 154.899 335.500 C 153.203 340.746, 152.633 344.881, 152.626 352 C 152.617 360.165, 152.988 362.311, 155.262 367.270 C 156.791 370.606, 160.069 375.145, 163.031 378.030 C 165.849 380.775, 170.225 383.964, 172.757 385.117 C 175.288 386.270, 180.471 387.645, 184.273 388.172 C 188.197 388.715, 210.285 388.964, 235.343 388.746 C 266.300 388.478, 280.696 387.997, 283.500 387.140 C 285.700 386.467, 290.376 384.511, 293.892 382.792 C 297.407 381.073, 303.077 377.053, 306.491 373.860 C 309.905 370.666, 314.879 364.802, 317.545 360.829 C 320.210 356.856, 323.407 350.807, 324.649 347.387 C 325.890 343.967, 327.291 337.516, 327.762 333.053 C 328.249 328.433, 328.233 321.635, 327.725 317.269 C 327.234 313.052, 325.756 306.739, 324.439 303.242 C 323.123 299.744, 320.164 294.200, 317.863 290.921 C 315.563 287.641, 311.543 283.423, 308.930 281.545 C 306.317 279.668, 302.451 277.273, 300.340 276.223 C 298.228 275.173, 294.475 273.804, 292 273.181 C 289.525 272.557, 286.375 271.924, 285 271.774 C 282.523 271.503, 282.501 271.412, 282.559 262 C 282.591 256.775, 283.201 249.575, 283.914 246 C 284.628 242.425, 286.295 235.900, 287.620 231.500 C 288.944 227.100, 291.484 220.592, 293.264 217.037 C 295.764 212.045, 298.171 209.176, 303.845 204.426 C 307.884 201.044, 314.409 196.689, 318.345 194.748 C 322.280 192.807, 328.585 190.270, 332.355 189.110 C 336.126 187.949, 341.172 187, 343.570 187 C 346.701 187, 348.194 187.494, 348.868 188.753 C 349.384 189.717, 349.962 192.044, 350.153 193.924 C 350.490 197.248, 350.338 197.409, 344.616 199.725 C 341.380 201.035, 336.064 203.919, 332.803 206.134 C 329.541 208.349, 324.974 212.115, 322.652 214.504 C 320.331 216.892, 317.434 220.843, 316.216 223.283 C 314.997 225.723, 314 229.155, 314 230.909 C 314 232.664, 314.726 235.539, 315.614 237.300 C 316.502 239.060, 318.393 241.745, 319.817 243.266 C 321.240 244.787, 324.172 246.508, 326.331 247.089 C 328.686 247.723, 333.308 247.865, 337.879 247.444 C 342.070 247.057, 348.530 245.722, 352.233 244.476 C 355.936 243.230, 361.104 240.957, 363.718 239.425 C 366.332 237.893, 370.620 234.630, 373.246 232.173 C 375.872 229.717, 379.356 225.373, 380.989 222.520 C 382.621 219.668, 384.696 214.446, 385.601 210.917 C 386.798 206.248, 387.093 202.185, 386.682 196 C 386.371 191.325, 385.528 185.925, 384.808 184 C 384.088 182.075, 382.443 178.475, 381.154 176 C 379.864 173.525, 377.699 170.031, 376.343 168.236 C 374.986 166.440, 371.542 163.247, 368.688 161.140 C 365.835 159.033, 361.025 156.373, 358 155.231 C 354.975 154.088, 350.076 152.609, 347.114 151.944 C 343.993 151.244, 338.302 150.949, 333.582 151.243 C 328.186 151.580, 322.423 152.790, 316.506 154.830 C 311.594 156.523, 307.378 157.711, 307.137 157.470 C 306.896 157.229, 309.266 153.680, 312.404 149.583 C 315.542 145.486, 319.794 140.612, 321.854 138.751 C 323.913 136.890, 328.051 133.521, 331.049 131.264 C 334.047 129.007, 340.100 125.366, 344.500 123.173 C 348.900 120.979, 356.192 118.270, 360.704 117.152 C 365.216 116.034, 369.748 114.670, 370.774 114.121 C 371.800 113.572, 373.256 111.256, 374.009 108.974 C 375.179 105.428, 375.169 104.219, 373.939 100.662 C 372.768 97.274, 371.558 95.995, 367.435 93.785 C 364.649 92.292, 359.717 90.380, 356.475 89.535 C 353.233 88.691, 346.931 88, 342.471 88 C 338.012 88, 332.034 88.692, 329.188 89.537 C 325.408 90.659, 323.644 91.805, 322.644 93.787 C 321.891 95.279, 321.475 97.063, 321.721 97.750 C 321.995 98.520, 324.055 99, 327.083 99 C 329.914 99, 332 99.455, 332 100.072 C 332 100.661, 330.855 103.098, 329.456 105.485 C 328.056 107.873, 327.272 110.050, 327.713 110.323 C 328.154 110.595, 330.199 111.134, 332.258 111.521 C 334.447 111.931, 336 112.799, 336 113.611 C 336 114.654, 334.380 115, 329.500 115 L 323 115 323 112.065 C 323 110.451, 323.436 107.984, 323.968 106.583 C 324.771 104.471, 324.592 103.852, 322.919 102.957 C 321.473 102.183, 319.965 102.186, 317.590 102.970 C 315.768 103.572, 311.178 106.130, 307.389 108.656 C 303.600 111.182, 298.178 115.218, 295.341 117.625 C 292.503 120.031, 289.863 122, 289.474 122 C 289.085 122, 288.953 119.080, 289.180 115.511 C 289.467 111.008, 290.224 108.177, 291.653 106.261 C 292.785 104.742, 294.564 103.382, 295.606 103.238 C 296.648 103.094, 299.975 102.460, 303 101.829 C 306.025 101.198, 310.846 99.603, 313.714 98.285 C 316.680 96.922, 320.647 93.936, 322.916 91.359 C 325.792 88.091, 327.092 85.571, 327.580 82.315 C 327.985 79.611, 327.764 76.156, 327.028 73.700 C 326.353 71.445, 324.378 68.178, 322.641 66.441 C 320.694 64.494, 317.316 62.652, 313.837 61.641 C 310.732 60.738, 306.686 60.005, 304.846 60.012 C 303.006 60.018, 299.084 60.667, 296.131 61.453 C 293.178 62.239, 288.403 64.036, 285.519 65.447 C 282.635 66.858, 277.308 70.732, 273.680 74.056 C 270.052 77.380, 265.519 82.676, 263.607 85.824 C 261.694 88.972, 259.447 93.562, 258.613 96.024 C 257.780 98.486, 256.798 102.378, 256.433 104.674 C 255.990 107.460, 255.346 108.686, 254.498 108.361 C 253.633 108.029, 253.098 104.783, 252.822 98.187 C 252.495 90.398, 251.899 87.379, 249.777 82.780 C 248.325 79.633, 245.108 75.086, 242.627 72.675 C 240.145 70.263, 236.739 67.720, 235.058 67.024 C 233.376 66.327, 232 65.012, 232 64.101 C 232 63.190, 231.338 61.500, 230.529 60.345 C 229.720 59.189, 228.024 58.047, 226.760 57.805 C 225.497 57.564, 223.344 57.665, 221.975 58.031 M 294.657 68.433 C 290.893 69.767, 286.090 71.998, 283.983 73.393 C 281.875 74.787, 278.516 77.364, 276.517 79.119 C 274.518 80.874, 271.643 84.153, 270.128 86.405 C 268.613 88.657, 266.390 92.923, 265.187 95.883 C 263.984 98.844, 263 102.461, 263 103.921 C 263 105.381, 264.238 108.039, 265.750 109.828 C 267.585 111.998, 269.703 113.269, 272.118 113.649 C 274.512 114.026, 276.980 113.629, 279.411 112.475 C 281.839 111.323, 283.579 109.549, 284.543 107.244 C 285.344 105.325, 286 103.586, 286 103.378 C 286 103.170, 285.403 103, 284.674 103 C 283.945 103, 282.318 101.903, 281.059 100.563 C 279.317 98.709, 278.769 96.955, 278.769 93.236 C 278.769 90.547, 279.483 86.967, 280.355 85.280 C 281.227 83.594, 284.092 80.641, 286.720 78.719 C 289.349 76.796, 293.201 74.273, 295.280 73.112 C 297.360 71.950, 300.172 71, 301.530 71 C 302.889 71, 304.910 71.910, 306.023 73.023 C 307.597 74.597, 308.469 74.819, 309.953 74.025 C 311.376 73.263, 312.249 73.392, 313.388 74.531 C 314.228 75.371, 314.684 76.659, 314.402 77.393 C 314.121 78.128, 312.769 79.240, 311.398 79.865 C 310.027 80.489, 307.535 81, 305.859 81 C 303.654 81, 302.668 80.448, 302.290 79 C 302.002 77.900, 301.348 77, 300.835 77 C 300.323 77, 297.507 78.533, 294.577 80.408 C 291.647 82.282, 288.339 84.793, 287.226 85.987 C 286.113 87.182, 284.986 89.293, 284.721 90.679 C 284.456 92.065, 284.463 94.054, 284.736 95.100 C 285.159 96.715, 286.185 97, 291.568 97 C 295.052 97, 300.431 96.341, 303.521 95.537 C 306.611 94.732, 310.980 93.044, 313.231 91.787 C 315.481 90.529, 318.162 88.364, 319.188 86.977 C 320.213 85.589, 321.315 82.835, 321.636 80.858 C 322.019 78.496, 321.641 76.045, 320.532 73.709 C 319.472 71.474, 317.482 69.503, 315.173 68.399 C 313.153 67.434, 309.250 66.501, 306.500 66.327 C 303.087 66.110, 299.328 66.779, 294.657 68.433 M 142.500 67.665 C 140.850 67.857, 137.700 68.481, 135.500 69.053 C 133.300 69.624, 129.052 71.308, 126.059 72.796 C 123.067 74.283, 118.679 77.335, 116.309 79.579 C 113.452 82.282, 112 84.505, 112 86.174 C 112 87.558, 112.912 89.515, 114.027 90.524 C 115.763 92.096, 118.093 92.392, 130.277 92.592 C 139.312 92.740, 147.053 93.433, 151.500 94.492 C 155.350 95.409, 160.750 97.108, 163.500 98.267 C 166.250 99.425, 170.975 102.057, 174 104.114 C 177.025 106.171, 181.484 109.966, 183.909 112.547 C 186.334 115.128, 190.609 118.306, 193.409 119.610 C 196.675 121.131, 200.292 121.971, 203.500 121.955 C 206.250 121.941, 209.489 121.379, 210.698 120.707 C 212.889 119.489, 212.882 119.464, 208.198 111.818 C 205.614 107.600, 201.475 101.957, 199 99.277 C 196.525 96.598, 192.475 92.786, 190 90.808 C 187.525 88.829, 183.233 85.881, 180.463 84.256 C 177.693 82.632, 172.968 80.395, 169.963 79.286 C 166.958 78.176, 162.887 76.977, 160.917 76.620 C 157.423 75.988, 157.333 76.051, 157.333 79.142 C 157.333 81.234, 156.559 82.939, 155.056 84.156 C 153.604 85.331, 151.163 86, 148.323 86 C 144.052 86, 143.880 85.886, 144.184 83.250 C 144.447 80.959, 145.042 80.448, 147.750 80.187 C 150.049 79.965, 151 79.365, 151 78.137 C 151 77.181, 150.502 75.902, 149.893 75.293 C 149.284 74.684, 148.485 72.715, 148.117 70.917 C 147.749 69.120, 147.010 67.574, 146.474 67.483 C 145.938 67.391, 144.150 67.473, 142.500 67.665 M 216.507 72.636 C 215.458 73.685, 215.217 74.617, 215.835 75.235 C 216.365 75.765, 217.744 75.899, 218.899 75.532 C 220.079 75.158, 221 74.018, 221 72.933 C 221 71.870, 220.357 71, 219.571 71 C 218.786 71, 217.407 71.736, 216.507 72.636 M 127.529 76.355 C 126.394 77.185, 125.920 78.348, 126.306 79.355 C 126.722 80.438, 128.106 81, 130.362 81 C 132.602 81, 134.002 80.437, 134.410 79.373 C 134.754 78.479, 134.522 77.129, 133.895 76.373 C 133.268 75.618, 131.996 75, 131.069 75 C 130.141 75, 128.548 75.610, 127.529 76.355 M 295 83.982 C 292.993 85.535, 292.711 86.258, 293.571 87.648 C 294.161 88.601, 295.105 89.535, 295.670 89.723 C 296.235 89.912, 297.778 89.179, 299.099 88.096 C 301.021 86.519, 301.286 85.775, 300.429 84.372 C 299.839 83.408, 298.939 82.490, 298.429 82.333 C 297.918 82.176, 296.375 82.918, 295 83.982 M 350.350 100.531 C 349.983 101.486, 350.307 102.587, 351.104 103.100 C 351.872 103.593, 353.175 103.879, 354 103.735 C 354.825 103.591, 355.500 102.579, 355.500 101.486 C 355.500 100.187, 354.721 99.389, 353.246 99.180 C 351.846 98.981, 350.748 99.494, 350.350 100.531 M 240.324 115.638 C 238.028 116.451, 234.187 118.843, 231.791 120.953 C 229.394 123.063, 226.208 127.039, 224.711 129.790 C 223.214 132.540, 220.875 137.750, 219.514 141.367 C 218.152 144.984, 216.355 151.219, 215.520 155.222 C 214.585 159.704, 214.001 167.833, 214.001 176.385 C 214 184.021, 214.491 193.246, 215.091 196.885 C 215.691 200.523, 217.287 208.675, 218.638 215 C 219.990 221.325, 221.587 228.712, 222.187 231.416 C 222.995 235.051, 224.392 237.445, 227.551 240.604 C 230.345 243.397, 233.082 245.112, 235.459 245.558 C 237.459 245.933, 240.981 245.939, 243.286 245.570 C 245.591 245.202, 248.495 243.944, 249.739 242.776 C 250.982 241.607, 251.994 239.717, 251.987 238.576 C 251.980 237.434, 250.846 232.966, 249.467 228.647 C 248.087 224.328, 246.081 216.855, 245.009 212.039 C 243.936 207.223, 242.517 198.092, 241.856 191.747 C 240.937 182.932, 240.925 178.002, 241.804 170.845 C 242.438 165.693, 243.904 158.457, 245.063 154.764 C 246.222 151.070, 249.304 144.537, 251.911 140.245 C 254.518 135.953, 257.179 130.925, 257.825 129.071 C 258.471 127.218, 259 124.384, 259 122.774 C 259 120.871, 257.976 118.823, 256.077 116.923 C 253.707 114.553, 252.335 114.015, 248.827 114.079 C 246.447 114.122, 242.621 114.824, 240.324 115.638 M 122.776 124.420 C 120.178 125.168, 116.128 126.911, 113.776 128.295 C 111.424 129.678, 108.460 131.924, 107.188 133.285 L 104.876 135.761 107.874 136.806 C 109.592 137.405, 111.566 139.194, 112.499 140.997 C 113.769 143.454, 113.866 144.457, 112.940 145.572 C 112.288 146.357, 111.146 147, 110.401 147 C 109.656 147, 108.320 145.891, 107.432 144.537 C 105.908 142.211, 105.685 142.161, 103.435 143.634 C 101.440 144.942, 100.843 144.977, 99.763 143.848 C 99.054 143.106, 97.664 141.235, 96.673 139.688 C 95.683 138.141, 94.350 137.050, 93.712 137.263 C 93.074 137.475, 91.997 140.316, 91.320 143.575 C 90.642 146.834, 90.068 152.256, 90.044 155.624 C 90.020 158.993, 90.690 163.705, 91.534 166.096 C 92.377 168.487, 94.031 171.468, 95.208 172.722 C 96.673 174.281, 98.494 175, 100.978 175 C 103.802 175, 105.262 174.279, 107.554 171.750 C 109.174 169.963, 110.994 167.600, 111.598 166.500 C 112.202 165.400, 114.118 159.918, 115.856 154.317 C 117.678 148.448, 120.123 142.819, 121.628 141.030 C 123.064 139.323, 125.815 137.268, 127.742 136.463 C 129.668 135.659, 132.472 135, 133.973 135 C 135.474 135, 138.231 135.519, 140.101 136.153 C 141.970 136.787, 144.772 138.192, 146.327 139.276 C 148.198 140.580, 149.490 140.910, 150.147 140.253 C 150.697 139.703, 150.846 137.695, 150.481 135.748 C 150.118 133.816, 148.985 130.860, 147.963 129.179 C 146.761 127.203, 144.760 125.728, 142.302 125.006 C 140.211 124.392, 136.025 123.703, 133 123.475 C 129.975 123.247, 125.374 123.672, 122.776 124.420 M 129.241 142.325 C 127.999 143.015, 126.286 144.574, 125.435 145.790 C 123.889 147.996, 123.897 148, 129.845 148 C 135.529 148, 135.851 147.865, 136.821 145.085 C 137.379 143.482, 137.573 141.907, 137.252 141.585 C 136.930 141.263, 135.504 141.016, 134.083 141.035 C 132.662 141.055, 130.484 141.635, 129.241 142.325 M 257.827 142.702 C 256.963 143.691, 255.728 145.522, 255.082 146.771 C 254.436 148.020, 254.180 149.482, 254.513 150.021 C 254.846 150.559, 257.743 151, 260.952 151 C 265.036 151, 266.948 151.421, 267.324 152.403 C 267.620 153.174, 267.285 154.595, 266.580 155.560 C 265.485 157.057, 264.247 157.227, 258.171 156.718 L 251.045 156.120 250.076 159.810 C 249.543 161.840, 248.970 164.835, 248.803 166.467 C 248.508 169.358, 248.666 169.471, 254.915 170.839 C 260.093 171.974, 262.358 172.014, 266.665 171.051 L 272 169.857 271.984 159.678 C 271.969 150.977, 271.639 148.919, 269.708 145.500 C 267.729 141.995, 266.951 141.463, 263.423 141.202 C 260.526 140.988, 258.956 141.409, 257.827 142.702 M 142.235 147.189 C 141.219 149.880, 141.287 150.660, 142.671 152.189 C 143.572 153.185, 144.636 154, 145.034 154 C 145.432 154, 146.320 152.641, 147.008 150.980 C 148.140 148.249, 148.041 147.770, 145.977 145.980 C 144.721 144.891, 143.636 144, 143.566 144 C 143.496 144, 142.897 145.435, 142.235 147.189 M 176.169 150.515 C 173.237 151.332, 168.399 153.619, 165.418 155.598 C 162.436 157.577, 158.310 161.126, 156.249 163.485 C 154.187 165.844, 151.032 170.218, 149.238 173.205 C 147.444 176.192, 144.994 181.305, 143.792 184.568 C 142.056 189.283, 141.526 193.295, 141.211 204.124 C 140.869 215.852, 141.170 219.475, 143.374 230.173 C 144.783 237.008, 146.632 244.268, 147.484 246.307 C 148.336 248.346, 150.413 251.333, 152.101 252.946 C 153.788 254.559, 156.481 256.166, 158.085 256.519 C 159.688 256.871, 162.463 256.842, 164.250 256.455 C 166.037 256.068, 168.788 254.840, 170.363 253.727 C 171.938 252.614, 173.850 250.209, 174.613 248.383 C 175.376 246.558, 175.989 242.912, 175.976 240.282 C 175.962 237.652, 175.483 233.475, 174.912 231 C 174.340 228.525, 173.235 222.900, 172.455 218.500 C 171.675 214.100, 171.033 207.350, 171.029 203.500 C 171.025 199.650, 171.656 194.409, 172.432 191.852 C 173.208 189.296, 174.537 185.862, 175.385 184.222 C 176.234 182.581, 178.280 180.100, 179.933 178.710 C 181.586 177.319, 185.137 175.451, 187.825 174.558 C 190.513 173.665, 193.641 171.937, 194.775 170.717 C 195.909 169.498, 197.238 166.932, 197.728 165.015 C 198.263 162.923, 198.240 159.610, 197.669 156.725 C 197.140 154.050, 195.984 151.527, 195.061 151.032 C 194.148 150.544, 190.724 149.894, 187.451 149.587 C 183.616 149.227, 179.604 149.557, 176.169 150.515 M 98.667 153.667 C 98.300 154.033, 98 155.847, 98 157.698 C 98 159.779, 98.577 161.284, 99.513 161.643 C 100.345 161.963, 101.695 161.668, 102.513 160.989 C 103.331 160.311, 104 158.775, 104 157.578 C 104 156.380, 103.460 154.860, 102.800 154.200 C 102.140 153.540, 101.090 153, 100.467 153 C 99.843 153, 99.033 153.300, 98.667 153.667 M 328.500 157.681 C 327.400 157.927, 323.989 158.746, 320.920 159.500 C 317.851 160.254, 312.901 161.988, 309.920 163.353 C 306.939 164.718, 301.125 168.082, 297 170.829 C 292.875 173.576, 287.617 177.618, 285.316 179.811 C 282.738 182.267, 280.746 185.277, 280.127 187.649 C 279.574 189.767, 278.820 193.188, 278.450 195.250 C 278.020 197.649, 278.160 199, 278.838 199 C 279.421 199, 282.059 196.921, 284.699 194.380 C 287.340 191.840, 292.875 187.528, 297 184.798 C 301.125 182.068, 306.939 178.718, 309.920 177.353 C 312.901 175.988, 318.032 174.182, 321.321 173.339 C 325.340 172.310, 329.079 172.029, 332.722 172.484 C 335.704 172.857, 339.631 173.784, 341.451 174.544 C 343.270 175.304, 346.185 177.126, 347.928 178.593 C 349.672 180.060, 352.271 183.564, 353.705 186.380 C 355.550 190.004, 356.451 193.619, 356.788 198.750 L 357.263 206 363.663 206 C 368.432 206, 370.210 206.383, 370.639 207.502 C 370.956 208.327, 370.400 211.723, 369.405 215.048 C 368.409 218.372, 367.086 221.514, 366.465 222.029 C 365.746 222.625, 364.709 222.508, 363.613 221.706 C 362.164 220.647, 362.041 219.775, 362.839 216.223 L 363.787 212 358.594 212 C 355.737 212, 352.860 211.460, 352.200 210.800 C 351.540 210.140, 351 208.310, 351 206.733 C 351 204.219, 350.722 203.951, 348.750 204.562 C 347.512 204.945, 344.448 206.290, 341.941 207.550 C 339.433 208.810, 335.038 211.693, 332.174 213.957 C 329.310 216.221, 325.410 220.194, 323.508 222.787 C 321.474 225.558, 320.039 228.697, 320.025 230.405 C 320.001 233.148, 320.101 233.219, 321.815 231.667 C 322.813 230.764, 324.987 229.552, 326.647 228.973 C 328.776 228.231, 330.502 228.240, 332.512 229.004 C 334.887 229.908, 336.071 229.710, 339.646 227.813 C 343.695 225.665, 344.168 225.621, 348.144 227.019 C 350.459 227.834, 352.519 229.010, 352.722 229.634 C 352.924 230.258, 352.388 231.469, 351.530 232.327 C 350.293 233.564, 349.359 233.672, 347.002 232.851 C 344.525 231.987, 343.429 232.190, 340.376 234.077 C 337.115 236.092, 336.271 236.215, 332.609 235.208 C 329.072 234.236, 328.152 234.332, 326 235.897 C 324.625 236.897, 323.550 238.117, 323.612 238.608 C 323.674 239.099, 324.799 240.071, 326.112 240.769 C 327.757 241.644, 330.834 241.855, 336 241.449 C 340.125 241.124, 346.403 239.955, 349.950 238.851 C 353.498 237.747, 357.773 236.148, 359.450 235.298 C 361.128 234.447, 364.319 232.278, 366.543 230.478 C 368.766 228.679, 371.854 225.376, 373.404 223.139 C 374.954 220.902, 377.297 216.110, 378.611 212.491 C 380.308 207.816, 381 203.801, 381 198.633 C 381 194.448, 380.288 189.266, 379.324 186.436 C 378.402 183.730, 376.730 179.938, 375.610 178.008 C 374.489 176.079, 371.657 172.456, 369.317 169.958 C 366.977 167.460, 362.236 164.022, 358.781 162.319 C 355.326 160.616, 350.115 158.723, 347.201 158.112 C 344.286 157.500, 339.336 157.052, 336.201 157.116 C 333.065 157.180, 329.600 157.434, 328.500 157.681 M 247 181.734 C 247 186.286, 247.499 188.365, 249.073 190.365 C 250.688 192.419, 252.018 193, 255.105 193 C 257.282 193, 260.558 192.376, 262.383 191.613 C 264.209 190.850, 266.654 188.890, 267.816 187.258 C 268.979 185.625, 270.225 182.446, 270.585 180.192 L 271.240 176.095 267.386 177.159 C 265.267 177.744, 261.500 177.960, 259.016 177.639 C 256.532 177.318, 252.813 176.759, 250.750 176.397 L 247 175.738 247 181.734 M 323.750 178.716 C 322.065 178.971, 321 179.755, 321 180.738 C 321 181.620, 321.680 183.094, 322.512 184.013 C 323.924 185.573, 324.372 185.564, 329.262 183.875 C 332.143 182.880, 335.486 182.051, 336.691 182.033 C 337.896 182.015, 339.128 181.602, 339.429 181.116 C 339.729 180.629, 337.981 179.729, 335.545 179.116 C 333.108 178.502, 330.076 178.067, 328.807 178.150 C 327.538 178.232, 325.262 178.487, 323.750 178.716 M 306.996 185.805 C 302.084 188.681, 300.584 190.075, 300.843 191.518 C 301.031 192.568, 301.727 194.200, 302.389 195.145 C 303.494 196.723, 303.995 196.586, 308.546 193.467 C 311.271 191.599, 313.973 190.055, 314.550 190.035 C 315.127 190.016, 316.094 189.506, 316.698 188.902 C 317.494 188.106, 317.343 187.011, 316.148 184.909 C 315.241 183.316, 314.273 182.010, 313.996 182.006 C 313.718 182.003, 310.568 183.712, 306.996 185.805 M 190.063 186.250 C 190.098 186.938, 191.343 189.975, 192.829 193 C 195.086 197.593, 196.020 198.556, 198.498 198.839 C 200.129 199.025, 203.159 198.670, 205.232 198.049 C 207.800 197.279, 209 196.339, 209 195.095 C 209 194.091, 208.060 192.075, 206.912 190.615 C 205.763 189.155, 203.535 187.294, 201.961 186.480 C 200.387 185.666, 197.052 185, 194.550 185 C 191.543 185, 190.021 185.424, 190.063 186.250 M 182.874 192.750 C 182.282 194.262, 181.552 197.239, 181.252 199.364 C 180.746 202.946, 180.863 203.183, 182.853 202.614 C 184.034 202.276, 185.900 201.745, 187 201.433 C 188.100 201.121, 189 200.421, 189 199.878 C 189 199.335, 188.089 196.890, 186.975 194.445 C 185.861 192, 184.725 190, 184.450 190 C 184.175 190, 183.466 191.238, 182.874 192.750 M 287.376 200.293 L 280.734 206.585 282.360 209.729 C 283.254 211.458, 284.426 213.145, 284.963 213.477 C 285.501 213.809, 288.790 211.073, 292.273 207.397 L 298.606 200.713 297.053 197.389 C 296.199 195.561, 295.167 194.050, 294.759 194.033 C 294.352 194.015, 291.029 196.832, 287.376 200.293 M 206.500 204 C 205.400 204.473, 203.059 204.891, 201.298 204.930 L 198.096 205 199.567 209.750 C 200.376 212.363, 201.320 218.845, 201.664 224.156 C 202.244 233.089, 202.470 233.893, 204.692 234.906 C 206.013 235.508, 208.562 236, 210.356 236 C 212.150 236, 214.377 235.438, 215.305 234.750 C 216.670 233.740, 216.821 232.829, 216.094 230 C 215.599 228.075, 214.923 225.288, 214.592 223.807 C 214.070 221.469, 213.431 221.074, 209.745 220.807 C 205.966 220.534, 205.500 220.226, 205.500 218 C 205.500 215.910, 206.034 215.449, 208.750 215.187 C 210.537 215.014, 212 214.486, 212 214.013 C 212 213.540, 211.473 210.868, 210.828 208.076 C 210.184 205.284, 209.396 203.032, 209.078 203.070 C 208.760 203.109, 207.600 203.527, 206.500 204 M 186.236 207.942 C 183.192 208.832, 181.154 209.959, 181.405 210.613 C 181.644 211.235, 182.159 213.876, 182.550 216.482 L 183.260 221.219 186.736 220.655 C 188.647 220.345, 191.329 219.359, 192.694 218.465 C 194.656 217.180, 195.042 216.302, 194.534 214.280 C 194.181 212.872, 193.354 210.524, 192.696 209.061 L 191.500 206.401 186.236 207.942 M 343.250 214.674 C 342.012 215.538, 341 217.059, 341 218.055 C 341 219.050, 341.932 220.161, 343.072 220.523 C 344.395 220.943, 345.840 220.550, 347.072 219.435 C 348.132 218.475, 349 216.908, 349 215.952 C 349 214.996, 348.288 213.941, 347.418 213.607 C 346.548 213.273, 345.761 213.024, 345.668 213.052 C 345.576 213.081, 344.488 213.811, 343.250 214.674 M 190.500 225.888 C 187.750 226.712, 185.340 227.497, 185.144 227.632 C 184.948 227.768, 185.584 229.961, 186.556 232.507 C 188.162 236.711, 188.561 237.078, 190.912 236.502 C 192.335 236.154, 194.090 235.292, 194.811 234.587 C 195.616 233.801, 196.002 231.584, 195.811 228.848 L 195.500 224.389 190.500 225.888 M 88 231.883 C 88 232.991, 88.919 234.007, 90.233 234.351 C 91.461 234.672, 92.882 234.518, 93.390 234.010 C 93.957 233.443, 93.819 232.487, 93.035 231.542 C 92.331 230.694, 90.910 230, 89.878 230 C 88.705 230, 88 230.708, 88 231.883 M 194.669 241.373 C 190.135 243.310, 189.872 243.625, 190.399 246.469 C 190.708 248.136, 191.259 252.754, 191.624 256.732 L 192.286 263.963 195.719 264.607 C 197.607 264.961, 201.182 264.973, 203.664 264.633 C 206.146 264.292, 210.621 262.548, 213.608 260.757 L 219.040 257.500 218.398 250 C 218.045 245.875, 217.580 242.306, 217.363 242.068 C 217.147 241.831, 214.614 241.744, 211.735 241.876 C 208.856 242.007, 204.925 241.483, 203 240.711 C 199.831 239.440, 199.043 239.503, 194.669 241.373 M 228.941 259.929 C 226.433 260.885, 221.999 262.964, 219.087 264.549 C 216.174 266.134, 211.770 269.211, 209.298 271.387 L 204.805 275.342 207.463 276.735 C 209.080 277.582, 209.988 278.789, 209.780 279.814 C 209.520 281.094, 208.418 281.479, 205.197 281.412 C 201.528 281.336, 200.876 281.645, 200.358 283.709 C 200.029 285.020, 200.019 286.352, 200.335 286.669 C 200.652 286.985, 203.293 287.407, 206.205 287.606 C 209.117 287.806, 212.850 288.046, 214.500 288.141 C 216.150 288.236, 218.949 287.828, 220.720 287.235 C 223.601 286.270, 224.751 286.569, 231.654 290.078 C 238.378 293.497, 240.239 294, 246.150 294 C 252.371 294, 253.235 293.732, 256.624 290.757 C 258.655 288.974, 261.366 285.261, 262.649 282.507 C 263.931 279.753, 264.985 276.503, 264.990 275.285 C 264.996 274.063, 264.074 272.575, 262.933 271.964 C 261.328 271.105, 260.330 271.209, 258.468 272.429 C 257.149 273.293, 255.574 274.927, 254.968 276.061 C 254.262 277.379, 253.078 278.009, 251.682 277.811 C 249.707 277.529, 249.530 277.002, 249.822 272.250 L 250.143 267 245.226 267 C 241.812 267, 239.826 266.465, 238.725 265.248 C 237.853 264.285, 236.669 262.260, 236.094 260.748 C 235.520 259.237, 234.701 258.043, 234.275 258.095 C 233.849 258.148, 231.448 258.973, 228.941 259.929 M 190.725 278.657 C 189.801 283.451, 187.521 290.551, 185.657 294.436 C 183.794 298.321, 179.468 305.099, 176.044 309.499 C 172.621 313.898, 168.322 320.198, 166.492 323.499 C 164.662 326.799, 162.227 332.387, 161.082 335.915 C 159.826 339.786, 159 344.964, 159 348.969 C 159 354.602, 159.447 356.313, 161.948 360.258 C 163.698 363.016, 166.443 365.689, 168.698 366.830 C 170.789 367.888, 174.975 369.282, 178 369.927 C 181.025 370.573, 191.825 371.366, 202 371.689 C 213.918 372.067, 223.622 371.856, 229.277 371.097 C 234.104 370.449, 240.873 369.048, 244.319 367.983 C 247.765 366.919, 252.717 364.635, 255.323 362.909 C 257.929 361.183, 261.348 357.901, 262.920 355.616 C 264.492 353.331, 266.251 349.749, 266.829 347.656 C 267.714 344.453, 267.576 343.352, 265.960 340.694 C 264.905 338.958, 263.310 335.054, 262.416 332.019 C 261.522 328.984, 260.634 325.957, 260.443 325.294 C 260.204 324.463, 258.755 324.830, 255.798 326.468 C 253.434 327.777, 248.350 329.895, 244.500 331.174 C 238.400 333.201, 235.572 333.497, 222.500 333.473 C 213.788 333.458, 205.194 332.902, 202 332.148 C 198.975 331.433, 195.262 330.378, 193.750 329.803 C 192.238 329.228, 191 328.192, 191 327.501 C 191 326.810, 191.643 325.711, 192.430 325.058 C 193.545 324.133, 195.363 324.271, 200.680 325.686 C 205.920 327.080, 211.091 327.490, 223 327.455 C 236.862 327.415, 239.129 327.162, 244.455 325.057 C 247.731 323.762, 252.343 321.535, 254.705 320.109 L 259 317.515 259 307.328 L 259 297.141 254.750 299.491 C 252.412 300.783, 247.800 302.637, 244.500 303.609 C 240.254 304.861, 235.284 305.355, 227.500 305.301 C 220.746 305.254, 213.798 304.561, 209.500 303.507 C 205.650 302.563, 201.490 301.154, 200.255 300.376 C 199.021 299.597, 197.283 297.282, 196.393 295.230 C 195.503 293.179, 194.718 288.942, 194.648 285.817 C 194.539 280.917, 194.965 279.503, 197.740 275.567 L 200.959 271 198.061 271 C 196.467 271, 194.543 270.762, 193.785 270.471 C 192.747 270.073, 191.990 272.098, 190.725 278.657 M 227.294 275.315 C 225.531 275.967, 223.617 276.974, 223.040 277.554 C 222.310 278.289, 222.402 279.168, 223.346 280.458 C 224.594 282.166, 225.064 282.202, 229.394 280.923 C 233.523 279.704, 234.053 279.235, 233.794 277.027 C 233.632 275.647, 232.825 274.430, 232 274.323 C 231.175 274.216, 229.057 274.662, 227.294 275.315 M 131.225 279.793 C 127.223 281.832, 122.379 284.762, 120.459 286.305 C 117.339 288.812, 117.129 289.272, 118.484 290.627 C 119.318 291.461, 119.993 292.448, 119.985 292.821 C 119.976 293.195, 119.576 294.122, 119.094 294.882 C 118.478 295.855, 117.187 296.070, 114.732 295.609 C 111.713 295.043, 111.169 295.247, 110.677 297.126 C 110.365 298.320, 110.371 300.605, 110.691 302.204 C 111.128 304.388, 111.673 304.943, 112.886 304.440 C 113.774 304.071, 116.032 303.403, 117.905 302.955 C 120.299 302.383, 122.479 302.608, 125.243 303.714 C 128.843 305.154, 129.466 305.148, 132.621 303.644 C 134.517 302.740, 136.902 302, 137.922 302 C 138.941 302, 142.837 303.433, 146.579 305.184 C 150.361 306.954, 155.631 308.554, 158.448 308.787 C 163.482 309.205, 163.547 309.172, 168.757 303.664 C 172.675 299.521, 174 297.364, 174 295.131 C 174 293.488, 173.293 291.436, 172.429 290.571 C 171.564 289.707, 170.134 289, 169.250 289 C 168.365 289, 166.123 289.549, 164.266 290.221 C 161.518 291.214, 160.736 291.191, 160.058 290.093 C 159.599 289.352, 159.457 287.011, 159.741 284.891 C 160.154 281.814, 159.898 280.898, 158.472 280.351 C 157.490 279.974, 153.739 280.451, 150.136 281.411 C 143.885 283.076, 143.528 283.075, 142.294 281.387 C 141.582 280.414, 141 278.804, 141 277.809 C 141 276.814, 140.438 276.019, 139.750 276.043 C 139.063 276.067, 135.226 277.755, 131.225 279.793 M 134.250 289.584 C 132.190 290.485, 131 291.715, 131 292.944 C 131 294.010, 131.498 295.190, 132.107 295.566 C 132.715 295.942, 134.942 295.679, 137.054 294.982 C 139.167 294.285, 141.152 293.047, 141.465 292.230 C 141.778 291.414, 141.522 290.129, 140.895 289.373 C 140.268 288.618, 139.248 288.037, 138.628 288.082 C 138.007 288.126, 136.037 288.803, 134.250 289.584 M 268.365 291.750 C 266.781 294.086, 266.510 296.380, 266.566 307 C 266.610 315.344, 267.150 321.162, 268.191 324.500 C 269.048 327.250, 270.787 331.750, 272.055 334.500 C 273.324 337.250, 275.669 341.438, 277.268 343.807 C 278.866 346.176, 282.003 349.438, 284.237 351.057 C 287.550 353.457, 289.305 354, 293.746 354 C 297.716 354, 300.010 353.417, 302.212 351.849 C 303.874 350.666, 306.071 347.853, 307.095 345.599 C 308.118 343.345, 308.966 340.218, 308.978 338.651 C 308.990 337.084, 308.326 334.384, 307.501 332.651 C 306.677 330.918, 304.036 328.258, 301.631 326.740 C 299.227 325.222, 295.227 322.192, 292.744 320.006 C 290.260 317.820, 286.833 313.856, 285.127 311.198 C 283.422 308.540, 280.916 303.304, 279.558 299.561 C 278.201 295.819, 276.325 291.912, 275.390 290.879 C 274.455 289.845, 272.912 289, 271.960 289 C 271.009 289, 269.391 290.238, 268.365 291.750 M 203 294.051 C 203 294.629, 204.688 295.832, 206.750 296.725 C 209.336 297.844, 214.535 298.481, 223.500 298.779 L 236.500 299.210 230.648 296.105 C 227.430 294.397, 224.012 293, 223.052 293 C 222.092 293, 219.856 293.724, 218.083 294.609 C 215.119 296.087, 214.516 296.087, 210.645 294.609 C 208.329 293.724, 205.661 293, 204.717 293 C 203.772 293, 203 293.473, 203 294.051 M 117.179 309.521 C 115.353 310.314, 114.135 311.409, 114.472 311.955 C 114.810 312.501, 117.398 313.635, 120.224 314.474 C 123.410 315.420, 129.189 315.983, 135.432 315.955 C 141.756 315.927, 146.616 315.399, 148.500 314.536 C 150.150 313.781, 150.909 313.126, 150.187 313.081 C 149.465 313.037, 146.405 311.791, 143.388 310.314 C 138.092 307.720, 137.802 307.686, 135.046 309.314 C 133.476 310.241, 130.686 310.986, 128.846 310.968 C 127.006 310.951, 124.626 310.276, 123.559 309.468 C 122.491 308.661, 121.366 308.018, 121.059 308.039 C 120.751 308.061, 119.006 308.727, 117.179 309.521 M 178.152 318.871 C 177.410 319.349, 176.964 320.586, 177.160 321.620 C 177.389 322.825, 178.527 323.616, 180.332 323.824 C 182.889 324.117, 183.117 323.889, 182.824 321.332 C 182.646 319.784, 181.825 318.401, 181 318.260 C 180.175 318.118, 178.893 318.393, 178.152 318.871" stroke="none" fill="%230d6efd" fill-rule="evenodd"/></svg>';var d8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="447" height="447" viewBox="0 0 447 447" version="1.1"><path d="" stroke="none" fill="%23ffc107" fill-rule="evenodd"/><path d="M 78.285 70.109 C 74.875 71.420, 71.726 73.641, 69.186 76.526 C 66.722 79.325, 64.486 83.420, 63.072 87.720 C 61.846 91.449, 60.600 98.325, 60.304 103 C 60.007 107.675, 60.286 115.775, 60.925 121 C 61.564 126.225, 62.958 134.691, 64.023 139.814 C 65.088 144.936, 67.534 153.832, 69.458 159.582 C 72.178 167.708, 72.826 170.993, 72.368 174.330 C 72.045 176.691, 72.317 181.295, 72.973 184.561 C 73.629 187.828, 75.887 194.100, 77.991 198.500 C 80.095 202.900, 84.422 210.068, 87.608 214.429 C 92.579 221.236, 93.360 222.897, 93.124 226.164 C 92.973 228.257, 93.594 232.564, 94.504 235.735 C 95.414 238.906, 99.036 246.974, 102.553 253.665 C 106.375 260.938, 110.596 270.991, 113.048 278.665 C 115.303 285.724, 117.549 292.758, 118.038 294.295 C 118.753 296.542, 118.591 297.215, 117.214 297.726 C 116.271 298.075, 114.700 299.263, 113.723 300.365 C 112.745 301.467, 111.684 303.411, 111.364 304.684 C 111.045 305.958, 111.058 308.094, 111.393 309.430 C 111.729 310.767, 112.677 312.534, 113.502 313.359 C 114.326 314.183, 115.002 316.127, 115.004 317.679 C 115.006 319.230, 115.854 321.887, 116.888 323.583 C 117.922 325.279, 119.080 328.086, 119.461 329.821 C 119.842 331.556, 121.265 333.850, 122.624 334.919 C 123.982 335.987, 126.423 337.154, 128.047 337.510 C 129.671 337.867, 131 338.407, 131 338.711 C 131 339.015, 132.277 344.267, 133.837 350.382 C 135.397 356.497, 137.219 363.975, 137.886 367 C 138.552 370.025, 139.582 374.525, 140.174 377 C 140.766 379.475, 142.144 382.288, 143.236 383.250 C 144.328 384.213, 146.729 385, 148.572 385 C 150.731 385, 152.647 384.222, 153.961 382.811 C 155.082 381.608, 156 379.693, 156 378.557 C 156 377.421, 154.189 368.394, 151.975 358.496 C 149.761 348.598, 147.569 338.588, 147.104 336.250 C 146.457 332.998, 146.563 332, 147.557 332 C 148.271 332, 149.788 330.814, 150.927 329.365 C 152.067 327.916, 153 325.513, 153 324.025 C 153 321.769, 153.622 321.131, 156.750 320.179 C 158.813 319.551, 169.275 316.538, 180 313.482 C 190.725 310.426, 200.850 307.445, 202.500 306.856 C 204.150 306.268, 206.941 305.069, 208.702 304.192 C 211.732 302.682, 212.147 302.719, 216.452 304.869 C 218.953 306.118, 221 307.289, 221 307.470 C 221 307.651, 219.460 310.088, 217.577 312.885 C 215.695 315.683, 213.186 320.561, 212.002 323.725 C 210.818 326.889, 209.604 331.546, 209.305 334.072 C 208.969 336.912, 209.381 340.797, 210.383 344.247 C 211.277 347.322, 213.725 351.999, 215.835 354.664 C 217.941 357.324, 220.913 360.164, 222.439 360.976 C 225.017 362.348, 225.340 362.299, 226.966 360.290 L 228.718 358.127 232.498 361.998 C 234.578 364.128, 238.804 367.195, 241.890 368.815 C 244.975 370.434, 249.075 372.222, 251 372.788 C 252.925 373.354, 256.184 374.054, 258.243 374.345 C 260.757 374.699, 262.457 374.400, 263.422 373.435 C 264.501 372.356, 264.632 371.204, 263.947 368.815 C 263.445 367.065, 263.241 365.426, 263.493 365.174 C 263.745 364.921, 264.525 365.169, 265.226 365.724 C 265.927 366.280, 269.185 367.724, 272.466 368.934 C 275.747 370.144, 281.822 371.834, 285.966 372.691 C 290.110 373.547, 295.802 375.266, 298.616 376.510 C 301.484 377.777, 305 380.360, 306.616 382.386 C 308.202 384.374, 310.276 386, 311.224 386 C 312.173 386, 313.580 384.763, 314.353 383.250 C 315.125 381.738, 316.261 378.115, 316.878 375.201 C 317.495 372.286, 318 367.422, 318 364.392 C 318 361.362, 317.519 355.647, 316.932 351.692 C 316.344 347.736, 314.943 341.004, 313.817 336.730 C 312.169 330.473, 310.917 328.011, 307.385 324.084 C 304.973 321.401, 303 318.266, 303 317.117 C 303 315.583, 304.526 314.246, 308.750 312.081 C 311.913 310.459, 317.187 307.342, 320.472 305.153 L 326.444 301.174 327.762 306.337 C 328.487 309.177, 331.480 315.775, 334.413 321 C 337.345 326.225, 340.530 332.912, 341.489 335.859 C 342.570 339.181, 343.062 343.003, 342.783 345.909 C 342.535 348.488, 340.856 353.502, 339.053 357.050 C 336.974 361.139, 335.792 364.899, 335.825 367.323 C 335.853 369.426, 336.335 371.698, 336.894 372.373 C 337.454 373.047, 338.192 375.602, 338.534 378.050 C 338.876 380.497, 339.635 383.491, 340.221 384.702 C 340.807 385.913, 342.585 387.357, 344.172 387.910 C 345.758 388.463, 347.831 388.649, 348.778 388.323 C 349.725 387.997, 353.687 386.270, 357.583 384.485 C 361.479 382.700, 365.641 380, 366.833 378.485 C 368.560 376.290, 369 374.386, 369 369.115 C 369 365.477, 368.314 358.917, 367.476 354.538 C 366.275 348.259, 366.169 345.020, 366.976 339.216 C 367.539 335.167, 368 326.322, 368 319.559 C 368 312.795, 367.317 303.348, 366.483 298.564 C 365.649 293.780, 363.865 286.713, 362.518 282.859 C 361.172 279.005, 358.789 273.487, 357.223 270.596 C 354.414 265.408, 354.398 265.288, 356.043 261.414 C 356.960 259.255, 358.435 254.566, 359.320 250.994 C 360.205 247.422, 361.228 241.504, 361.593 237.843 C 361.973 234.035, 361.738 227.614, 361.044 222.843 C 360.377 218.254, 359.221 212.250, 358.477 209.500 C 357.732 206.750, 356.655 202.962, 356.083 201.081 C 355.511 199.201, 353.201 193.997, 350.951 189.517 C 348.700 185.037, 344.451 178.263, 341.507 174.464 C 338.564 170.665, 336.373 167.206, 336.637 166.778 C 336.902 166.350, 337.959 166, 338.986 166 C 340.014 166, 341.788 164.814, 342.927 163.365 C 344.067 161.916, 345 160.153, 345 159.447 C 345 158.741, 343.026 155.850, 340.613 153.023 C 337.988 149.949, 334.684 144.209, 332.391 138.741 C 329.408 131.627, 327.331 128.351, 323.029 123.973 C 319.988 120.878, 314.507 116.680, 310.849 114.642 C 304.220 110.951, 304.201 110.928, 305.332 107.931 C 306.238 105.532, 306.167 104.392, 304.984 102.299 C 304.033 100.616, 301.166 98.669, 297 96.875 C 292.555 94.961, 288.761 94.067, 285 94.049 C 281.975 94.034, 277.409 94.656, 274.852 95.432 C 272.296 96.208, 268.696 97.603, 266.852 98.532 C 265.009 99.460, 261.839 101.811, 259.809 103.756 L 256.118 107.291 249.809 104.171 C 246.339 102.455, 241.131 100.511, 238.235 99.850 C 234.351 98.965, 231.202 98.924, 226.235 99.697 C 222.531 100.272, 217.461 101.705, 214.969 102.879 C 212.477 104.053, 208.715 106.435, 206.608 108.172 C 202.978 111.164, 202.801 111.576, 203.228 116.024 C 203.663 120.551, 203.554 120.785, 200.133 122.609 C 198.183 123.649, 194.451 126.181, 191.840 128.237 C 189.229 130.292, 185.219 134.732, 182.929 138.104 C 180.640 141.476, 177.889 146.731, 176.816 149.782 C 175.744 152.833, 174.617 157.437, 174.312 160.014 C 173.899 163.498, 174.204 165.382, 175.501 167.362 C 176.461 168.826, 178.342 170.299, 179.682 170.635 C 181.146 171.003, 181.918 171.772, 181.615 172.561 C 181.338 173.284, 180.668 175.591, 180.126 177.687 C 179.585 179.784, 179.021 183.300, 178.874 185.500 C 178.727 187.700, 178.964 194.225, 179.400 200 L 180.195 210.500 175.917 221.500 C 171.837 231.992, 171.636 233.008, 171.570 243.500 C 171.525 250.505, 171.991 255.771, 172.851 258 C 173.594 259.925, 174.709 262.625, 175.328 264 C 175.948 265.375, 177.520 268.247, 178.823 270.382 C 180.726 273.501, 180.927 274.431, 179.846 275.116 C 179.106 275.586, 177.825 275.981, 177 275.994 C 176.175 276.008, 173.171 277.104, 170.323 278.430 C 167.476 279.755, 161.711 283.158, 157.512 285.992 C 151.331 290.163, 149.603 290.915, 148.434 289.945 C 147.547 289.209, 145.097 288.928, 142.089 289.217 C 137.315 289.676, 137.172 289.611, 136.594 286.719 C 136.267 285.086, 135.984 281.669, 135.964 279.125 C 135.945 276.581, 135.302 271.876, 134.536 268.670 C 133.770 265.463, 132.467 260.738, 131.641 258.170 C 130.815 255.601, 129.638 248.325, 129.025 242 C 128.263 234.133, 126.972 227.815, 124.938 222 C 122.191 214.149, 121.932 212.203, 121.547 196.500 C 121.222 183.233, 120.545 176.646, 118.465 166.500 C 116.802 158.385, 115.802 150.306, 115.805 145 C 115.808 140.325, 116.519 132.675, 117.386 128 C 118.254 123.325, 118.971 114.982, 118.982 109.460 C 118.992 103.595, 118.359 96.942, 117.458 93.460 C 116.609 90.182, 114.472 85.066, 112.708 82.091 C 110.943 79.117, 107.558 75.292, 105.184 73.591 C 102.810 71.891, 99.435 69.972, 97.684 69.326 C 95.933 68.680, 92.025 68.141, 89 68.128 C 85.841 68.114, 81.280 68.958, 78.285 70.109 M 78.907 77.328 C 76.079 78.822, 73.474 81.311, 71.636 84.279 C 70.061 86.822, 68.164 91.737, 67.421 95.201 C 66.678 98.666, 66.054 104.009, 66.035 107.076 C 66.016 110.143, 66.682 117.507, 67.514 123.441 C 68.347 129.374, 69.516 136.315, 70.112 138.865 C 70.708 141.414, 72.606 148.222, 74.331 153.992 C 77.336 164.050, 77.750 164.783, 84.315 171.695 C 88.636 176.244, 91.038 179.565, 90.821 180.691 C 90.632 181.674, 89.645 182.637, 88.628 182.833 C 87.508 183.049, 85.244 181.691, 82.889 179.392 L 79 175.594 79 179.760 C 79 182.051, 79.962 186.529, 81.137 189.712 C 82.313 192.896, 84.419 197.525, 85.817 200 C 87.215 202.475, 90.613 207.411, 93.368 210.968 C 96.123 214.526, 101.667 220.685, 105.689 224.654 L 113 231.871 113 228.101 C 113 226.027, 112.057 221.458, 110.905 217.948 C 109.752 214.438, 107.502 208.976, 105.905 205.811 C 104.307 202.647, 103 199.424, 103 198.651 C 103 197.878, 103.683 196.678, 104.519 195.984 C 105.763 194.952, 106.405 195.056, 108.067 196.561 C 110.093 198.394, 110.095 198.384, 109.439 191.449 C 109.077 187.627, 107.930 180.567, 106.890 175.761 C 105.851 170.954, 105 166.791, 105 166.511 C 105 166.230, 102.827 166, 100.171 166 C 96.481 166, 94.277 165.294, 90.819 163.003 C 88.330 161.355, 84.464 157.397, 82.227 154.208 C 79.989 151.018, 77.132 145.504, 75.876 141.954 C 73.980 136.591, 73.597 133.471, 73.610 123.500 C 73.623 114.023, 74.088 109.988, 75.824 104.310 C 77.320 99.414, 79.132 95.942, 81.503 93.428 C 84.577 90.169, 85.398 89.803, 88.502 90.307 C 90.436 90.621, 93.304 91.792, 94.874 92.910 C 96.445 94.029, 98.800 97.319, 100.108 100.222 C 102.173 104.806, 102.487 107.036, 102.493 117.174 C 102.499 127.489, 102.255 129.177, 100.394 131.674 C 99.236 133.228, 97.513 134.652, 96.565 134.839 C 95.617 135.025, 93.761 134.906, 92.439 134.574 C 91.118 134.242, 89.327 132.599, 88.460 130.922 C 87.592 129.245, 87.022 126.439, 87.191 124.686 C 87.424 122.281, 88.041 121.423, 89.705 121.186 C 91.461 120.937, 92.081 121.534, 92.751 124.118 C 93.213 125.903, 94.074 127.525, 94.663 127.721 C 95.252 127.917, 96.019 126.654, 96.367 124.914 C 96.715 123.174, 97 119.413, 97 116.557 C 97 113.700, 96.308 109.033, 95.462 106.185 C 94.617 103.338, 92.957 100.106, 91.774 99.004 C 90.591 97.902, 88.818 97, 87.834 97 C 86.851 97, 85.345 98.070, 84.488 99.377 C 83.632 100.685, 82.509 103.226, 81.993 105.025 C 81.477 106.824, 80.565 111.874, 79.966 116.248 C 79.176 122.018, 79.181 126.164, 79.983 131.350 C 80.592 135.283, 82.137 140.791, 83.417 143.592 C 84.697 146.393, 86.787 149.655, 88.061 150.842 C 89.486 152.169, 91.677 153, 93.754 153 C 95.612 153, 97.960 152.557, 98.972 152.015 C 99.984 151.473, 101.946 149.002, 103.331 146.523 C 104.717 144.044, 106.769 139.562, 107.891 136.563 C 109.013 133.564, 110.621 128.132, 111.465 124.493 C 112.309 120.854, 112.995 114.191, 112.988 109.688 C 112.982 105.185, 112.346 99.131, 111.575 96.236 C 110.804 93.341, 109.052 89.066, 107.682 86.736 C 106.312 84.406, 104.129 81.509, 102.832 80.298 C 101.534 79.086, 98.806 77.399, 96.768 76.548 C 94.731 75.696, 90.871 75, 88.189 75 C 85.015 75, 81.777 75.812, 78.907 77.328 M 239.104 138.535 C 237.244 140.653, 236.006 143.158, 236.015 144.785 C 236.024 146.278, 236.363 148.023, 236.770 148.661 C 237.218 149.366, 240.657 149.873, 245.504 149.951 C 249.902 150.022, 255.590 149.795, 258.143 149.448 C 260.697 149.100, 263.622 149.254, 264.643 149.789 C 265.665 150.325, 270.022 150.530, 274.327 150.245 C 281.469 149.772, 282.234 149.515, 283.077 147.298 C 283.684 145.702, 283.615 144.120, 282.878 142.685 C 282.261 141.483, 280.601 139.262, 279.191 137.750 C 277.780 136.238, 275.563 135, 274.263 135 C 272.964 135, 270.461 135.739, 268.700 136.641 C 266.940 137.544, 264.427 139.119, 263.115 140.141 C 261.803 141.164, 259.946 142, 258.988 142 C 258.029 142, 256.657 141.292, 255.939 140.427 C 255.221 139.562, 252.934 137.987, 250.857 136.927 C 248.779 135.867, 245.983 135, 244.643 135 C 243.107 135, 241.061 136.305, 239.104 138.535 M 246.200 141.200 C 245.540 141.860, 245 143.138, 245 144.039 C 245 144.941, 246.146 146.201, 247.547 146.839 C 248.948 147.478, 251.198 148, 252.547 148 C 254.490 148, 255 147.486, 255 145.526 C 255 143.797, 254.111 142.592, 252.050 141.526 C 250.427 140.687, 248.717 140, 248.250 140 C 247.782 140, 246.860 140.540, 246.200 141.200 M 267.250 141.989 C 265.462 143.079, 264 144.395, 264 144.914 C 264 145.433, 264.699 146.556, 265.553 147.410 C 266.870 148.728, 267.577 148.770, 270.218 147.693 C 271.930 146.994, 273.793 145.690, 274.357 144.795 C 275.090 143.634, 275.008 142.714, 274.070 141.584 C 273.347 140.713, 272.248 140.002, 271.628 140.004 C 271.007 140.006, 269.038 140.899, 267.250 141.989 M 237.667 157.667 C 237.300 158.033, 237 159.576, 237 161.095 C 237 162.614, 237.707 164.564, 238.571 165.429 C 239.436 166.293, 240.673 166.997, 241.321 166.994 C 241.970 166.991, 244.075 166.540, 246 165.991 C 247.925 165.442, 250.083 164.617, 250.797 164.159 C 251.831 163.493, 251.730 162.687, 250.297 160.169 C 248.651 157.279, 248.072 157.012, 243.417 157.006 C 240.621 157.003, 238.033 157.300, 237.667 157.667 M 268.452 160.093 C 267.572 161.794, 266.998 163.271, 267.176 163.376 C 267.354 163.481, 268.625 164.086, 270 164.720 C 271.375 165.355, 273.512 166.158, 274.750 166.505 C 275.988 166.851, 277.926 166.841, 279.057 166.482 C 280.189 166.123, 281.539 164.713, 282.057 163.349 C 282.669 161.739, 282.637 160.190, 281.965 158.935 C 281.136 157.386, 279.845 157, 275.490 157 C 270.422 157, 269.942 157.211, 268.452 160.093 M 243.015 173.750 C 243.024 174.162, 243.474 175.175, 244.015 176 C 244.891 177.333, 245.109 177.333, 245.985 176 C 246.526 175.175, 246.976 174.162, 246.985 173.750 C 246.993 173.338, 246.100 173, 245 173 C 243.900 173, 243.007 173.338, 243.015 173.750 M 273 174.441 C 273 175.234, 273.403 176.131, 273.895 176.435 C 274.388 176.740, 275.063 176.279, 275.395 175.412 C 275.728 174.546, 276 173.648, 276 173.418 C 276 173.188, 275.325 173, 274.500 173 C 273.675 173, 273 173.648, 273 174.441 M 253.743 176.084 C 252.777 176.647, 251.080 178.883, 249.973 181.054 C 248.405 184.127, 247.382 185, 245.348 185 L 242.737 185 243.210 192.250 C 243.513 196.888, 244.450 200.995, 245.811 203.649 C 246.981 205.931, 249.466 208.743, 251.334 209.897 C 253.201 211.051, 256.117 212.273, 257.812 212.612 C 259.956 213.041, 262.302 212.548, 265.514 210.993 C 268.332 209.629, 271.146 207.225, 272.734 204.825 C 274.825 201.666, 275.427 199.344, 275.792 193.025 L 276.248 185.157 273.374 184.828 C 271.059 184.564, 270.058 183.575, 268.231 179.750 L 265.961 175 260.731 175.030 C 257.854 175.047, 254.709 175.521, 253.743 176.084 M 95.040 186.452 C 94.377 187.251, 93.991 188.713, 94.181 189.702 C 94.404 190.858, 95.416 191.500, 97.014 191.500 C 98.873 191.500, 99.585 190.898, 99.837 189.113 C 100.023 187.800, 99.573 186.345, 98.837 185.878 C 98.102 185.412, 97.218 185.024, 96.872 185.015 C 96.527 185.007, 95.703 185.653, 95.040 186.452 M 249.362 189.500 C 249.045 190.325, 249.023 191.619, 249.314 192.375 C 249.604 193.131, 251.203 193.950, 252.868 194.194 C 254.533 194.438, 256.594 194.247, 257.448 193.769 C 258.301 193.292, 259 192.071, 259 191.057 C 259 190.043, 258.288 188.941, 257.418 188.607 C 256.548 188.273, 254.509 188, 252.887 188 C 251.187 188, 249.693 188.636, 249.362 189.500 M 262.667 188.667 C 262.300 189.033, 262 190.383, 262 191.667 C 262 193.178, 262.616 194.041, 263.750 194.115 C 264.712 194.178, 266.400 194.142, 267.500 194.034 C 268.600 193.925, 270.136 193.221, 270.914 192.469 C 272.073 191.347, 272.096 190.821, 271.042 189.550 C 270.334 188.698, 268.310 188, 266.544 188 C 264.778 188, 263.033 188.300, 262.667 188.667 M 314.564 217.873 C 313.186 220.593, 308.809 226.347, 304.838 230.659 C 300.866 234.972, 297.141 238.831, 296.558 239.235 C 295.976 239.639, 294.107 239.976, 292.405 239.985 C 290.687 239.993, 288.633 239.221, 287.789 238.250 C 286.953 237.287, 285.964 235.222, 285.592 233.659 C 285.070 231.462, 284.529 230.984, 283.208 231.551 C 282.269 231.953, 280.289 232.491, 278.809 232.746 C 276.833 233.086, 275.409 232.500, 273.448 230.539 C 271.242 228.333, 270.894 227.313, 271.453 224.684 C 271.825 222.933, 272.391 219.995, 272.711 218.155 L 273.292 214.810 268.896 217.090 C 266.006 218.589, 262.714 219.380, 259.288 219.399 L 254.075 219.429 254.651 224.964 C 255.147 229.746, 254.939 230.758, 253.126 232.393 C 251.972 233.434, 249.638 234.334, 247.940 234.393 C 244.888 234.499, 244.860 234.548, 245.486 238.736 C 246.032 242.393, 245.775 243.316, 243.605 245.486 C 242.222 246.869, 240.153 248, 239.006 248 C 237.859 248, 235.187 247.116, 233.069 246.035 C 230.950 244.954, 227.349 242.142, 225.065 239.785 C 222.781 237.428, 218.959 231.549, 216.571 226.719 L 212.230 217.938 209.455 221.219 C 207.929 223.024, 205.534 226.975, 204.134 230 C 202.164 234.253, 201.583 237.118, 201.571 242.641 C 201.559 248.091, 202.118 250.982, 203.931 254.853 C 205.893 259.041, 206.084 260.193, 205.031 261.463 C 204.329 262.308, 203.161 263, 202.434 263 C 201.708 263, 200.461 262.068, 199.663 260.929 C 198.218 258.867, 198.202 258.870, 195.607 261.669 C 194.173 263.214, 192.276 266.006, 191.390 267.873 C 190.504 269.740, 189.266 273.345, 188.640 275.884 C 187.509 280.462, 187.454 280.509, 182 281.608 C 178.975 282.217, 174.848 283.417, 172.830 284.274 C 170.811 285.130, 165.715 288.156, 161.504 290.997 C 155.600 294.981, 154.008 296.545, 154.543 297.832 C 154.926 298.749, 155.699 301.225, 156.262 303.332 C 156.952 305.918, 156.958 308.232, 156.278 310.446 L 155.271 313.728 158.385 312.985 C 160.098 312.576, 164.875 311.314, 169 310.181 C 173.125 309.048, 181.675 306.572, 188 304.680 C 194.325 302.788, 201.300 300.489, 203.500 299.572 C 205.700 298.655, 209.389 296.056, 211.697 293.796 C 214.006 291.536, 216.861 287.305, 218.043 284.395 C 219.912 279.790, 220.118 277.831, 219.631 269.301 C 219.323 263.911, 218.783 256.054, 218.431 251.841 C 217.843 244.810, 217.957 244.093, 219.826 243.093 C 221.409 242.246, 222.210 242.352, 223.431 243.573 C 224.486 244.629, 225.002 247.002, 225.006 250.821 C 225.009 253.945, 225.470 258.150, 226.030 260.168 C 226.604 262.236, 228.594 265.192, 230.593 266.947 L 234.136 270.059 246.818 269.779 L 259.500 269.500 260 256.798 C 260.297 249.257, 260.965 243.631, 261.644 242.954 C 262.273 242.326, 263.623 241.975, 264.644 242.173 C 266.352 242.504, 266.500 243.712, 266.500 257.357 C 266.500 271.701, 266.424 272.242, 264.155 274.077 C 262.866 275.120, 260.144 276.423, 258.108 276.971 C 256.071 277.519, 253.153 279.275, 251.623 280.871 C 250.093 282.468, 248.246 285.507, 247.518 287.625 C 246.790 289.742, 245.514 291.904, 244.681 292.429 C 243.659 293.074, 242.653 292.957, 241.584 292.070 C 240.713 291.347, 240 290.148, 240 289.406 C 240 288.664, 241.075 285.627, 242.388 282.657 L 244.776 277.257 238.941 276.728 C 235.732 276.437, 231.732 275.514, 230.053 274.676 L 227 273.153 227 278.482 C 227 283.139, 227.455 284.356, 230.611 288.133 C 232.598 290.511, 234.623 293.508, 235.111 294.793 C 235.600 296.078, 236 298.644, 236 300.494 C 236 303.248, 236.953 304.770, 241.250 308.882 C 244.137 311.645, 248.815 315.081, 251.644 316.518 C 254.473 317.955, 259.423 319.761, 262.644 320.530 C 265.865 321.299, 271.650 321.917, 275.500 321.903 C 279.350 321.888, 285.421 321.320, 288.991 320.639 L 295.482 319.402 296.183 315.451 C 296.569 313.278, 296.911 307.659, 296.942 302.965 C 296.992 295.664, 297.492 293.206, 300.401 285.965 C 302.271 281.309, 304.089 276.526, 304.441 275.336 C 305.072 273.199, 305.021 273.190, 300.381 274.586 C 297.797 275.364, 294.479 276, 293.008 276 C 291.537 276, 290.032 276.302, 289.663 276.670 C 289.295 277.039, 289.601 278.276, 290.345 279.420 C 291.088 280.564, 292.256 283.205, 292.939 285.289 C 293.913 288.260, 293.919 289.393, 292.968 290.539 C 292.301 291.342, 290.982 292, 290.038 292 C 289.094 292, 287.799 290.854, 287.161 289.453 C 286.522 288.052, 286 286.299, 286 285.557 C 286 284.814, 284.355 282.763, 282.344 280.997 C 280.333 279.232, 277.408 277.341, 275.844 276.796 C 274.155 276.207, 273 275.081, 273 274.025 C 273 273.046, 273.563 271.797, 274.250 271.250 C 274.938 270.703, 280.472 270.032, 286.549 269.758 C 294.028 269.420, 298.628 268.726, 300.789 267.609 C 302.545 266.701, 304.695 264.869, 305.567 263.538 C 306.631 261.914, 307.313 257.886, 307.638 251.309 C 307.904 245.914, 308.335 240.459, 308.596 239.187 C 308.973 237.348, 309.626 236.938, 311.785 237.187 C 314.320 237.479, 314.520 237.859, 314.807 242.901 C 314.977 245.872, 314.662 252.009, 314.107 256.540 C 313.427 262.103, 313.430 265.973, 314.116 268.459 C 314.676 270.485, 316.683 273.857, 318.577 275.954 C 320.472 278.051, 323.420 280.345, 325.128 281.053 C 327.973 282.232, 328.380 282.148, 329.951 280.065 C 330.965 278.721, 332.447 277.939, 333.572 278.156 C 334.620 278.358, 335.639 279.362, 335.836 280.387 C 336.033 281.412, 335.418 284.722, 334.467 287.743 C 333.249 291.616, 332.914 294.908, 333.332 298.906 C 333.658 302.025, 334.654 306.321, 335.544 308.452 C 336.435 310.584, 339.162 315.767, 341.604 319.970 C 344.046 324.173, 346.982 330.926, 348.128 334.976 C 349.660 340.388, 350.037 343.688, 349.552 347.420 C 349.189 350.214, 347.309 355.721, 345.373 359.658 C 342.073 366.368, 341.943 366.993, 343.297 369.658 C 344.091 371.221, 345.051 374.637, 345.431 377.250 C 345.820 379.918, 346.644 381.977, 347.311 381.947 C 347.965 381.919, 351.425 380.456, 355 378.697 L 361.500 375.500 361.819 369.500 C 361.994 366.200, 361.609 360.800, 360.964 357.500 C 360.318 354.200, 359.833 348.800, 359.887 345.500 C 359.941 342.200, 360.337 335.103, 360.768 329.730 C 361.199 324.356, 361.196 315.131, 360.762 309.230 C 360.328 303.328, 359.091 295.280, 358.015 291.343 C 356.938 287.407, 354.929 281.782, 353.550 278.843 C 352.171 275.905, 349.477 270.629, 347.563 267.119 C 345.440 263.227, 343.255 256.988, 341.959 251.119 C 340.790 245.829, 338.867 238.575, 337.685 235 C 335.948 229.745, 334.384 227.351, 329.514 222.500 C 326.202 219.200, 322.046 215.696, 320.281 214.714 L 317.070 212.928 314.564 217.873 M 100.575 233.500 C 100.927 235.700, 103.271 241.325, 105.784 246 C 108.297 250.675, 111.469 256.750, 112.833 259.500 C 114.197 262.250, 116.378 267.650, 117.678 271.500 C 119.719 277.540, 119.955 277.888, 119.398 274.039 C 119.043 271.585, 117.882 266.860, 116.819 263.539 C 115.755 260.217, 114.193 255.925, 113.348 254 C 112.504 252.075, 109.975 246.828, 107.729 242.341 C 105.483 237.853, 102.811 233.128, 101.790 231.841 L 99.934 229.500 100.575 233.500 M 288.384 261.442 C 288.080 262.234, 287.988 263.697, 288.179 264.692 C 288.419 265.936, 289.424 266.500, 291.405 266.500 C 293.003 266.500, 294.749 265.759, 295.333 264.834 C 296.096 263.625, 296.023 262.733, 295.070 261.584 C 294.347 260.713, 292.671 260, 291.346 260 C 290.021 260, 288.688 260.649, 288.384 261.442 M 238.835 261.673 C 237.919 261.915, 236.899 262.820, 236.568 263.684 C 236.237 264.547, 236.478 265.871, 237.105 266.627 C 237.732 267.382, 239.225 268, 240.422 268 C 241.620 268, 243.140 267.460, 243.800 266.800 C 244.460 266.140, 245 265.272, 245 264.871 C 245 264.471, 244.293 263.436, 243.429 262.571 C 242.564 261.707, 241.552 261.052, 241.179 261.116 C 240.805 261.180, 239.751 261.430, 238.835 261.673 M 265.305 279.657 C 264.171 281.388, 263.554 284.331, 263.532 288.110 C 263.504 293.115, 263.219 293.977, 261.439 294.425 C 260.306 294.710, 257.659 294.469, 255.558 293.888 C 252.469 293.035, 251.450 293.122, 250.232 294.339 C 249.404 295.167, 249.002 296.562, 249.338 297.437 C 249.674 298.313, 251.115 299.473, 252.539 300.015 C 253.964 300.557, 257.112 301, 259.534 301 C 263.053 301, 263.821 301.304, 263.357 302.512 C 263.038 303.344, 263.077 306.025, 263.443 308.469 C 263.810 310.914, 264.903 313.893, 265.872 315.090 C 267.395 316.971, 267.943 317.101, 269.911 316.048 C 271.660 315.112, 272.020 314.326, 271.461 312.664 C 271.061 311.474, 270.604 304.875, 270.445 298 C 270.274 290.597, 270.604 284.324, 271.255 282.616 C 272.186 280.171, 272.069 279.524, 270.486 278.366 C 269.458 277.615, 268.264 277, 267.832 277 C 267.400 277, 266.263 278.195, 265.305 279.657 M 278.341 294.148 C 276.054 294.661, 273.909 295.795, 273.574 296.668 C 273.239 297.540, 273.478 298.871, 274.105 299.627 C 274.732 300.382, 276.329 301, 277.655 301 C 278.980 301, 281.625 300.348, 283.532 299.551 C 285.439 298.754, 287 297.494, 287 296.751 C 287 296.008, 286.460 294.860, 285.800 294.200 C 285.140 293.540, 284.127 293.048, 283.550 293.107 C 282.973 293.166, 280.629 293.634, 278.341 294.148 M 126.525 301.113 C 122.138 302.762, 118.208 304.648, 117.790 305.305 C 117.372 305.962, 117.024 306.776, 117.015 307.114 C 117.007 307.451, 118.165 308.893, 119.590 310.317 C 121.627 312.354, 122.045 313.517, 121.551 315.769 C 121.098 317.831, 121.492 319.356, 122.961 321.223 C 124.082 322.649, 125 324.562, 125 325.473 C 125 326.385, 125.466 328.002, 126.035 329.066 C 126.605 330.130, 127.928 331, 128.976 331 C 130.023 331, 134.170 329.818, 138.190 328.373 C 142.211 326.928, 145.806 325.265, 146.180 324.677 C 146.554 324.089, 146.432 322.807, 145.908 321.827 C 144.999 320.130, 144.720 320.139, 139.940 322.024 C 137.182 323.111, 134.091 324, 133.070 324 C 132.049 324, 130.933 323.268, 130.590 322.373 C 130.246 321.479, 130.430 320.187, 130.997 319.504 C 131.564 318.820, 134.159 317.468, 136.764 316.499 C 139.369 315.530, 141.879 314.394, 142.343 313.976 C 142.806 313.557, 142.683 312.277, 142.070 311.131 L 140.955 309.047 135.940 311.024 C 133.182 312.111, 130.091 313, 129.070 313 C 128.049 313, 126.933 312.268, 126.590 311.373 C 126.246 310.479, 126.459 309.152, 127.062 308.426 C 127.664 307.700, 130.260 306.332, 132.829 305.387 C 135.398 304.442, 137.790 303.406, 138.146 303.085 C 138.501 302.763, 138.403 301.488, 137.928 300.250 C 137.453 299.012, 136.487 298.026, 135.782 298.057 C 135.077 298.089, 130.911 299.463, 126.525 301.113 M 225.249 313.250 C 224.094 314.488, 222.039 317.750, 220.681 320.500 C 219.324 323.250, 217.895 327.004, 217.507 328.842 C 217.118 330.680, 217.126 334.280, 217.525 336.842 L 218.249 341.500 220.083 337.250 C 221.369 334.272, 222.518 333, 223.924 333 C 225.027 333, 226.343 333.788, 226.849 334.750 C 227.354 335.712, 228.099 338.525, 228.505 341 C 228.910 343.475, 230.271 347.525, 231.528 350 C 232.785 352.475, 235.093 355.692, 236.657 357.149 C 238.221 358.606, 241.726 361.193, 244.446 362.899 C 247.166 364.605, 249.909 366, 250.542 366 C 251.390 366, 251.341 364.146, 250.353 358.921 C 249.412 353.944, 249.320 351.271, 250.042 349.921 C 250.619 348.844, 252.127 348, 253.476 348 C 255.140 348, 257.208 349.574, 260.189 353.109 C 262.578 355.943, 266.725 359.358, 269.499 360.776 C 272.249 362.183, 280.012 364.753, 286.750 366.487 L 299 369.640 299 364.442 C 299 361.583, 298.339 357.663, 297.532 355.731 C 296.725 353.799, 294.675 350.829, 292.978 349.132 C 291.234 347.388, 287.661 345.383, 284.764 344.523 C 281.898 343.671, 275.821 343, 270.984 343 C 264.904 343, 260.437 342.378, 255.965 340.910 C 252.464 339.761, 247.777 337.556, 245.550 336.010 C 243.322 334.464, 240.295 331.917, 238.822 330.350 C 237.349 328.782, 235.034 325.250, 233.678 322.500 C 232.322 319.750, 230.904 316.038, 230.527 314.250 C 230.150 312.462, 229.280 311, 228.595 311 C 227.909 311, 226.404 312.012, 225.249 313.250" stroke="none" fill="%23ffc107" fill-rule="evenodd"/></svg>';var f8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="446" height="446" viewBox="0 0 446 446" version="1.1"><path d="" stroke="none" fill="%230d6efd" fill-rule="evenodd"/><path d="M 66.327 83.696 C 65.132 83.928, 63.005 85.268, 61.601 86.672 C 60.197 88.075, 58.769 90.714, 58.428 92.534 C 58.086 94.354, 58.110 97.223, 58.480 98.910 C 58.851 100.596, 60.305 102.881, 61.712 103.988 C 63.412 105.326, 65.817 106.012, 68.885 106.036 C 71.423 106.055, 75.975 106.680, 79 107.425 C 82.025 108.169, 85.765 109.277, 87.310 109.887 C 88.856 110.497, 89.842 111.447, 89.501 111.998 C 89.161 112.549, 87.961 113, 86.836 113 C 85.711 113, 82.475 114.155, 79.645 115.566 C 76.815 116.977, 72.552 120.015, 70.170 122.316 C 67.789 124.617, 64.690 128.444, 63.284 130.821 C 61.656 133.571, 60.727 136.636, 60.727 139.254 C 60.727 142.606, 61.311 143.888, 63.879 146.184 C 66.082 148.151, 68.101 149, 70.582 149 C 72.534 149, 75.002 148.534, 76.066 147.965 C 77.829 147.021, 78 147.285, 78 150.950 C 78 153.622, 76.826 157.185, 74.500 161.569 C 72.508 165.323, 71 169.611, 71 171.518 C 71 173.361, 71.413 175.955, 71.917 177.282 C 72.421 178.608, 74.506 180.487, 76.549 181.456 C 78.992 182.615, 81.466 183.024, 83.775 182.649 C 85.707 182.336, 88.420 181.049, 89.805 179.790 C 91.189 178.530, 91.944 178.175, 91.482 179 C 91.020 179.825, 89.628 181.852, 88.389 183.504 C 87.151 185.157, 85.664 187.754, 85.085 189.276 C 84.276 191.404, 84.404 192.970, 85.641 196.060 C 86.604 198.468, 88.380 200.662, 90.074 201.538 C 91.629 202.342, 93.845 203, 95 203 C 96.155 203, 98.373 202.341, 99.931 201.536 C 101.488 200.731, 103.828 198.766, 105.131 197.170 C 106.434 195.574, 107.960 193.482, 108.523 192.521 C 109.451 190.935, 109.868 191.075, 113.023 194.034 C 114.935 195.828, 117.948 197.904, 119.718 198.647 C 121.488 199.391, 124.673 200, 126.796 200 C 129.422 200, 132.122 199.030, 135.234 196.968 C 137.752 195.301, 140.592 192.745, 141.546 191.290 L 143.280 188.643 144.810 192.572 C 145.652 194.732, 147.580 198.332, 149.095 200.571 C 150.611 202.811, 153.828 205.692, 156.246 206.975 C 159.262 208.575, 161.459 209.102, 163.244 208.654 C 164.675 208.294, 167.232 206.834, 168.926 205.409 C 171.021 203.646, 172.205 201.568, 172.631 198.909 C 173.029 196.417, 173.789 195, 174.728 195 C 175.538 195, 177.730 193.470, 179.600 191.600 C 182.464 188.736, 183 187.488, 183 183.677 C 183 180.073, 182.309 178.248, 179.602 174.702 C 177.733 172.254, 175.708 169.324, 175.102 168.191 C 174.496 167.058, 174 165.851, 174 165.509 C 174 165.167, 175 165.587, 176.223 166.443 C 177.445 167.299, 180.225 168, 182.402 168 C 184.578 168, 187.764 167.491, 189.484 166.870 C 192.324 165.843, 193.424 166.154, 201.555 170.291 C 206.475 172.795, 215.225 176.842, 221 179.285 C 226.775 181.728, 232.500 184.040, 233.722 184.422 C 234.944 184.804, 237.475 186.905, 239.345 189.090 C 241.216 191.276, 243.526 195.542, 244.478 198.570 C 245.914 203.135, 246.001 204.583, 244.987 207.031 C 244.314 208.655, 243.789 211.772, 243.819 213.958 C 243.849 216.143, 244.633 219.531, 245.560 221.485 C 246.488 223.440, 248.560 225.974, 250.165 227.117 C 251.770 228.260, 254.302 229.519, 255.791 229.916 C 257.434 230.353, 259.652 232.380, 261.427 235.068 C 263.037 237.506, 267.947 243.042, 272.339 247.372 L 280.323 255.244 273.412 254.837 C 268.715 254.561, 264.948 253.649, 261.657 251.992 C 258.994 250.650, 255.562 248.126, 254.030 246.382 C 252.499 244.637, 250.457 241.025, 249.493 238.355 C 248.528 235.685, 246.451 230.644, 244.877 227.153 C 243.302 223.662, 240.583 218.937, 238.834 216.653 C 237.085 214.369, 233.369 210.307, 230.577 207.626 C 227.785 204.945, 221.675 200.177, 217 197.030 C 212.325 193.883, 204.752 188.989, 200.171 186.154 C 195.590 183.319, 191.443 181, 190.956 181 C 190.469 181, 189.600 181.878, 189.026 182.952 C 188.264 184.376, 188.322 185.204, 189.241 186.014 C 189.933 186.624, 197.700 191.795, 206.500 197.504 C 215.300 203.213, 222.500 208.362, 222.500 208.946 C 222.500 209.531, 220.331 212.218, 217.680 214.917 C 215.030 217.617, 209.855 221.384, 206.180 223.290 C 202.506 225.195, 197.025 227.545, 194 228.513 C 190.975 229.481, 183.950 232.438, 178.388 235.084 C 172.826 237.730, 164.051 242.728, 158.888 246.190 C 153.725 249.653, 145.164 256.764, 139.865 261.993 C 134.566 267.222, 128.105 274.804, 125.507 278.842 C 122.909 282.880, 119.087 289.855, 117.013 294.342 C 114.938 298.829, 112.948 303.850, 112.589 305.500 C 112.230 307.150, 111.839 309.113, 111.719 309.862 C 111.598 310.610, 112.217 311.689, 113.093 312.258 C 114.288 313.034, 115.412 312.761, 117.593 311.166 C 119.192 309.997, 123.537 307.946, 127.250 306.609 C 130.963 305.272, 134 304.349, 134 304.558 C 134 304.767, 132.032 307.989, 129.628 311.719 C 127.223 315.448, 123.908 321.200, 122.262 324.500 C 120.615 327.800, 118.329 333.200, 117.182 336.500 C 116.035 339.800, 114.226 345.875, 113.162 350 C 112.097 354.125, 110.930 359.904, 110.567 362.841 C 110.132 366.360, 110.306 368.664, 111.076 369.591 C 111.719 370.366, 112.623 371, 113.085 371 C 113.547 371, 115.828 368.187, 118.153 364.750 C 120.478 361.313, 124.882 355.861, 127.940 352.635 C 130.998 349.409, 135.448 345.426, 137.828 343.783 C 140.209 342.140, 144.825 339.712, 148.088 338.386 C 151.350 337.061, 160.877 334.614, 169.259 332.950 C 177.642 331.285, 187.147 329.237, 190.383 328.400 C 193.619 327.562, 198.456 325.820, 201.133 324.528 C 203.810 323.237, 205.996 322.477, 205.990 322.840 C 205.985 323.203, 204.522 325.330, 202.740 327.567 C 200.958 329.803, 197.925 332.982, 196 334.630 C 194.075 336.279, 191.037 338.642, 189.250 339.882 C 187.463 341.122, 186 342.957, 186 343.961 C 186 344.965, 186.712 346.059, 187.582 346.393 C 188.452 346.727, 194.189 347, 200.332 347 C 206.475 347, 214.426 346.387, 218 345.638 C 221.575 344.888, 228.533 342.884, 233.463 341.184 C 238.392 339.483, 242.628 338.295, 242.876 338.543 C 243.124 338.791, 242.803 343.832, 242.162 349.747 C 241.521 355.661, 240.998 362.082, 240.999 364.015 C 241 367.375, 240.703 367.669, 234.250 370.696 C 230.537 372.437, 224.350 375.949, 220.500 378.499 C 216.650 381.050, 212.262 384.463, 210.750 386.084 C 209.237 387.705, 208 389.909, 208 390.981 C 208 392.053, 208.787 393.342, 209.750 393.846 C 210.713 394.350, 214.673 395.321, 218.550 396.005 C 222.958 396.783, 230.454 397.066, 238.550 396.761 C 248.119 396.401, 253.327 395.692, 258.500 394.047 C 262.350 392.822, 270.815 389.172, 277.310 385.935 C 283.806 382.697, 293.031 378.708, 297.810 377.068 C 302.590 375.429, 311.675 372.780, 318 371.180 C 324.325 369.581, 332.200 367.750, 335.500 367.112 C 338.800 366.473, 345.100 365.361, 349.500 364.640 C 353.900 363.920, 357.580 363.593, 357.677 363.915 C 357.775 364.237, 358.575 367.088, 359.455 370.250 C 360.484 373.946, 361.586 376, 362.539 376 C 363.354 376, 366.060 375.042, 368.552 373.870 C 371.177 372.637, 373.696 370.554, 374.541 368.920 C 375.344 367.369, 376 365.096, 376 363.871 C 376 362.645, 375.444 360.103, 374.764 358.223 C 373.590 354.978, 373.679 354.677, 376.514 352.311 C 378.156 350.941, 381.188 348.349, 383.250 346.553 C 386.493 343.727, 387 342.706, 387 338.995 C 387 335.801, 385.854 332.601, 382.521 326.487 C 378.742 319.552, 377.801 316.662, 376.494 307.963 C 375.643 302.294, 374.285 294.246, 373.476 290.078 C 372.668 285.910, 371.503 280.025, 370.888 277 C 370.273 273.975, 369.300 269.925, 368.725 268 C 368.150 266.075, 366.964 263.334, 366.090 261.908 C 365.215 260.482, 363.153 257.369, 361.506 254.989 C 359.432 251.993, 358.900 250.533, 359.777 250.241 C 360.473 250.009, 361.708 248.532, 362.521 246.959 C 363.334 245.386, 363.998 243.064, 363.996 241.800 C 363.994 240.535, 363.137 238.098, 362.092 236.384 C 361.047 234.670, 358.374 231.970, 356.151 230.384 C 353.209 228.284, 351.396 225.825, 349.480 221.336 C 348.032 217.946, 346.001 214.406, 344.965 213.468 C 343.814 212.427, 341.511 211.785, 339.046 211.819 C 336.828 211.849, 334.543 212.165, 333.969 212.519 C 333.395 212.874, 331.529 211.799, 329.823 210.131 C 328.116 208.462, 325.459 206.821, 323.919 206.482 C 322.378 206.144, 320.220 206.347, 319.124 206.933 C 318.028 207.520, 315.189 207.997, 312.816 207.994 C 310.442 207.991, 306.904 207.546, 304.954 207.004 C 303.003 206.462, 300.672 205.452, 299.772 204.759 C 298.872 204.067, 297.850 201.475, 297.501 199 C 296.911 194.816, 297.124 194.220, 300.532 190.516 C 302.548 188.325, 305.012 184.936, 306.008 182.985 C 307.003 181.033, 308.309 176.781, 308.909 173.535 C 309.509 170.289, 310.001 166.253, 310.003 164.566 C 310.005 162.047, 310.674 161.143, 313.753 159.500 C 316.288 158.147, 318.318 155.907, 320.029 152.574 C 321.420 149.864, 323.062 147.479, 323.677 147.274 C 324.293 147.069, 325.594 148.988, 326.568 151.539 C 327.542 154.089, 329.384 156.861, 330.662 157.698 C 332.048 158.606, 333.969 158.974, 335.423 158.609 C 336.763 158.272, 338.567 157.291, 339.430 156.427 C 340.294 155.564, 341.036 153.652, 341.081 152.179 C 341.156 149.695, 341.296 149.788, 343.005 153.458 C 344.018 155.634, 345.643 157.997, 346.615 158.708 C 347.587 159.418, 349.546 160, 350.969 160 C 352.391 160, 354.555 159.299, 355.777 158.443 C 357.395 157.311, 358 155.877, 358 153.179 C 358 151.140, 357.149 147.144, 356.109 144.298 C 355.069 141.452, 352.738 136.509, 350.930 133.312 C 349.121 130.115, 344.631 124.517, 340.952 120.872 C 337.272 117.227, 331.347 112.614, 327.785 110.622 C 324.222 108.630, 320.093 107, 318.608 107 C 317.076 107, 314.848 108.061, 313.455 109.455 C 311.970 110.939, 311 113.062, 311 114.827 C 311 116.433, 311.928 119.844, 313.063 122.409 C 314.198 124.974, 314.985 128.155, 314.813 129.477 C 314.527 131.672, 313.801 131.204, 306.470 124.112 C 302.054 119.839, 296.313 115.096, 293.712 113.571 C 291.038 112.004, 287.496 110.800, 285.562 110.800 C 283.265 110.800, 280.239 112.062, 276.360 114.637 C 273.180 116.747, 267.524 121.411, 263.789 125 L 257 131.525 257 128.223 C 257 126.406, 257.900 123.156, 259 121 C 260.100 118.844, 261 116.127, 261 114.963 C 261 113.799, 259.629 111.475, 257.954 109.800 C 255.454 107.300, 254.327 106.847, 251.676 107.278 C 249.899 107.566, 245.757 109.382, 242.472 111.313 C 239.188 113.245, 234.001 117.272, 230.946 120.263 C 227.892 123.254, 223.811 128.131, 221.878 131.101 C 219.944 134.070, 217.374 138.939, 216.166 141.921 C 214.958 144.902, 213.690 149.083, 213.350 151.213 C 212.841 154.397, 213.141 155.521, 215.040 157.542 C 216.532 159.131, 218.437 159.995, 220.424 159.985 C 222.116 159.976, 224.045 159.623, 224.711 159.200 C 225.377 158.776, 226.644 156.702, 227.527 154.591 L 229.131 150.751 230.815 154.115 C 231.754 155.989, 233.683 157.889, 235.173 158.405 C 237.175 159.099, 238.479 158.916, 240.371 157.677 C 241.760 156.766, 243.795 153.992, 244.892 151.511 C 245.990 149.030, 247.379 147, 247.979 147 C 248.580 147, 249.906 148.912, 250.926 151.250 C 251.946 153.588, 253.748 156.512, 254.929 157.750 C 256.111 158.988, 257.680 160, 258.417 160 C 259.153 160, 260.205 160.563, 260.755 161.250 C 261.305 161.938, 261.958 165.068, 262.206 168.207 L 262.657 173.915 258.373 173.328 C 256.017 173.005, 251.963 173.276, 249.365 173.930 C 246.767 174.584, 243.415 175.992, 241.916 177.060 C 240.418 178.127, 238.476 179, 237.603 179 C 236.729 179, 232.073 177.406, 227.257 175.459 C 222.441 173.511, 213.325 169.348, 207 166.209 L 195.500 160.500 195.178 156.553 C 195.001 154.382, 193.980 151.377, 192.910 149.874 C 191.840 148.371, 189.427 146.191, 187.549 145.030 C 184.980 143.442, 183.718 141.630, 182.454 137.710 C 181.530 134.844, 179.694 130.609, 178.373 128.298 C 177.053 125.987, 174.629 123.303, 172.986 122.333 C 171.344 121.363, 170 120.254, 170 119.870 C 170 119.485, 173.488 118.905, 177.750 118.581 C 182.012 118.257, 187.419 117.543, 189.764 116.996 C 192.110 116.448, 194.702 116, 195.525 116 C 196.348 116, 199.093 115.026, 201.625 113.836 C 204.209 112.621, 207.054 110.319, 208.111 108.586 C 209.146 106.889, 209.994 104.219, 209.996 102.654 C 209.998 101.089, 209.232 98.509, 208.294 96.920 C 207.356 95.332, 205.150 93.350, 203.393 92.516 C 201.636 91.682, 199.584 91, 198.834 91 C 198.084 91, 194.552 92.426, 190.985 94.169 C 186.563 96.330, 181.478 97.784, 175 98.738 C 169.775 99.507, 162.812 101.219, 159.527 102.542 L 153.555 104.947 150.752 102.263 C 148.464 100.071, 146.899 99.537, 142.225 99.356 C 139.076 99.233, 132.900 98.926, 128.500 98.673 C 123.003 98.357, 119.695 98.629, 117.927 99.541 C 116.512 100.271, 114.791 101.547, 114.102 102.377 C 113.023 103.677, 112.060 103.091, 107.160 98.161 C 103.642 94.621, 98.930 91.211, 94.815 89.226 C 91.154 87.461, 85.554 85.337, 82.370 84.508 C 79.185 83.679, 74.762 83.061, 72.540 83.136 C 70.318 83.211, 67.522 83.463, 66.327 83.696 M 191.200 100.490 C 186.391 102.990, 182.626 104.052, 175.290 104.975 C 170.005 105.641, 164.177 106.902, 162.340 107.778 C 160.401 108.702, 159 110.117, 159 111.150 C 159 112.129, 159.909 113.416, 161.021 114.011 C 162.132 114.606, 163.408 114.866, 163.857 114.589 C 164.305 114.311, 170.815 113.373, 178.323 112.502 C 185.831 111.632, 193.870 110.251, 196.188 109.434 C 198.505 108.616, 201.211 107.214, 202.200 106.319 C 203.190 105.423, 204 103.660, 204 102.402 C 204 101.143, 203 99.413, 201.777 98.557 C 200.555 97.701, 199.093 97.048, 198.527 97.108 C 197.962 97.167, 194.665 98.689, 191.200 100.490 M 193.494 101.009 C 193.152 101.564, 193.164 102.940, 193.521 104.067 C 193.962 105.457, 194.868 106.017, 196.336 105.808 C 197.856 105.592, 198.594 104.682, 198.816 102.750 C 199.087 100.397, 198.771 100, 196.625 100 C 195.246 100, 193.837 100.454, 193.494 101.009 M 120.009 105.489 C 119.287 106.359, 118.366 110.767, 117.962 115.285 C 117.558 119.803, 117.427 123.838, 117.672 124.250 C 117.917 124.662, 119.195 125, 120.511 125 C 122.749 125, 122.924 124.593, 123.202 118.750 C 123.488 112.760, 123.614 112.487, 126.250 112.184 L 129 111.867 129 118.934 C 129 125.742, 129.088 126, 131.420 126 C 133.662 126, 133.892 125.518, 134.538 119.486 C 134.922 115.903, 135.637 112.724, 136.127 112.422 C 136.617 112.119, 137.953 112.168, 139.095 112.530 C 140.972 113.126, 141.140 113.831, 140.836 119.845 C 140.503 126.437, 140.526 126.503, 143.215 126.813 C 145.373 127.062, 146.028 126.652, 146.409 124.813 C 146.672 123.541, 147.080 119.211, 147.315 115.192 C 147.634 109.714, 147.380 107.523, 146.299 106.442 C 145.506 105.649, 144.642 105, 144.379 105 C 144.116 105, 142.640 105.652, 141.099 106.449 C 138.656 107.712, 138.035 107.713, 136.234 106.451 C 134.991 105.581, 132.246 105.088, 129.335 105.213 C 126.676 105.327, 123.785 105.080, 122.910 104.664 C 121.918 104.193, 120.828 104.503, 120.009 105.489 M 279.500 119.623 C 277.300 121.130, 272.852 124.869, 269.617 127.932 C 266.381 130.994, 261.993 135.678, 259.867 138.340 C 257.737 141.005, 256 144.285, 256 145.639 C 256 146.992, 256.687 149.427, 257.526 151.050 C 258.367 152.677, 259.867 154, 260.871 154 C 261.871 154, 263.547 153.048, 264.595 151.885 C 265.643 150.722, 269.906 146.926, 274.069 143.450 C 278.232 139.973, 282.803 136.837, 284.226 136.479 C 285.659 136.120, 287.859 136.381, 289.157 137.065 C 290.446 137.745, 295.643 141.833, 300.707 146.150 C 305.770 150.468, 310.532 154, 311.288 154 C 312.044 154, 313.147 152.988, 313.740 151.750 C 314.333 150.512, 315.080 148.687, 315.399 147.694 C 315.719 146.701, 315.354 144.451, 314.589 142.694 C 313.824 140.937, 310.499 136.552, 307.199 132.948 C 303.899 129.345, 298.722 124.486, 295.696 122.151 C 292.669 119.816, 288.687 117.676, 286.846 117.395 C 284.290 117.004, 282.556 117.531, 279.500 119.623 M 84.869 119.905 C 82.323 120.901, 78.578 122.983, 76.549 124.531 C 74.519 126.079, 71.540 129.261, 69.929 131.603 C 68.307 133.960, 67 137.183, 67 138.823 C 67 140.602, 67.632 142.029, 68.582 142.393 C 69.452 142.727, 70.788 143, 71.550 143 C 72.313 143, 76.439 139.463, 80.718 135.139 C 88.185 127.597, 88.768 127.226, 95.138 125.978 C 98.789 125.263, 102.802 123.904, 104.055 122.958 L 106.334 121.239 100.763 119.620 C 97.699 118.729, 93.911 118.021, 92.346 118.047 C 90.781 118.073, 87.416 118.909, 84.869 119.905 M 284.250 121.662 C 283.493 121.968, 283 124.064, 283 126.976 C 283 130.496, 283.436 131.953, 284.627 132.410 C 285.521 132.754, 286.871 132.522, 287.627 131.895 C 288.382 131.268, 289 129.100, 289 127.078 C 289 125.055, 288.460 122.860, 287.800 122.200 C 287.140 121.540, 286.353 121.036, 286.050 121.079 C 285.748 121.122, 284.938 121.385, 284.250 121.662 M 272.153 129.247 C 271.519 129.881, 271 131.349, 271 132.509 C 271 133.669, 271.574 135.403, 272.276 136.363 C 273.076 137.457, 274.196 137.862, 275.276 137.447 C 276.434 137.003, 277 135.684, 277 133.428 C 277 131.187, 276.386 129.742, 275.153 129.082 C 273.883 128.402, 272.947 128.453, 272.153 129.247 M 296.690 129.154 C 295.629 129.747, 295 131.344, 295 133.443 C 295 135.685, 295.568 137.004, 296.724 137.447 C 297.804 137.862, 298.924 137.457, 299.724 136.363 C 300.426 135.403, 301 133.402, 301 131.916 C 301 130.430, 300.410 128.988, 299.690 128.711 C 298.969 128.435, 297.619 128.634, 296.690 129.154 M 92.500 132.954 C 91.400 133.409, 89.543 134.843, 88.373 136.141 C 87.203 137.438, 85.782 140.075, 85.213 142 C 84.645 143.925, 83.937 148.480, 83.640 152.122 C 83.238 157.047, 82.318 160.069, 80.050 163.916 C 78.372 166.761, 77 170.402, 77 172.009 C 77 173.931, 77.702 175.305, 79.052 176.028 C 80.180 176.631, 82.086 176.985, 83.287 176.813 C 84.652 176.617, 86.350 174.901, 87.820 172.231 C 89.748 168.730, 90.228 166.188, 90.489 158.096 C 90.664 152.669, 91.290 147.326, 91.881 146.222 C 92.472 145.119, 94.350 143.042, 96.054 141.608 C 97.759 140.174, 99.794 139, 100.577 139 C 101.360 139, 102 138.295, 102 137.434 C 102 136.573, 101.534 134.998, 100.965 133.934 C 100.314 132.719, 98.921 132.024, 97.215 132.063 C 95.722 132.098, 93.600 132.499, 92.500 132.954 M 70.709 133.624 C 70.319 134.014, 70 135.128, 70 136.099 C 70 137.071, 70.945 138.165, 72.101 138.532 C 73.256 138.899, 74.648 138.752, 75.194 138.206 C 75.741 137.659, 76.028 136.377, 75.834 135.356 C 75.639 134.335, 74.566 133.369, 73.449 133.208 C 72.332 133.047, 71.099 133.235, 70.709 133.624 M 123.208 142.333 C 123.489 149.233, 123.593 149.500, 126 149.500 C 128.316 149.500, 128.522 149.107, 128.805 144.169 C 128.973 141.237, 128.621 138.248, 128.022 137.527 C 127.424 136.806, 126.030 135.980, 124.925 135.691 C 123.032 135.196, 122.933 135.579, 123.208 142.333 M 153.503 136.991 C 153.155 138.086, 153.209 139.549, 153.622 140.241 C 154.035 140.933, 155.583 143.075, 157.063 145 C 158.542 146.925, 160.230 149.949, 160.814 151.720 C 161.397 153.491, 162.146 159.341, 162.478 164.720 C 162.810 170.099, 163.315 176.410, 163.601 178.745 C 163.905 181.228, 165.171 184.238, 166.649 185.995 C 168.315 187.974, 170.103 189, 171.889 189 C 173.380 189, 175.140 188.460, 175.800 187.800 C 176.460 187.140, 177 185.193, 177 183.474 C 177 181.494, 176.146 179.546, 174.670 178.160 C 173.388 176.956, 171.334 173.957, 170.105 171.496 C 168.539 168.360, 167.628 164.098, 167.063 157.260 C 166.619 151.892, 165.721 146.150, 165.067 144.500 C 164.413 142.850, 162.467 140.037, 160.742 138.250 C 159.018 136.463, 156.826 135, 155.871 135 C 154.916 135, 153.850 135.896, 153.503 136.991 M 262.522 138.360 C 260.934 139.522, 260.789 140.272, 261.603 143.113 C 262.176 145.109, 263.324 146.631, 264.416 146.842 C 265.430 147.037, 266.633 146.594, 267.089 145.857 C 267.544 145.120, 267.655 143.388, 267.334 142.008 C 267.014 140.629, 266.225 138.933, 265.580 138.240 C 264.640 137.229, 264.037 137.253, 262.522 138.360 M 306.350 137.820 C 305.777 138.194, 305.014 139.702, 304.655 141.171 C 304.296 142.639, 304.275 144.552, 304.608 145.421 C 304.941 146.289, 306.039 147, 307.048 147 C 308.057 147, 309.081 146.662, 309.323 146.250 C 309.566 145.838, 310.072 144.069, 310.447 142.320 C 310.987 139.797, 310.742 138.932, 309.260 138.139 C 308.233 137.589, 306.923 137.446, 306.350 137.820 M 113.217 151.561 C 111.991 152.419, 110.316 154.422, 109.494 156.011 C 108.628 157.687, 108.005 161.547, 108.011 165.200 C 108.017 168.665, 108.702 173.750, 109.533 176.500 C 110.364 179.250, 112.496 183.638, 114.272 186.251 C 116.047 188.864, 119.022 191.726, 120.882 192.611 C 123.030 193.632, 125.544 194.011, 127.775 193.649 C 129.707 193.336, 132.395 192.049, 133.750 190.790 C 135.104 189.530, 137.456 186.700, 138.975 184.500 C 140.494 182.300, 142.247 178.115, 142.869 175.201 C 143.491 172.286, 144 167.040, 144 163.543 L 144 157.185 138.250 156.572 C 135.088 156.235, 130.568 155.974, 128.208 155.992 C 125.847 156.010, 122.922 155.498, 121.708 154.854 C 120.493 154.210, 118.912 152.854, 118.193 151.841 C 117.475 150.829, 116.562 150, 116.166 150 C 115.769 150, 114.442 150.702, 113.217 151.561 M 267 158.371 C 267 159.092, 267.505 163.466, 268.123 168.091 C 268.741 172.716, 270.141 178.415, 271.236 180.756 C 272.331 183.097, 274.625 186.189, 276.335 187.628 C 278.044 189.067, 280.931 190.953, 282.750 191.821 C 285.818 193.284, 286.290 193.265, 289.278 191.559 C 291.050 190.548, 293.948 188.360, 295.717 186.696 C 297.486 185.033, 299.800 181.829, 300.859 179.576 C 301.918 177.324, 303.117 171.927, 303.524 167.583 C 304.219 160.172, 304.151 159.728, 302.427 160.389 C 301.417 160.777, 298.727 161.350, 296.449 161.662 C 293.507 162.065, 291.014 161.657, 287.841 160.254 C 283.480 158.325, 283.321 158.322, 281.077 160.139 C 279.813 161.163, 277.766 162, 276.529 162 C 275.291 162, 272.641 160.889, 270.640 159.530 C 268.227 157.893, 267 157.502, 267 158.371 M 81.250 165.651 C 80.563 165.935, 80 166.974, 80 167.961 C 80 168.948, 80.675 170.315, 81.500 171 C 82.699 171.995, 83.311 171.987, 84.548 170.960 C 85.400 170.253, 85.962 168.740, 85.798 167.598 C 85.634 166.455, 84.825 165.434, 84 165.328 C 83.175 165.222, 81.938 165.367, 81.250 165.651 M 112.383 169.445 C 112.055 170.300, 112.055 171.700, 112.383 172.555 C 112.832 173.726, 114.157 174.035, 117.740 173.805 C 122.069 173.528, 122.500 173.274, 122.500 171 C 122.500 168.726, 122.069 168.472, 117.740 168.195 C 114.157 167.965, 112.832 168.274, 112.383 169.445 M 127.362 169.500 C 127.045 170.325, 127.045 171.675, 127.362 172.500 C 127.753 173.519, 129.350 174, 132.346 174 C 135.045 174, 137.238 173.418, 138 172.500 C 138.993 171.303, 138.993 170.697, 138 169.500 C 137.238 168.582, 135.045 168, 132.346 168 C 129.350 168, 127.753 168.481, 127.362 169.500 M 275.250 168.652 C 274.563 168.935, 274 170.204, 274 171.472 C 274 173.324, 274.703 173.909, 277.576 174.448 C 279.808 174.867, 281.687 174.675, 282.576 173.937 C 283.359 173.287, 283.993 172.473, 283.985 172.128 C 283.976 171.782, 283.639 170.994, 283.235 170.376 C 282.831 169.757, 281.150 169, 279.500 168.694 C 277.850 168.387, 275.938 168.368, 275.250 168.652 M 292.005 168.883 C 290.633 169.270, 289.353 170.403, 289.161 171.400 C 288.970 172.397, 289.246 173.646, 289.776 174.176 C 290.311 174.711, 292.378 174.832, 294.424 174.448 C 297.671 173.839, 298.073 173.445, 297.805 171.137 C 297.637 169.696, 296.825 168.441, 296 168.347 C 295.175 168.254, 293.377 168.495, 292.005 168.883 M 167.389 179.430 C 167.057 180.293, 167.057 181.707, 167.389 182.570 C 167.750 183.512, 168.893 184.012, 170.246 183.820 C 171.898 183.585, 172.500 182.833, 172.500 181 C 172.500 179.167, 171.898 178.415, 170.246 178.180 C 168.893 177.988, 167.750 178.488, 167.389 179.430 M 251.500 179.651 C 250.400 179.905, 248.263 180.591, 246.752 181.177 L 244.004 182.241 247.004 185.657 C 248.654 187.536, 251.135 191.307, 252.519 194.037 C 254.752 198.444, 255.396 199, 258.267 199.004 C 260.045 199.006, 262.897 199.859, 264.605 200.901 C 266.312 201.942, 268.719 204.428, 269.954 206.425 C 271.188 208.422, 272.449 211.926, 272.755 214.211 C 273.177 217.356, 274.344 219.397, 277.561 222.614 C 279.898 224.950, 283.645 227.799, 285.889 228.944 C 288.133 230.088, 291.663 231.374, 293.734 231.802 C 296.848 232.444, 297.555 233.048, 297.816 235.289 C 298.099 237.710, 297.809 238, 295.104 238 C 293.438 238, 289.585 237.068, 286.541 235.929 C 283.288 234.712, 278.810 231.851, 275.676 228.987 C 270.468 224.227, 270.307 224.160, 268.673 226.069 C 267.753 227.144, 267 228.460, 267 228.993 C 267 229.527, 270.488 233.476, 274.750 237.770 C 279.012 242.063, 285.094 247.029, 288.265 248.805 C 291.435 250.581, 295.935 252.668, 298.265 253.444 C 300.594 254.219, 305.341 255.401, 308.814 256.069 C 313.768 257.023, 316.998 257.024, 323.814 256.071 C 328.591 255.403, 334.408 254.347, 336.741 253.723 C 339.073 253.100, 342.155 251.654, 343.591 250.510 C 345.580 248.923, 346.200 247.526, 346.200 244.631 C 346.200 241.922, 345.355 239.780, 343.255 237.166 C 341.635 235.150, 339.727 231.889, 339.015 229.919 C 338.303 227.950, 337.219 225.653, 336.606 224.815 C 335.994 223.977, 334.529 222.985, 333.352 222.612 C 332.056 222.201, 330.675 222.466, 329.855 223.284 C 329.110 224.028, 326.328 226.293, 323.673 228.318 C 321.019 230.343, 318.029 232, 317.030 232 C 316.031 232, 314.913 231.216, 314.546 230.259 C 314.099 229.094, 314.643 227.896, 316.189 226.640 C 317.460 225.608, 319.606 223.890, 320.958 222.824 C 322.909 221.285, 323.198 220.535, 322.358 219.192 C 321.775 218.261, 319.933 217.363, 318.263 217.195 C 316.490 217.017, 313.830 217.743, 311.864 218.941 C 309.416 220.434, 306.787 220.994, 302.210 220.996 C 297.843 220.999, 294.696 220.375, 291.915 218.957 C 289.712 217.833, 286.082 215.262, 283.847 213.243 C 281.612 211.224, 277.938 206.856, 275.682 203.536 C 273.425 200.216, 270.143 194.198, 268.387 190.162 C 266.631 186.127, 264.363 182.245, 263.347 181.538 C 262.331 180.830, 259.700 180.012, 257.500 179.720 C 255.300 179.428, 252.600 179.397, 251.500 179.651 M 286.658 203.193 L 283.817 204.228 287.611 208.114 C 289.698 210.251, 291.652 212, 291.953 212.001 C 292.254 212.001, 292.344 209.751, 292.153 207.001 C 291.947 204.027, 291.339 202.032, 290.653 202.079 C 290.019 202.122, 288.221 202.624, 286.658 203.193 M 252.174 207.314 C 250.670 208.915, 250 210.895, 250 213.738 C 250 216.699, 250.723 218.706, 252.589 220.923 C 254.634 223.353, 255.967 224, 258.934 224 C 261.259 224, 263.275 223.333, 264.227 222.250 C 265.072 221.287, 266.075 219.477, 266.456 218.228 C 266.837 216.978, 266.862 214.648, 266.511 213.050 C 266.160 211.453, 264.715 208.988, 263.300 207.573 C 261.612 205.885, 259.631 205, 257.538 205 C 255.497 205, 253.566 205.833, 252.174 207.314 M 304.389 232.430 C 304.057 233.293, 304.057 234.707, 304.389 235.570 C 304.750 236.512, 305.893 237.012, 307.246 236.820 C 308.898 236.585, 309.500 235.833, 309.500 234 C 309.500 232.167, 308.898 231.415, 307.246 231.180 C 305.893 230.988, 304.750 231.488, 304.389 232.430 M 260.362 244.500 C 260.045 245.325, 260.057 246.705, 260.387 247.567 C 260.779 248.588, 261.946 249.023, 263.736 248.817 C 265.477 248.616, 266.614 247.811, 266.840 246.620 C 267.036 245.586, 266.590 244.355, 265.848 243.885 C 265.107 243.415, 263.698 243.024, 262.719 243.015 C 261.739 243.007, 260.678 243.675, 260.362 244.500 M 256.250 258.750 C 256.914 260.262, 259.034 264.200, 260.960 267.500 C 263.871 272.487, 264.721 275.350, 265.993 284.462 L 267.524 295.423 271.012 296.221 C 272.931 296.660, 276.975 297.482, 280 298.047 C 283.025 298.612, 290.501 299.473, 296.613 299.961 C 302.724 300.448, 309.587 300.597, 311.863 300.292 L 316 299.737 316.094 292.118 C 316.146 287.928, 316.483 280.337, 316.844 275.250 L 317.500 266 314.250 266 C 312.139 266, 311 266.488, 311 267.393 C 311 268.159, 310.222 269.085, 309.271 269.450 C 308.079 269.907, 306.757 269.201, 305.021 267.182 C 303.308 265.190, 300.233 263.529, 295.427 262.001 L 288.354 259.751 284.427 262.244 C 282.267 263.615, 278.718 266.377, 276.540 268.382 C 274.362 270.386, 272.144 271.881, 271.611 271.704 C 271.079 271.526, 270.172 270.634, 269.596 269.721 C 268.765 268.404, 269.226 267.362, 271.829 264.676 L 275.110 261.291 269.684 260.731 C 266.699 260.423, 262.315 259.233, 259.941 258.086 C 257.567 256.938, 255.494 256, 255.334 256 C 255.174 256, 255.586 257.238, 256.250 258.750 M 349.127 261.087 L 343.754 266.098 347.904 269.649 C 351.564 272.783, 351.983 273.572, 351.463 276.351 C 351.139 278.083, 351.338 282.378, 351.905 285.896 C 352.472 289.414, 354.465 295.489, 356.334 299.396 C 358.203 303.303, 361.148 311, 362.878 316.500 C 364.607 322, 366.520 328.300, 367.127 330.500 C 367.735 332.700, 368.579 335.625, 369.004 337 C 369.428 338.375, 370.298 341.425, 370.936 343.777 L 372.097 348.055 376.548 344.407 C 378.997 342.401, 381 339.934, 381 338.927 C 381 337.919, 380.446 335.835, 379.769 334.297 C 379.092 332.759, 377.311 329.530, 375.812 327.122 C 374.313 324.714, 372.620 320.439, 372.050 317.622 C 371.480 314.805, 370.301 308, 369.430 302.500 C 368.560 297, 366.932 288, 365.813 282.500 C 364.694 277, 363.539 271.375, 363.247 270 C 362.954 268.625, 360.914 264.913, 358.712 261.750 C 356.511 258.587, 354.663 256.017, 354.605 256.038 C 354.547 256.059, 352.082 258.331, 349.127 261.087 M 289.003 267.496 C 288.281 268.367, 287.647 271.131, 287.595 273.641 L 287.500 278.203 283.104 277.600 C 280.466 277.239, 278.174 277.441, 277.375 278.104 C 276.426 278.891, 276.325 279.739, 277.024 281.044 C 277.643 282.202, 279.663 283.127, 282.503 283.553 C 286.780 284.194, 287 284.387, 287 287.503 C 287 289.304, 287.848 291.826, 288.885 293.107 C 290.476 295.072, 291.015 295.232, 292.338 294.134 C 293.637 293.056, 293.871 290.575, 293.703 279.679 C 293.531 268.548, 293.255 266.479, 291.908 266.220 C 291.032 266.052, 289.725 266.626, 289.003 267.496 M 298 279.500 C 297.007 280.697, 297.007 281.303, 298 282.500 C 298.685 283.325, 300.119 284, 301.188 284 C 302.257 284, 304.002 283.534, 305.066 282.965 C 306.130 282.395, 307 281.045, 307 279.965 C 307 278.350, 306.310 278, 303.122 278 C 300.896 278, 298.715 278.639, 298 279.500 M 341.129 289.798 C 339.436 292.438, 335.567 297.050, 332.531 300.048 C 327.758 304.763, 327.011 306.017, 327.006 309.320 C 327.002 311.868, 327.942 314.531, 329.829 317.320 C 331.384 319.619, 333.475 323.525, 334.474 326 C 335.473 328.475, 337.013 333.945, 337.895 338.155 L 339.500 345.810 345.608 343.031 L 351.716 340.252 350.186 333.988 C 348.736 328.053, 348.754 327.653, 350.519 326.362 C 351.544 325.613, 353.871 325, 355.691 325 C 357.511 325, 359 324.629, 359 324.175 C 359 323.721, 357.918 320.168, 356.595 316.279 C 355.272 312.390, 352.508 305.674, 350.453 301.354 C 348.397 297.034, 346.496 291.587, 346.227 289.250 C 345.959 286.913, 345.395 285, 344.974 285 C 344.553 285, 342.823 287.159, 341.129 289.798 M 261.170 302.612 C 261.468 305.218, 262.184 305.730, 268.500 307.850 C 272.350 309.143, 279.550 310.822, 284.500 311.582 C 289.450 312.342, 297.438 312.972, 302.250 312.982 L 311 313 311 310.139 C 311 307.435, 310.713 307.244, 305.750 306.648 C 302.863 306.301, 298.250 306.006, 295.500 305.991 C 292.750 305.977, 286.675 305.332, 282 304.557 C 277.325 303.783, 271.439 302.681, 268.920 302.108 C 266.401 301.536, 263.553 300.766, 262.590 300.396 C 261.135 299.838, 260.896 300.211, 261.170 302.612 M 256.737 313.310 C 255.959 314.515, 254.576 317.525, 253.663 320 C 252.749 322.475, 251.363 327.650, 250.582 331.500 C 249.801 335.350, 248.876 342.775, 248.527 348 C 248.177 353.225, 247.683 358.509, 247.429 359.743 L 246.966 361.985 250.733 359.893 C 252.805 358.742, 255.963 356.697, 257.751 355.348 C 259.539 354, 261.701 351.545, 262.555 349.894 C 263.409 348.242, 264.739 341.804, 265.510 335.587 C 266.281 329.370, 267.529 322.492, 268.284 320.303 L 269.655 316.322 265.578 314.446 C 263.335 313.414, 260.747 312.243, 259.826 311.845 C 258.677 311.348, 257.707 311.807, 256.737 313.310 M 274.125 321.934 C 273.534 323.895, 272.619 327.975, 272.089 331 C 271.560 334.025, 270.836 341.992, 270.479 348.705 L 269.830 360.909 273.165 359.959 C 274.999 359.437, 278.275 357.766, 280.445 356.246 C 282.677 354.682, 285.469 351.386, 286.874 348.656 C 288.937 344.648, 289.432 342.014, 289.799 333.106 L 290.241 322.382 282.720 320.375 L 275.199 318.368 274.125 321.934 M 256.445 323.174 C 255.970 324.669, 256.292 325.740, 257.475 326.605 C 258.421 327.297, 259.791 327.634, 260.520 327.354 C 261.249 327.074, 262.113 326.148, 262.440 325.296 C 262.767 324.444, 262.522 323.129, 261.895 322.373 C 261.268 321.618, 259.941 321, 258.945 321 C 257.949 321, 256.824 321.978, 256.445 323.174 M 296 341.321 L 296 359.903 299.250 358.540 C 301.038 357.790, 304.239 355.717, 306.365 353.935 C 308.491 352.152, 310.853 349.202, 311.615 347.379 C 312.377 345.556, 313 342.600, 313 340.810 C 313 339.021, 312.037 334.506, 310.861 330.778 C 308.940 324.691, 308.455 323.999, 306.111 323.989 C 304.675 323.983, 301.813 323.699, 299.750 323.358 L 296 322.738 296 341.321 M 278.389 327.430 C 278.057 328.293, 278.057 329.707, 278.389 330.570 C 278.750 331.512, 279.893 332.012, 281.246 331.820 C 282.898 331.585, 283.500 330.833, 283.500 329 C 283.500 327.167, 282.898 326.415, 281.246 326.180 C 279.893 325.988, 278.750 326.488, 278.389 327.430 M 301.667 327.667 C 301.300 328.033, 301 329.383, 301 330.667 C 301 332.461, 301.553 333, 303.393 333 C 304.709 333, 306.045 332.325, 306.362 331.500 C 306.678 330.675, 306.678 329.325, 306.362 328.500 C 306.045 327.675, 305.009 327, 304.060 327 C 303.110 327, 302.033 327.300, 301.667 327.667 M 356 331.909 C 356 332.409, 358.025 340.750, 360.500 350.445 C 362.975 360.141, 365 368.267, 365 368.505 C 365 368.743, 365.688 368.673, 366.528 368.351 C 367.368 368.029, 368.519 366.898, 369.086 365.839 C 369.828 364.453, 369.694 362.455, 368.607 358.707 C 367.777 355.843, 366.361 350.800, 365.462 347.500 C 364.562 344.200, 363.392 339.718, 362.861 337.539 C 362.330 335.361, 361.414 332.999, 360.825 332.289 C 360.237 331.580, 358.910 331, 357.878 331 C 356.845 331, 356 331.409, 356 331.909 M 344.450 349.872 C 343.928 350.351, 338.775 352.561, 333 354.783 C 327.225 357.004, 318.675 359.972, 314 361.378 C 309.325 362.784, 301.559 364.846, 296.743 365.960 C 291.927 367.074, 281.352 368.449, 273.243 369.017 C 265.134 369.584, 255.800 370.562, 252.500 371.190 C 249.200 371.818, 242.900 373.834, 238.500 375.670 C 234.100 377.507, 227.425 381.106, 223.666 383.668 C 217.699 387.736, 217.064 388.456, 218.659 389.349 C 219.663 389.911, 225.340 390.570, 231.274 390.815 C 237.726 391.081, 244.565 390.761, 248.282 390.020 C 251.702 389.338, 257.200 387.865, 260.500 386.747 C 263.800 385.628, 270.775 382.557, 276 379.920 C 281.225 377.284, 290.835 373.299, 297.356 371.065 C 303.877 368.831, 312.877 366.128, 317.356 365.058 C 321.835 363.988, 328.565 362.413, 332.312 361.556 C 336.059 360.700, 340.109 359.993, 341.312 359.985 C 342.515 359.976, 344.059 359.614, 344.742 359.180 C 345.426 358.747, 346.274 356.278, 346.628 353.696 C 346.999 350.988, 346.876 349, 346.336 349 C 345.821 349, 344.972 349.392, 344.450 349.872" stroke="none" fill="%230d6efd" fill-rule="evenodd"/></svg>';var C8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="445" height="445" viewBox="0 0 445 445" version="1.1"><path d="" stroke="none" fill="%23ffc107" fill-rule="evenodd"/><path d="M 331.143 73.984 C 328.189 76.204, 322.951 78.861, 319.315 79.984 C 314.648 81.426, 309.990 82, 302.960 82 C 297.554 82, 290.064 81.358, 286.315 80.573 C 282.567 79.788, 274.184 78.654, 267.687 78.053 C 259.269 77.274, 252.084 77.264, 242.687 78.016 C 235.434 78.597, 224.360 80.221, 218.079 81.625 C 211.797 83.029, 202.797 85.538, 198.079 87.202 C 193.360 88.865, 185.450 92.122, 180.500 94.439 C 175.550 96.756, 167.900 100.826, 163.500 103.484 C 159.100 106.142, 151.450 111.365, 146.500 115.090 C 141.550 118.816, 133.845 125.382, 129.378 129.682 C 124.911 133.982, 118.424 140.860, 114.963 144.968 C 111.501 149.075, 105.860 156.725, 102.426 161.968 C 98.992 167.210, 94.365 174.875, 92.144 179 C 89.923 183.125, 86.294 191.074, 84.081 196.665 C 81.867 202.255, 79.122 210.312, 77.981 214.570 C 76.840 218.827, 75.206 225.728, 74.349 229.905 C 73.467 234.205, 72.581 245.093, 72.307 255 C 71.902 269.648, 72.175 274.782, 73.982 286.500 C 75.169 294.200, 76.393 303.046, 76.701 306.158 C 77.009 309.270, 76.691 314.895, 75.994 318.658 C 75.297 322.421, 73.832 327.300, 72.738 329.500 C 71.644 331.700, 69.230 335.585, 67.374 338.134 C 65.518 340.683, 64 343.518, 64 344.434 C 64 345.350, 64.654 347.364, 65.453 348.909 C 66.252 350.454, 68.268 352.283, 69.933 352.972 C 71.599 353.662, 74.037 353.956, 75.353 353.626 C 76.668 353.296, 80.442 351.040, 83.739 348.613 C 87.676 345.715, 90.970 342.165, 93.335 338.272 C 95.315 335.012, 97.670 329.679, 98.568 326.422 C 99.499 323.043, 100.352 315.392, 100.555 308.605 L 100.910 296.709 191.955 206.265 C 260.158 138.513, 283 115.243, 283 113.518 C 283 112.251, 282.286 110.940, 281.414 110.605 C 280.542 110.271, 279.248 110.335, 278.539 110.748 C 277.830 111.162, 237.481 151.016, 188.875 199.314 L 100.500 287.127 99.808 283.314 C 99.427 281.216, 99.089 273.708, 99.058 266.628 C 99.026 259.549, 99.707 248.974, 100.572 243.128 C 101.436 237.283, 103.494 227.624, 105.144 221.663 C 106.795 215.703, 108.953 208.953, 109.940 206.663 C 110.927 204.374, 112.783 200.250, 114.065 197.500 C 115.348 194.750, 118.515 188.889, 121.103 184.476 C 123.692 180.063, 128.378 173.088, 131.516 168.976 C 134.654 164.864, 140.435 158.198, 144.361 154.162 C 148.287 150.126, 154.650 144.227, 158.500 141.053 C 162.350 137.879, 168.650 133.259, 172.500 130.787 C 176.350 128.315, 182.875 124.514, 187 122.340 C 191.125 120.166, 198.410 116.926, 203.189 115.141 C 207.968 113.356, 213.368 111.458, 215.189 110.923 C 217.010 110.389, 222.550 108.972, 227.500 107.776 C 235.969 105.728, 238.918 105.597, 277.500 105.550 C 313.836 105.506, 319.039 105.303, 323.238 103.766 C 325.844 102.812, 328.994 101.462, 330.238 100.766 C 331.482 100.070, 334.162 98.245, 336.193 96.711 C 338.225 95.177, 341.712 91.188, 343.943 87.847 C 346.406 84.159, 348 80.608, 348 78.809 C 348 76.868, 346.992 74.838, 345.077 72.923 C 343.212 71.058, 341.121 70, 339.300 70 C 337.526 70, 334.439 71.508, 331.143 73.984 M 335.500 79.591 C 333.850 80.976, 330.911 82.944, 328.970 83.963 C 327.028 84.982, 322.866 86.565, 319.719 87.479 L 313.999 89.142 314.639 93.321 C 314.990 95.619, 315.446 97.693, 315.651 97.929 C 315.856 98.165, 318.430 97.599, 321.371 96.672 C 324.312 95.745, 328.543 93.665, 330.772 92.050 C 333.002 90.435, 336.254 87.038, 337.999 84.502 C 339.744 81.965, 340.922 79.240, 340.617 78.445 C 340.312 77.650, 339.711 77.016, 339.281 77.036 C 338.852 77.056, 337.150 78.205, 335.500 79.591 M 240 85.628 C 237.525 85.856, 231.225 86.738, 226 87.588 C 220.775 88.439, 214.025 89.818, 211 90.653 C 207.975 91.488, 202.125 93.297, 198 94.672 C 193.875 96.047, 186.450 99.081, 181.500 101.414 C 176.550 103.747, 168.450 108.170, 163.500 111.244 C 158.550 114.317, 150.148 120.470, 144.829 124.917 C 139.509 129.364, 131.342 137.164, 126.680 142.251 C 122.017 147.338, 116.412 153.780, 114.223 156.566 C 112.035 159.352, 107.860 165.427, 104.947 170.066 C 102.034 174.705, 97.760 182.550, 95.451 187.500 C 93.141 192.450, 90.086 199.991, 88.662 204.257 C 87.237 208.524, 85.179 215.771, 84.089 220.362 C 82.999 224.953, 81.355 235.187, 80.437 243.104 C 79.249 253.349, 78.961 260.816, 79.438 269 C 79.806 275.325, 80.421 280.792, 80.804 281.148 C 81.187 281.505, 83.799 282.101, 86.610 282.473 L 91.719 283.149 92.280 263.825 C 92.674 250.288, 93.450 241.505, 94.872 234.500 C 95.989 229, 97.794 221.456, 98.885 217.736 C 99.975 214.015, 101.750 208.615, 102.829 205.736 C 103.908 202.856, 105.936 198.001, 107.335 194.946 C 108.734 191.891, 111.775 186.041, 114.092 181.946 C 116.410 177.851, 120.791 171.125, 123.828 167 C 126.866 162.875, 131.859 156.630, 134.925 153.122 C 137.991 149.615, 145.132 142.796, 150.793 137.971 C 156.454 133.145, 165.904 126.301, 171.793 122.762 C 177.682 119.223, 185.621 114.874, 189.435 113.097 C 193.249 111.320, 200.996 108.318, 206.651 106.427 C 212.305 104.535, 220.022 102.337, 223.799 101.542 C 227.576 100.748, 234.679 99.596, 239.583 98.982 C 244.487 98.369, 254.966 97.874, 262.870 97.883 L 277.239 97.900 276.787 92.451 C 276.539 89.454, 276.056 86.722, 275.713 86.380 C 275.371 86.038, 268.208 85.635, 259.796 85.486 C 251.383 85.337, 242.475 85.401, 240 85.628 M 294.186 130.078 C 289.766 134.030, 284.753 139.208, 283.047 141.583 C 281.341 143.959, 279.255 147.837, 278.411 150.201 C 277.470 152.835, 276.994 156.917, 277.181 160.740 L 277.485 166.980 266.510 177.990 C 259.980 184.541, 254.717 189.018, 253.517 189.045 C 252.408 189.070, 250.292 189.632, 248.815 190.295 C 247.339 190.958, 240.589 196.873, 233.815 203.440 C 227.042 210.006, 208.450 227.997, 192.500 243.420 C 176.550 258.842, 156.525 278.220, 148 286.480 C 139.475 294.741, 131.324 303.164, 129.886 305.198 C 128.449 307.231, 126.988 310.673, 126.641 312.845 C 126.293 315.018, 126.296 318.304, 126.646 320.148 C 126.997 321.991, 128.532 326.291, 130.058 329.703 C 131.584 333.115, 134.856 338.740, 137.330 342.203 C 139.805 345.666, 144.548 351.183, 147.871 354.462 C 151.194 357.741, 155.838 361.453, 158.191 362.712 C 160.544 363.970, 163.684 365, 165.169 365 C 166.655 365, 169.137 364.519, 170.685 363.932 C 172.233 363.344, 178.698 357.424, 185.051 350.776 C 195.713 339.617, 196.944 338.640, 201.051 338.070 C 203.498 337.730, 208.011 337.784, 211.080 338.189 C 214.150 338.594, 218.875 339.888, 221.580 341.064 C 224.286 342.239, 230.100 344.347, 234.500 345.746 C 240.418 347.629, 244.842 348.318, 251.500 348.396 C 259.655 348.490, 260.989 348.229, 265.707 345.615 C 268.571 344.028, 271.721 341.999, 272.707 341.106 C 273.693 340.214, 277.997 336.454, 282.271 332.752 C 286.545 329.049, 291.737 325.155, 293.809 324.098 C 295.881 323.041, 301.560 321.229, 306.430 320.073 C 311.300 318.916, 317.463 316.784, 320.125 315.335 C 322.788 313.886, 326.554 311.113, 328.495 309.172 C 330.436 307.231, 333.143 303.276, 334.512 300.383 C 336.415 296.361, 337 293.500, 337 288.218 C 337 284.069, 336.251 279.136, 335.123 275.858 C 334.091 272.858, 332.228 268.400, 330.983 265.952 C 329.737 263.503, 326.326 258.350, 323.403 254.500 C 320.480 250.650, 315.414 244.688, 312.147 241.250 C 308.879 237.813, 305.742 235, 305.174 235 C 304.607 235, 303.437 235.706, 302.573 236.569 C 301.471 237.672, 301.282 238.639, 301.938 239.819 C 302.452 240.744, 306.295 245.325, 310.477 250 C 314.658 254.675, 319.934 261.572, 322.200 265.327 C 324.466 269.082, 327.148 274.664, 328.160 277.732 C 329.172 280.800, 330 285.505, 330 288.187 C 330 290.870, 329.302 294.737, 328.449 296.782 C 327.596 298.827, 325.459 302.002, 323.699 303.838 C 321.940 305.673, 318.925 307.979, 317 308.961 C 315.075 309.943, 310.956 311.478, 307.846 312.373 C 304.736 313.268, 301.445 314, 300.532 314 C 299.619 314, 296.538 315.070, 293.686 316.379 C 290.834 317.687, 286.177 320.507, 283.337 322.646 C 280.498 324.784, 276.021 328.493, 273.390 330.888 L 268.606 335.242 262.119 334.721 C 256.524 334.272, 253.425 333.088, 239.566 326.107 C 230.730 321.655, 222.076 317.672, 220.336 317.256 L 217.172 316.500 233.771 299 C 242.901 289.375, 257.180 274.300, 265.502 265.500 C 273.825 256.700, 283.612 246.234, 287.251 242.243 C 291.322 237.779, 293.997 233.930, 294.201 232.243 C 294.385 230.734, 294.201 227.925, 293.792 226 C 293.071 222.598, 293.309 222.242, 302.275 213.275 L 311.500 204.050 320.015 204.025 C 326.679 204.005, 329.396 203.546, 332.515 201.910 C 334.707 200.761, 340.663 195.707, 345.750 190.680 C 351.922 184.581, 355 180.797, 355 179.308 C 355 177.573, 354.166 176.856, 351.250 176.084 C 349.188 175.537, 345.552 174.660, 343.172 174.134 C 340.792 173.608, 338.653 172.986, 338.418 172.752 C 338.184 172.517, 337.510 169.718, 336.921 166.530 C 336.332 163.343, 335.445 159.669, 334.950 158.367 C 334.455 157.065, 333.263 156, 332.302 156 C 331.340 156, 327.771 158.758, 324.370 162.129 C 318.523 167.924, 317.991 168.221, 314.593 167.583 C 312.114 167.118, 311 166.373, 311 165.180 C 311 164.228, 314.375 160.097, 318.500 156 C 322.625 151.903, 326 148.008, 326 147.346 C 326 146.684, 325.337 145.480, 324.526 144.669 C 323.715 143.858, 320.678 142.870, 317.776 142.473 C 314.874 142.076, 311.568 141.399, 310.428 140.968 C 308.808 140.356, 308.064 138.640, 307.020 133.104 C 306.265 129.105, 304.931 125.342, 303.953 124.458 C 302.356 123.012, 301.607 123.443, 294.186 130.078 M 292.783 141.477 C 287.798 146.461, 285.963 149.089, 285.115 152.457 C 284.502 154.893, 284 157.683, 284 158.659 C 284 159.921, 285.520 158.931, 289.281 155.216 C 292.186 152.347, 295.246 150, 296.081 150 C 296.917 150, 298.140 150.540, 298.800 151.200 C 299.460 151.860, 300 152.773, 300 153.230 C 300 153.686, 297.706 156.409, 294.903 159.280 C 290.007 164.295, 289.904 164.512, 292.295 164.806 C 293.664 164.974, 296.765 164.181, 299.187 163.042 C 301.608 161.904, 306.198 158.337, 309.386 155.115 L 315.183 149.257 311.342 148.588 C 309.229 148.220, 306.308 147.451, 304.852 146.880 C 302.763 146.061, 302.070 144.960, 301.572 141.671 C 301.226 139.377, 300.580 136.920, 300.138 136.212 C 299.561 135.286, 297.496 136.763, 292.783 141.477 M 322.408 174.206 C 317.704 179.159, 315.094 182.782, 314.658 184.962 C 314.296 186.770, 314 189.191, 314 190.341 C 314 192.056, 314.991 191.453, 319.518 186.982 C 324.113 182.445, 325.326 181.715, 326.768 182.624 C 327.721 183.224, 328.656 184.507, 328.846 185.475 C 329.055 186.540, 327.290 189.167, 324.384 192.118 L 319.575 197 322.722 197 C 324.454 197, 327.069 196.544, 328.536 195.986 C 330.002 195.429, 334.081 192.208, 337.601 188.828 C 341.120 185.448, 344 182.347, 344 181.935 C 344 181.524, 341.773 180.881, 339.050 180.507 C 336.328 180.133, 333.582 179.201, 332.948 178.438 C 332.314 177.674, 331.279 174.729, 330.648 171.894 L 329.500 166.739 322.408 174.206 M 272.250 182.007 C 267.163 186.951, 263 191.353, 263 191.790 C 263 192.226, 264.930 194.478, 267.290 196.794 L 271.580 201.004 275.871 196.632 C 279.941 192.484, 280.129 192.035, 279.538 187.880 C 279.167 185.275, 279.480 181.373, 280.311 178.250 C 281.079 175.363, 281.660 173.004, 281.604 173.009 C 281.547 173.013, 277.337 177.063, 272.250 182.007 M 302.500 196.536 C 300.839 197.297, 296.132 197.930, 291.953 197.955 C 284.487 198, 284.364 198.043, 280.494 202.006 C 276.982 205.602, 276.739 206.168, 278.114 207.542 C 279.489 208.917, 279.995 208.765, 283.072 206.053 C 284.958 204.391, 287.232 203.025, 288.128 203.016 C 289.023 203.007, 290.291 203.646, 290.947 204.436 C 291.807 205.472, 291.845 206.421, 291.085 207.841 C 290.505 208.924, 288.787 210.726, 287.265 211.844 C 284.626 213.785, 284.580 213.960, 286.253 215.657 C 287.931 217.358, 288.278 217.171, 294.253 211.337 C 297.689 207.983, 301.962 203.850, 303.750 202.153 C 305.538 200.456, 307 198.152, 307 197.034 C 307 195.915, 306.663 195.037, 306.250 195.081 C 305.837 195.126, 304.150 195.781, 302.500 196.536 M 247.250 217.846 C 246.662 218.209, 246.027 219.855, 245.840 221.503 C 245.548 224.078, 245.008 224.570, 242 225 C 239.333 225.381, 238.500 225.976, 238.500 227.500 C 238.500 229.024, 239.333 229.619, 242 230 C 245.111 230.444, 245.556 230.889, 246 234 C 246.381 236.667, 246.976 237.500, 248.500 237.500 C 250.024 237.500, 250.619 236.667, 251 234 C 251.444 230.889, 251.889 230.444, 255 230 C 257.667 229.619, 258.500 229.024, 258.500 227.500 C 258.500 225.976, 257.667 225.381, 255 225 C 251.929 224.561, 251.462 224.112, 251.193 221.335 C 251.024 219.594, 250.308 217.949, 249.602 217.678 C 248.896 217.407, 247.838 217.482, 247.250 217.846 M 226 241.370 C 226 244.703, 225.812 244.895, 222.250 245.190 C 218.999 245.459, 218.500 245.833, 218.500 248 C 218.500 250.167, 218.999 250.541, 222.250 250.810 C 225.812 251.105, 226 251.297, 226 254.630 C 226 257.697, 226.283 258.099, 228.250 257.820 C 229.975 257.575, 230.573 256.741, 230.813 254.250 C 231.086 251.427, 231.497 251, 233.941 251 C 235.489 251, 237.315 250.325, 238 249.500 C 238.993 248.303, 238.993 247.697, 238 246.500 C 237.315 245.675, 235.489 245, 233.941 245 C 231.497 245, 231.086 244.573, 230.813 241.750 C 230.573 239.259, 229.975 238.425, 228.250 238.180 C 226.283 237.901, 226 238.303, 226 241.370 M 205.667 259.667 C 205.300 260.033, 205 261.608, 205 263.167 C 205 265.621, 204.615 266, 202.122 266 C 200.540 266, 198.685 266.675, 198 267.500 C 197.007 268.697, 197.007 269.303, 198 270.500 C 198.685 271.325, 200.511 272, 202.059 272 C 204.503 272, 204.914 272.427, 205.187 275.250 C 205.427 277.741, 206.025 278.575, 207.750 278.820 C 209.723 279.100, 210 278.699, 210 275.570 C 210 272.461, 210.312 272, 212.418 272 C 213.748 272, 215.548 271.727, 216.418 271.393 C 217.288 271.059, 218 269.982, 218 269 C 218 268.018, 217.288 266.941, 216.418 266.607 C 215.548 266.273, 213.748 266, 212.418 266 C 210.321 266, 210 265.535, 210 262.500 C 210 259.773, 209.595 259, 208.167 259 C 207.158 259, 206.033 259.300, 205.667 259.667 M 82.607 321.582 C 82.273 322.452, 82 323.914, 81.999 324.832 C 81.999 325.749, 80.718 329.200, 79.154 332.500 C 77.589 335.800, 75.041 340.003, 73.490 341.840 C 71.235 344.511, 70.949 345.350, 72.056 346.035 C 72.941 346.581, 74.717 346.148, 76.970 344.835 C 78.912 343.705, 82.197 340.961, 84.270 338.739 C 86.344 336.516, 88.931 332.683, 90.020 330.222 C 91.109 327.760, 92 324.730, 92 323.490 C 92 321.995, 91.240 321.030, 89.750 320.630 C 88.513 320.299, 86.536 320.021, 85.357 320.014 C 84.178 320.006, 82.941 320.712, 82.607 321.582" stroke="none" fill="%23ffc107" fill-rule="evenodd"/></svg>';var p8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="445" height="445" viewBox="0 0 445 445" version="1.1"><path d="" stroke="none" fill="%230d6efd" fill-rule="evenodd"/><path d="M 80.500 75.377 C 77.750 76.674, 74.509 78.814, 73.298 80.131 C 72.086 81.449, 70.399 84.194, 69.548 86.232 C 68.696 88.269, 68 92.470, 68 95.567 C 68 98.664, 68.716 102.707, 69.591 104.552 C 70.467 106.396, 72.375 109.164, 73.831 110.703 C 75.425 112.386, 76.484 114.646, 76.490 116.379 C 76.497 118.363, 77.378 119.917, 79.324 121.379 C 81.263 122.835, 83.509 123.471, 86.490 123.406 C 88.878 123.354, 92.274 122.715, 94.036 121.985 L 97.240 120.658 115.884 139.579 C 126.138 149.986, 137.334 161.546, 140.764 165.269 C 144.194 168.992, 146.996 172.367, 146.992 172.769 C 146.988 173.171, 144.006 176.875, 140.366 181 C 136.725 185.125, 132.116 190.293, 130.123 192.484 C 126.617 196.340, 126.489 196.390, 126.157 194.057 C 125.969 192.732, 125.114 190.578, 124.259 189.272 C 123.403 187.966, 121.442 186.246, 119.901 185.449 C 118.360 184.652, 115.103 184, 112.663 184 C 109.316 184, 107.038 184.798, 103.390 187.250 C 100.730 189.037, 97.529 192.029, 96.277 193.898 C 94.561 196.458, 94 198.723, 94 203.083 C 94 206.266, 94.478 210.137, 95.061 211.685 C 95.645 213.233, 97.558 215.998, 99.311 217.828 C 101.065 219.659, 104.075 221.857, 106 222.714 C 107.939 223.577, 112.398 224.296, 116 224.326 C 121.333 224.370, 123.702 223.803, 129.198 221.164 C 134.011 218.852, 138.099 215.721, 143.722 210.037 L 151.548 202.127 153.927 205.598 C 155.235 207.507, 158.374 210.772, 160.903 212.852 C 163.431 214.933, 167.119 217.612, 169.098 218.805 C 171.077 219.999, 175.747 222.124, 179.477 223.527 C 183.206 224.931, 190.759 226.967, 196.260 228.051 C 201.762 229.136, 208.317 230.931, 210.827 232.041 C 213.336 233.152, 216.858 235.180, 218.653 236.549 C 220.488 237.949, 223.217 241.764, 224.889 245.269 C 227.311 250.346, 228.151 254.092, 229.429 265.500 C 230.291 273.200, 231.478 281.300, 232.067 283.500 C 232.656 285.700, 234.360 289.290, 235.852 291.478 C 237.345 293.665, 240.765 296.815, 243.452 298.478 C 248.170 301.396, 248.735 301.498, 259.919 301.449 C 266.288 301.421, 275.586 301.022, 280.580 300.562 C 288.006 299.878, 290.571 300.029, 294.668 301.390 C 297.423 302.305, 300.846 304.279, 302.275 305.777 C 303.704 307.275, 305.356 309.779, 305.947 311.342 C 306.537 312.906, 307.727 317.604, 308.590 321.783 C 309.454 325.962, 311.265 331.562, 312.615 334.227 C 313.965 336.892, 316.608 340.774, 318.487 342.854 C 320.366 344.934, 323.838 347.586, 326.202 348.746 C 328.566 349.907, 332.092 351.342, 334.038 351.936 C 336.031 352.544, 343.455 352.904, 351.038 352.761 C 362.937 352.536, 365.028 352.751, 369.051 354.609 C 371.554 355.765, 375.168 358.087, 377.083 359.768 C 379.755 362.114, 380.962 362.601, 382.282 361.862 C 383.227 361.333, 384 360.008, 384 358.917 C 384 357.826, 382.915 354.811, 381.589 352.217 C 380.263 349.623, 377.612 345.686, 375.698 343.468 C 373.784 341.251, 370.031 338.259, 367.359 336.821 C 364.686 335.383, 358.712 332.935, 354.083 331.381 C 348.206 329.409, 344.706 327.568, 342.486 325.283 C 340.737 323.482, 338.528 319.644, 337.577 316.755 C 336.626 313.865, 335.189 306.575, 334.385 300.556 C 333.580 294.536, 332.049 287.638, 330.982 285.226 C 329.915 282.814, 327.664 279.100, 325.979 276.973 C 324.258 274.800, 320.633 272.028, 317.708 270.647 C 314.843 269.295, 309.800 267.718, 306.500 267.141 C 303.200 266.564, 296.398 265.399, 291.384 264.551 C 286.370 263.704, 280.708 262.358, 278.802 261.562 C 276.895 260.765, 273.709 258.313, 271.721 256.113 C 269.734 253.913, 267.626 250.327, 267.038 248.143 C 266.450 245.959, 265.544 239.710, 265.024 234.256 C 264.505 228.802, 263.601 223.026, 263.016 221.420 C 262.432 219.814, 260.979 216.559, 259.787 214.188 C 258.596 211.816, 254.858 207.316, 251.481 204.188 C 247.438 200.442, 241.784 196.714, 234.921 193.269 C 229.189 190.392, 221.987 186.057, 218.917 183.635 C 215.846 181.214, 211.009 176.143, 208.169 172.366 C 205.328 168.590, 201.612 162.632, 199.912 159.126 L 196.820 152.752 201.535 147.965 L 206.249 143.178 209.970 147.089 C 213.143 150.424, 214.308 151, 217.885 151 C 220.192 151, 223.805 150.120, 225.914 149.044 C 228.023 147.968, 230.913 145.704, 232.336 144.013 C 233.759 142.322, 235.388 139.264, 235.956 137.219 C 236.524 135.174, 236.989 132.600, 236.989 131.500 C 236.989 130.400, 236.494 127.700, 235.890 125.500 C 235.214 123.040, 233.163 119.932, 230.562 117.427 C 227.924 114.885, 224.594 112.866, 221.707 112.058 C 219.162 111.345, 215.541 111.051, 213.660 111.404 C 211.778 111.757, 207.373 113.897, 203.870 116.159 C 200.366 118.421, 192.986 124.823, 187.469 130.386 C 181.952 135.949, 175.051 143.090, 172.134 146.255 L 166.829 152.011 163.935 149.755 C 162.343 148.515, 151.831 138.050, 140.574 126.500 C 129.318 114.950, 119.126 104.230, 117.925 102.679 C 116.304 100.583, 116.033 99.567, 116.871 98.729 C 117.492 98.108, 118 95.507, 118 92.948 C 118 89.749, 117.283 87.234, 115.704 84.898 C 114.072 82.483, 112.630 81.487, 110.722 81.455 C 109.245 81.430, 106.791 80.234, 105.269 78.798 C 103.746 77.361, 100.758 75.469, 98.628 74.593 C 96.498 73.717, 92.673 73.004, 90.128 73.010 C 87.364 73.016, 83.486 73.969, 80.500 75.377 M 79.763 82.565 C 78.257 83.382, 76.344 85.367, 75.513 86.976 C 74.681 88.584, 74 91.958, 74 94.472 C 74 97.713, 74.752 100.179, 76.583 102.946 C 78.004 105.093, 79.745 107.072, 80.452 107.343 C 81.158 107.614, 83.742 105.736, 86.192 103.168 C 88.643 100.601, 91.402 97.278, 92.324 95.785 C 93.246 94.292, 94 91.285, 94 89.103 C 94 85.866, 93.466 84.756, 91.096 83.068 C 89.498 81.931, 86.911 81.018, 85.346 81.040 C 83.781 81.062, 81.268 81.748, 79.763 82.565 M 105.324 92.006 C 102.477 94.191, 96.317 100.572, 91.635 106.185 C 86.954 111.798, 83.347 116.753, 83.621 117.195 C 83.894 117.638, 85.104 117.998, 86.309 117.996 C 87.514 117.994, 89.983 117.089, 91.795 115.984 C 93.607 114.879, 98.582 110.493, 102.850 106.238 C 107.893 101.209, 110.957 97.274, 111.601 95 C 112.146 93.075, 112.425 90.713, 112.222 89.750 C 112.019 88.787, 111.549 88.007, 111.177 88.016 C 110.805 88.025, 108.171 89.821, 105.324 92.006 M 204.407 122.865 C 200.608 125.540, 192.714 132.628, 186.865 138.615 C 181.016 144.602, 172.241 153.981, 167.365 159.457 C 162.489 164.933, 155.601 172.583, 152.058 176.457 C 148.515 180.331, 140.592 188.755, 134.451 195.178 C 125.525 204.515, 122.581 206.988, 119.765 207.516 C 117.423 207.956, 115.256 207.667, 113.299 206.654 C 111.679 205.817, 109.774 204.433, 109.065 203.579 C 108.356 202.724, 108.037 201.345, 108.357 200.513 C 108.676 199.681, 109.571 199, 110.346 199 C 111.121 199, 112.315 199.675, 113 200.500 C 113.685 201.325, 115.225 202, 116.422 202 C 117.620 202, 119.140 201.460, 119.800 200.800 C 120.460 200.140, 121 198.358, 121 196.839 C 121 195.286, 120.042 193.185, 118.811 192.039 C 117.509 190.826, 115.262 190, 113.262 190 C 111.413 190, 108.613 190.666, 107.039 191.480 C 105.465 192.294, 103.237 194.155, 102.088 195.615 C 100.587 197.523, 100.001 199.708, 100.004 203.385 C 100.006 206.697, 100.697 209.631, 101.965 211.710 C 103.041 213.475, 105.827 215.891, 108.156 217.079 C 111.484 218.778, 113.497 219.125, 117.567 218.705 C 120.415 218.411, 124.647 217.200, 126.972 216.014 C 129.297 214.828, 133.246 211.977, 135.748 209.679 C 138.251 207.381, 145.506 199.650, 151.873 192.500 C 158.239 185.350, 165.709 177.036, 168.474 174.023 C 171.238 171.011, 181.988 159.908, 192.362 149.348 C 202.735 138.789, 212.475 129.632, 214.004 128.998 C 215.534 128.365, 218.071 127.993, 219.643 128.173 C 221.695 128.408, 222.588 129.118, 222.812 130.695 C 223.069 132.500, 222.424 133.078, 219.181 133.951 C 216.246 134.742, 214.922 135.774, 214.005 137.989 C 213.327 139.625, 213.036 141.651, 213.358 142.491 C 213.680 143.330, 215.044 144.518, 216.388 145.131 C 218.351 146.025, 219.585 145.876, 222.653 144.372 C 224.754 143.343, 227.492 140.971, 228.737 139.102 C 230.099 137.057, 231 134.185, 231 131.886 C 231 129.786, 230.273 126.544, 229.385 124.682 C 228.497 122.819, 226.515 120.554, 224.981 119.648 C 223.311 118.661, 220.009 118, 216.753 118 C 211.859 118, 210.621 118.488, 204.407 122.865 M 186.111 172.625 L 178.042 181.250 180.054 184.076 C 181.161 185.630, 184.414 188.900, 187.283 191.343 C 190.152 193.785, 194.750 197.086, 197.500 198.679 C 200.250 200.272, 208.575 203.979, 216 206.916 C 223.425 209.854, 231.326 213.512, 233.557 215.044 C 235.789 216.577, 239.251 219.642, 241.251 221.856 C 243.251 224.069, 245.552 227.167, 246.365 228.740 C 247.179 230.312, 248.779 234.502, 249.922 238.050 C 251.065 241.597, 252.424 249.450, 252.943 255.500 C 253.462 261.550, 254.364 268.120, 254.949 270.100 C 255.533 272.080, 256.893 274.498, 257.970 275.473 C 259.048 276.448, 262.533 277.859, 265.715 278.607 C 268.897 279.356, 276.450 279.981, 282.500 279.996 C 288.550 280.011, 295.750 280.625, 298.500 281.359 C 301.250 282.094, 305.351 283.641, 307.613 284.798 C 309.874 285.954, 313.741 289.142, 316.204 291.882 C 319.026 295.021, 321.296 298.832, 322.338 302.182 C 323.248 305.107, 324.685 311.516, 325.532 316.423 C 326.378 321.331, 327.751 326.780, 328.582 328.531 C 329.413 330.282, 331.399 333.051, 332.995 334.684 C 334.592 336.317, 337.768 338.213, 340.054 338.898 C 342.340 339.583, 348.149 340.551, 352.964 341.049 C 357.778 341.547, 362.569 342.245, 363.609 342.600 C 365.335 343.190, 365.326 343.121, 363.500 341.805 C 362.400 341.013, 359.475 339.676, 357 338.835 C 354.525 337.994, 350.700 336.726, 348.500 336.017 C 346.300 335.308, 343.222 333.830, 341.661 332.733 C 340.100 331.635, 337.508 328.923, 335.901 326.705 C 334.295 324.487, 332.302 320.388, 331.473 317.596 C 330.644 314.804, 329.531 308.686, 329 304 C 328.469 299.314, 327.327 293.096, 326.461 290.181 C 325.557 287.138, 323.382 283.215, 321.352 280.968 C 319.408 278.816, 316.415 276.356, 314.701 275.501 C 312.987 274.646, 307.741 273.273, 303.042 272.450 C 298.344 271.626, 290.984 270.296, 286.686 269.493 C 282.389 268.690, 277.406 267.337, 275.613 266.486 C 273.819 265.635, 270.655 263.339, 268.581 261.382 C 266.507 259.426, 263.992 255.952, 262.992 253.663 C 261.992 251.373, 260.665 245.900, 260.042 241.500 C 259.418 237.100, 258.446 230.800, 257.880 227.500 C 257.314 224.200, 255.893 219.563, 254.721 217.196 C 253.550 214.828, 250.486 210.923, 247.914 208.516 C 245.342 206.110, 239.471 202.250, 234.868 199.937 C 230.266 197.625, 224.240 194.290, 221.478 192.525 C 218.716 190.760, 213.766 186.805, 210.478 183.736 C 207.190 180.667, 202.475 174.982, 200 171.104 C 197.525 167.226, 195.203 164.041, 194.840 164.026 C 194.477 164.012, 190.549 167.881, 186.111 172.625" stroke="none" fill="%230d6efd" fill-rule="evenodd"/></svg>';var m8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="446" height="446" viewBox="0 0 446 446" version="1.1"><path d="" stroke="none" fill="%23ffc107" fill-rule="evenodd"/><path d="M 167.597 73.490 C 166.328 74.859, 163.924 78.572, 162.255 81.740 C 160.586 84.908, 158.084 90.926, 156.694 95.114 C 155.305 99.301, 153.261 106.951, 152.153 112.114 C 151.044 117.276, 149.544 126.225, 148.819 132 C 148.030 138.278, 147.515 152.553, 147.536 167.500 C 147.556 181.250, 148.148 198.800, 148.851 206.500 C 149.554 214.200, 150.791 225, 151.599 230.500 C 152.407 236, 153.963 244.325, 155.057 249 L 157.047 257.500 149.774 268.743 C 145.773 274.927, 140.761 282.828, 138.636 286.301 C 136.510 289.774, 132.685 294.910, 130.136 297.714 C 127.586 300.518, 124.517 303.304, 123.316 303.906 C 122.114 304.508, 119.556 305, 117.631 305 C 115.705 305, 113.020 304.578, 111.663 304.062 C 110.306 303.546, 108.067 301.907, 106.688 300.419 C 105.309 298.932, 103.577 295.641, 102.840 293.107 C 102.055 290.407, 101.512 283.740, 101.528 277 C 101.551 267.866, 102.031 263.971, 103.861 258.072 C 105.129 253.987, 109.019 244.987, 112.507 238.072 C 115.994 231.158, 120.611 221.225, 122.767 216 C 124.923 210.775, 127.270 203.401, 127.982 199.613 C 128.777 195.392, 129.061 189.391, 128.717 184.113 C 128.409 179.376, 127.179 172.525, 125.983 168.889 C 124.788 165.253, 122.041 159.941, 119.879 157.085 C 117.718 154.229, 116.243 151.415, 116.603 150.833 C 116.964 150.250, 119.177 148.925, 121.522 147.887 C 123.867 146.850, 126.072 145.256, 126.421 144.345 C 126.812 143.327, 126.179 141.750, 124.778 140.250 C 123.525 138.909, 118.605 135.202, 113.845 132.013 C 109.085 128.824, 102.566 125.233, 99.360 124.033 C 96.153 122.834, 91.066 121.210, 88.055 120.426 C 85.043 119.642, 79.308 119, 75.309 119 C 68.311 119, 68.014 119.098, 67.385 121.602 C 67.026 123.034, 67.012 127.225, 67.356 130.916 C 67.699 134.607, 68.860 140.187, 69.937 143.317 C 71.014 146.447, 73.570 152.195, 75.617 156.091 C 77.665 159.987, 82.317 166.353, 85.955 170.238 C 92.014 176.705, 92.758 177.200, 94.785 176.115 C 96.003 175.463, 97 174.331, 97 173.600 C 97 172.868, 97.933 171.084, 99.073 169.635 C 100.212 168.186, 101.985 167, 103.011 167 C 104.462 167, 105.031 168.023, 105.566 171.594 C 105.945 174.121, 106.038 179.183, 105.772 182.844 C 105.497 186.624, 104.273 191.850, 102.939 194.939 C 101.648 197.931, 98.084 203.781, 95.020 207.939 C 91.956 212.098, 87.157 219.100, 84.356 223.500 C 81.554 227.900, 77.341 235.325, 74.993 240 C 72.645 244.675, 69.629 251.407, 68.291 254.961 C 66.953 258.514, 64.717 266.164, 63.322 271.961 C 61.291 280.397, 60.789 284.995, 60.809 295 C 60.829 305.477, 61.252 308.923, 63.425 316.297 C 64.852 321.135, 67.315 327.663, 68.901 330.803 C 70.486 333.944, 73.880 339.303, 76.443 342.713 C 79.007 346.123, 83.443 350.779, 86.302 353.061 C 89.161 355.342, 94.083 358.516, 97.240 360.114 C 100.397 361.711, 105.797 363.683, 109.240 364.494 C 112.683 365.306, 119.325 365.966, 124 365.961 C 128.675 365.956, 134.287 365.538, 136.472 365.031 C 138.656 364.525, 140.583 364.249, 140.752 364.419 C 140.922 364.588, 141.491 367.376, 142.017 370.614 C 142.585 374.112, 143.665 377.007, 144.678 377.750 C 145.987 378.710, 157.895 379, 196.069 379 C 239.273 379, 245.919 378.802, 247.015 377.482 C 247.850 376.476, 248.078 374.310, 247.692 371.051 C 247.372 368.348, 246.205 364.363, 245.099 362.194 C 243.993 360.026, 241.763 357.137, 240.143 355.774 C 238.515 354.404, 237.507 352.797, 237.889 352.180 C 238.364 351.411, 241.986 352.264, 249.539 354.923 C 255.568 357.046, 265.225 359.816, 271 361.079 L 281.500 363.376 287.452 369.823 C 290.725 373.369, 294.873 376.885, 296.670 377.635 C 299.083 378.644, 305.510 379, 321.277 379 C 337.600 379, 343.051 378.683, 344.462 377.652 C 346.017 376.515, 346.221 375.370, 345.765 370.343 C 345.468 367.065, 344.307 362.384, 343.186 359.941 C 342.065 357.499, 339.427 353.857, 337.324 351.848 C 335.221 349.840, 331.708 347.253, 329.518 346.100 C 327.328 344.947, 324.062 343.727, 322.259 343.389 C 320.034 342.971, 317.532 341.161, 314.462 337.747 L 309.943 332.720 314.721 329.457 C 317.350 327.663, 321.134 324.627, 323.132 322.711 C 325.129 320.795, 328.578 316.814, 330.797 313.864 C 333.015 310.914, 336.393 305.350, 338.303 301.500 C 340.213 297.650, 342.964 291.174, 344.417 287.109 C 345.870 283.044, 349.504 269.878, 352.492 257.851 C 355.481 245.824, 358.643 233.850, 359.519 231.242 C 360.396 228.634, 363.337 221.695, 366.056 215.823 C 368.775 209.950, 372.143 200.950, 373.541 195.823 C 375.315 189.312, 376.263 182.721, 376.682 173.971 C 377.061 166.060, 376.846 158.937, 376.099 154.645 C 375.448 150.906, 374.038 145.519, 372.965 142.674 C 371.893 139.828, 369.201 135.113, 366.983 132.196 L 362.949 126.892 366.225 120.196 C 369.238 114.036, 369.497 112.740, 369.465 104 C 369.436 96.118, 369.046 93.769, 367.174 90.209 C 365.933 87.849, 363.185 84.237, 361.069 82.182 C 358.653 79.838, 354.790 77.590, 350.693 76.143 C 347.103 74.876, 343.162 73.988, 341.935 74.170 C 340.708 74.351, 339.211 75.287, 338.607 76.250 C 337.871 77.424, 337.838 78.447, 338.505 79.360 C 339.052 80.108, 340.348 81.922, 341.385 83.391 C 342.422 84.860, 343.088 86.246, 342.864 86.469 C 342.640 86.693, 340.331 86.176, 337.733 85.321 C 334.288 84.187, 331.265 83.953, 326.567 84.456 C 323.023 84.835, 319.609 85.766, 318.979 86.525 C 318.350 87.283, 317.986 88.713, 318.170 89.702 C 318.355 90.691, 319.998 92.246, 321.822 93.157 C 323.646 94.069, 326.007 95.601, 327.069 96.562 C 328.199 97.585, 328.991 99.594, 328.978 101.405 C 328.966 103.107, 328.130 106.319, 327.120 108.541 C 326.111 110.764, 323.783 113.846, 321.949 115.390 C 320.114 116.934, 317.462 118.640, 316.056 119.182 C 314.650 119.724, 310.125 120.980, 306 121.972 C 301.875 122.965, 295.039 124.336, 290.808 125.020 C 285.955 125.804, 281.229 127.341, 278.003 129.183 C 274.316 131.289, 271.789 133.806, 268.945 138.207 C 265.982 142.790, 265.001 145.330, 265.005 148.405 C 265.008 151.155, 265.747 153.409, 267.255 155.267 C 269.033 157.459, 271.060 158.354, 277 159.571 C 281.125 160.417, 286.975 162.244, 290 163.633 C 293.025 165.021, 297.300 166.756, 299.500 167.488 C 301.700 168.220, 306.751 169.348, 310.725 169.995 C 314.920 170.679, 319.016 172.012, 320.495 173.174 C 321.895 174.276, 323.706 176.465, 324.520 178.039 C 325.334 179.613, 326 183.535, 326 186.754 C 326 191.028, 325.310 193.992, 323.443 197.739 C 322.036 200.561, 319.132 204.455, 316.988 206.392 C 314.844 208.329, 311.382 210.772, 309.295 211.821 C 307.208 212.870, 303.106 214.292, 300.180 214.981 C 297.254 215.670, 293.145 215.959, 291.049 215.624 C 288.953 215.289, 283.059 213.400, 277.951 211.428 C 271.451 208.917, 266.238 207.640, 260.582 207.171 L 252.500 206.500 251.932 199.898 C 251.524 195.160, 250.595 192.055, 248.641 188.898 C 247.143 186.479, 244.474 182.547, 242.709 180.160 C 239.540 175.874, 239.502 175.686, 239.643 165.160 C 239.721 159.297, 240.569 150.225, 241.527 145 C 242.486 139.775, 245.009 130.104, 247.135 123.509 C 249.304 116.781, 250.995 109.539, 250.988 107.009 C 250.982 104.529, 250.369 100.250, 249.626 97.500 C 248.884 94.750, 247.559 90.806, 246.683 88.736 C 245.807 86.666, 244.315 84.674, 243.366 84.310 C 242.150 83.844, 240.734 84.700, 238.559 87.217 C 236.862 89.179, 233.594 94.545, 231.295 99.142 C 228.996 103.739, 225.476 111.744, 223.473 116.932 C 221.469 122.120, 218.102 133.145, 215.989 141.432 C 213.877 149.719, 211.572 160.173, 210.867 164.661 L 209.586 172.823 204.095 170.046 L 198.603 167.269 198.872 162.207 C 199.095 158.009, 198.800 156.963, 197.143 156.076 C 196.044 155.488, 194.472 155.265, 193.650 155.581 C 192.827 155.896, 191.879 156.873, 191.542 157.750 C 191.206 158.627, 190.442 164.105, 189.845 169.923 C 189.220 176.014, 189 188.346, 189.325 199 C 189.636 209.175, 190.590 221.775, 191.445 227 C 192.301 232.225, 193.239 237.531, 193.530 238.791 C 194.054 241.061, 194.030 241.067, 190.872 239.434 C 189.120 238.528, 185.512 235.753, 182.855 233.268 C 179.918 230.521, 177.622 227.329, 176.998 225.125 C 176.433 223.131, 175.252 216.550, 174.375 210.500 C 173.277 202.934, 172.802 192.788, 172.854 178 C 172.895 166.175, 173.339 155.150, 173.841 153.500 C 174.667 150.784, 174.829 150.689, 175.554 152.500 C 175.994 153.600, 177.405 156.188, 178.689 158.250 C 180.344 160.907, 181.731 162, 183.445 162 C 184.998 162, 186.096 161.273, 186.509 159.973 C 186.944 158.602, 186.150 156.432, 184.060 153.277 C 182.360 150.710, 180.075 145.611, 178.984 141.947 C 177.893 138.282, 177 133.533, 177 131.392 C 177 129.251, 177.740 124.349, 178.644 120.500 C 179.548 116.650, 180.486 108.194, 180.728 101.708 C 181.099 91.796, 180.840 88.832, 179.105 83.118 C 177.969 79.379, 176.098 75.123, 174.947 73.660 C 173.796 72.197, 172.191 71, 171.380 71 C 170.568 71, 168.866 72.120, 167.597 73.490 M 168.573 86.488 C 167.667 88.396, 166.291 91.757, 165.515 93.956 C 164.740 96.155, 163.420 100.777, 162.582 104.227 C 161.745 107.677, 160.390 114.325, 159.572 119 C 158.754 123.675, 157.543 132, 156.882 137.500 C 156.221 143, 155.683 158.750, 155.687 172.500 C 155.691 186.250, 156.219 202, 156.861 207.500 C 157.503 213, 158.728 221.775, 159.583 227 C 160.438 232.225, 162.457 241.789, 164.071 248.253 C 165.685 254.717, 167.943 262.817, 169.089 266.253 C 170.236 269.689, 173.573 277.473, 176.504 283.552 C 179.436 289.630, 184.487 298.180, 187.728 302.552 C 190.969 306.923, 196.736 313.311, 200.542 316.746 C 204.349 320.181, 209.918 324.193, 212.918 325.661 C 215.918 327.128, 220.643 328.548, 223.418 328.814 L 228.463 329.299 222.482 324.309 C 219.192 321.565, 213.620 316.234, 210.099 312.462 C 206.579 308.690, 201.072 302.062, 197.862 297.733 C 194.652 293.403, 189.578 284.973, 186.588 278.999 C 183.597 273.025, 179.272 262.369, 176.977 255.318 C 174.682 248.268, 171.727 237.301, 170.411 230.946 C 169.095 224.591, 167.340 212.955, 166.509 205.089 C 165.679 197.222, 165.006 184.422, 165.012 176.643 C 165.019 168.864, 165.915 154.850, 167.003 145.500 C 168.091 136.150, 169.903 124.450, 171.031 119.500 C 172.159 114.550, 173.348 107.229, 173.673 103.231 C 174.033 98.813, 173.765 93.606, 172.990 89.952 C 172.288 86.646, 171.378 83.734, 170.967 83.480 C 170.556 83.225, 169.479 84.579, 168.573 86.488 M 351.553 89.507 C 351.965 92.253, 353.021 95.048, 353.901 95.718 C 354.780 96.388, 356.063 96.951, 356.750 96.968 C 357.438 96.986, 358 96.303, 358 95.450 C 358 94.598, 357.371 92.684, 356.602 91.198 C 355.834 89.711, 354.215 87.599, 353.005 86.504 L 350.804 84.513 351.553 89.507 M 346.911 105.807 C 345.361 108.532, 345.412 108.707, 348.938 112.801 C 350.927 115.110, 353.089 117, 353.742 117 C 354.395 117, 355.395 116.130, 355.965 115.066 C 356.534 114.002, 357 111.789, 357 110.147 C 357 107.838, 356.239 106.693, 353.632 105.082 C 351.780 103.937, 349.867 103.003, 349.382 103.006 C 348.897 103.010, 347.785 104.270, 346.911 105.807 M 335.214 116.973 C 332.949 118.861, 332.945 118.915, 334.714 122.599 C 335.696 124.645, 337.264 126.793, 338.197 127.371 C 339.340 128.079, 340.811 128.102, 342.697 127.441 C 344.470 126.821, 345.620 125.620, 345.827 124.175 C 346.017 122.844, 345.056 120.451, 343.526 118.445 C 342.081 116.550, 340.134 115.015, 339.199 115.033 C 338.265 115.052, 336.471 115.924, 335.214 116.973 M 322.450 124.914 C 321.928 125.417, 318.575 126.787, 315 127.958 C 311.425 129.130, 303.426 130.963, 297.225 132.032 C 291.024 133.100, 284.724 134.613, 283.225 135.392 C 281.726 136.172, 279.540 137.865, 278.367 139.155 C 277.194 140.445, 275.506 142.940, 274.617 144.700 C 273.728 146.461, 273 148.566, 273 149.379 C 273 150.383, 274.846 151.217, 278.750 151.976 C 281.913 152.590, 288.325 154.626, 293 156.499 C 297.675 158.372, 303.659 160.435, 306.299 161.083 C 309.369 161.837, 315.851 162.082, 324.299 161.763 C 334.402 161.381, 338.145 161.591, 340.250 162.658 C 341.762 163.424, 343 163.721, 343 163.318 C 343 162.914, 341.380 160.925, 339.399 158.897 C 336.727 156.161, 335.967 154.680, 336.451 153.156 C 336.809 152.026, 337.900 150.849, 338.875 150.540 C 339.850 150.230, 341.876 148.695, 343.376 147.129 L 346.105 144.281 339.803 143.041 C 336.336 142.360, 332.777 141.415, 331.893 140.942 C 330.864 140.392, 330.053 138.107, 329.641 134.602 C 329.287 131.588, 328.559 127.970, 328.023 126.561 C 327.469 125.104, 326.263 124, 325.225 124 C 324.221 124, 322.972 124.411, 322.450 124.914 M 304.571 134.571 C 303.707 135.436, 303 136.365, 303 136.637 C 303 136.909, 303.466 138.002, 304.035 139.066 C 304.692 140.294, 306.127 141, 307.964 141 C 309.555 141, 311.564 140.293, 312.429 139.429 C 313.293 138.564, 314 137.304, 314 136.629 C 314 135.953, 313.460 134.860, 312.800 134.200 C 312.140 133.540, 310.372 133, 308.871 133 C 307.371 133, 305.436 133.707, 304.571 134.571 M 197.658 176.675 C 197.296 177.037, 197 183.351, 197 190.706 C 197 198.061, 197.465 208.449, 198.033 213.789 C 198.602 219.130, 199.974 228.176, 201.082 233.890 C 202.191 239.605, 204.469 248.605, 206.146 253.890 C 207.823 259.176, 211.029 266.971, 213.270 271.212 C 216.411 277.157, 218.027 279.162, 220.322 279.962 C 221.959 280.533, 224.619 281, 226.233 281 C 227.846 281, 229.013 280.663, 228.826 280.250 C 228.639 279.837, 227.078 276.800, 225.358 273.500 C 223.637 270.200, 221.314 264.531, 220.194 260.902 C 219.075 257.273, 217.374 250.073, 216.415 244.902 C 215.072 237.664, 214.651 229.723, 214.585 210.404 C 214.521 191.493, 214.182 184.925, 213.211 183.754 C 212.502 182.900, 209.352 181.182, 206.211 179.937 C 203.070 178.692, 200.009 177.300, 199.408 176.845 C 198.807 176.390, 198.020 176.313, 197.658 176.675 M 333.474 186.251 C 333.457 191.751, 332.862 195.951, 331.690 198.855 C 330.723 201.251, 330.197 204.045, 330.520 205.064 C 330.844 206.084, 332.772 208.234, 334.804 209.843 C 336.837 211.451, 340.242 213.495, 342.372 214.384 C 344.502 215.273, 347.229 216, 348.433 216 C 350.218 216, 350.832 215.124, 351.759 211.250 C 352.385 208.637, 353.187 204.137, 353.542 201.248 C 354.099 196.723, 353.832 195.389, 351.614 191.604 C 350.198 189.188, 347.620 186.017, 345.886 184.558 C 344.152 183.098, 341.011 181.026, 338.906 179.952 C 336.802 178.878, 334.724 178, 334.290 178.001 C 333.855 178.001, 333.488 181.713, 333.474 186.251 M 322.342 218.762 C 320.605 221.918, 316.676 227.875, 313.612 232 C 310.547 236.125, 308.031 240.477, 308.020 241.672 C 308.008 242.999, 309.622 245.233, 312.171 247.414 C 314.465 249.378, 318.756 251.888, 321.708 252.992 C 324.660 254.096, 329.497 255, 332.458 255 C 337.632 255, 337.867 254.883, 338.503 251.985 C 338.867 250.327, 340.926 243.531, 343.078 236.883 C 345.230 230.234, 346.741 224.391, 346.436 223.897 C 346.131 223.404, 345.121 222.996, 344.191 222.990 C 343.261 222.985, 340.250 221.930, 337.500 220.645 C 334.750 219.361, 331.085 217.116, 329.356 215.655 C 327.626 214.195, 326.051 213.005, 325.856 213.012 C 325.660 213.018, 324.079 215.606, 322.342 218.762 M 242.819 215.014 C 238.594 215.418, 233.869 216.055, 232.319 216.430 C 230.768 216.804, 227.748 217.570, 225.608 218.132 L 221.715 219.154 222.325 228.327 C 222.660 233.372, 223.823 241.550, 224.908 246.500 C 225.994 251.450, 227.753 257.997, 228.818 261.048 C 229.882 264.100, 231.728 268.507, 232.920 270.843 C 234.112 273.179, 236.755 276.939, 238.793 279.198 C 240.832 281.457, 243.948 283.912, 245.718 284.653 C 247.488 285.394, 250.841 286, 253.170 286 C 256.549 286, 258.050 285.375, 260.595 282.908 C 263.322 280.265, 264.092 279.979, 265.893 280.943 C 267.092 281.584, 268 283.055, 268 284.355 C 268 285.612, 266.328 288.593, 264.284 290.981 C 262.241 293.369, 257.210 297.515, 253.105 300.194 C 249 302.874, 244.987 306.001, 244.187 307.143 C 243.295 308.416, 242.700 311.791, 242.650 315.860 C 242.604 319.512, 242.905 324.075, 243.318 326 C 244.001 329.187, 244.757 329.812, 251.784 332.994 C 256.028 334.916, 263.550 339.162, 268.500 342.429 C 274.157 346.163, 281.653 352.573, 288.681 359.685 L 299.862 371 310.900 371 C 320.980 371, 321.884 370.848, 321.320 369.250 C 320.980 368.288, 319.757 366.424, 318.601 365.108 C 317.445 363.793, 313.575 361.386, 310 359.760 C 305.153 357.555, 301.084 354.452, 294 347.559 C 288.775 342.475, 280.337 335.532, 275.250 332.132 C 269.962 328.597, 266 325.258, 266 324.335 C 266 323.448, 269.344 319.222, 273.431 314.944 C 278.968 309.149, 281.871 305.041, 284.818 298.833 C 286.993 294.250, 289.289 287.726, 289.920 284.336 C 290.551 280.947, 291.944 272.198, 293.015 264.895 C 294.087 257.593, 295.900 248.806, 297.044 245.369 C 298.188 241.931, 300.878 236.505, 303.022 233.310 C 305.166 230.114, 308.258 225.667, 309.893 223.427 L 312.865 219.353 307.683 221.144 C 304.495 222.245, 299.523 222.947, 294.765 222.967 C 288.566 222.994, 284.992 222.320, 276.765 219.577 C 271.119 217.695, 262.980 215.670, 258.678 215.077 C 254.375 214.485, 250.775 214.063, 250.678 214.140 C 250.580 214.217, 247.043 214.610, 242.819 215.014 M 251.164 224.325 C 249.928 225.641, 248.460 228.371, 247.902 230.393 C 247.344 232.415, 247.180 234.992, 247.538 236.119 C 247.981 237.517, 247.468 238.937, 245.927 240.577 C 244.326 242.282, 243.533 244.586, 243.211 248.470 C 242.781 253.659, 242.943 254.143, 246.219 257.419 C 248.124 259.324, 250.948 261.200, 252.496 261.588 C 254.043 261.977, 256.027 261.845, 256.905 261.295 C 257.782 260.745, 258.647 259.306, 258.826 258.097 C 259.088 256.334, 258.349 255.583, 255.098 254.306 C 252.868 253.431, 250.784 251.895, 250.467 250.895 C 250.149 249.894, 250.381 248.156, 250.983 247.032 C 251.985 245.160, 252.306 245.107, 254.804 246.398 C 256.317 247.181, 258.330 249.620, 259.327 251.880 C 260.315 254.119, 262.467 256.908, 264.109 258.077 C 265.750 259.246, 268.779 260.429, 270.838 260.705 C 273.483 261.060, 274.962 260.750, 275.874 259.652 C 276.584 258.796, 276.895 257.243, 276.564 256.201 C 276.218 255.113, 274.336 253.818, 272.146 253.162 C 269.663 252.418, 267.918 251.115, 267.152 249.434 C 266.504 248.013, 266.244 246.414, 266.573 245.881 C 266.903 245.348, 266.448 243.807, 265.563 242.456 C 264.571 240.942, 263.004 240, 261.477 240 C 260.115 240, 258.100 239.100, 257 238 C 255.900 236.900, 255 235.057, 255 233.904 C 255 232.752, 255.778 230.491, 256.730 228.880 C 258.046 226.652, 258.200 225.539, 257.373 224.226 C 256.775 223.277, 255.639 222.372, 254.849 222.216 C 254.058 222.060, 252.400 223.009, 251.164 224.325 M 98.885 233.380 C 96.897 234.090, 93.944 235.616, 92.323 236.770 C 90.702 237.924, 87.560 240.839, 85.340 243.247 C 83.120 245.656, 80.105 249.670, 78.641 252.169 C 77.177 254.667, 74.927 259.814, 73.641 263.606 C 72.355 267.398, 70.506 274.526, 69.533 279.446 C 68.336 285.502, 67.967 290.374, 68.392 294.526 C 68.738 297.900, 69.698 303.324, 70.525 306.580 C 71.353 309.836, 73.570 315.655, 75.452 319.511 C 77.550 323.812, 81.067 328.734, 84.545 332.240 C 87.684 335.404, 92.667 339.116, 95.701 340.552 C 98.717 341.979, 104.406 343.835, 108.343 344.677 C 113.646 345.810, 118.738 346.059, 128 345.638 C 136.576 345.247, 143.577 344.271, 150.302 342.528 C 155.693 341.131, 161.768 339.141, 163.802 338.106 C 165.836 337.071, 170.794 335.246, 174.821 334.049 C 180.551 332.346, 182.453 332.131, 183.571 333.059 C 184.357 333.711, 185 335.035, 185 336 C 185 336.965, 184.438 338.206, 183.750 338.757 C 183.063 339.308, 179.800 340.524, 176.500 341.459 C 173.200 342.394, 167.638 344.748, 164.139 346.690 C 160.640 348.633, 156.090 351.910, 154.026 353.974 C 151.653 356.347, 150.017 359.093, 149.576 361.447 C 149.192 363.493, 149.166 366.480, 149.518 368.084 L 150.159 371 186.153 371 C 219.889 371, 222.126 370.890, 221.823 369.250 C 221.645 368.288, 219.925 366.735, 218 365.801 C 216.075 364.866, 211.575 363.632, 208 363.058 C 204.425 362.485, 198.737 362.012, 195.361 362.008 C 190.775 362.002, 188.624 361.510, 186.861 360.063 C 184.957 358.500, 184.711 357.781, 185.589 356.344 C 186.188 355.364, 190.495 353.081, 195.160 351.271 C 200.078 349.362, 204.988 346.663, 206.846 344.846 L 210.051 341.713 203.275 337.200 C 199.549 334.718, 193.326 329.482, 189.448 325.564 C 185.569 321.647, 180.683 315.669, 178.592 312.279 C 174.792 306.124, 174.782 306.117, 169.144 305.486 C 166.040 305.139, 162.907 304.665, 162.183 304.433 C 161.402 304.183, 160.995 302.890, 161.183 301.256 C 161.468 298.779, 161.938 298.468, 165.833 298.188 C 168.725 297.981, 169.992 297.481, 169.642 296.688 C 169.354 296.035, 167.795 292.125, 166.177 288 C 164.560 283.875, 162.652 278.025, 161.936 275 C 161.221 271.975, 160.354 269.160, 160.011 268.744 C 159.668 268.328, 156.488 272.822, 152.944 278.731 C 149.400 284.640, 143.028 293.809, 138.784 299.107 C 133.758 305.381, 129.763 309.359, 127.324 310.516 C 125.265 311.494, 121.758 312.498, 119.530 312.750 C 117.302 313.001, 113.518 312.678, 111.122 312.033 C 108.206 311.248, 105.222 309.311, 102.104 306.180 C 98.879 302.941, 96.894 299.806, 95.660 296 C 94.678 292.975, 93.617 287.505, 93.301 283.845 C 92.985 280.185, 93.302 273.435, 94.007 268.845 C 94.712 264.255, 96.600 256.495, 98.203 251.601 C 99.806 246.707, 102.216 240.534, 103.559 237.884 C 104.901 235.235, 106 232.827, 106 232.533 C 106 232.240, 105.213 232.020, 104.250 232.044 C 103.287 232.068, 100.873 232.669, 98.885 233.380 M 303.759 251.668 C 303.506 252.126, 302.778 255.200, 302.143 258.500 C 301.507 261.800, 300.082 269.900, 298.976 276.500 C 297.870 283.100, 296.707 289.674, 296.393 291.109 C 295.967 293.051, 296.291 293.904, 297.660 294.448 C 298.672 294.850, 302.908 295.423, 307.073 295.720 C 312.893 296.136, 315.449 295.881, 318.112 294.617 C 320.018 293.713, 323.261 291.585, 325.318 289.890 C 327.375 288.194, 329.921 285.115, 330.975 283.049 C 332.030 280.982, 333.519 275.664, 334.284 271.231 L 335.676 263.170 328.888 262.489 C 324.611 262.059, 319.769 260.708, 315.800 258.837 C 312.335 257.203, 308.312 254.735, 306.860 253.351 C 305.408 251.968, 304.012 251.210, 303.759 251.668 M 144.989 299.250 C 143.805 301.192, 143.006 304.280, 143.004 306.921 C 143.001 309.642, 142.358 312.052, 141.331 313.187 C 140.372 314.246, 139.469 317.356, 139.209 320.493 C 138.778 325.685, 138.934 326.134, 142.341 329.541 C 145.389 332.589, 146.491 333.078, 149.713 332.813 C 152.966 332.544, 153.543 332.128, 153.806 329.859 C 154.060 327.664, 153.469 326.904, 150.306 325.359 C 148.213 324.337, 146.345 322.665, 146.156 321.644 C 145.967 320.623, 146.280 319.320, 146.851 318.749 C 147.568 318.032, 148.832 318.102, 150.944 318.977 C 152.625 319.673, 154.016 320.976, 154.035 321.871 C 154.055 322.767, 154.648 324.540, 155.353 325.810 C 156.058 327.081, 157.955 328.990, 159.567 330.054 C 161.180 331.117, 164.139 331.990, 166.143 331.993 C 168.538 331.998, 169.993 331.461, 170.389 330.428 C 170.721 329.563, 170.529 327.988, 169.961 326.928 C 169.394 325.867, 168.131 325, 167.156 325 C 166.180 325, 164.548 324.390, 163.527 323.644 C 162.448 322.854, 161.428 320.488, 161.086 317.982 C 160.541 313.976, 160.222 313.599, 156.500 312.557 C 153.744 311.785, 152.091 310.584, 151.184 308.694 C 150.019 306.266, 150.116 305.548, 152.033 302.447 C 153.775 299.627, 153.960 298.656, 152.977 297.472 C 152.305 296.662, 150.679 296, 149.363 296 C 147.737 296, 146.336 297.041, 144.989 299.250" stroke="none" fill="%23ffc107" fill-rule="evenodd"/></svg>';var sa='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="445" height="445" viewBox="0 0 445 445" version="1.1"><path d="" stroke="none" fill="%230d6efd" fill-rule="evenodd"/><path d="M 303.451 44.915 C 300.674 46.508, 297.806 48.529, 297.078 49.406 C 296.351 50.282, 294.348 51.003, 292.628 51.006 C 290.907 51.009, 287.731 51.502, 285.569 52.103 C 282.991 52.818, 279.892 55, 276.569 58.439 C 273.781 61.324, 270.724 65.218, 269.776 67.092 C 268.828 68.966, 267.157 72.638, 266.062 75.250 C 264.801 78.259, 263.451 80, 262.380 80 C 261.450 80, 259.167 81.161, 257.307 82.580 C 255.446 83.999, 252.888 86.811, 251.622 88.830 C 250.356 90.848, 249.015 93.735, 248.642 95.244 C 248.168 97.165, 246.849 98.454, 244.246 99.542 C 242.201 100.396, 239.465 102.086, 238.166 103.298 C 236.868 104.509, 234.987 107.096, 233.986 109.047 C 232.986 110.997, 231.854 114.259, 231.472 116.295 C 230.927 119.204, 229.965 120.454, 226.981 122.131 C 224.593 123.473, 222.618 125.607, 221.659 127.882 C 220.820 129.872, 219.878 133.083, 219.565 135.018 C 219.252 136.953, 219.404 141.780, 219.902 145.746 L 220.807 152.957 216.904 156.861 C 214.757 159.008, 213 161.738, 213 162.928 C 213 164.881, 212.636 165.025, 209.250 164.413 C 207.188 164.041, 201.767 162.666, 197.204 161.359 C 192.642 160.052, 185.710 157.402, 181.801 155.470 C 177.892 153.538, 171.881 149.950, 168.443 147.497 C 165.005 145.043, 159.864 140.440, 157.019 137.268 C 154.073 133.984, 149.955 127.624, 147.455 122.500 C 145.040 117.550, 142.060 109.450, 140.833 104.500 C 138.887 96.648, 138.617 93.058, 138.719 76.348 C 138.834 57.582, 138.790 57.151, 136.536 55.034 C 135.271 53.845, 132.857 52.834, 131.172 52.786 C 129.487 52.738, 126.993 53.430, 125.630 54.323 C 124.267 55.216, 122.862 56.859, 122.508 57.973 C 122.052 59.412, 121 60, 118.883 60 C 117.243 60, 114.596 60.675, 113.002 61.499 C 111.408 62.323, 108.998 64.461, 107.648 66.249 C 106.297 68.037, 104.454 71.975, 103.551 75 C 102.392 78.881, 101.963 83.738, 102.092 91.500 L 102.276 102.500 98.303 106.619 C 95.143 109.895, 94.056 112.024, 92.997 117.013 C 91.837 122.482, 91.884 124.519, 93.368 132.894 C 94.304 138.177, 95.097 143.175, 95.130 144 C 95.162 144.825, 94.487 148.200, 93.630 151.500 C 92.773 154.800, 92.065 160.200, 92.057 163.500 C 92.047 167.312, 92.918 171.983, 94.445 176.308 C 95.766 180.052, 98.716 185.591, 100.999 188.615 C 103.283 191.640, 108.297 196.676, 112.142 199.807 C 118.385 204.892, 119.073 205.798, 118.583 208.287 C 118.282 209.820, 118.642 212.745, 119.383 214.787 C 120.124 216.829, 121.038 219.219, 121.414 220.098 C 121.951 221.355, 120.804 222.168, 116.043 223.904 C 111.775 225.460, 108.293 226.022, 104.244 225.806 C 98.915 225.522, 98.477 225.665, 98.176 227.786 C 97.997 229.043, 99.029 232.080, 100.468 234.536 C 101.907 236.991, 102.826 239, 102.510 239 C 102.194 239, 100.410 238.363, 98.546 237.584 C 96.681 236.804, 94.480 235.117, 93.654 233.834 C 92.829 232.550, 91.688 228.931, 91.118 225.792 C 90.549 222.652, 89.206 218.377, 88.133 216.292 C 87.061 214.206, 84.904 211.313, 83.342 209.862 C 81.779 208.412, 79.466 206.912, 78.202 206.530 C 76.865 206.125, 75.297 206.339, 74.452 207.040 C 73.546 207.792, 73 210.078, 73 213.122 C 73 215.805, 72.567 218, 72.039 218 C 71.510 218, 70.559 216.087, 69.925 213.750 C 69.001 210.342, 69.077 208.087, 70.313 202.365 C 71.160 198.441, 73.233 192.366, 74.919 188.865 C 76.605 185.364, 79.110 180.670, 80.486 178.433 C 82.646 174.920, 82.805 174.115, 81.649 172.535 C 80.712 171.253, 79.591 170.889, 77.906 171.320 C 76.583 171.659, 72.485 174.666, 68.799 178.003 C 64.953 181.485, 60.208 187.145, 57.663 191.285 C 55.224 195.253, 52.389 200.975, 51.364 204 C 49.939 208.204, 49.523 212.211, 49.599 221 C 49.671 229.237, 50.201 233.918, 51.468 237.500 C 52.441 240.250, 54.646 245.411, 56.368 248.968 C 58.091 252.525, 62.200 258.338, 65.500 261.886 C 68.800 265.433, 74.168 270.067, 77.428 272.183 C 80.688 274.298, 86.248 276.923, 89.783 278.015 C 93.318 279.107, 99.041 280, 102.500 280 C 105.974 280, 111.701 279.101, 115.295 277.991 C 118.872 276.886, 124.550 274.145, 127.910 271.901 C 131.271 269.657, 136.379 265.103, 139.260 261.781 C 142.142 258.459, 146.303 253.747, 148.506 251.308 C 151.740 247.729, 153.349 246.763, 156.863 246.292 L 161.214 245.708 160.823 258.104 C 160.507 268.144, 160.018 271.412, 158.250 275.302 C 157.049 277.943, 153.239 283.049, 149.783 286.649 L 143.500 293.194 143.402 308.397 C 143.348 316.758, 143.016 326.277, 142.665 329.550 C 142.314 332.822, 142.441 337.267, 142.948 339.428 C 143.650 342.421, 145.874 345.360, 152.302 351.787 C 158.985 358.471, 161.154 360.086, 162.759 359.577 C 163.873 359.223, 165.052 357.936, 165.378 356.717 C 165.705 355.498, 165.973 351.350, 165.973 347.500 C 165.974 343.172, 165.183 338.019, 163.901 334 C 162.761 330.425, 161.754 324.575, 161.664 321 C 161.574 317.425, 162.146 312.275, 162.934 309.555 C 163.902 306.219, 165.876 303.047, 169.001 299.805 C 171.548 297.162, 174.278 295.017, 175.066 295.038 C 175.855 295.059, 177.839 296.971, 179.476 299.288 C 182.083 302.978, 182.499 304.531, 182.832 311.827 C 183.158 318.980, 182.828 321.205, 180.494 327.605 C 178.033 334.352, 177.887 335.493, 178.941 339.679 C 179.581 342.222, 180.812 345.697, 181.677 347.401 C 182.542 349.105, 184.768 352.376, 186.625 354.668 C 189.664 358.421, 190 359.468, 190.002 365.168 C 190.003 369.192, 190.640 372.776, 191.752 375 C 192.713 376.925, 195.681 379.957, 198.346 381.739 C 201.011 383.520, 204.968 385.509, 207.139 386.160 C 210.419 387.142, 211.337 387.092, 212.568 385.861 C 213.383 385.046, 214.325 382.047, 214.663 379.197 C 215.001 376.347, 214.715 370.524, 214.028 366.257 C 213.341 361.991, 212.077 356.745, 211.221 354.600 C 210.364 352.455, 208.206 348.535, 206.426 345.890 C 204.646 343.245, 202.885 339.279, 202.513 337.077 C 202.074 334.478, 202.404 331.121, 203.455 327.508 C 204.344 324.448, 205.945 320.493, 207.011 318.722 C 208.076 316.950, 209.910 313.732, 211.086 311.571 C 212.676 308.649, 213.252 305.752, 213.335 300.257 L 213.448 292.871 220.974 293.557 C 225.113 293.935, 228.555 294.301, 228.622 294.372 C 228.689 294.442, 228.318 297.875, 227.797 302 C 227.276 306.125, 227.046 311.525, 227.285 314 C 227.524 316.475, 229.189 321.650, 230.984 325.500 C 232.779 329.350, 235.092 335.424, 236.124 338.997 C 237.343 343.220, 238 348.668, 238 354.565 C 238 359.696, 237.356 365.780, 236.518 368.568 C 235.703 371.281, 233.228 376.148, 231.018 379.385 C 228.127 383.620, 227 386.299, 227 388.939 C 227 391.272, 228.059 394.278, 229.907 397.192 C 231.506 399.713, 234.859 403.183, 237.360 404.903 C 239.860 406.624, 243.240 408.298, 244.871 408.624 C 247.411 409.132, 248.043 408.807, 249.278 406.359 C 250.071 404.786, 251.061 402.150, 251.479 400.500 C 251.897 398.850, 252.589 394.800, 253.016 391.500 C 253.444 388.200, 254.577 383.475, 255.533 381 C 256.693 378, 257.366 372.999, 257.551 366 C 257.704 360.225, 258.520 351.709, 259.364 347.074 C 260.720 339.630, 260.730 337.767, 259.450 331.074 C 258.653 326.909, 258.003 320.575, 258.006 317 C 258.009 313.425, 258.471 308.845, 259.033 306.823 C 259.594 304.800, 261.504 300.975, 263.277 298.323 C 265.389 295.163, 267.340 293.381, 268.937 293.156 C 270.827 292.889, 272.512 294.045, 276.449 298.309 C 280.695 302.908, 282.503 304.078, 287.512 305.471 C 290.805 306.387, 294.036 307.307, 294.692 307.515 C 295.347 307.723, 296.646 309.056, 297.578 310.479 C 298.510 311.901, 299.273 314.836, 299.273 317 C 299.273 319.164, 298.540 322.053, 297.644 323.421 C 296.573 325.055, 294.728 326.113, 292.258 326.509 C 290.191 326.840, 287.094 327.727, 285.376 328.479 C 283.314 329.382, 281.515 331.371, 280.082 334.330 C 278.315 337.980, 277.967 340.249, 278.206 346.551 C 278.436 352.598, 278.880 354.528, 280.237 355.381 C 281.632 356.258, 284.289 355.339, 293.737 350.709 C 300.207 347.539, 306.581 344.395, 307.903 343.723 C 309.224 343.050, 311.195 341.303, 312.281 339.839 C 313.687 337.946, 314.494 334.614, 315.078 328.287 C 315.690 321.647, 316.671 317.762, 318.948 312.948 C 320.626 309.401, 321.999 305.443, 321.999 304.151 C 322 302.859, 321.278 300.282, 320.397 298.423 C 319.457 296.444, 316.868 293.863, 314.147 292.193 C 311.591 290.626, 307.293 288.503, 304.595 287.476 C 301.897 286.450, 298.435 284.554, 296.902 283.264 L 294.115 280.919 296.563 277.312 C 297.909 275.328, 299.908 270.799, 301.005 267.247 C 302.463 262.530, 303.004 257.921, 303.015 250.145 C 303.023 244.290, 303.696 236.673, 304.511 233.219 C 305.325 229.764, 306.863 225.264, 307.928 223.219 C 308.993 221.173, 311.038 218.262, 312.473 216.750 C 313.907 215.237, 315.470 214, 315.946 214 C 316.422 214, 318.181 216.068, 319.855 218.595 C 321.530 221.123, 323.423 225.735, 324.063 228.845 C 324.702 231.955, 325.679 236.021, 326.234 237.881 C 326.788 239.740, 328.844 243.035, 330.802 245.203 C 332.761 247.371, 336.117 250.039, 338.259 251.132 L 342.155 253.119 345.827 250.324 C 347.847 248.787, 351.217 245.981, 353.315 244.090 C 355.413 242.198, 357.820 239.314, 358.665 237.681 C 359.514 236.040, 360.200 232.187, 360.200 229.063 C 360.200 225.955, 359.480 220.988, 358.600 218.025 C 357.659 214.855, 357 208.986, 357 203.769 C 357 198.193, 357.513 193.898, 358.382 192.200 C 359.142 190.715, 360.078 187.606, 360.463 185.292 C 360.932 182.467, 361.772 180.890, 363.019 180.494 C 364.041 180.170, 366.255 178.335, 367.938 176.417 C 369.622 174.500, 371 171.911, 371 170.665 C 371 169.419, 370.460 167.860, 369.800 167.200 C 369.140 166.540, 366.593 166, 364.141 166 C 359.965 166, 359.294 165.595, 353.556 159.596 C 349.056 154.893, 346.321 152.894, 343.254 152.068 C 339.669 151.103, 338.938 150.436, 338.087 147.354 C 337.542 145.379, 336.330 142.917, 335.393 141.882 C 334.456 140.847, 333.121 140, 332.426 140 C 331.730 140, 328.699 142.250, 325.690 145 C 321.590 148.748, 319.443 150, 317.121 150 C 315.416 150, 311.654 150.941, 308.761 152.090 C 305.867 153.240, 300.783 154.278, 297.461 154.397 C 293.127 154.553, 289.548 155.491, 284.782 157.721 C 281.129 159.431, 276.146 162.668, 273.709 164.915 C 271.271 167.162, 268.539 169, 267.638 169 C 266.737 169, 266 168.308, 266 167.463 C 266 166.617, 268.137 163.841, 270.750 161.292 C 273.486 158.624, 278.563 155.240, 282.725 153.311 C 286.698 151.469, 290.411 149.101, 290.975 148.047 C 291.566 146.942, 292.006 138.384, 292.015 127.816 C 292.025 115.066, 292.486 107.564, 293.531 103.129 C 294.357 99.625, 296.224 93.775, 297.680 90.129 C 299.136 86.483, 302.166 80.418, 304.414 76.651 C 306.661 72.884, 310.633 67.259, 313.240 64.151 C 315.846 61.043, 318.720 57.085, 319.625 55.356 C 320.679 53.340, 321.027 51.245, 320.594 49.519 C 320.223 48.039, 318.832 45.742, 317.505 44.414 C 315.923 42.832, 313.955 42.003, 311.795 42.009 C 309.983 42.015, 306.228 43.322, 303.451 44.915 M 128.075 62.735 C 127.389 64.240, 126.431 69.302, 125.946 73.985 C 125.461 78.668, 125.303 86.550, 125.596 91.500 C 125.888 96.450, 126.822 103.537, 127.671 107.249 C 128.520 110.961, 128.944 114.703, 128.613 115.566 C 128.221 116.589, 127.053 117.024, 125.256 116.817 C 122.860 116.541, 122.338 115.848, 121.260 111.500 C 120.578 108.750, 119.505 102.675, 118.877 98 C 118.215 93.079, 117.984 84.762, 118.330 78.250 C 118.658 72.063, 118.593 67, 118.186 67 C 117.778 67, 116.482 67.674, 115.306 68.498 C 114.129 69.322, 112.342 72.135, 111.333 74.748 C 110.015 78.166, 109.520 82.028, 109.571 88.500 C 109.611 93.450, 110.419 100.875, 111.369 105 C 112.318 109.125, 114.266 115.875, 115.698 120 C 117.130 124.125, 119.633 130.200, 121.260 133.500 C 122.888 136.800, 126.603 143.100, 129.516 147.500 C 132.429 151.900, 135.946 156.559, 137.331 157.853 L 139.849 160.207 140.887 156.447 C 141.458 154.379, 141.633 152.195, 141.276 151.594 C 140.919 150.992, 138.873 148.160, 136.730 145.299 C 134.588 142.439, 132.988 139.289, 133.176 138.299 C 133.379 137.228, 134.559 136.378, 136.092 136.200 C 138.147 135.960, 139.205 136.711, 141.326 139.916 C 142.787 142.125, 146.575 146.565, 149.742 149.783 C 152.909 153.001, 158.200 157.454, 161.500 159.679 C 164.800 161.903, 169.750 164.860, 172.500 166.249 C 175.250 167.639, 180.875 169.906, 185 171.288 C 189.125 172.670, 195.021 174.562, 198.103 175.491 C 201.184 176.421, 205.909 178.841, 208.603 180.869 C 211.296 182.897, 215.150 187.019, 217.167 190.028 C 220.298 194.699, 221.380 195.573, 224.565 196 C 226.617 196.275, 228.751 197.226, 229.307 198.114 C 229.863 199.002, 230.036 200.464, 229.691 201.364 C 229.260 202.485, 227.856 203, 225.231 203 C 223.124 203, 220.860 203.540, 220.200 204.200 C 219.540 204.860, 219 206.582, 219 208.026 C 219 209.477, 220.035 211.624, 221.314 212.826 C 222.784 214.206, 224.911 215, 227.140 215 C 229.512 215, 231.312 214.270, 232.687 212.750 C 233.807 211.513, 235.235 208.970, 235.861 207.101 C 236.488 205.231, 237 201.607, 237 199.047 C 237 196.044, 236.081 192.549, 234.410 189.195 C 232.985 186.336, 230.173 182.631, 228.160 180.963 C 226.147 179.294, 222.236 176.815, 219.469 175.454 C 216.703 174.093, 210.403 172.036, 205.469 170.883 C 200.536 169.730, 194.025 168.094, 191 167.248 C 187.975 166.402, 181.557 163.667, 176.739 161.171 C 171.194 158.300, 165.254 154.124, 160.560 149.799 C 156.481 146.040, 151.037 140.163, 148.463 136.739 C 145.889 133.315, 142.479 127.930, 140.885 124.772 C 139.291 121.614, 137.346 117.111, 136.563 114.765 C 135.779 112.419, 134.338 107.575, 133.360 104 C 131.956 98.870, 131.574 93.547, 131.550 78.750 C 131.529 65.806, 131.179 60, 130.420 60 C 129.816 60, 128.760 61.231, 128.075 62.735 M 101.323 114.750 C 100.112 117.635, 99.878 120.576, 100.309 127.500 C 100.617 132.450, 101.739 138.985, 102.803 142.022 C 103.866 145.060, 105.974 150.010, 107.487 153.022 C 109.001 156.035, 112.161 161.200, 114.510 164.500 C 116.860 167.800, 122.093 173.682, 126.141 177.572 C 130.188 181.462, 136.200 186.462, 139.500 188.684 C 142.800 190.905, 147.848 193.910, 150.717 195.362 C 153.586 196.813, 156.173 198, 156.467 198 C 156.760 198, 157 196.935, 157 195.633 C 157 193.991, 155.811 192.479, 153.121 190.699 C 150.987 189.287, 147.672 186.189, 145.753 183.816 C 143.834 181.442, 141.818 178.600, 141.273 177.500 C 140.728 176.400, 140.021 174.150, 139.703 172.500 C 139.345 170.647, 136.693 167.016, 132.764 163 C 129.266 159.425, 124.467 153.644, 122.099 150.154 C 119.732 146.664, 115.629 139.287, 112.980 133.760 C 110.332 128.233, 107.346 120.851, 106.345 117.356 C 105.344 113.860, 104.159 111, 103.711 111 C 103.264 111, 102.189 112.688, 101.323 114.750 M 126.930 124.584 C 125.981 125.728, 125.906 126.630, 126.659 127.834 C 127.232 128.750, 128.855 129.639, 130.265 129.808 C 132.149 130.035, 133.005 129.558, 133.497 128.010 C 133.868 126.841, 133.629 125.258, 132.960 124.452 C 132.297 123.653, 130.965 123, 130 123 C 129.035 123, 127.653 123.713, 126.930 124.584 M 327.203 153.104 C 325.533 154.811, 322.780 158.812, 321.084 161.994 C 319.388 165.176, 318 168.899, 318 170.268 C 318 171.636, 318.675 173.315, 319.500 174 C 320.325 174.685, 321 176.035, 321 177 C 321 177.965, 320.327 179.313, 319.505 179.996 C 318.301 180.995, 317.534 180.925, 315.570 179.638 C 313.133 178.041, 313.126 178.047, 311.065 183.557 C 309.929 186.592, 309 190.577, 309 192.413 C 309 194.248, 309.293 197.216, 309.652 199.009 C 310.099 201.245, 311.254 202.774, 313.331 203.884 C 314.997 204.773, 318.344 207.282, 320.769 209.460 C 323.195 211.638, 326.211 215.463, 327.472 217.960 C 328.733 220.457, 330.525 225.927, 331.453 230.116 C 332.875 236.533, 333.747 238.324, 336.991 241.491 L 340.840 245.250 343.803 243.140 C 345.433 241.980, 348.169 239.433, 349.883 237.480 C 352.431 234.578, 353 233.068, 353 229.209 C 353 226.612, 352.514 222.915, 351.919 220.993 C 351.325 219.072, 350.537 213.900, 350.169 209.500 L 349.500 201.500 345.500 201.500 L 341.500 201.500 341.500 193.769 C 341.500 186.389, 341.354 185.892, 338.265 182.804 C 335.727 180.265, 334.769 179.831, 333.815 180.785 C 333.147 181.453, 331.845 182, 330.922 182 C 330 182, 328.681 181.320, 327.991 180.489 C 326.965 179.253, 327.207 177.931, 329.319 173.224 C 330.739 170.059, 332.203 165.585, 332.571 163.281 C 332.939 160.977, 332.934 157.046, 332.559 154.546 C 332.184 152.046, 331.508 150, 331.057 150 C 330.606 150, 328.872 151.397, 327.203 153.104 M 99.169 163 C 99.452 171.114, 99.923 173.336, 102.403 178.229 C 104.177 181.731, 108.133 186.700, 112.576 191.008 C 118.115 196.379, 121.908 199.024, 128.504 202.115 C 133.266 204.346, 137.404 205.929, 137.701 205.632 C 137.998 205.335, 137.934 203.044, 137.558 200.541 C 136.932 196.361, 136.383 195.655, 130.822 191.879 C 127.492 189.618, 122.091 185.091, 118.819 181.819 C 115.548 178.548, 110.425 172.119, 107.436 167.532 C 104.446 162.946, 101.986 158.812, 101.968 158.347 C 101.951 157.881, 101.239 156.600, 100.388 155.500 C 98.963 153.661, 98.865 154.263, 99.169 163 M 153.559 163.774 C 153.252 164.082, 153 165.401, 153 166.707 C 153 168.012, 153.887 170.818, 154.971 172.943 C 156.055 175.068, 158.643 178.212, 160.721 179.929 C 162.799 181.647, 166.477 184.012, 168.893 185.185 C 171.310 186.358, 178.261 188.583, 184.342 190.130 C 190.422 191.677, 197.895 194.194, 200.948 195.722 C 205.450 197.975, 206.500 198.970, 206.500 200.986 C 206.500 202.559, 205.857 203.596, 204.750 203.810 C 203.787 203.995, 200.637 203.012, 197.750 201.626 C 194.862 200.239, 188.115 197.956, 182.754 196.552 C 177.394 195.148, 172.782 194, 172.504 194 C 172.227 194, 172 195.040, 172 196.311 C 172 197.583, 172.885 199.573, 173.966 200.733 C 175.048 201.894, 176.735 203.079, 177.716 203.366 C 178.697 203.653, 182.200 204.368, 185.500 204.953 C 188.800 205.539, 193.764 207.124, 196.530 208.475 C 199.297 209.827, 202.825 212.252, 204.370 213.864 C 206.748 216.347, 207.007 217.119, 206.054 218.898 C 205.436 220.054, 204.305 221, 203.542 221 C 202.778 221, 200.815 219.873, 199.178 218.497 C 197.542 217.120, 194.245 215.105, 191.852 214.019 C 189.458 212.933, 186.262 212.034, 184.750 212.022 C 182.326 212.003, 182 212.375, 182 215.155 C 182 217.526, 182.978 219.240, 185.935 222.053 C 188.166 224.176, 192.171 226.570, 195.185 227.584 C 198.535 228.711, 203.643 229.396, 209 229.436 C 215.791 229.487, 218.188 229.096, 220.920 227.491 C 222.801 226.386, 224.508 224.977, 224.713 224.360 C 224.919 223.743, 224.016 222.970, 222.706 222.641 C 221.396 222.312, 219.162 221.129, 217.741 220.011 C 216.320 218.893, 214.379 215.941, 213.428 213.451 C 211.919 209.501, 211.860 208.251, 212.965 203.647 C 214.120 198.831, 214.050 198.017, 212.153 194.300 C 211.011 192.061, 208.147 188.809, 205.788 187.073 C 203.157 185.137, 197.070 182.533, 190.039 180.337 C 183.735 178.368, 175.410 175.299, 171.539 173.517 C 167.667 171.736, 162.164 168.689, 159.309 166.746 C 156.454 164.804, 153.867 163.467, 153.559 163.774 M 291.705 195.335 C 290.363 198.726, 288.965 203.162, 288.598 205.194 C 288.132 207.771, 287.272 209.096, 285.751 209.579 C 283.987 210.139, 282.679 209.300, 278.880 205.168 C 275.366 201.346, 274.042 200.447, 273.606 201.586 C 273.285 202.421, 272.528 207.244, 271.925 212.303 C 271.321 217.361, 270.632 222.512, 270.394 223.750 C 270.094 225.315, 269.253 226, 267.634 226 C 266.330 226, 263.732 224.470, 261.724 222.520 L 258.141 219.040 254.600 223.863 C 252.653 226.516, 249.359 229.852, 247.280 231.276 C 245.201 232.700, 242.291 234.404, 240.814 235.064 C 239.336 235.723, 237.386 235.978, 236.479 235.630 C 235.055 235.084, 234.928 233.951, 235.545 227.359 C 236.068 221.778, 235.957 219.909, 235.131 220.419 C 234.509 220.804, 234 221.732, 234 222.482 C 234 223.233, 232.455 225.871, 230.566 228.346 C 228.677 230.820, 226.465 234.133, 225.651 235.707 C 224.837 237.281, 223.849 240.354, 223.454 242.535 C 223.060 244.716, 222.316 247.315, 221.801 248.311 C 221.232 249.411, 220.008 249.999, 218.682 249.811 C 217.019 249.574, 216.424 248.708, 216.181 246.169 C 216.005 244.336, 216.297 241.587, 216.830 240.058 L 217.798 237.280 208.149 236.730 C 202.842 236.428, 197.233 235.690, 195.685 235.090 C 194.137 234.491, 188.436 234, 183.016 234 L 173.163 234 171.186 237.250 C 170.098 239.037, 168.663 242.984, 167.997 246.019 C 166.996 250.579, 167.054 252.965, 168.333 259.744 C 169.228 264.490, 171.581 271.579, 173.913 276.555 C 176.130 281.287, 180.434 288.712, 183.478 293.055 C 187.202 298.370, 189.374 302.647, 190.124 306.141 C 190.736 308.995, 190.950 313.771, 190.599 316.753 C 190.249 319.736, 189.070 324.823, 187.981 328.057 C 186.891 331.291, 186 335.104, 186 336.530 C 186 337.957, 187.130 341.458, 188.511 344.312 C 189.893 347.165, 191.805 350.414, 192.761 351.531 C 193.718 352.648, 195.613 354.335, 196.973 355.281 C 198.332 356.226, 200.695 357, 202.223 357 C 203.750 357, 205 356.612, 205 356.138 C 205 355.663, 203.607 353.526, 201.905 351.388 C 200.203 349.249, 198.394 346.725, 197.885 345.777 C 197.375 344.829, 196.522 341.751, 195.988 338.936 C 195.250 335.046, 195.390 332.182, 196.569 326.996 C 197.510 322.860, 199.758 317.481, 202.278 313.337 C 205.940 307.316, 206.483 305.636, 206.827 299.260 C 207.171 292.883, 206.996 291.952, 205.359 291.443 C 204.336 291.125, 201.637 290.025, 199.361 288.999 C 197.085 287.973, 193.636 285.741, 191.698 284.039 C 189.759 282.337, 186.737 278.706, 184.981 275.971 C 183.225 273.235, 180.915 268.188, 179.847 264.756 C 178.779 261.324, 178.160 257.500, 178.471 256.258 C 178.866 254.684, 179.779 254, 181.484 254 C 182.878 254, 184.375 254.831, 184.965 255.934 C 185.534 256.998, 186 258.846, 186 260.041 C 186 261.236, 187.358 265.060, 189.018 268.538 C 190.852 272.380, 193.772 276.390, 196.459 278.755 C 199.329 281.281, 202.920 283.223, 206.690 284.288 C 209.886 285.191, 215.121 286.097, 218.324 286.303 C 223.855 286.658, 224.114 286.571, 223.466 284.588 C 223.091 283.440, 222.300 279.934, 221.709 276.798 C 220.915 272.582, 220.938 270.432, 221.796 268.548 C 222.466 267.077, 223.787 266, 224.920 266 C 225.999 266, 227.151 266.436, 227.481 266.969 C 227.810 267.502, 228.256 270.716, 228.473 274.113 C 228.799 279.236, 229.493 281.199, 232.553 285.642 L 236.241 290.996 235.141 301.748 C 234.513 307.899, 234.396 313.998, 234.868 316 C 235.322 317.925, 236.881 321.836, 238.333 324.691 C 239.785 327.546, 241.963 333.396, 243.173 337.691 C 244.741 343.257, 245.370 348.228, 245.365 355 C 245.360 360.844, 244.746 366.475, 243.768 369.632 C 242.265 374.481, 242.282 374.935, 244.074 377.882 C 245.117 379.597, 246.599 381, 247.367 381 C 248.184 381, 249.226 379.158, 249.881 376.557 C 250.497 374.114, 250.998 368.151, 250.995 363.307 C 250.993 358.463, 251.748 350.844, 252.674 346.376 C 254.271 338.671, 254.265 337.857, 252.555 330.596 C 251.281 325.187, 250.882 320.474, 251.193 314.535 C 251.562 307.513, 252.182 305.052, 254.964 299.570 C 256.796 295.963, 260.305 290.767, 262.763 288.024 C 265.221 285.281, 268.013 281.566, 268.967 279.769 C 269.921 277.971, 271.489 274.112, 272.450 271.193 C 274.031 266.394, 274.452 265.916, 276.849 266.193 C 279.188 266.464, 279.488 266.921, 279.401 270.080 C 279.347 272.050, 278.136 276.207, 276.712 279.318 L 274.122 284.976 277.619 283.515 C 279.542 282.711, 282.327 281.186, 283.808 280.125 C 285.289 279.064, 287.491 277.133, 288.701 275.835 C 289.912 274.537, 291.874 271.277, 293.063 268.591 C 294.792 264.681, 295.383 260.694, 296.025 248.604 C 296.512 239.429, 297.493 231.341, 298.524 228 C 299.457 224.975, 301.081 220.810, 302.133 218.745 C 303.834 215.407, 303.890 214.685, 302.643 212.245 C 301.872 210.735, 300.932 208.067, 300.555 206.315 C 300.178 204.564, 300.286 201.624, 300.795 199.782 C 301.649 196.687, 301.432 196.158, 297.932 192.802 L 294.144 189.171 291.705 195.335 M 326.200 190.200 C 325.540 190.860, 325 191.907, 325 192.526 C 325 193.145, 326.087 194.672, 327.415 195.920 C 329.026 197.434, 330.493 197.978, 331.823 197.556 C 332.919 197.208, 334.077 196.241, 334.398 195.406 C 334.733 194.531, 333.946 192.855, 332.535 191.444 C 331.191 190.100, 329.485 189, 328.745 189 C 328.005 189, 326.860 189.540, 326.200 190.200 M 145 202.615 C 145 203.503, 146.198 206.430, 147.661 209.119 C 149.125 211.808, 151.712 215.067, 153.411 216.360 C 155.110 217.653, 158.300 219.619, 160.500 220.727 C 162.700 221.836, 165.503 223.053, 166.728 223.432 L 168.956 224.121 167 219.810 C 165.924 217.440, 165.034 214.566, 165.022 213.424 C 165.010 212.283, 163.988 210.400, 162.750 209.241 C 161.512 208.082, 157.421 205.753, 153.657 204.067 C 149.893 202.380, 146.406 201, 145.907 201 C 145.408 201, 145 201.727, 145 202.615 M 343.485 228.048 C 343.127 229.174, 343.395 230.771, 344.080 231.596 C 344.765 232.421, 346.218 232.962, 347.310 232.798 C 348.402 232.634, 349.766 231.750, 350.340 230.834 C 351.095 229.630, 351.020 228.729, 350.070 227.584 C 349.347 226.713, 347.716 226, 346.445 226 C 344.995 226, 343.893 226.763, 343.485 228.048 M 117 231.139 C 115.625 231.758, 112.925 232.587, 111 232.979 C 108.054 233.580, 107.816 233.809, 109.500 234.428 C 110.600 234.832, 112.513 235.566, 113.750 236.060 C 115.023 236.568, 116 237.816, 116 238.936 C 116 240.217, 114.452 241.823, 111.614 243.486 C 109.201 244.900, 103.464 247.434, 98.864 249.117 C 93.864 250.947, 87.615 252.399, 83.328 252.727 C 79.167 253.046, 74.184 252.780, 71.457 252.093 C 68.872 251.442, 66.517 251.150, 66.224 251.443 C 65.930 251.736, 67.898 254.184, 70.597 256.883 C 73.867 260.152, 76.916 262.170, 79.738 262.929 C 83.093 263.833, 85.117 263.771, 89.486 262.630 C 92.519 261.838, 96.980 260.030, 99.398 258.612 C 101.817 257.195, 109.355 251.708, 116.148 246.419 C 122.942 241.130, 129.822 236.117, 131.439 235.278 L 134.377 233.754 131.651 232.325 C 130.152 231.540, 126.804 230.698, 124.213 230.454 C 121.621 230.211, 118.375 230.519, 117 231.139 M 133.530 242.158 C 130.797 243.873, 123.959 249.007, 118.334 253.565 C 112.709 258.124, 105.951 263.116, 103.316 264.660 C 100.682 266.204, 96.305 268.220, 93.590 269.139 L 88.653 270.810 92.576 271.900 C 94.734 272.499, 99.099 272.991, 102.275 272.994 C 105.451 272.997, 110.477 272.147, 113.443 271.105 C 116.409 270.062, 120.785 267.863, 123.168 266.219 C 125.551 264.574, 130.168 260.502, 133.429 257.171 C 136.689 253.839, 139.772 250.372, 140.279 249.466 C 140.785 248.561, 140.903 245.836, 140.539 243.410 C 140.175 240.985, 139.568 239.009, 139.189 239.019 C 138.810 239.029, 136.264 240.442, 133.530 242.158" stroke="none" fill="%230d6efd" fill-rule="evenodd"/></svg>';var g8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="444" height="444" viewBox="0 0 444 444" version="1.1"><path d="" stroke="none" fill="%23ffc107" fill-rule="evenodd"/><path d="M 170.654 63.459 C 170.343 64.270, 170.733 67.104, 171.521 69.757 C 172.308 72.410, 174.263 75.836, 175.864 77.369 C 177.465 78.903, 180.513 80.755, 182.637 81.484 L 186.500 82.810 186.809 94.155 C 186.979 100.395, 186.595 108.200, 185.956 111.500 C 185.317 114.800, 184.556 118.377, 184.266 119.449 C 183.876 120.893, 183.217 119.987, 181.723 115.949 C 180.615 112.952, 178.438 108.639, 176.885 106.365 C 175.333 104.091, 172.586 100.982, 170.781 99.455 C 168.977 97.929, 164.800 95.420, 161.500 93.880 C 157.955 92.225, 152.830 90.811, 148.974 90.424 C 144.349 89.960, 140.596 90.244, 136.091 91.398 C 132.592 92.295, 127.237 94.707, 124.181 96.763 C 120.932 98.949, 117.071 102.782, 114.875 106 C 112.811 109.025, 110.121 114.650, 108.897 118.500 C 107.087 124.195, 106.684 127.736, 106.736 137.500 C 106.789 147.674, 107.180 150.565, 109.304 156.500 C 110.682 160.350, 114.048 168.450, 116.784 174.500 C 119.520 180.550, 122.601 188.650, 123.629 192.500 C 125.247 198.553, 125.502 203.357, 125.518 228 C 125.530 247.081, 125.954 258.483, 126.801 262.500 C 127.497 265.800, 128.556 270.525, 129.155 273 C 129.754 275.475, 131.586 281.550, 133.227 286.500 C 134.868 291.450, 138.775 300.678, 141.910 307.006 C 145.045 313.334, 149.921 321.936, 152.745 326.123 C 155.570 330.309, 160.632 337.154, 163.995 341.333 C 167.357 345.513, 173.472 352.032, 177.582 355.820 L 185.057 362.707 180.592 364.412 C 178.136 365.350, 174.578 367.832, 172.684 369.928 C 170.791 372.024, 168.696 375.391, 168.030 377.411 C 167.363 379.430, 167.070 381.739, 167.377 382.541 C 167.859 383.797, 176.103 384, 226.500 384 C 276.897 384, 285.141 383.797, 285.623 382.541 C 285.930 381.739, 285.644 379.450, 284.985 377.455 C 284.327 375.461, 282.373 372.217, 280.644 370.247 C 278.915 368.278, 275.302 365.696, 272.615 364.510 L 267.731 362.355 272.527 358.427 C 275.165 356.267, 280.892 350.462, 285.253 345.528 C 289.615 340.593, 296.207 332.034, 299.902 326.508 C 303.597 320.982, 308.932 311.745, 311.757 305.980 C 314.582 300.216, 318.460 290.762, 320.373 284.971 C 322.287 279.180, 324.673 270.405, 325.676 265.471 C 327.212 257.914, 327.461 252.401, 327.254 230.500 C 327.109 215.199, 327.444 202.237, 328.068 199 C 328.651 195.975, 330.063 190.575, 331.205 187 C 332.348 183.425, 335.081 176.900, 337.280 172.500 C 339.480 168.100, 341.694 163.150, 342.201 161.500 C 342.708 159.850, 343.810 156.025, 344.650 153 C 345.623 149.500, 346.169 143.319, 346.154 136 C 346.135 126.971, 345.669 123.104, 343.984 118 C 342.803 114.425, 340.774 109.662, 339.474 107.416 C 338.174 105.170, 335.230 101.633, 332.930 99.556 C 330.631 97.479, 326.219 94.628, 323.125 93.220 C 318.417 91.078, 315.951 90.648, 308 90.581 C 299.366 90.507, 297.907 90.781, 292 93.587 C 288.425 95.284, 283.394 98.724, 280.820 101.231 C 278.247 103.738, 275.035 107.974, 273.683 110.644 C 272.331 113.315, 270.641 117.454, 269.927 119.843 L 268.628 124.185 267.330 119.843 C 266.617 117.454, 265.742 112.081, 265.386 107.903 C 265.029 103.725, 265.065 96.381, 265.464 91.585 C 266.034 84.742, 266.547 82.760, 267.845 82.380 C 268.755 82.113, 271.345 80.992, 273.599 79.889 C 276.108 78.660, 278.503 76.449, 279.775 74.187 C 280.917 72.154, 281.998 68.693, 282.176 66.495 L 282.500 62.500 226.860 62.242 C 178.577 62.017, 171.146 62.178, 170.654 63.459 M 177.687 69.750 C 178.030 70.713, 178.785 72.109, 179.364 72.854 C 179.944 73.599, 181.561 74.669, 182.959 75.232 C 184.357 75.795, 187.075 76.602, 189 77.025 C 190.925 77.447, 196.325 78.579, 201 79.540 C 206.937 80.760, 214.475 81.310, 226 81.364 C 241.396 81.436, 242.769 81.289, 246.517 79.168 C 248.727 77.917, 251.539 75.427, 252.767 73.635 C 253.995 71.843, 255 69.842, 255 69.188 C 255 68.291, 245.457 68, 216.031 68 C 179.347 68, 177.099 68.103, 177.687 69.750 M 192.824 97.987 L 192.500 105.869 198 107.474 C 201.025 108.357, 208.675 109.580, 215 110.191 C 221.571 110.825, 230.184 110.990, 235.095 110.574 L 243.691 109.846 242.559 104.173 L 241.428 98.500 236.464 98.220 C 233.734 98.066, 227.225 97.290, 222 96.495 C 216.775 95.701, 209.194 94.337, 205.154 93.464 C 201.113 92.591, 196.759 91.479, 195.478 90.992 C 193.176 90.117, 193.145 90.198, 192.824 97.987 M 191.072 117.345 C 190.380 120.180, 189.307 123.987, 188.686 125.805 C 187.778 128.468, 187.832 129.278, 188.965 129.978 C 189.739 130.456, 194.170 131.800, 198.812 132.964 C 203.454 134.129, 207.354 134.951, 207.478 134.791 C 207.603 134.631, 208.221 132.388, 208.852 129.807 C 209.484 127.226, 210 123.072, 210 120.576 C 210 116.433, 209.761 115.987, 207.250 115.456 C 205.738 115.136, 203.458 114.662, 202.184 114.402 C 200.093 113.975, 199.899 114.247, 200.184 117.207 C 200.418 119.634, 201.215 120.827, 203.250 121.798 C 204.815 122.544, 206 123.922, 206 124.996 C 206 126.033, 205.539 127.167, 204.976 127.515 C 204.412 127.863, 202.579 127.847, 200.903 127.479 C 199.004 127.062, 197.111 125.619, 195.884 123.655 C 194.600 121.599, 194.025 119.201, 194.231 116.770 C 194.410 114.676, 194.062 112.854, 193.439 112.615 C 192.799 112.369, 191.798 114.370, 191.072 117.345 M 141.684 115.404 C 139.585 116.177, 136.950 117.640, 135.827 118.655 C 134.705 119.670, 132.988 122.075, 132.012 124 C 131.036 125.925, 129.658 130.103, 128.952 133.284 C 127.926 137.902, 127.912 140.398, 128.884 145.672 C 129.553 149.305, 130.981 154.002, 132.056 156.111 C 133.132 158.219, 135.344 161.461, 136.972 163.315 C 138.599 165.169, 141.998 167.769, 144.525 169.093 L 149.119 171.500 152.214 168 C 153.916 166.075, 158.224 161.365, 161.788 157.533 L 168.266 150.566 167.673 142.154 C 167.176 135.113, 166.461 132.505, 163.290 126.156 C 160.747 121.066, 158.512 118, 156.495 116.836 C 154.842 115.882, 151.692 114.853, 149.495 114.550 C 147.155 114.226, 143.919 114.580, 141.684 115.404 M 299.538 115.454 C 297.359 116.255, 294.740 117.943, 293.717 119.205 C 292.695 120.467, 290.768 123.783, 289.437 126.573 C 288.105 129.363, 286.562 134.037, 286.008 136.960 C 285.453 139.882, 285.002 144.124, 285.005 146.386 C 285.010 150.137, 285.693 151.227, 292.756 158.750 C 299.996 166.462, 300.761 166.997, 304.500 166.952 C 306.700 166.926, 310.055 166.138, 311.956 165.202 C 313.857 164.266, 316.883 161.568, 318.680 159.206 C 320.478 156.844, 322.635 152.600, 323.474 149.774 C 324.313 146.949, 325 142.550, 325 140 C 325 137.450, 324.329 133.104, 323.509 130.343 C 322.689 127.582, 321 123.812, 319.756 121.966 C 318.511 120.119, 316.142 117.819, 314.492 116.855 C 312.841 115.891, 309.692 114.853, 307.495 114.550 C 305.116 114.221, 301.897 114.586, 299.538 115.454 M 243 120.986 C 243 123.728, 243.543 128.003, 244.207 130.486 C 244.871 132.969, 245.884 134.955, 246.457 134.900 C 247.031 134.845, 248.469 134.508, 249.654 134.150 L 251.808 133.500 249.322 127 C 247.955 123.425, 246.432 119.487, 245.939 118.250 C 245.446 117.013, 244.583 116, 244.021 116 C 243.460 116, 243 118.244, 243 120.986 M 215.688 123.250 C 215.357 126.688, 214.797 130.905, 214.444 132.623 L 213.801 135.746 220.264 136.438 C 223.819 136.819, 229.533 136.813, 232.961 136.425 L 239.194 135.720 238.496 132.610 C 238.112 130.899, 237.506 126.800, 237.149 123.500 L 236.500 117.500 231.750 117.195 C 227.086 116.896, 227 116.944, 227 119.847 C 227 122.234, 227.579 123.006, 230 123.850 C 231.974 124.538, 233 125.575, 233 126.881 C 233 127.972, 232.159 129.132, 231.132 129.458 C 230.105 129.784, 228.125 129.618, 226.733 129.089 C 225.341 128.559, 223.481 127.098, 222.601 125.841 C 221.720 124.584, 221 122.080, 221 120.277 C 221 117.502, 220.639 117, 218.645 117 C 216.486 117, 216.239 117.523, 215.688 123.250 M 183.542 139.250 C 182.689 141.037, 179.776 145.425, 177.069 149 C 174.363 152.575, 172.453 155.767, 172.824 156.094 C 173.196 156.421, 175.975 157.615, 179 158.747 C 182.025 159.880, 186.525 161.276, 189 161.851 C 191.475 162.425, 196.650 163.460, 200.500 164.151 C 204.611 164.888, 215.755 165.399, 227.500 165.388 C 238.900 165.378, 250.295 164.848, 254 164.154 C 257.575 163.485, 262.750 162.419, 265.500 161.786 C 268.250 161.153, 270.875 160.320, 271.333 159.935 C 271.791 159.550, 269.960 157.172, 267.265 154.651 C 264.570 152.130, 260.595 147.583, 258.432 144.547 C 255.353 140.224, 254.066 139.146, 252.500 139.577 C 251.400 139.880, 245.433 140.864, 239.239 141.764 C 229.522 143.175, 226.439 143.227, 216.739 142.150 C 210.558 141.463, 203.475 140.421, 201 139.835 C 198.525 139.249, 194.572 138.147, 192.215 137.385 C 189.858 136.623, 187.292 136, 186.512 136 C 185.732 136, 184.396 137.463, 183.542 139.250 M 164.138 163.357 L 161.079 166.514 164.419 169.780 C 166.256 171.576, 168.019 174.344, 168.336 175.931 C 168.654 177.518, 168.515 180.204, 168.029 181.900 C 167.274 184.531, 167.616 185.685, 170.351 189.742 C 172.115 192.359, 174.108 195.759, 174.779 197.297 C 175.451 198.835, 176 201.198, 176 202.547 C 176 204.802, 175.622 205, 171.317 205 C 168.741 205, 163.903 204.039, 160.567 202.865 C 157.230 201.691, 153.150 199.818, 151.500 198.704 C 149.850 197.590, 147.296 195.574, 145.825 194.224 L 143.150 191.770 140.468 197.064 C 138.992 199.975, 137.180 204.074, 136.439 206.171 C 135.111 209.937, 135.128 209.993, 137.797 210.586 C 139.284 210.916, 141.400 211.414, 142.500 211.693 C 143.600 211.972, 146.219 213.363, 148.320 214.784 C 150.420 216.206, 152.783 218.613, 153.570 220.135 C 154.356 221.656, 155 224.070, 155 225.500 C 155 226.930, 154.333 229.390, 153.517 230.966 C 152.587 232.766, 150.933 234.075, 149.076 234.483 C 147.449 234.841, 145.222 234.654, 144.128 234.069 C 143.034 233.483, 141.150 231.615, 139.941 229.917 C 138.007 227.201, 137.565 227.006, 136.273 228.298 C 135.197 229.375, 135.073 230.265, 135.811 231.633 C 136.364 232.660, 137.938 234.549, 139.310 235.832 C 140.724 237.154, 143.602 238.405, 145.957 238.721 C 148.522 239.065, 151.060 238.771, 152.590 237.952 C 154.770 236.785, 155.296 236.859, 156.949 238.562 C 157.983 239.628, 159.811 243.875, 161.010 248 C 162.869 254.393, 163.915 256.185, 168.096 260.143 C 170.793 262.697, 173 265.510, 173 266.393 C 173 267.277, 172.438 268.060, 171.750 268.134 C 171.063 268.208, 168.475 268.187, 166 268.087 C 163.525 267.987, 159.025 267.448, 156 266.888 C 152.975 266.329, 148.250 265.171, 145.500 264.316 C 142.750 263.460, 139.021 262.080, 137.214 261.249 C 135.407 260.418, 133.675 259.991, 133.366 260.301 C 133.056 260.611, 133.592 264.516, 134.556 268.980 C 135.806 274.761, 136.861 277.391, 138.226 278.121 C 139.280 278.685, 145.398 280.868, 151.821 282.973 C 158.245 285.077, 166.425 287.487, 170 288.330 C 173.575 289.172, 178.750 290.348, 181.500 290.944 C 184.250 291.540, 191.225 292.671, 197 293.456 C 202.775 294.241, 213.502 295.200, 220.837 295.588 C 231.304 296.140, 234.298 296.614, 234.750 297.790 C 235.071 298.627, 234.510 299.885, 233.480 300.639 C 232.072 301.668, 228.890 301.859, 220.067 301.444 C 213.705 301.144, 204.675 300.440, 200 299.880 C 195.325 299.319, 187 297.950, 181.500 296.838 C 176 295.726, 169.250 294.210, 166.500 293.469 C 163.750 292.728, 158.575 291.247, 155 290.179 C 151.425 289.110, 146.569 287.451, 144.209 286.493 C 141.848 285.534, 139.716 284.951, 139.469 285.197 C 139.223 285.444, 139.760 287.526, 140.663 289.824 C 142.272 293.921, 142.495 294.066, 151.902 297.122 C 157.181 298.837, 163.075 300.637, 165 301.122 C 166.925 301.607, 172.434 302.904, 177.241 304.003 C 182.049 305.102, 190.824 306.689, 196.741 307.531 C 203.454 308.485, 214.834 309.060, 227 309.058 C 239.265 309.055, 250.571 308.477, 257.471 307.498 C 263.505 306.642, 271.380 305.279, 274.971 304.470 C 278.562 303.661, 284.341 302.250, 287.814 301.334 C 293.506 299.832, 294.326 299.281, 296.134 295.737 C 297.237 293.575, 297.926 291.593, 297.666 291.332 C 297.405 291.072, 294.111 291.758, 290.346 292.858 C 286.581 293.958, 279.120 295.790, 273.767 296.929 C 268.415 298.068, 262.677 299, 261.017 299 C 258.488 299, 258 298.607, 258 296.567 C 258 295.113, 258.704 293.928, 259.750 293.621 C 260.712 293.338, 263.300 292.816, 265.500 292.461 C 267.700 292.107, 274.900 290.506, 281.500 288.905 C 288.100 287.304, 295.247 285.380, 297.383 284.630 C 300.457 283.551, 301.529 282.502, 302.527 279.599 C 303.654 276.320, 303.614 275.983, 302.144 276.409 C 301.240 276.671, 297.705 277.417, 294.290 278.065 C 290.874 278.714, 287.387 278.979, 286.540 278.654 C 285.693 278.329, 285 277.343, 285 276.464 C 285 275.585, 286.575 273.380, 288.500 271.565 C 290.746 269.447, 292 267.338, 292 265.679 C 292 264.257, 292.536 261.835, 293.191 260.297 C 293.846 258.759, 295.274 256.488, 296.365 255.250 C 297.456 254.013, 298.963 253, 299.715 253 C 300.466 253, 302.370 253.953, 303.945 255.118 C 305.521 256.283, 307.303 256.931, 307.905 256.559 C 308.507 256.187, 309 255.398, 309 254.806 C 309 254.214, 307.875 252.687, 306.500 251.412 C 304.739 249.781, 304 248.047, 304 245.551 C 304 242.877, 304.896 241.014, 307.648 237.968 L 311.296 233.930 310.635 223.849 C 310.272 218.305, 309.738 213.385, 309.449 212.917 C 309.159 212.449, 306.767 213.392, 304.133 215.013 C 301.498 216.634, 296.403 219.067, 292.809 220.420 C 289.216 221.772, 284.587 223.019, 282.524 223.190 C 279.841 223.412, 278.458 223.014, 277.670 221.795 C 276.797 220.446, 277.022 219.605, 278.750 217.766 C 279.950 216.489, 281.559 213.656, 282.325 211.472 C 283.151 209.118, 283.397 206.685, 282.929 205.500 C 282.496 204.400, 282.109 202.074, 282.070 200.332 C 282.032 198.589, 282.273 196.452, 282.607 195.582 C 282.941 194.712, 283.953 194.010, 284.857 194.022 C 285.761 194.034, 287.625 194.924, 289 196 C 290.469 197.149, 293.077 197.965, 295.323 197.978 C 298.423 197.996, 299.083 197.671, 298.812 196.261 C 298.628 195.305, 297.582 194.380, 296.489 194.205 C 295.395 194.031, 293.321 193.433, 291.880 192.876 C 290.439 192.320, 288.751 190.749, 288.130 189.385 C 287.508 188.022, 287 185.452, 287 183.675 C 287 181.899, 287.649 179.519, 288.442 178.386 C 289.789 176.464, 289.474 175.921, 283.692 170.193 L 277.500 164.059 273.277 165.515 C 270.955 166.316, 265.780 167.636, 261.777 168.448 C 257.775 169.261, 249.840 170.392, 244.144 170.963 C 238.448 171.533, 230.123 172.004, 225.644 172.010 C 221.165 172.015, 213 171.507, 207.500 170.880 C 202 170.254, 193 168.653, 187.500 167.323 C 182 165.993, 175.182 163.847, 172.349 162.553 L 167.197 160.201 164.138 163.357 M 259.441 180.855 C 255.559 182.387, 250.316 185.063, 247.790 186.800 C 245.265 188.538, 241.048 192.106, 238.421 194.730 C 235.793 197.353, 231.586 202.662, 229.072 206.528 C 226.557 210.393, 223.402 215.923, 222.060 218.818 L 219.620 224.080 210.813 215.314 C 204.079 208.611, 201.856 205.718, 201.371 203.024 C 201.022 201.086, 200.330 198.713, 199.833 197.750 C 199.336 196.787, 198.383 196.021, 197.715 196.046 C 197.047 196.072, 195.150 197.824, 193.500 199.940 C 191.850 202.057, 187.463 205.708, 183.750 208.055 C 179.777 210.566, 177 213.015, 177 214.006 C 177 214.932, 177.947 216.547, 179.104 217.595 C 180.485 218.846, 183.258 219.672, 187.183 220 L 193.159 220.500 199.370 232.500 L 205.580 244.500 200.137 254.876 L 194.694 265.252 196.417 272.562 C 197.365 276.582, 198.758 280.384, 199.512 281.010 C 200.555 281.876, 201.758 281.734, 204.528 280.420 L 208.172 278.691 207.508 272.076 L 206.843 265.461 212.172 258.790 L 217.500 252.119 227.750 252.060 C 233.387 252.027, 238 252.243, 238 252.539 C 238 252.836, 236.425 255.418, 234.500 258.276 C 232.575 261.135, 231 264.156, 231 264.991 C 231 265.825, 233.290 270.219, 236.088 274.754 C 239.991 281.080, 241.693 283, 243.397 283 C 244.618 283, 246.485 282.366, 247.546 281.590 C 249.421 280.219, 249.379 279.985, 246.001 273.002 L 242.528 265.823 249.173 259.662 C 253.203 255.925, 256.247 252.162, 256.909 250.101 C 257.509 248.231, 258 245.163, 258 243.283 L 258 239.864 260.850 241.893 C 262.417 243.009, 265.651 244.361, 268.036 244.897 C 271.294 245.629, 273.197 245.527, 275.686 244.487 C 277.509 243.725, 279 242.500, 279 241.763 C 279 241.027, 276.863 238.328, 274.250 235.764 C 271.637 233.201, 267.475 230.190, 265 229.074 C 261.267 227.390, 258.385 227.040, 248.083 227.022 C 241.254 227.010, 235.938 226.729, 236.269 226.397 C 236.601 226.066, 239.939 224.997, 243.686 224.022 C 249.694 222.459, 250.500 221.968, 250.500 219.874 C 250.500 217.743, 250.090 217.517, 246.500 217.667 C 244.300 217.758, 240.493 218.526, 238.039 219.372 C 235.586 220.219, 233.404 220.738, 233.192 220.525 C 232.979 220.312, 233.621 218.757, 234.618 217.069 C 235.615 215.381, 236.672 213.992, 236.966 213.983 C 237.260 213.973, 240.511 213.327, 244.190 212.547 C 247.870 211.767, 255.182 210.814, 260.440 210.428 C 269.601 209.755, 270 209.628, 270 207.382 C 270 205.666, 269.272 204.855, 267.286 204.357 C 265.793 203.982, 259.914 204.245, 254.222 204.940 C 248.529 205.636, 243.673 206.006, 243.430 205.763 C 243.187 205.520, 243.828 204.561, 244.854 203.632 C 246.006 202.589, 250.470 201.380, 256.523 200.472 C 261.915 199.662, 267.547 199, 269.040 199 C 270.534 199, 272.315 198.325, 273 197.500 C 273.995 196.301, 273.985 195.687, 272.949 194.439 C 271.905 193.181, 270.427 193.009, 265.327 193.555 C 261.847 193.928, 259 193.998, 259 193.711 C 259 193.424, 261.845 191.857, 265.323 190.230 C 270.136 187.977, 271.955 186.523, 272.944 184.135 C 273.982 181.629, 273.993 180.697, 272.999 179.499 C 272.315 178.675, 270.573 178.015, 269.128 178.034 C 267.682 178.053, 263.324 179.323, 259.441 180.855 M 256.468 218.101 C 256.101 219.256, 256.248 220.648, 256.794 221.194 C 257.341 221.741, 258.618 222.028, 259.632 221.832 C 260.647 221.637, 261.639 220.636, 261.837 219.608 C 262.035 218.581, 261.590 217.355, 260.848 216.885 C 260.107 216.415, 258.968 216.024, 258.317 216.015 C 257.667 216.007, 256.835 216.945, 256.468 218.101 M 186.690 238.250 C 185.759 238.938, 184.098 241.969, 182.999 244.986 C 181.899 248.003, 181 251.250, 181 252.201 C 181 253.152, 181.923 254.424, 183.052 255.028 C 184.180 255.631, 186.028 255.985, 187.159 255.813 C 188.335 255.634, 190.169 253.788, 191.443 251.500 C 193.209 248.328, 194.374 247.397, 197.074 247 C 199.020 246.714, 200.594 245.858, 200.749 245 C 200.899 244.175, 200.123 242.037, 199.025 240.250 C 197.270 237.392, 196.508 237, 192.706 237 C 190.328 237, 187.621 237.563, 186.690 238.250 M 253.196 261.298 C 251.438 263.111, 250 264.859, 250 265.181 C 250 265.503, 252.801 267.435, 256.224 269.474 L 262.447 273.181 264.724 270.535 C 265.976 269.079, 267 267.274, 267 266.522 C 267 265.771, 265.119 263.546, 262.820 261.578 C 260.521 259.610, 258.134 258, 257.516 258 C 256.898 258, 254.954 259.484, 253.196 261.298 M 244.659 296.484 C 243.793 297.350, 243.326 298.685, 243.620 299.452 C 243.914 300.218, 244.751 301.074, 245.480 301.354 C 246.209 301.634, 247.637 301.245, 248.653 300.490 C 250.095 299.418, 250.265 298.734, 249.429 297.368 C 248.839 296.406, 247.879 295.460, 247.295 295.265 C 246.710 295.070, 245.524 295.619, 244.659 296.484 M 148.601 305.063 C 149.712 306.953, 153.212 313.083, 156.378 318.684 C 159.545 324.285, 162.668 329.281, 163.318 329.785 C 163.968 330.290, 167.163 331.219, 170.417 331.851 C 173.671 332.483, 176.902 333, 177.597 333 C 178.533 333, 178.631 332.201, 177.975 329.914 C 177.489 328.217, 176.783 323.035, 176.406 318.398 C 175.754 310.353, 175.603 309.943, 173.111 309.402 C 171.675 309.090, 169.195 308.422, 167.601 307.917 C 166.006 307.413, 164.544 307, 164.351 307 C 164.158 307, 164 308.096, 164 309.435 C 164 310.774, 164.417 312.967, 164.927 314.308 C 165.446 315.673, 166.987 317.031, 168.427 317.392 C 170.125 317.818, 171 318.723, 171 320.050 C 171 321.157, 170.340 322.316, 169.533 322.626 C 168.726 322.935, 166.814 322.774, 165.283 322.267 C 163.752 321.760, 161.488 319.851, 160.250 318.025 C 158.708 315.749, 158 313.227, 158 310.010 C 158 305.381, 157.944 305.300, 153.896 304.087 C 151.639 303.411, 149.069 302.580, 148.187 302.241 C 146.857 301.731, 146.928 302.215, 148.601 305.063 M 282.750 308.689 C 281.286 309.072, 281.003 310.321, 281.017 316.323 L 281.034 323.500 283.129 320.228 C 284.332 318.350, 285.300 315.048, 285.402 312.478 C 285.500 310.015, 285.337 308.052, 285.040 308.116 C 284.743 308.180, 283.712 308.438, 282.750 308.689 M 182.035 315.951 C 182.054 318.453, 182.679 323.337, 183.422 326.804 C 184.166 330.271, 184.971 333.304, 185.211 333.544 C 185.450 333.784, 189.888 334.427, 195.073 334.973 C 200.258 335.519, 205.197 335.973, 206.049 335.983 C 207.343 335.997, 207.616 334.273, 207.710 325.497 C 207.816 315.496, 207.718 314.972, 205.661 314.541 C 204.472 314.292, 201.588 313.944, 199.250 313.767 C 195.369 313.475, 195 313.650, 195 315.789 C 195 317.078, 195.477 319.023, 196.061 320.114 C 196.644 321.204, 198.250 322.525, 199.630 323.049 C 201.458 323.744, 202.052 324.613, 201.819 326.252 C 201.557 328.099, 200.915 328.473, 198.222 328.350 C 196.420 328.267, 194.256 327.628, 193.415 326.929 C 192.573 326.231, 191.235 324.106, 190.442 322.207 C 189.649 320.309, 189 317.285, 189 315.487 C 189 312.496, 188.703 312.184, 185.500 311.810 L 182 311.402 182.035 315.951 M 265.877 312.223 L 260.253 313.189 261.028 316.623 C 261.454 318.512, 262.352 320.719, 263.024 321.528 C 263.695 322.338, 265.492 323, 267.015 323 C 268.679 323, 270.042 323.666, 270.426 324.667 C 270.778 325.584, 270.602 326.798, 270.035 327.365 C 269.467 327.933, 267.315 328.349, 265.252 328.290 C 262.225 328.205, 260.872 327.458, 258.250 324.426 C 255.959 321.776, 255 319.665, 255 317.270 C 255 314.040, 254.840 313.889, 251.750 314.187 L 248.500 314.500 248.215 325.383 L 247.930 336.266 253.715 335.676 C 256.897 335.351, 262.496 334.793, 266.158 334.436 L 272.816 333.787 273.908 329.451 C 274.509 327.066, 275 321.939, 275 318.057 C 275 311.954, 274.763 311.017, 273.250 311.128 C 272.288 311.199, 268.970 311.692, 265.877 312.223 M 213.584 320.964 C 213.203 324.332, 213.191 329.093, 213.559 331.544 L 214.227 336 228.114 336 L 242 336 242 325.369 L 242 314.738 238.250 315.358 C 236.188 315.699, 233.262 315.983, 231.750 315.989 C 229.405 315.998, 229 316.414, 229 318.809 C 229 320.354, 229.563 322.347, 230.250 323.238 C 230.938 324.129, 232.625 325.003, 234 325.179 C 235.914 325.425, 236.500 326.086, 236.500 328 C 236.500 329.998, 235.935 330.565, 233.685 330.823 C 232.137 331, 229.737 330.403, 228.352 329.495 C 226.966 328.587, 225.196 326.319, 224.416 324.454 C 223.637 322.590, 223 319.925, 223 318.532 C 223 316.577, 222.487 315.997, 220.750 315.986 C 219.512 315.979, 217.550 315.718, 216.388 315.406 C 214.456 314.887, 214.218 315.360, 213.584 320.964 M 170.001 338.618 C 170.002 339.103, 173.618 343.233, 178.037 347.795 C 182.456 352.357, 188.168 357.419, 190.731 359.045 L 195.392 362 215.718 362 C 236.024 362, 236.050 361.997, 242.459 359.091 C 245.988 357.491, 251.041 354.707, 253.687 352.904 C 256.334 351.101, 260.750 347.418, 263.500 344.719 C 268.336 339.973, 268.401 339.834, 265.500 340.487 C 263.850 340.858, 249.675 341.390, 234 341.669 C 211.783 342.063, 202.524 341.827, 192 340.596 C 184.575 339.727, 176.588 338.728, 174.250 338.376 C 171.912 338.025, 170.001 338.133, 170.001 338.618" stroke="none" fill="%23ffc107" fill-rule="evenodd"/></svg>';var ca='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="443" height="443" viewBox="0 0 443 443" version="1.1"><path d="" stroke="none" fill="%230d6efd" fill-rule="evenodd"/><path d="M 148 106.455 C 143.875 107.732, 137.125 110.141, 133 111.808 C 128.875 113.475, 118.300 118.292, 109.500 122.512 C 100.700 126.732, 87.759 133.564, 80.742 137.695 C 73.725 141.826, 67.087 146.345, 65.992 147.737 C 64.706 149.372, 64 151.790, 64 154.558 C 64 157.700, 64.684 159.660, 66.560 161.889 C 68.035 163.641, 70.499 165.191, 72.371 165.542 C 75.233 166.079, 75.961 166.931, 78.466 172.683 C 80.031 176.275, 83.019 181.487, 85.107 184.264 C 88.217 188.405, 88.714 189.666, 87.859 191.263 C 87.286 192.334, 87.089 194.659, 87.421 196.430 C 87.753 198.201, 89.270 200.842, 90.791 202.300 C 92.312 203.757, 95.018 205.459, 96.804 206.081 C 98.844 206.793, 101.221 208.938, 103.200 211.857 C 104.932 214.410, 109.158 219.875, 112.591 224 C 116.023 228.125, 121.007 233.579, 123.666 236.119 C 126.325 238.660, 132.100 243.546, 136.500 246.978 C 141.031 250.512, 145.546 255.013, 146.913 257.358 C 148.241 259.636, 150.980 263.525, 153.002 266 C 155.023 268.475, 157.303 271.625, 158.069 273 C 159.082 274.820, 159.466 279.582, 159.480 290.500 L 159.500 305.500 151.489 306.023 C 145.702 306.401, 142.727 307.095, 140.772 308.523 C 139.284 309.610, 137.376 311.918, 136.533 313.651 C 135.690 315.384, 135 318.197, 135 319.901 L 135 323 125.250 323.002 C 117.944 323.003, 114.640 323.441, 112.071 324.752 C 110.185 325.713, 107.739 327.731, 106.636 329.237 C 105.322 331.029, 104.475 334.105, 104.183 338.153 C 103.810 343.306, 104.038 344.555, 105.559 345.667 C 107.053 346.759, 127.669 347, 219.620 347 C 323.702 347, 331.980 346.877, 333.549 345.308 C 334.880 343.977, 335.123 342.478, 334.688 338.267 C 334.384 335.325, 333.318 331.525, 332.318 329.822 C 331.318 328.119, 328.932 325.888, 327.016 324.863 C 324.309 323.416, 321.382 323, 313.897 323 L 304.263 323 303.722 318.962 C 303.424 316.741, 302.458 313.822, 301.576 312.476 C 300.694 311.129, 298.764 309.234, 297.288 308.264 C 295.576 307.139, 291.866 306.319, 287.051 306 L 279.500 305.500 279.500 289.820 C 279.500 275.486, 279.679 273.899, 281.588 271.320 C 282.737 269.769, 287.912 265.636, 293.088 262.136 C 298.265 258.636, 305.650 253.203, 309.500 250.063 C 315.876 244.862, 316.858 244.389, 320.511 244.759 C 323.515 245.063, 325.199 244.631, 327.223 243.039 C 328.724 241.859, 330.194 239.483, 330.529 237.696 C 330.861 235.927, 330.706 233.356, 330.183 231.983 C 329.338 229.758, 329.920 228.726, 335.528 222.508 C 341.597 215.779, 341.891 215.591, 343.740 217.265 C 344.836 218.257, 347.250 219, 349.374 219 C 352.026 219, 353.822 218.268, 355.645 216.446 C 357.725 214.366, 358.109 213.205, 357.713 210.196 C 357.446 208.163, 356.912 205.538, 356.526 204.363 C 355.939 202.572, 357.194 201.034, 364.278 194.863 C 368.927 190.813, 376.504 185.276, 381.116 182.557 C 385.727 179.839, 390.506 176.729, 391.735 175.647 C 392.964 174.565, 394.244 172.215, 394.580 170.425 C 394.941 168.503, 394.640 166.030, 393.845 164.386 C 393.105 162.854, 390.967 160.708, 389.094 159.617 C 385.760 157.675, 385.474 157.670, 375.594 159.353 C 370.042 160.299, 359.425 163.137, 352 165.659 C 344.575 168.182, 337.230 170.894, 335.677 171.686 C 333.034 173.035, 332.691 172.964, 330.291 170.563 C 328.414 168.687, 326.680 168, 323.818 168 C 320.951 168, 319.222 168.687, 317.333 170.576 C 315.121 172.788, 314.828 173.783, 315.261 177.619 L 315.764 182.086 309.726 186.186 C 304.700 189.599, 303.381 190.095, 301.858 189.143 C 300.851 188.514, 298.282 188, 296.150 188 C 293.294 188, 291.578 188.694, 289.636 190.636 C 288.186 192.086, 287 194.316, 287 195.591 C 287 197.428, 286.325 198.023, 283.750 198.456 C 281.962 198.756, 277.575 199.448, 274 199.993 C 270.425 200.539, 264.350 200.982, 260.500 200.979 C 256.650 200.976, 249.442 200.136, 244.482 199.112 C 239.523 198.089, 231.903 195.769, 227.551 193.957 C 222.744 191.956, 215.813 187.781, 209.895 183.324 C 204.537 179.288, 196.986 172.548, 193.116 168.348 C 186.267 160.915, 186.093 160.597, 186.652 156.523 C 187.045 153.656, 186.712 151.344, 185.596 149.185 C 184.700 147.452, 182.694 145.376, 181.140 144.572 C 179.235 143.587, 177.736 141.545, 176.541 138.306 C 175.565 135.662, 173.428 131.070, 171.791 128.101 C 169.296 123.575, 168.991 122.314, 169.907 120.304 C 170.508 118.985, 171 116.780, 171 115.403 C 171 114.027, 170.328 111.600, 169.506 110.011 C 168.684 108.422, 167.009 106.419, 165.783 105.561 C 164.558 104.702, 161.743 104.030, 159.527 104.066 C 157.312 104.102, 152.125 105.177, 148 106.455 M 147 114.325 C 141.225 116.103, 133.800 118.636, 130.500 119.953 C 127.200 121.271, 117.300 126.055, 108.500 130.586 C 99.574 135.182, 91.666 139.933, 90.613 141.334 C 89.575 142.714, 88.999 144.554, 89.332 145.422 C 89.665 146.290, 91.082 147, 92.481 147 C 93.881 147, 102.609 143.241, 111.878 138.647 C 123.065 133.102, 134.239 128.496, 145.115 124.945 C 154.127 122.004, 162.063 119.183, 162.750 118.676 C 163.438 118.170, 164 116.775, 164 115.578 C 164 114.380, 163.460 112.860, 162.800 112.200 C 162.140 111.540, 160.678 111.021, 159.550 111.046 C 158.422 111.071, 152.775 112.546, 147 114.325 M 155.500 128.216 C 152.200 129.348, 149.329 130.421, 149.119 130.601 C 148.910 130.781, 149.781 133.532, 151.054 136.714 C 152.328 139.896, 154.417 144.188, 155.697 146.250 C 156.978 148.313, 158.429 150, 158.924 150 C 159.418 150, 162.450 149.019, 165.661 147.821 C 168.872 146.622, 171.683 145.502, 171.906 145.331 C 172.130 145.160, 171.499 143.216, 170.505 141.010 C 169.372 138.498, 168.028 137, 166.907 137 C 165.923 137, 164.777 137.551, 164.361 138.225 C 163.945 138.899, 163.581 140.586, 163.552 141.975 C 163.513 143.857, 162.892 144.586, 161.113 144.837 C 159.800 145.023, 158.345 144.573, 157.878 143.837 C 157.412 143.102, 157.024 140.874, 157.015 138.886 C 157.004 136.302, 157.751 134.522, 159.636 132.636 C 161.086 131.186, 162.902 130, 163.672 130 C 164.760 130, 164.833 129.557, 164 128 C 163.411 126.900, 162.608 126.036, 162.215 126.079 C 161.822 126.122, 158.800 127.084, 155.500 128.216 M 133.750 136.267 C 129.470 137.946, 126 139.906, 126 140.644 C 126 141.378, 127.143 144.835, 128.541 148.326 C 129.939 151.818, 132.316 156.152, 133.824 157.958 L 136.566 161.243 144.242 157.371 L 151.919 153.500 148.942 148.724 C 146.303 144.491, 145.733 144.073, 143.927 145.039 C 142.427 145.842, 141.970 146.937, 142.195 149.187 C 142.392 151.166, 141.931 152.610, 140.886 153.281 C 139.998 153.852, 138.561 154.045, 137.691 153.712 C 136.822 153.378, 135.821 151.561, 135.467 149.674 C 135.041 147.405, 135.353 145.217, 136.389 143.215 C 137.250 141.550, 139.251 139.614, 140.836 138.912 C 142.883 138.006, 143.579 137.105, 143.238 135.803 C 142.974 134.794, 142.475 133.802, 142.129 133.597 C 141.783 133.393, 138.012 134.594, 133.750 136.267 M 110.250 146.778 C 105.913 148.967, 103 151.064, 103 151.997 C 103 152.855, 104.546 156.694, 106.436 160.528 C 108.326 164.363, 110.770 168.618, 111.867 169.984 L 113.862 172.468 121.931 168.534 C 126.369 166.370, 130 164.487, 130 164.350 C 130 164.213, 128.602 162.029, 126.894 159.497 C 124.936 156.597, 123.179 155.013, 122.144 155.216 C 121.052 155.429, 120.479 156.594, 120.439 158.688 C 120.405 160.422, 119.788 162.551, 119.066 163.420 C 118.345 164.289, 117.392 165, 116.949 165 C 116.506 165, 115.436 164.293, 114.571 163.429 C 113.707 162.564, 113 160.285, 113 158.363 C 113 156.441, 113.463 154.003, 114.030 152.945 C 114.596 151.886, 116.384 150.336, 118.003 149.499 C 120.665 148.122, 120.838 147.739, 119.813 145.488 C 119.189 144.120, 118.414 143.027, 118.089 143.059 C 117.765 143.092, 114.237 144.765, 110.250 146.778 M 164 155.873 C 156.575 159.062, 144.147 164.896, 136.381 168.838 C 128.616 172.780, 121.054 176.956, 119.577 178.118 C 117.857 179.471, 117.001 180.999, 117.196 182.365 C 117.434 184.037, 118.150 184.473, 120.500 184.376 C 122.150 184.307, 126.023 182.732, 129.108 180.876 C 132.192 179.019, 144.904 172.592, 157.358 166.593 C 169.811 160.594, 180 155.168, 180 154.534 C 180 153.901, 179.438 152.638, 178.750 151.729 C 177.616 150.229, 176.248 150.613, 164 155.873 M 167.595 170.983 C 161.768 174.824, 157 178.266, 157 178.632 C 157 178.998, 159.031 181.765, 161.513 184.780 C 165.050 189.076, 165.781 190.559, 164.891 191.631 C 164.266 192.384, 163.037 193, 162.159 193 C 161.281 193, 158.248 190.713, 155.418 187.919 L 150.273 182.838 148.046 185.669 C 146.413 187.744, 145.958 189.353, 146.339 191.700 C 146.624 193.461, 148.640 197.511, 150.817 200.700 C 152.994 203.890, 158.089 209.689, 162.138 213.587 C 166.187 217.485, 172.269 222.704, 175.653 225.185 C 179.037 227.666, 185.774 231.634, 190.623 234.003 C 195.472 236.372, 203.248 239.358, 207.903 240.639 C 212.559 241.919, 216.777 243.377, 217.277 243.877 C 217.778 244.378, 218.029 245.623, 217.835 246.644 C 217.611 247.824, 216.458 248.618, 214.668 248.823 C 213.120 249.001, 207.724 247.988, 202.677 246.571 C 197.630 245.153, 188.550 241.551, 182.500 238.564 C 176.450 235.578, 168.350 231.017, 164.500 228.429 C 160.650 225.841, 154.023 220.831, 149.774 217.295 C 145.524 213.760, 139.631 208.197, 136.678 204.933 C 133.725 201.670, 131.069 199, 130.776 199 C 130.482 199, 129.667 200.389, 128.964 202.086 C 128.261 203.784, 127.715 207.116, 127.751 209.492 C 127.787 211.867, 128.560 215.379, 129.470 217.295 C 130.379 219.212, 133.581 223.125, 136.585 225.993 L 142.047 231.205 145.485 229.574 C 147.516 228.611, 149.946 228.199, 151.421 228.569 C 152.794 228.914, 154.345 229.715, 154.867 230.348 C 155.389 230.982, 156.750 234.200, 157.890 237.500 C 159.156 241.162, 161.111 244.474, 162.906 246 C 164.524 247.375, 169.721 250.442, 174.456 252.816 C 179.191 255.189, 187.267 258.198, 192.403 259.500 C 197.538 260.803, 205.511 262.387, 210.120 263.021 C 214.729 263.654, 224.125 264.151, 231 264.125 C 237.897 264.100, 247.077 263.391, 251.479 262.544 C 255.868 261.699, 261.852 260.313, 264.778 259.462 C 269.599 258.061, 270.469 257.341, 274.054 251.796 C 276.229 248.430, 277.826 245.493, 277.603 245.270 C 277.380 245.047, 274.790 245.589, 271.849 246.475 C 268.907 247.361, 263.224 248.723, 259.221 249.500 C 255.217 250.278, 251.315 250.674, 250.548 250.380 C 249.782 250.086, 248.909 249.205, 248.609 248.423 C 248.308 247.640, 248.299 246.385, 248.587 245.633 C 248.876 244.882, 252.124 243.471, 255.806 242.498 C 259.488 241.526, 265.650 239.284, 269.500 237.516 C 273.350 235.748, 278.942 232.449, 281.927 230.186 C 284.911 227.922, 288.237 224.675, 289.316 222.970 C 290.971 220.355, 291.186 218.764, 290.688 212.816 C 290.363 208.937, 289.870 205.537, 289.593 205.260 C 289.316 204.983, 286.032 205.356, 282.295 206.088 C 278.479 206.836, 269.362 207.393, 261.500 207.359 C 250.275 207.310, 245.815 206.850, 239 205.037 C 234.325 203.793, 226.729 200.959, 222.121 198.739 C 217.512 196.518, 209.412 191.478, 204.121 187.539 C 198.829 183.600, 191.463 177.047, 187.750 172.978 C 184.037 168.908, 181 165.224, 181 164.789 C 181 164.355, 180.368 164, 179.595 164 C 178.823 164, 173.423 167.142, 167.595 170.983 M 372.721 166.595 C 368.992 167.408, 362.017 169.405, 357.221 171.033 C 352.424 172.661, 347.938 174.756, 347.250 175.688 C 346.563 176.620, 346 178.188, 346 179.172 C 346 180.218, 346.979 181.208, 348.356 181.553 C 349.751 181.903, 353.727 181.062, 358.106 179.490 C 362.173 178.029, 368.596 175.747, 372.381 174.417 C 376.165 173.088, 380.467 172, 381.940 172 C 383.413 172, 385.491 171.351, 386.559 170.559 C 388.109 169.408, 388.278 168.753, 387.399 167.309 C 386.734 166.217, 384.949 165.424, 382.899 165.309 C 381.029 165.203, 376.449 165.782, 372.721 166.595 M 322.375 175.465 C 322.053 176.303, 324.274 180.475, 327.565 185.215 C 330.728 189.772, 334.684 194.963, 336.355 196.750 C 338.025 198.537, 339.979 200, 340.696 200 C 341.413 200, 342 199.425, 342 198.723 C 342 198.020, 341.259 196.332, 340.352 194.973 C 339.446 193.613, 335.561 188.338, 331.719 183.250 C 327.877 178.162, 324.329 174, 323.835 174 C 323.341 174, 322.684 174.659, 322.375 175.465 M 317.750 188.620 C 316.238 189.414, 315 190.443, 315 190.906 C 315 191.369, 316.988 191.693, 319.418 191.624 C 323.718 191.503, 323.792 191.446, 322.179 189.500 C 321.267 188.400, 320.517 187.427, 320.511 187.338 C 320.505 187.249, 319.262 187.826, 317.750 188.620 M 321.814 196.208 C 319.955 198.140, 318.126 199, 315.878 199 C 313.920 199, 311.711 198.137, 310.318 196.829 C 309.048 195.636, 307.744 194.923, 307.421 195.246 C 307.098 195.568, 308.350 198.084, 310.204 200.836 L 313.573 205.840 320.037 200.826 C 323.591 198.068, 326.623 195.693, 326.774 195.548 C 326.925 195.404, 326.475 194.865, 325.774 194.351 C 324.890 193.703, 323.678 194.271, 321.814 196.208 M 294.362 195.500 C 294.045 196.325, 294.021 197.611, 294.307 198.358 C 294.594 199.106, 298.230 204.956, 302.387 211.358 C 306.544 217.761, 310.606 223, 311.414 223 C 312.221 223, 313.148 222.570, 313.473 222.044 C 313.798 221.518, 313.432 219.577, 312.660 217.730 C 311.889 215.882, 308.414 210.125, 304.940 204.936 C 301.466 199.746, 298.145 195.169, 297.561 194.765 C 296.978 194.361, 296.148 194.024, 295.719 194.015 C 295.289 194.007, 294.678 194.675, 294.362 195.500 M 170.724 197.134 C 169.776 197.665, 169 198.955, 169 200 C 169 201.045, 169.776 202.335, 170.724 202.866 C 171.818 203.478, 173.098 203.483, 174.224 202.880 C 175.201 202.357, 176 201.061, 176 200 C 176 198.939, 175.201 197.643, 174.224 197.120 C 173.098 196.517, 171.818 196.522, 170.724 197.134 M 149 239.903 C 149 242.665, 149.911 247.359, 151.024 250.334 C 152.156 253.360, 155.303 258.321, 158.168 261.595 C 160.984 264.813, 163.986 269.033, 164.840 270.973 C 165.952 273.503, 166.506 278.951, 166.800 290.250 L 167.210 306 170.105 306 L 173 306 172.965 289.750 C 172.941 278.886, 172.527 272.802, 171.715 271.393 C 171.047 270.235, 168.087 266.552, 165.138 263.210 C 162.188 259.868, 158.787 255.641, 157.579 253.817 C 156.371 251.992, 154.396 248.077, 153.191 245.117 C 151.986 242.156, 151 238.920, 151 237.926 C 151 236.931, 150.550 235.840, 150 235.500 C 149.384 235.119, 149 236.810, 149 239.903 M 286.614 241.500 C 285.590 245.074, 283.494 249.983, 281.956 252.408 C 280.418 254.834, 276.216 260.025, 272.618 263.946 C 268.418 268.523, 265.867 272.224, 265.492 274.287 C 265.170 276.054, 265.040 283.800, 265.203 291.500 L 265.500 305.500 268.750 305.813 L 272 306.127 272 291.189 C 272 280.566, 272.427 275.041, 273.478 272.062 C 274.291 269.758, 277.007 265.539, 279.513 262.686 C 282.019 259.834, 285.219 255.163, 286.625 252.307 C 288.094 249.320, 289.413 244.540, 289.729 241.057 C 290.031 237.721, 289.873 235, 289.376 235 C 288.881 235, 287.637 237.925, 286.614 241.500 M 231.040 245.452 C 230.377 246.251, 229.991 247.713, 230.181 248.702 C 230.422 249.952, 231.434 250.500, 233.500 250.500 C 235.566 250.500, 236.578 249.952, 236.819 248.702 C 237.009 247.713, 236.623 246.251, 235.960 245.452 C 235.297 244.653, 234.190 244, 233.500 244 C 232.810 244, 231.703 244.653, 231.040 245.452 M 179.389 272.325 C 179.710 273.521, 179.979 281.593, 179.986 290.262 L 180 306.023 219.250 305.762 L 258.500 305.500 258.778 291.167 L 259.056 276.835 252.278 277.667 C 248.550 278.125, 237.625 278.484, 228 278.465 C 215.159 278.440, 208.261 277.957, 202.090 276.653 C 197.465 275.675, 190.334 273.812, 186.244 272.513 L 178.806 270.151 179.389 272.325 M 144 315 C 142.889 316.111, 142 318.333, 142 320 L 142 323 203.500 323 L 265 323 265 319.571 C 265 317.686, 264.293 315.436, 263.429 314.571 C 262.036 313.179, 255.258 313, 203.929 313 C 147.333 313, 145.954 313.046, 144 315" stroke="none" fill="%230d6efd" fill-rule="evenodd"/></svg>';var qc={GENERAL_RED:ia,GENERAL_BLACK:la,ADVISOR_RED:l8,ADVISOR_BLACK:s8,ELEPHANT_RED:c8,ELEPHANT_BLACK:u8,CHARIOT_RED:d8,CHARIOT_BLACK:f8,HORSE_RED:C8,HORSE_BLACK:p8,CANNON_RED:m8,CANNON_BLACK:sa,SOLDIER_RED:g8,SOLDIER_BLACK:ca},ah=qc,rh=e=>qc[e]||null;var T8={};ka(T8,{ADVISOR_BLACK:()=>y8,ADVISOR_RED:()=>v8,CANNON_BLACK:()=>N8,CANNON_RED:()=>E8,CHARIOT_BLACK:()=>R8,CHARIOT_RED:()=>S8,ELEPHANT_BLACK:()=>x8,ELEPHANT_RED:()=>b8,GENERAL_BLACK:()=>da,GENERAL_RED:()=>ua,HORSE_BLACK:()=>w8,HORSE_RED:()=>fa,SOLDIER_BLACK:()=>Ca,SOLDIER_RED:()=>_8,default:()=>yh,getPieceAsset:()=>vh});var ua='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23dc3545" fill-rule="evenodd"/><path d="M 250.145 120.016 C 242.546 123.235, 238 129.776, 238 137.492 C 238 149.983, 248.772 158.342, 260.750 155.148 C 280.268 149.944, 277.400 120.819, 257.225 119.360 C 254.626 119.172, 251.440 119.467, 250.145 120.016 M 250 161.597 C 250 162.385, 247.798 169.709, 245.107 177.872 C 232.371 216.507, 214.034 240.971, 188.793 253.005 C 175.686 259.253, 169.728 260.480, 153 260.374 C 133.163 260.248, 117.768 256.541, 96.989 246.886 L 88.247 242.825 83.643 246.339 C 81.112 248.271, 78.153 250.134, 77.068 250.478 C 75.176 251.079, 75.249 251.534, 78.894 261.802 C 80.982 267.686, 87.741 287.598, 93.914 306.051 C 100.086 324.504, 105.490 340.175, 105.923 340.875 C 106.534 341.864, 108.022 341.599, 112.605 339.682 C 131.926 331.600, 165.693 324.400, 200 321.047 C 270.485 314.158, 352.370 321.537, 395.333 338.649 C 400.191 340.584, 404.388 341.945, 404.659 341.674 C 405.336 340.997, 434.941 253.780, 434.974 252.365 C 434.988 251.741, 433.762 250.445, 432.250 249.486 C 430.738 248.526, 428.281 246.608, 426.792 245.223 L 424.084 242.706 413.792 247.290 C 391.704 257.129, 377.409 260.467, 357.500 260.434 C 341.355 260.408, 335.090 259.073, 322.310 252.935 C 297.136 240.843, 278.362 215.038, 265.523 174.881 L 260.850 160.262 255.425 160.213 C 251.360 160.176, 250 160.523, 250 161.597 M 136.236 164.570 C 131.922 166.719, 130.643 168.031, 128.412 172.591 C 126.315 176.877, 125.853 179.003, 126.252 182.539 C 128.144 199.333, 150.417 204.904, 159.684 190.902 C 161.996 187.408, 162.500 185.559, 162.500 180.573 C 162.500 173.019, 159.617 168.219, 152.865 164.531 C 146.991 161.323, 142.731 161.333, 136.236 164.570 M 359 164.561 C 341.085 174.565, 349.555 201.389, 369.755 198.620 C 378.263 197.454, 384.244 191.580, 385.608 183.052 C 386.808 175.544, 382.042 167.287, 374.541 163.880 C 369.024 161.374, 364.341 161.579, 359 164.561 M 153.500 201.597 C 151.850 202.319, 149.077 202.930, 147.338 202.955 C 143.769 203.006, 143.692 203.248, 142.449 218.407 C 142.092 222.755, 140.521 232.644, 138.957 240.381 C 137.394 248.118, 136.261 254.595, 136.440 254.773 C 136.619 254.952, 140.756 255.514, 145.633 256.022 C 156.086 257.111, 168.824 255.930, 178.134 253.010 C 183.836 251.221, 199 243.586, 199 242.503 C 199 242.267, 196.267 240.218, 192.926 237.950 C 184.246 232.055, 174.017 222.097, 164.756 210.524 C 160.344 205.011, 156.681 200.451, 156.617 200.392 C 156.553 200.332, 155.150 200.875, 153.500 201.597 M 350.035 207.139 C 341.515 218.311, 331.312 228.655, 321.826 235.739 C 316.950 239.381, 313.306 242.695, 313.730 243.104 C 316.341 245.625, 330.907 252.321, 337.588 254.072 C 345.978 256.270, 363.463 257.029, 371.833 255.558 C 375.904 254.842, 376.125 254.636, 375.500 252.148 C 373.299 243.393, 370.915 230.170, 369.974 221.500 C 367.792 201.379, 368.237 203, 364.907 203 C 363.273 203, 360.444 202.377, 358.620 201.615 L 355.305 200.229 350.035 207.139 M 61.502 212.575 C 54.179 216.394, 50.564 222.733, 51.218 230.610 C 51.774 237.324, 55.115 242.354, 60.889 245.171 C 69.530 249.388, 79.045 246.973, 84.465 239.188 C 89.621 231.780, 88.474 222.619, 81.484 215.380 C 77.350 211.098, 67.095 209.659, 61.502 212.575 M 434.533 212.630 C 424.495 218.251, 421.328 230.271, 427.535 239.188 C 432.955 246.973, 442.470 249.388, 451.111 245.171 C 463.125 239.309, 464.351 222.709, 453.389 214.348 C 448.807 210.853, 439.259 209.983, 434.533 212.630 M 243.651 237.940 C 237.793 245.608, 233 252.639, 233 253.566 C 233 256.547, 254.986 297.944, 256.291 297.419 C 257.760 296.827, 279 255.781, 279 253.534 C 279 251.054, 257.920 224, 255.988 224 C 254.998 224, 249.909 229.750, 243.651 237.940 M 246.622 241.479 C 241.880 247.793, 238 253.415, 238 253.972 C 238 255.322, 255.325 290, 256 290 C 256.675 290, 274 255.322, 274 253.972 C 274 252.654, 256.990 230, 256 230 C 255.585 230, 251.365 235.166, 246.622 241.479 M 220.500 323.592 C 218.300 323.801, 210.875 324.449, 204 325.032 C 170.341 327.885, 138.431 334.447, 115.681 343.193 C 109.423 345.598, 107.989 346.528, 108.496 347.849 C 108.845 348.757, 110.096 352.268, 111.277 355.652 L 113.425 361.804 117.462 359.085 C 129.173 351.199, 151.861 346.129, 192.500 342.316 C 219.547 339.778, 292.324 339.771, 319.500 342.304 C 360.519 346.127, 387.148 352.406, 395.746 360.283 C 396.981 361.415, 398.137 362.152, 398.315 361.921 C 398.932 361.115, 404 346.666, 403.751 346.421 C 402.884 345.566, 387.034 339.834, 379.500 337.650 C 359.933 331.978, 341.514 328.548, 314 325.453 C 300.359 323.918, 231.490 322.548, 220.500 323.592 M 226.500 344.586 C 177.875 346.653, 138.535 352.611, 123.709 360.154 C 109.881 367.189, 114.785 374.890, 137.237 381.396 C 155.715 386.750, 185.512 390.278, 228.250 392.171 C 280.788 394.498, 346.134 389.692, 374.763 381.396 C 418.495 368.723, 392.188 352.827, 317 346.493 C 300.213 345.079, 243.178 343.877, 226.500 344.586" stroke="none" fill="%23dc3545" fill-rule="evenodd"/></svg>';var da='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23495057" fill-rule="evenodd"/><path d="M 250.145 120.016 C 242.546 123.235, 238 129.776, 238 137.492 C 238 149.983, 248.772 158.342, 260.750 155.148 C 280.268 149.944, 277.400 120.819, 257.225 119.360 C 254.626 119.172, 251.440 119.467, 250.145 120.016 M 250 161.597 C 250 162.385, 247.798 169.709, 245.107 177.872 C 232.371 216.507, 214.034 240.971, 188.793 253.005 C 175.686 259.253, 169.728 260.480, 153 260.374 C 133.163 260.248, 117.768 256.541, 96.989 246.886 L 88.247 242.825 83.643 246.339 C 81.112 248.271, 78.153 250.134, 77.068 250.478 C 75.176 251.079, 75.249 251.534, 78.894 261.802 C 80.982 267.686, 87.741 287.598, 93.914 306.051 C 100.086 324.504, 105.490 340.175, 105.923 340.875 C 106.534 341.864, 108.022 341.599, 112.605 339.682 C 131.926 331.600, 165.693 324.400, 200 321.047 C 270.485 314.158, 352.370 321.537, 395.333 338.649 C 400.191 340.584, 404.388 341.945, 404.659 341.674 C 405.336 340.997, 434.941 253.780, 434.974 252.365 C 434.988 251.741, 433.762 250.445, 432.250 249.486 C 430.738 248.526, 428.281 246.608, 426.792 245.223 L 424.084 242.706 413.792 247.290 C 391.704 257.129, 377.409 260.467, 357.500 260.434 C 341.355 260.408, 335.090 259.073, 322.310 252.935 C 297.136 240.843, 278.362 215.038, 265.523 174.881 L 260.850 160.262 255.425 160.213 C 251.360 160.176, 250 160.523, 250 161.597 M 136.236 164.570 C 131.922 166.719, 130.643 168.031, 128.412 172.591 C 126.315 176.877, 125.853 179.003, 126.252 182.539 C 128.144 199.333, 150.417 204.904, 159.684 190.902 C 161.996 187.408, 162.500 185.559, 162.500 180.573 C 162.500 173.019, 159.617 168.219, 152.865 164.531 C 146.991 161.323, 142.731 161.333, 136.236 164.570 M 359 164.561 C 341.085 174.565, 349.555 201.389, 369.755 198.620 C 378.263 197.454, 384.244 191.580, 385.608 183.052 C 386.808 175.544, 382.042 167.287, 374.541 163.880 C 369.024 161.374, 364.341 161.579, 359 164.561 M 153.500 201.597 C 151.850 202.319, 149.077 202.930, 147.338 202.955 C 143.769 203.006, 143.692 203.248, 142.449 218.407 C 142.092 222.755, 140.521 232.644, 138.957 240.381 C 137.394 248.118, 136.261 254.595, 136.440 254.773 C 136.619 254.952, 140.756 255.514, 145.633 256.022 C 156.086 257.111, 168.824 255.930, 178.134 253.010 C 183.836 251.221, 199 243.586, 199 242.503 C 199 242.267, 196.267 240.218, 192.926 237.950 C 184.246 232.055, 174.017 222.097, 164.756 210.524 C 160.344 205.011, 156.681 200.451, 156.617 200.392 C 156.553 200.332, 155.150 200.875, 153.500 201.597 M 350.035 207.139 C 341.515 218.311, 331.312 228.655, 321.826 235.739 C 316.950 239.381, 313.306 242.695, 313.730 243.104 C 316.341 245.625, 330.907 252.321, 337.588 254.072 C 345.978 256.270, 363.463 257.029, 371.833 255.558 C 375.904 254.842, 376.125 254.636, 375.500 252.148 C 373.299 243.393, 370.915 230.170, 369.974 221.500 C 367.792 201.379, 368.237 203, 364.907 203 C 363.273 203, 360.444 202.377, 358.620 201.615 L 355.305 200.229 350.035 207.139 M 61.502 212.575 C 54.179 216.394, 50.564 222.733, 51.218 230.610 C 51.774 237.324, 55.115 242.354, 60.889 245.171 C 69.530 249.388, 79.045 246.973, 84.465 239.188 C 89.621 231.780, 88.474 222.619, 81.484 215.380 C 77.350 211.098, 67.095 209.659, 61.502 212.575 M 434.533 212.630 C 424.495 218.251, 421.328 230.271, 427.535 239.188 C 432.955 246.973, 442.470 249.388, 451.111 245.171 C 463.125 239.309, 464.351 222.709, 453.389 214.348 C 448.807 210.853, 439.259 209.983, 434.533 212.630 M 243.651 237.940 C 237.793 245.608, 233 252.639, 233 253.566 C 233 256.547, 254.986 297.944, 256.291 297.419 C 257.760 296.827, 279 255.781, 279 253.534 C 279 251.054, 257.920 224, 255.988 224 C 254.998 224, 249.909 229.750, 243.651 237.940 M 246.622 241.479 C 241.880 247.793, 238 253.415, 238 253.972 C 238 255.322, 255.325 290, 256 290 C 256.675 290, 274 255.322, 274 253.972 C 274 252.654, 256.990 230, 256 230 C 255.585 230, 251.365 235.166, 246.622 241.479 M 220.500 323.592 C 218.300 323.801, 210.875 324.449, 204 325.032 C 170.341 327.885, 138.431 334.447, 115.681 343.193 C 109.423 345.598, 107.989 346.528, 108.496 347.849 C 108.845 348.757, 110.096 352.268, 111.277 355.652 L 113.425 361.804 117.462 359.085 C 129.173 351.199, 151.861 346.129, 192.500 342.316 C 219.547 339.778, 292.324 339.771, 319.500 342.304 C 360.519 346.127, 387.148 352.406, 395.746 360.283 C 396.981 361.415, 398.137 362.152, 398.315 361.921 C 398.932 361.115, 404 346.666, 403.751 346.421 C 402.884 345.566, 387.034 339.834, 379.500 337.650 C 359.933 331.978, 341.514 328.548, 314 325.453 C 300.359 323.918, 231.490 322.548, 220.500 323.592 M 226.500 344.586 C 177.875 346.653, 138.535 352.611, 123.709 360.154 C 109.881 367.189, 114.785 374.890, 137.237 381.396 C 155.715 386.750, 185.512 390.278, 228.250 392.171 C 280.788 394.498, 346.134 389.692, 374.763 381.396 C 418.495 368.723, 392.188 352.827, 317 346.493 C 300.213 345.079, 243.178 343.877, 226.500 344.586" stroke="none" fill="%23495057" fill-rule="evenodd"/></svg>';var v8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23dc3545" fill-rule="evenodd"/><path d="M 245.500 90.190 C 221.300 111.121, 201.122 128.898, 200.660 129.695 C 199.259 132.112, 200.856 135.874, 203.965 137.482 C 208.214 139.679, 219.318 139.437, 226.556 136.990 C 235.877 133.839, 241.457 128.918, 248.933 117.256 C 252.545 111.622, 263.198 95.197, 272.606 80.756 C 292.037 50.930, 291.391 51.977, 290.309 52.067 C 289.864 52.104, 269.700 69.260, 245.500 90.190 M 277.500 113.715 C 251.223 118.846, 252.864 118.262, 250.118 123.462 C 243.363 136.254, 225.640 145.130, 209.523 143.793 C 205.243 143.439, 203.121 142.629, 200.090 140.193 L 196.179 137.050 181.936 162.275 C 166.946 188.821, 161.645 196.318, 148.536 209.509 C 129.286 228.882, 110.782 240.649, 90.250 246.576 C 89.294 246.852, 89 252.640, 89 271.156 L 89 295.374 91.750 292.887 C 93.263 291.519, 98.353 286.822, 103.062 282.450 C 109.375 276.589, 113.054 273.993, 117.062 272.570 C 133.529 266.727, 160.606 252.919, 167.546 246.825 L 171 243.793 170.976 250.146 C 170.948 257.629, 167.989 265.701, 162.934 272.084 C 155.537 281.423, 138.780 289.435, 120.532 292.357 C 115.802 293.114, 111.697 293.970, 111.409 294.258 C 110.897 294.770, 162.959 332.663, 165.532 333.651 C 166.582 334.053, 166.739 331.165, 166.341 318.825 L 165.846 303.500 184.018 291.500 C 194.013 284.900, 204.850 277.363, 208.100 274.750 C 213.060 270.764, 214.693 269.999, 218.255 269.992 C 240.056 269.953, 253.221 263.980, 258.301 251.822 C 259.234 249.589, 260.660 248.060, 262.142 247.704 C 263.439 247.392, 278.675 244.582, 296 241.459 C 313.325 238.335, 327.854 235.453, 328.287 235.053 C 328.720 234.653, 322.922 228.352, 315.401 221.050 L 301.728 207.775 306.614 208.396 C 309.301 208.737, 335.125 211.260, 364 214.001 C 392.875 216.743, 417.750 219.138, 419.277 219.324 C 420.804 219.509, 421.929 219.306, 421.777 218.871 C 421.625 218.437, 415.809 212.073, 408.854 204.729 C 396.934 192.145, 395.613 191.073, 385.854 186.067 C 375.951 180.987, 335.559 162.048, 331.607 160.631 C 329.289 159.801, 328.534 160.404, 340.398 153.598 C 346.033 150.366, 356.353 142.876, 364.356 136.210 L 378.416 124.500 371.958 124.268 C 353.510 123.607, 342.009 121.368, 321.360 114.421 C 305.136 108.962, 302.092 108.913, 277.500 113.715 M 216.788 157.743 C 214.025 158.371, 182.794 201.535, 183.178 204.196 C 184.006 209.944, 195.367 213.165, 205.425 210.503 C 225.163 205.278, 238.045 189.022, 234.090 174.333 C 232.142 167.100, 221.311 156.714, 216.788 157.743 M 202.322 182.814 C 187.270 203.330, 187.162 203.514, 189.271 205.154 C 196.472 210.756, 212.521 206.384, 222.918 195.987 C 231.689 187.216, 232.941 176.923, 226.224 168.795 C 222.816 164.673, 219.801 162.057, 218.500 162.097 C 217.950 162.113, 210.670 171.436, 202.322 182.814 M 324.269 223.768 C 329.621 229.140, 334 234.305, 334 235.245 C 334 236.185, 332.988 237.589, 331.750 238.365 C 330.512 239.141, 315.806 242.307, 299.070 245.401 C 282.333 248.495, 268.488 251.179, 268.302 251.365 C 267.463 252.204, 275.881 257, 278.192 257 C 282.763 257, 298.291 262.022, 305.452 265.816 C 314.492 270.606, 325.191 280.983, 328.440 288.112 C 331.911 295.729, 333.165 304.762, 331.954 313.422 C 330.729 322.181, 329.154 327.108, 322.477 343.066 C 312.194 367.642, 306.342 390, 304.063 413.424 C 302.873 425.650, 302.688 444.045, 303.652 454.250 L 304.289 461 354.145 461 C 381.565 461, 404 460.620, 404 460.155 C 404 459.690, 403.052 458.453, 401.894 457.405 C 396.054 452.124, 391.973 438.306, 391.273 421.447 C 390.112 393.478, 395.198 370.984, 414.797 317.397 C 420.627 301.457, 422.278 292.752, 422.361 277.500 C 422.462 259.107, 418.932 244.940, 410.214 228.750 C 407.560 223.821, 406.029 221.998, 404.540 221.993 C 403.418 221.989, 383.825 220.192, 361 218 C 338.175 215.808, 318.383 214.011, 317.019 214.007 C 314.875 214.001, 315.860 215.327, 324.269 223.768 M 281 262.408 C 281 262.632, 282.238 265.200, 283.750 268.114 C 285.942 272.337, 286.570 275.064, 286.846 281.555 C 287.467 296.144, 282.278 309.902, 268.502 330.192 C 262.932 338.397, 261.272 341.551, 262.216 342.138 C 267.143 345.199, 287.487 345.949, 297.356 343.434 C 304.433 341.631, 318.506 335.092, 321.618 332.163 C 325.117 328.867, 328.249 315.234, 327.843 305.061 C 327.552 297.761, 327.001 295.437, 324.226 289.803 C 318.634 278.452, 307.707 270.189, 290.575 264.357 C 283.988 262.115, 281 261.507, 281 262.408 M 312.650 342.165 C 297.248 349.979, 272.911 351.557, 259 345.644 C 257.907 345.179, 254.749 348.872, 247.363 359.253 C 235.642 375.728, 227.944 388.807, 222.556 401.401 L 218.748 410.302 221.124 412.228 C 225.852 416.062, 239.581 421.895, 246.467 422.995 C 262.299 425.524, 278.982 420.276, 294.696 407.823 C 301.407 402.506, 301.366 402.579, 303.016 393 C 305.016 381.389, 309.053 366.784, 314.055 353.060 C 316.749 345.668, 318.852 339.525, 318.727 339.409 C 318.602 339.293, 315.868 340.533, 312.650 342.165 M 295.655 412.479 C 290.483 417.049, 277.867 423.488, 270.500 425.318 C 260.828 427.722, 255.976 428.092, 247.820 427.049 C 238.099 425.806, 230.064 422.989, 223.158 418.404 C 219.324 415.859, 217.522 415.155, 217.001 415.999 C 214.585 419.908, 210.091 445.537, 210.031 455.750 L 210 461 255.111 461 L 300.223 461 299.564 457.489 C 298.663 452.689, 298.631 426.116, 299.514 416.690 C 299.911 412.460, 300.070 409.019, 299.867 409.042 C 299.665 409.065, 297.770 410.612, 295.655 412.479" stroke="none" fill="%23dc3545" fill-rule="evenodd"/></svg>';var y8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23495057" fill-rule="evenodd"/><path d="M 245.500 90.190 C 221.300 111.121, 201.122 128.898, 200.660 129.695 C 199.259 132.112, 200.856 135.874, 203.965 137.482 C 208.214 139.679, 219.318 139.437, 226.556 136.990 C 235.877 133.839, 241.457 128.918, 248.933 117.256 C 252.545 111.622, 263.198 95.197, 272.606 80.756 C 292.037 50.930, 291.391 51.977, 290.309 52.067 C 289.864 52.104, 269.700 69.260, 245.500 90.190 M 277.500 113.715 C 251.223 118.846, 252.864 118.262, 250.118 123.462 C 243.363 136.254, 225.640 145.130, 209.523 143.793 C 205.243 143.439, 203.121 142.629, 200.090 140.193 L 196.179 137.050 181.936 162.275 C 166.946 188.821, 161.645 196.318, 148.536 209.509 C 129.286 228.882, 110.782 240.649, 90.250 246.576 C 89.294 246.852, 89 252.640, 89 271.156 L 89 295.374 91.750 292.887 C 93.263 291.519, 98.353 286.822, 103.062 282.450 C 109.375 276.589, 113.054 273.993, 117.062 272.570 C 133.529 266.727, 160.606 252.919, 167.546 246.825 L 171 243.793 170.976 250.146 C 170.948 257.629, 167.989 265.701, 162.934 272.084 C 155.537 281.423, 138.780 289.435, 120.532 292.357 C 115.802 293.114, 111.697 293.970, 111.409 294.258 C 110.897 294.770, 162.959 332.663, 165.532 333.651 C 166.582 334.053, 166.739 331.165, 166.341 318.825 L 165.846 303.500 184.018 291.500 C 194.013 284.900, 204.850 277.363, 208.100 274.750 C 213.060 270.764, 214.693 269.999, 218.255 269.992 C 240.056 269.953, 253.221 263.980, 258.301 251.822 C 259.234 249.589, 260.660 248.060, 262.142 247.704 C 263.439 247.392, 278.675 244.582, 296 241.459 C 313.325 238.335, 327.854 235.453, 328.287 235.053 C 328.720 234.653, 322.922 228.352, 315.401 221.050 L 301.728 207.775 306.614 208.396 C 309.301 208.737, 335.125 211.260, 364 214.001 C 392.875 216.743, 417.750 219.138, 419.277 219.324 C 420.804 219.509, 421.929 219.306, 421.777 218.871 C 421.625 218.437, 415.809 212.073, 408.854 204.729 C 396.934 192.145, 395.613 191.073, 385.854 186.067 C 375.951 180.987, 335.559 162.048, 331.607 160.631 C 329.289 159.801, 328.534 160.404, 340.398 153.598 C 346.033 150.366, 356.353 142.876, 364.356 136.210 L 378.416 124.500 371.958 124.268 C 353.510 123.607, 342.009 121.368, 321.360 114.421 C 305.136 108.962, 302.092 108.913, 277.500 113.715 M 216.788 157.743 C 214.025 158.371, 182.794 201.535, 183.178 204.196 C 184.006 209.944, 195.367 213.165, 205.425 210.503 C 225.163 205.278, 238.045 189.022, 234.090 174.333 C 232.142 167.100, 221.311 156.714, 216.788 157.743 M 202.322 182.814 C 187.270 203.330, 187.162 203.514, 189.271 205.154 C 196.472 210.756, 212.521 206.384, 222.918 195.987 C 231.689 187.216, 232.941 176.923, 226.224 168.795 C 222.816 164.673, 219.801 162.057, 218.500 162.097 C 217.950 162.113, 210.670 171.436, 202.322 182.814 M 324.269 223.768 C 329.621 229.140, 334 234.305, 334 235.245 C 334 236.185, 332.988 237.589, 331.750 238.365 C 330.512 239.141, 315.806 242.307, 299.070 245.401 C 282.333 248.495, 268.488 251.179, 268.302 251.365 C 267.463 252.204, 275.881 257, 278.192 257 C 282.763 257, 298.291 262.022, 305.452 265.816 C 314.492 270.606, 325.191 280.983, 328.440 288.112 C 331.911 295.729, 333.165 304.762, 331.954 313.422 C 330.729 322.181, 329.154 327.108, 322.477 343.066 C 312.194 367.642, 306.342 390, 304.063 413.424 C 302.873 425.650, 302.688 444.045, 303.652 454.250 L 304.289 461 354.145 461 C 381.565 461, 404 460.620, 404 460.155 C 404 459.690, 403.052 458.453, 401.894 457.405 C 396.054 452.124, 391.973 438.306, 391.273 421.447 C 390.112 393.478, 395.198 370.984, 414.797 317.397 C 420.627 301.457, 422.278 292.752, 422.361 277.500 C 422.462 259.107, 418.932 244.940, 410.214 228.750 C 407.560 223.821, 406.029 221.998, 404.540 221.993 C 403.418 221.989, 383.825 220.192, 361 218 C 338.175 215.808, 318.383 214.011, 317.019 214.007 C 314.875 214.001, 315.860 215.327, 324.269 223.768 M 281 262.408 C 281 262.632, 282.238 265.200, 283.750 268.114 C 285.942 272.337, 286.570 275.064, 286.846 281.555 C 287.467 296.144, 282.278 309.902, 268.502 330.192 C 262.932 338.397, 261.272 341.551, 262.216 342.138 C 267.143 345.199, 287.487 345.949, 297.356 343.434 C 304.433 341.631, 318.506 335.092, 321.618 332.163 C 325.117 328.867, 328.249 315.234, 327.843 305.061 C 327.552 297.761, 327.001 295.437, 324.226 289.803 C 318.634 278.452, 307.707 270.189, 290.575 264.357 C 283.988 262.115, 281 261.507, 281 262.408 M 312.650 342.165 C 297.248 349.979, 272.911 351.557, 259 345.644 C 257.907 345.179, 254.749 348.872, 247.363 359.253 C 235.642 375.728, 227.944 388.807, 222.556 401.401 L 218.748 410.302 221.124 412.228 C 225.852 416.062, 239.581 421.895, 246.467 422.995 C 262.299 425.524, 278.982 420.276, 294.696 407.823 C 301.407 402.506, 301.366 402.579, 303.016 393 C 305.016 381.389, 309.053 366.784, 314.055 353.060 C 316.749 345.668, 318.852 339.525, 318.727 339.409 C 318.602 339.293, 315.868 340.533, 312.650 342.165 M 295.655 412.479 C 290.483 417.049, 277.867 423.488, 270.500 425.318 C 260.828 427.722, 255.976 428.092, 247.820 427.049 C 238.099 425.806, 230.064 422.989, 223.158 418.404 C 219.324 415.859, 217.522 415.155, 217.001 415.999 C 214.585 419.908, 210.091 445.537, 210.031 455.750 L 210 461 255.111 461 L 300.223 461 299.564 457.489 C 298.663 452.689, 298.631 426.116, 299.514 416.690 C 299.911 412.460, 300.070 409.019, 299.867 409.042 C 299.665 409.065, 297.770 410.612, 295.655 412.479" stroke="none" fill="%23495057" fill-rule="evenodd"/></svg>';var b8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23dc3545" fill-rule="evenodd"/><path d="M 234.500 51.973 C 230.650 52.436, 223.966 53.559, 219.646 54.469 C 215.326 55.379, 208.006 57.412, 203.379 58.985 C 198.752 60.559, 192.094 63.453, 188.584 65.416 C 185.074 67.379, 179.727 71.001, 176.702 73.465 C 173.677 75.929, 169.396 80.650, 167.188 83.956 C 164.980 87.263, 162.122 93.012, 160.837 96.734 C 158.873 102.420, 158.519 105.336, 158.622 115 C 158.715 123.858, 159.332 128.734, 161.308 136.226 C 162.719 141.576, 165.975 150.876, 168.544 156.893 C 171.112 162.910, 175.358 171.583, 177.979 176.167 C 180.599 180.750, 183.251 184.455, 183.872 184.400 C 184.492 184.345, 197.600 184.233, 213 184.150 L 241 184 241 162.500 L 241 141 228.071 141 C 217.652 141, 214.838 140.695, 213.571 139.429 C 212.312 138.170, 212 135.400, 212 125.500 C 212 115.600, 212.312 112.830, 213.571 111.571 C 214.838 110.305, 217.652 110, 228.071 110 L 241 110 241 95.700 C 241 85.911, 241.379 81.021, 242.200 80.200 C 243.006 79.394, 247.533 79, 256 79 C 264.467 79, 268.994 79.394, 269.800 80.200 C 270.621 81.021, 271 85.911, 271 95.700 L 271 110 283.929 110 C 294.348 110, 297.162 110.305, 298.429 111.571 C 299.688 112.830, 300 115.600, 300 125.500 C 300 135.400, 299.688 138.170, 298.429 139.429 C 297.162 140.695, 294.348 141, 283.929 141 L 271 141 271 162.500 L 271 184 299 184.150 C 314.400 184.233, 327.556 184.345, 328.237 184.400 C 328.917 184.455, 333.092 177.300, 337.516 168.500 C 341.939 159.700, 346.779 148.812, 348.270 144.304 C 349.761 139.797, 351.702 131.932, 352.583 126.828 C 353.632 120.752, 353.961 115.295, 353.536 111.024 C 353.180 107.436, 352.198 102.025, 351.355 99 C 350.512 95.975, 348.445 90.903, 346.761 87.729 C 344.998 84.407, 340.887 79.305, 337.071 75.706 C 333.083 71.944, 327.149 67.739, 322.172 65.150 C 317.623 62.783, 310.666 59.747, 306.712 58.402 C 302.759 57.058, 295.019 55.032, 289.512 53.902 C 282.074 52.374, 274.616 51.754, 260.500 51.489 C 250.050 51.293, 238.350 51.511, 234.500 51.973 M 245 98.500 L 245 114 230.500 114 L 216 114 216 125.500 L 216 137 230.500 137 L 245 137 245 160.500 L 245 184 256 184 L 267 184 267 160.500 L 267 137 281.500 137 L 296 137 296 125.500 L 296 114 281.500 114 L 267 114 267 98.500 L 267 83 256 83 L 245 83 245 98.500 M 181.025 190.975 C 179.939 192.061, 178.757 194.122, 178.397 195.555 C 178.037 196.988, 177.972 201.364, 178.252 205.280 C 178.692 211.424, 179.128 212.713, 181.436 214.699 L 184.112 217 256.419 217 L 328.727 217 331.364 214.364 C 333.829 211.898, 333.999 211.137, 333.985 202.614 C 333.976 197.601, 333.639 193.005, 333.235 192.400 C 332.831 191.795, 331.517 190.782, 330.316 190.150 C 328.728 189.314, 308.309 189, 255.566 189 C 184.645 189, 182.955 189.045, 181.025 190.975 M 183.662 221.750 C 183.411 222.162, 182.271 226.775, 181.129 232 C 179.986 237.225, 177.686 246.225, 176.017 252 C 174.348 257.775, 172.707 265.427, 172.371 269.004 C 171.949 273.486, 172.255 277.446, 173.355 281.739 C 174.232 285.166, 176.143 290.339, 177.600 293.235 C 179.174 296.363, 183.557 301.747, 188.397 306.500 C 193.293 311.308, 199.727 316.344, 204.522 319.122 C 208.910 321.664, 215.501 324.926, 219.170 326.372 C 222.838 327.817, 229.813 329.965, 234.670 331.144 C 241.289 332.752, 246.630 333.289, 256 333.289 C 265.242 333.289, 270.725 332.748, 277.037 331.214 C 281.733 330.072, 288.033 328.174, 291.037 326.995 C 294.042 325.817, 299.163 323.504, 302.417 321.856 C 305.672 320.209, 311.632 316.378, 315.663 313.345 C 319.693 310.312, 324.971 305.506, 327.392 302.665 C 329.812 299.824, 333.146 294.800, 334.801 291.500 C 336.455 288.200, 338.346 282.853, 339.003 279.617 C 339.694 276.212, 339.912 271.455, 339.521 268.326 C 339.150 265.352, 337.339 257.420, 335.497 250.699 C 333.655 243.979, 331.338 234.547, 330.348 229.740 L 328.549 221 321.168 221 C 314.546 221, 313.856 221.180, 314.464 222.750 C 314.837 223.713, 316.312 228.325, 317.743 233 C 319.978 240.304, 320.351 243.399, 320.396 255 C 320.442 266.753, 320.156 269.230, 318.192 274.145 C 316.951 277.249, 314.597 281.637, 312.961 283.895 C 311.326 286.153, 309.222 288, 308.287 288 C 307.352 288, 304.002 286.187, 300.842 283.970 C 297.682 281.754, 292.220 278.594, 288.704 276.949 C 285.189 275.304, 278.979 273.216, 274.906 272.310 C 270.064 271.232, 263.172 270.685, 255 270.727 C 245.764 270.775, 240.504 271.324, 234.856 272.828 C 230.653 273.948, 224.353 276.297, 220.856 278.048 C 217.360 279.800, 212.539 282.825, 210.142 284.772 C 206.421 287.794, 205.399 288.176, 203.142 287.387 C 201.220 286.715, 199.474 284.423, 196.737 278.982 C 194.048 273.633, 192.672 269.248, 191.913 263.601 C 191.151 257.926, 191.166 253.340, 191.967 247.320 C 192.581 242.710, 194.189 235.120, 195.541 230.454 C 196.894 225.788, 198 221.752, 198 221.485 C 198 221.218, 194.877 221, 191.059 221 C 187.241 221, 183.913 221.338, 183.662 221.750 M 199.899 230.750 C 197.230 238.895, 196.627 242.499, 196.235 252.640 C 195.858 262.401, 196.107 265.829, 197.507 270.140 C 198.464 273.088, 200.175 277.188, 201.308 279.250 C 202.441 281.313, 203.732 283, 204.175 283 C 204.619 283, 207.023 281.442, 209.517 279.539 C 212.011 277.635, 216.898 274.719, 220.376 273.059 C 223.855 271.399, 229.806 269.270, 233.600 268.327 C 238.614 267.083, 244.736 266.613, 256 266.608 C 267.815 266.603, 273.045 267.026, 278 268.389 C 281.575 269.373, 287.650 271.641, 291.500 273.429 C 295.350 275.218, 300.626 278.315, 303.224 280.314 L 307.947 283.946 310.574 279.463 C 312.019 276.997, 313.891 272.847, 314.733 270.240 C 315.614 267.512, 316.289 261.680, 316.324 256.500 C 316.360 251.210, 315.639 244.202, 314.576 239.500 C 313.582 235.100, 311.888 229.137, 310.812 226.250 L 308.856 221 255.975 221 L 203.094 221 199.899 230.750 M 246 245.878 C 246 246.910, 246.631 248.279, 247.403 248.920 C 248.175 249.560, 250.266 250.503, 252.049 251.014 C 254.029 251.582, 256.881 251.587, 259.369 251.029 C 261.610 250.525, 264.019 249.326, 264.722 248.365 C 265.425 247.404, 266 246.240, 266 245.777 C 266 245.315, 265.337 244.683, 264.526 244.371 C 263.715 244.060, 262.333 244.524, 261.454 245.403 C 260.544 246.314, 258.199 247, 256 247 C 253.879 247, 251.468 246.325, 250.643 245.500 C 249.818 244.675, 248.436 244, 247.571 244 C 246.701 244, 246 244.837, 246 245.878 M 244.230 282.486 C 241.332 283.302, 237.732 284.606, 236.230 285.384 C 234.729 286.162, 231.407 288.644, 228.848 290.898 C 226.290 293.152, 223.715 296.380, 223.125 298.071 C 222.188 300.760, 222.348 301.439, 224.406 303.497 C 225.700 304.791, 229.400 307.170, 232.629 308.785 C 235.858 310.400, 240.750 312.428, 243.500 313.292 C 246.250 314.156, 250.300 315.133, 252.500 315.465 C 254.700 315.796, 258.765 315.632, 261.534 315.101 C 264.302 314.569, 269.037 313.210, 272.055 312.081 C 275.073 310.951, 280.008 308.556, 283.021 306.758 C 286.674 304.578, 288.607 302.735, 288.822 301.228 C 288.999 299.985, 288.187 297.421, 287.019 295.530 C 285.850 293.640, 282.780 290.548, 280.197 288.660 C 277.614 286.772, 273.250 284.456, 270.500 283.512 C 267.750 282.569, 261.900 281.619, 257.500 281.400 C 252.318 281.143, 247.644 281.525, 244.230 282.486 M 245.776 286.479 C 243.178 287.194, 239.063 288.945, 236.631 290.370 C 234.200 291.795, 231.038 294.354, 229.605 296.057 C 228.172 297.760, 227 299.588, 227 300.120 C 227 300.651, 231.290 303.160, 236.534 305.695 C 244.489 309.541, 247.283 310.383, 253.405 310.776 C 258.728 311.117, 262.218 310.767, 266.121 309.500 C 269.079 308.540, 274.538 306.178, 278.250 304.253 C 281.962 302.328, 285 300.412, 285 299.997 C 285 299.581, 283.224 297.411, 281.052 295.173 C 278.881 292.936, 275.619 290.337, 273.802 289.397 C 271.986 288.457, 268.250 287.089, 265.500 286.356 C 262.750 285.623, 258.250 285.059, 255.500 285.101 C 252.750 285.144, 248.374 285.764, 245.776 286.479 M 178.513 312.250 C 176.510 314.587, 173.382 318.750, 171.563 321.500 C 169.744 324.250, 166.899 329.200, 165.242 332.500 C 163.585 335.800, 160.830 342.465, 159.121 347.312 C 157.411 352.158, 155.110 360.554, 154.006 365.969 C 152.903 371.384, 152 376.895, 152 378.216 C 152 380.204, 160.881 387.502, 203.525 420.559 C 231.864 442.526, 255.377 460.598, 255.775 460.718 C 256.174 460.838, 269.325 450.999, 285 438.854 C 300.675 426.709, 313.636 416.415, 313.802 415.979 C 313.968 415.543, 296.643 399.981, 275.302 381.397 C 253.961 362.813, 232 343.701, 226.500 338.927 C 221 334.153, 213.681 328.831, 210.235 327.102 C 206.790 325.372, 201.615 322.449, 198.735 320.607 C 195.856 318.764, 191.184 315.174, 188.353 312.628 C 185.522 310.083, 182.970 308, 182.681 308 C 182.392 308, 180.517 309.913, 178.513 312.250 M 322.194 313.906 C 318.279 317.185, 311.893 321.726, 308.004 323.998 C 304.115 326.269, 299.485 328.628, 297.716 329.239 C 295.947 329.850, 286.496 337.083, 276.712 345.312 C 266.929 353.541, 259.054 360.606, 259.212 361.012 C 259.371 361.417, 270.750 371.537, 284.500 383.501 C 298.250 395.464, 311.405 407.014, 313.733 409.166 L 317.967 413.079 338.733 396.977 C 350.155 388.121, 359.653 380.191, 359.839 379.356 C 360.025 378.521, 359.422 373.712, 358.499 368.669 C 357.575 363.626, 355.456 355.225, 353.789 350 C 352.122 344.775, 348.960 336.900, 346.763 332.500 C 344.566 328.100, 340.844 321.800, 338.492 318.500 C 336.141 315.200, 333.113 311.475, 331.764 310.222 L 329.312 307.944 322.194 313.906 M 160.992 321.231 C 157.421 323.558, 151.567 328.395, 147.981 331.981 C 144.396 335.566, 139.253 341.832, 136.552 345.905 C 133.851 349.977, 129.889 357.373, 127.747 362.341 C 125.606 367.308, 122.774 375.451, 121.455 380.436 C 120.136 385.421, 118.291 394, 117.356 399.500 C 116.133 406.689, 115.633 415.685, 115.577 431.500 C 115.535 443.600, 115.858 455.188, 116.295 457.250 L 117.091 461 134.113 461 C 149.858 461, 151.095 460.869, 150.609 459.250 C 150.320 458.288, 149.299 452.100, 148.340 445.500 C 147.071 436.768, 146.583 426.827, 146.548 409 C 146.511 390.156, 146.912 381.899, 148.287 373.235 C 149.269 367.040, 151.186 358.040, 152.546 353.235 C 153.906 348.431, 158.106 338.313, 161.879 330.750 C 165.652 323.188, 168.456 317, 168.111 317 C 167.766 317, 164.562 318.904, 160.992 321.231 M 345.376 320.803 C 346.696 322.895, 349.347 327.733, 351.266 331.553 C 353.185 335.374, 356.159 342.601, 357.875 347.613 C 359.592 352.625, 362.005 362.300, 363.239 369.113 C 365.222 380.070, 365.477 384.732, 365.442 409.500 C 365.412 430.963, 365.006 439.934, 363.702 447.926 C 362.766 453.661, 362 458.948, 362 459.676 C 362 460.721, 365.462 461, 378.420 461 L 394.841 461 395.531 454.552 C 395.911 451.005, 396.006 438.293, 395.743 426.302 C 395.424 411.790, 394.681 401.324, 393.520 395 C 392.560 389.775, 390.673 381.675, 389.326 377 C 387.979 372.325, 384.935 364.395, 382.562 359.377 C 380.189 354.360, 376.422 347.567, 374.192 344.282 C 371.961 340.998, 367.816 335.771, 364.980 332.668 C 362.144 329.566, 356.451 324.771, 352.328 322.013 C 348.206 319.256, 344.415 317, 343.904 317 C 343.393 317, 344.055 318.711, 345.376 320.803 M 229.550 335.863 C 230.072 336.337, 236.008 341.524, 242.739 347.389 L 254.979 358.053 268.451 346.821 C 275.860 340.643, 281.750 335.416, 281.539 335.205 C 281.328 334.994, 277.697 335.537, 273.471 336.411 C 269.244 337.285, 261.222 337.984, 255.643 337.965 C 250.064 337.946, 242.575 337.286, 239 336.500 C 235.425 335.714, 231.623 335.054, 230.550 335.035 C 229.391 335.014, 228.985 335.350, 229.550 335.863 M 150.583 398.213 C 150.197 405.062, 150.376 417.359, 150.988 426 C 151.592 434.525, 152.770 445.766, 153.607 450.981 C 154.444 456.195, 155.254 460.587, 155.408 460.741 C 155.561 460.894, 176.469 460.903, 201.870 460.760 L 248.054 460.500 200.340 423.500 C 174.098 403.150, 152.322 386.371, 151.951 386.213 C 151.579 386.054, 150.963 391.454, 150.583 398.213 M 312.500 423.168 L 264.500 460.500 310.435 460.760 C 343.584 460.948, 356.563 460.708, 357.063 459.898 C 357.445 459.280, 358.532 453.088, 359.478 446.137 C 360.425 439.187, 361.416 425.850, 361.680 416.500 C 361.945 407.150, 361.787 396.426, 361.331 392.668 L 360.500 385.837 312.500 423.168" stroke="none" fill="%23dc3545" fill-rule="evenodd"/></svg>';var x8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23495057" fill-rule="evenodd"/><path d="M 234.500 51.973 C 230.650 52.436, 223.966 53.559, 219.646 54.469 C 215.326 55.379, 208.006 57.412, 203.379 58.985 C 198.752 60.559, 192.094 63.453, 188.584 65.416 C 185.074 67.379, 179.727 71.001, 176.702 73.465 C 173.677 75.929, 169.396 80.650, 167.188 83.956 C 164.980 87.263, 162.122 93.012, 160.837 96.734 C 158.873 102.420, 158.519 105.336, 158.622 115 C 158.715 123.858, 159.332 128.734, 161.308 136.226 C 162.719 141.576, 165.975 150.876, 168.544 156.893 C 171.112 162.910, 175.358 171.583, 177.979 176.167 C 180.599 180.750, 183.251 184.455, 183.872 184.400 C 184.492 184.345, 197.600 184.233, 213 184.150 L 241 184 241 162.500 L 241 141 228.071 141 C 217.652 141, 214.838 140.695, 213.571 139.429 C 212.312 138.170, 212 135.400, 212 125.500 C 212 115.600, 212.312 112.830, 213.571 111.571 C 214.838 110.305, 217.652 110, 228.071 110 L 241 110 241 95.700 C 241 85.911, 241.379 81.021, 242.200 80.200 C 243.006 79.394, 247.533 79, 256 79 C 264.467 79, 268.994 79.394, 269.800 80.200 C 270.621 81.021, 271 85.911, 271 95.700 L 271 110 283.929 110 C 294.348 110, 297.162 110.305, 298.429 111.571 C 299.688 112.830, 300 115.600, 300 125.500 C 300 135.400, 299.688 138.170, 298.429 139.429 C 297.162 140.695, 294.348 141, 283.929 141 L 271 141 271 162.500 L 271 184 299 184.150 C 314.400 184.233, 327.556 184.345, 328.237 184.400 C 328.917 184.455, 333.092 177.300, 337.516 168.500 C 341.939 159.700, 346.779 148.812, 348.270 144.304 C 349.761 139.797, 351.702 131.932, 352.583 126.828 C 353.632 120.752, 353.961 115.295, 353.536 111.024 C 353.180 107.436, 352.198 102.025, 351.355 99 C 350.512 95.975, 348.445 90.903, 346.761 87.729 C 344.998 84.407, 340.887 79.305, 337.071 75.706 C 333.083 71.944, 327.149 67.739, 322.172 65.150 C 317.623 62.783, 310.666 59.747, 306.712 58.402 C 302.759 57.058, 295.019 55.032, 289.512 53.902 C 282.074 52.374, 274.616 51.754, 260.500 51.489 C 250.050 51.293, 238.350 51.511, 234.500 51.973 M 245 98.500 L 245 114 230.500 114 L 216 114 216 125.500 L 216 137 230.500 137 L 245 137 245 160.500 L 245 184 256 184 L 267 184 267 160.500 L 267 137 281.500 137 L 296 137 296 125.500 L 296 114 281.500 114 L 267 114 267 98.500 L 267 83 256 83 L 245 83 245 98.500 M 181.025 190.975 C 179.939 192.061, 178.757 194.122, 178.397 195.555 C 178.037 196.988, 177.972 201.364, 178.252 205.280 C 178.692 211.424, 179.128 212.713, 181.436 214.699 L 184.112 217 256.419 217 L 328.727 217 331.364 214.364 C 333.829 211.898, 333.999 211.137, 333.985 202.614 C 333.976 197.601, 333.639 193.005, 333.235 192.400 C 332.831 191.795, 331.517 190.782, 330.316 190.150 C 328.728 189.314, 308.309 189, 255.566 189 C 184.645 189, 182.955 189.045, 181.025 190.975 M 183.662 221.750 C 183.411 222.162, 182.271 226.775, 181.129 232 C 179.986 237.225, 177.686 246.225, 176.017 252 C 174.348 257.775, 172.707 265.427, 172.371 269.004 C 171.949 273.486, 172.255 277.446, 173.355 281.739 C 174.232 285.166, 176.143 290.339, 177.600 293.235 C 179.174 296.363, 183.557 301.747, 188.397 306.500 C 193.293 311.308, 199.727 316.344, 204.522 319.122 C 208.910 321.664, 215.501 324.926, 219.170 326.372 C 222.838 327.817, 229.813 329.965, 234.670 331.144 C 241.289 332.752, 246.630 333.289, 256 333.289 C 265.242 333.289, 270.725 332.748, 277.037 331.214 C 281.733 330.072, 288.033 328.174, 291.037 326.995 C 294.042 325.817, 299.163 323.504, 302.417 321.856 C 305.672 320.209, 311.632 316.378, 315.663 313.345 C 319.693 310.312, 324.971 305.506, 327.392 302.665 C 329.812 299.824, 333.146 294.800, 334.801 291.500 C 336.455 288.200, 338.346 282.853, 339.003 279.617 C 339.694 276.212, 339.912 271.455, 339.521 268.326 C 339.150 265.352, 337.339 257.420, 335.497 250.699 C 333.655 243.979, 331.338 234.547, 330.348 229.740 L 328.549 221 321.168 221 C 314.546 221, 313.856 221.180, 314.464 222.750 C 314.837 223.713, 316.312 228.325, 317.743 233 C 319.978 240.304, 320.351 243.399, 320.396 255 C 320.442 266.753, 320.156 269.230, 318.192 274.145 C 316.951 277.249, 314.597 281.637, 312.961 283.895 C 311.326 286.153, 309.222 288, 308.287 288 C 307.352 288, 304.002 286.187, 300.842 283.970 C 297.682 281.754, 292.220 278.594, 288.704 276.949 C 285.189 275.304, 278.979 273.216, 274.906 272.310 C 270.064 271.232, 263.172 270.685, 255 270.727 C 245.764 270.775, 240.504 271.324, 234.856 272.828 C 230.653 273.948, 224.353 276.297, 220.856 278.048 C 217.360 279.800, 212.539 282.825, 210.142 284.772 C 206.421 287.794, 205.399 288.176, 203.142 287.387 C 201.220 286.715, 199.474 284.423, 196.737 278.982 C 194.048 273.633, 192.672 269.248, 191.913 263.601 C 191.151 257.926, 191.166 253.340, 191.967 247.320 C 192.581 242.710, 194.189 235.120, 195.541 230.454 C 196.894 225.788, 198 221.752, 198 221.485 C 198 221.218, 194.877 221, 191.059 221 C 187.241 221, 183.913 221.338, 183.662 221.750 M 199.899 230.750 C 197.230 238.895, 196.627 242.499, 196.235 252.640 C 195.858 262.401, 196.107 265.829, 197.507 270.140 C 198.464 273.088, 200.175 277.188, 201.308 279.250 C 202.441 281.313, 203.732 283, 204.175 283 C 204.619 283, 207.023 281.442, 209.517 279.539 C 212.011 277.635, 216.898 274.719, 220.376 273.059 C 223.855 271.399, 229.806 269.270, 233.600 268.327 C 238.614 267.083, 244.736 266.613, 256 266.608 C 267.815 266.603, 273.045 267.026, 278 268.389 C 281.575 269.373, 287.650 271.641, 291.500 273.429 C 295.350 275.218, 300.626 278.315, 303.224 280.314 L 307.947 283.946 310.574 279.463 C 312.019 276.997, 313.891 272.847, 314.733 270.240 C 315.614 267.512, 316.289 261.680, 316.324 256.500 C 316.360 251.210, 315.639 244.202, 314.576 239.500 C 313.582 235.100, 311.888 229.137, 310.812 226.250 L 308.856 221 255.975 221 L 203.094 221 199.899 230.750 M 246 245.878 C 246 246.910, 246.631 248.279, 247.403 248.920 C 248.175 249.560, 250.266 250.503, 252.049 251.014 C 254.029 251.582, 256.881 251.587, 259.369 251.029 C 261.610 250.525, 264.019 249.326, 264.722 248.365 C 265.425 247.404, 266 246.240, 266 245.777 C 266 245.315, 265.337 244.683, 264.526 244.371 C 263.715 244.060, 262.333 244.524, 261.454 245.403 C 260.544 246.314, 258.199 247, 256 247 C 253.879 247, 251.468 246.325, 250.643 245.500 C 249.818 244.675, 248.436 244, 247.571 244 C 246.701 244, 246 244.837, 246 245.878 M 244.230 282.486 C 241.332 283.302, 237.732 284.606, 236.230 285.384 C 234.729 286.162, 231.407 288.644, 228.848 290.898 C 226.290 293.152, 223.715 296.380, 223.125 298.071 C 222.188 300.760, 222.348 301.439, 224.406 303.497 C 225.700 304.791, 229.400 307.170, 232.629 308.785 C 235.858 310.400, 240.750 312.428, 243.500 313.292 C 246.250 314.156, 250.300 315.133, 252.500 315.465 C 254.700 315.796, 258.765 315.632, 261.534 315.101 C 264.302 314.569, 269.037 313.210, 272.055 312.081 C 275.073 310.951, 280.008 308.556, 283.021 306.758 C 286.674 304.578, 288.607 302.735, 288.822 301.228 C 288.999 299.985, 288.187 297.421, 287.019 295.530 C 285.850 293.640, 282.780 290.548, 280.197 288.660 C 277.614 286.772, 273.250 284.456, 270.500 283.512 C 267.750 282.569, 261.900 281.619, 257.500 281.400 C 252.318 281.143, 247.644 281.525, 244.230 282.486 M 245.776 286.479 C 243.178 287.194, 239.063 288.945, 236.631 290.370 C 234.200 291.795, 231.038 294.354, 229.605 296.057 C 228.172 297.760, 227 299.588, 227 300.120 C 227 300.651, 231.290 303.160, 236.534 305.695 C 244.489 309.541, 247.283 310.383, 253.405 310.776 C 258.728 311.117, 262.218 310.767, 266.121 309.500 C 269.079 308.540, 274.538 306.178, 278.250 304.253 C 281.962 302.328, 285 300.412, 285 299.997 C 285 299.581, 283.224 297.411, 281.052 295.173 C 278.881 292.936, 275.619 290.337, 273.802 289.397 C 271.986 288.457, 268.250 287.089, 265.500 286.356 C 262.750 285.623, 258.250 285.059, 255.500 285.101 C 252.750 285.144, 248.374 285.764, 245.776 286.479 M 178.513 312.250 C 176.510 314.587, 173.382 318.750, 171.563 321.500 C 169.744 324.250, 166.899 329.200, 165.242 332.500 C 163.585 335.800, 160.830 342.465, 159.121 347.312 C 157.411 352.158, 155.110 360.554, 154.006 365.969 C 152.903 371.384, 152 376.895, 152 378.216 C 152 380.204, 160.881 387.502, 203.525 420.559 C 231.864 442.526, 255.377 460.598, 255.775 460.718 C 256.174 460.838, 269.325 450.999, 285 438.854 C 300.675 426.709, 313.636 416.415, 313.802 415.979 C 313.968 415.543, 296.643 399.981, 275.302 381.397 C 253.961 362.813, 232 343.701, 226.500 338.927 C 221 334.153, 213.681 328.831, 210.235 327.102 C 206.790 325.372, 201.615 322.449, 198.735 320.607 C 195.856 318.764, 191.184 315.174, 188.353 312.628 C 185.522 310.083, 182.970 308, 182.681 308 C 182.392 308, 180.517 309.913, 178.513 312.250 M 322.194 313.906 C 318.279 317.185, 311.893 321.726, 308.004 323.998 C 304.115 326.269, 299.485 328.628, 297.716 329.239 C 295.947 329.850, 286.496 337.083, 276.712 345.312 C 266.929 353.541, 259.054 360.606, 259.212 361.012 C 259.371 361.417, 270.750 371.537, 284.500 383.501 C 298.250 395.464, 311.405 407.014, 313.733 409.166 L 317.967 413.079 338.733 396.977 C 350.155 388.121, 359.653 380.191, 359.839 379.356 C 360.025 378.521, 359.422 373.712, 358.499 368.669 C 357.575 363.626, 355.456 355.225, 353.789 350 C 352.122 344.775, 348.960 336.900, 346.763 332.500 C 344.566 328.100, 340.844 321.800, 338.492 318.500 C 336.141 315.200, 333.113 311.475, 331.764 310.222 L 329.312 307.944 322.194 313.906 M 160.992 321.231 C 157.421 323.558, 151.567 328.395, 147.981 331.981 C 144.396 335.566, 139.253 341.832, 136.552 345.905 C 133.851 349.977, 129.889 357.373, 127.747 362.341 C 125.606 367.308, 122.774 375.451, 121.455 380.436 C 120.136 385.421, 118.291 394, 117.356 399.500 C 116.133 406.689, 115.633 415.685, 115.577 431.500 C 115.535 443.600, 115.858 455.188, 116.295 457.250 L 117.091 461 134.113 461 C 149.858 461, 151.095 460.869, 150.609 459.250 C 150.320 458.288, 149.299 452.100, 148.340 445.500 C 147.071 436.768, 146.583 426.827, 146.548 409 C 146.511 390.156, 146.912 381.899, 148.287 373.235 C 149.269 367.040, 151.186 358.040, 152.546 353.235 C 153.906 348.431, 158.106 338.313, 161.879 330.750 C 165.652 323.188, 168.456 317, 168.111 317 C 167.766 317, 164.562 318.904, 160.992 321.231 M 345.376 320.803 C 346.696 322.895, 349.347 327.733, 351.266 331.553 C 353.185 335.374, 356.159 342.601, 357.875 347.613 C 359.592 352.625, 362.005 362.300, 363.239 369.113 C 365.222 380.070, 365.477 384.732, 365.442 409.500 C 365.412 430.963, 365.006 439.934, 363.702 447.926 C 362.766 453.661, 362 458.948, 362 459.676 C 362 460.721, 365.462 461, 378.420 461 L 394.841 461 395.531 454.552 C 395.911 451.005, 396.006 438.293, 395.743 426.302 C 395.424 411.790, 394.681 401.324, 393.520 395 C 392.560 389.775, 390.673 381.675, 389.326 377 C 387.979 372.325, 384.935 364.395, 382.562 359.377 C 380.189 354.360, 376.422 347.567, 374.192 344.282 C 371.961 340.998, 367.816 335.771, 364.980 332.668 C 362.144 329.566, 356.451 324.771, 352.328 322.013 C 348.206 319.256, 344.415 317, 343.904 317 C 343.393 317, 344.055 318.711, 345.376 320.803 M 229.550 335.863 C 230.072 336.337, 236.008 341.524, 242.739 347.389 L 254.979 358.053 268.451 346.821 C 275.860 340.643, 281.750 335.416, 281.539 335.205 C 281.328 334.994, 277.697 335.537, 273.471 336.411 C 269.244 337.285, 261.222 337.984, 255.643 337.965 C 250.064 337.946, 242.575 337.286, 239 336.500 C 235.425 335.714, 231.623 335.054, 230.550 335.035 C 229.391 335.014, 228.985 335.350, 229.550 335.863 M 150.583 398.213 C 150.197 405.062, 150.376 417.359, 150.988 426 C 151.592 434.525, 152.770 445.766, 153.607 450.981 C 154.444 456.195, 155.254 460.587, 155.408 460.741 C 155.561 460.894, 176.469 460.903, 201.870 460.760 L 248.054 460.500 200.340 423.500 C 174.098 403.150, 152.322 386.371, 151.951 386.213 C 151.579 386.054, 150.963 391.454, 150.583 398.213 M 312.500 423.168 L 264.500 460.500 310.435 460.760 C 343.584 460.948, 356.563 460.708, 357.063 459.898 C 357.445 459.280, 358.532 453.088, 359.478 446.137 C 360.425 439.187, 361.416 425.850, 361.680 416.500 C 361.945 407.150, 361.787 396.426, 361.331 392.668 L 360.500 385.837 312.500 423.168" stroke="none" fill="%23495057" fill-rule="evenodd"/></svg>';var fa='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23dc3545" fill-rule="evenodd"/><path d="M 133.526 85.669 C 133.967 86.676, 135.428 90.650, 136.772 94.500 C 138.426 99.237, 139.389 104.640, 139.751 111.212 C 140.063 116.860, 139.774 124.100, 139.062 128.515 C 138.389 132.689, 136.545 139.929, 134.966 144.602 C 132.941 150.591, 132.449 153.190, 133.297 153.408 C 133.959 153.578, 136.120 154.236, 138.100 154.869 C 141.195 155.859, 142.385 155.720, 146.600 153.873 C 149.295 152.692, 153.989 149.992, 157.031 147.872 C 160.073 145.752, 164.182 142.080, 166.161 139.711 C 168.141 137.343, 170.976 133.008, 172.460 130.078 C 173.945 127.149, 175.832 121.545, 176.653 117.626 C 177.700 112.633, 177.942 108.148, 177.460 102.644 C 176.773 94.789, 176.773 94.789, 170.637 91.917 C 167.261 90.338, 161.125 88.193, 157 87.151 C 152.875 86.110, 145.725 84.938, 141.112 84.548 C 133.221 83.880, 132.772 83.947, 133.526 85.669 M 118 87.520 C 112.775 88.851, 104.450 91.971, 99.500 94.453 C 90.500 98.964, 90.500 98.964, 85 97.465 C 81.975 96.641, 76.088 95.905, 71.918 95.829 C 65.801 95.719, 63.437 96.141, 59.683 98.016 C 57.123 99.294, 54.039 101.394, 52.828 102.683 C 51.480 104.118, 50.990 105.373, 51.563 105.920 C 52.078 106.412, 56.550 109.999, 61.500 113.892 C 70.178 120.716, 70.698 120.970, 76.040 120.985 C 79.087 120.993, 84.190 121.680, 87.380 122.511 C 90.571 123.342, 95.057 125.121, 97.350 126.465 C 99.642 127.808, 102.952 130.391, 104.705 132.204 C 106.458 134.017, 109.070 138.078, 110.509 141.228 C 112.092 144.691, 113.561 150.425, 114.226 155.728 L 115.325 164.500 121.143 158.879 C 124.539 155.597, 127.810 151.276, 129.001 148.498 C 130.123 145.880, 131.884 140.519, 132.915 136.583 C 133.946 132.648, 135.104 126.065, 135.490 121.955 C 135.975 116.772, 135.704 111.666, 134.603 105.288 C 133.730 100.232, 131.912 93.598, 130.563 90.547 C 129.214 87.496, 127.973 85.022, 127.805 85.049 C 127.637 85.076, 123.225 86.188, 118 87.520 M 181.464 108.252 C 181.437 116.219, 180.922 119.989, 179.153 125.190 C 177.901 128.870, 175.162 134.495, 173.066 137.690 C 170.971 140.886, 167.511 145.141, 165.378 147.147 C 163.245 149.153, 159.025 152.353, 156 154.258 C 152.975 156.163, 149.488 158.040, 148.250 158.428 C 147.012 158.817, 146 159.494, 146 159.933 C 146 160.371, 146.838 161.803, 147.863 163.115 C 148.887 164.427, 150.727 167.474, 151.953 169.887 C 154.180 174.273, 154.180 174.273, 161.840 173.741 C 166.727 173.401, 171.853 172.261, 176 170.590 C 179.575 169.150, 185.594 165.650, 189.377 162.811 C 193.159 159.973, 198.821 154.420, 201.960 150.470 C 205.098 146.520, 209.283 140.398, 211.259 136.865 C 213.235 133.332, 215.143 129.278, 215.500 127.856 C 216.074 125.570, 215.162 124.367, 207.636 117.479 C 202.954 113.194, 195.444 107.059, 190.948 103.844 C 186.451 100.630, 182.486 98.001, 182.136 98.002 C 181.786 98.004, 181.484 102.616, 181.464 108.252 M 72 164.725 L 72 204.727 77.750 207.272 C 80.913 208.671, 86.108 210.344, 89.295 210.988 C 92.482 211.633, 96.862 211.861, 99.028 211.495 C 101.632 211.055, 103.804 209.833, 105.443 207.886 C 106.805 206.266, 108.144 203.492, 108.418 201.721 C 108.692 199.949, 109.200 188.516, 109.547 176.313 C 110.090 157.252, 109.943 153.316, 108.506 148.372 C 107.586 145.207, 105.489 140.664, 103.846 138.276 C 102.203 135.889, 99.204 132.842, 97.180 131.507 C 95.156 130.171, 91.558 128.395, 89.184 127.560 C 86.810 126.725, 81.973 125.746, 78.434 125.383 L 72 124.724 72 164.725 M 215.580 137.665 C 213.447 141.808, 209.907 147.515, 207.712 150.348 C 205.517 153.182, 202.097 157.245, 200.111 159.378 C 198.125 161.511, 193.218 165.423, 189.207 168.072 C 185.196 170.721, 179.419 173.822, 176.368 174.963 C 173.317 176.105, 167.487 177.535, 163.411 178.141 C 159.179 178.770, 156.015 179.727, 156.035 180.372 C 156.054 180.992, 156.714 184.425, 157.500 188 C 158.286 191.575, 158.946 196.601, 158.965 199.168 C 158.984 201.736, 159.248 204.482, 159.551 205.272 C 160.026 206.509, 161.297 206.522, 168.801 205.362 C 173.585 204.622, 184.025 202.621, 192 200.915 C 199.975 199.208, 211.204 196.241, 216.952 194.321 C 222.701 192.400, 229.676 189.692, 232.452 188.302 C 235.229 186.913, 238.963 184.679, 240.750 183.337 C 243.511 181.265, 244.001 180.266, 244.006 176.699 C 244.010 174.390, 244.637 171.302, 245.402 169.837 C 246.714 167.322, 246.515 166.744, 241.809 159.398 C 239.069 155.122, 233.474 147.249, 229.377 141.903 C 225.279 136.558, 221.371 131.723, 220.692 131.159 C 219.765 130.390, 218.487 132.017, 215.580 137.665 M 249 208.804 C 249 245.607, 249 245.607, 251.500 250.554 C 253.022 253.564, 255.664 256.674, 258.250 258.500 C 262.500 261.500, 262.500 261.500, 305.573 261.500 C 348.646 261.500, 348.646 261.500, 352.768 258.772 C 355.035 257.272, 358.152 253.897, 359.695 251.272 C 362.500 246.500, 362.500 246.500, 362.796 209.250 L 363.091 172 306.046 172 L 249 172 249 208.804 M 367 208.179 C 367 238.265, 366.733 245.428, 365.472 249.128 C 364.632 251.594, 362.598 255.246, 360.952 257.242 C 359.306 259.239, 355.381 262.139, 352.230 263.686 C 346.500 266.500, 346.500 266.500, 306 266.500 C 274.088 266.500, 264.670 266.207, 261.584 265.118 C 259.430 264.357, 255.648 261.882, 253.179 259.618 C 250.710 257.353, 247.747 253.475, 246.595 251 C 244.644 246.810, 244.477 244.463, 244.173 216.926 L 243.846 187.352 235.173 191.672 C 230.403 194.048, 221.673 197.568, 215.774 199.495 C 209.874 201.421, 198.399 204.322, 190.274 205.942 C 182.148 207.562, 171.817 209.410, 167.317 210.049 C 161.712 210.845, 158.949 211.690, 158.549 212.732 C 158.228 213.569, 157.694 218.809, 157.362 224.377 C 157.027 229.997, 157.266 238.726, 157.899 244 C 158.526 249.225, 160.189 258.152, 161.594 263.838 C 163 269.524, 166.159 279.176, 168.615 285.287 C 171.071 291.397, 174.419 298.737, 176.056 301.598 C 177.692 304.458, 179.679 307.047, 180.470 307.350 C 181.262 307.654, 182.774 309.612, 183.831 311.701 C 184.888 313.791, 186.566 318.875, 187.560 323 C 189.190 329.771, 189.339 334.997, 189.093 376.750 L 188.819 423 200.910 423 C 209.903 423, 213.006 422.680, 213.023 421.750 C 213.036 421.063, 214.967 408.091, 217.313 392.925 C 221.579 365.350, 221.579 365.350, 225.252 360.868 C 227.272 358.403, 230.299 353.449, 231.978 349.860 C 233.658 346.270, 235.713 339.779, 236.544 335.436 C 237.375 331.093, 238.155 322.437, 238.277 316.201 C 238.500 304.864, 238.500 304.864, 241.483 305.453 C 243.123 305.778, 248.748 306.559, 253.983 307.190 C 259.217 307.821, 272.725 308.267, 284 308.183 C 295.275 308.098, 310.800 307.401, 318.500 306.635 C 326.200 305.869, 332.837 305.439, 333.250 305.680 C 333.663 305.921, 334.010 307.104, 334.022 308.309 C 334.034 309.514, 334.875 312.329, 335.890 314.565 C 336.906 316.801, 339.259 320.367, 341.118 322.489 C 342.978 324.611, 347.650 328.669, 351.500 331.509 C 355.350 334.348, 364.742 340.232, 372.371 344.585 C 380.001 348.938, 388.150 354.171, 390.482 356.212 C 392.945 358.369, 395.645 362.072, 396.925 365.048 C 398.137 367.865, 399.824 373.620, 400.674 377.835 C 401.732 383.088, 402.263 392.027, 402.359 406.245 L 402.500 426.989 413.633 426.995 C 424.767 427, 424.767 427, 425.371 424.250 C 425.704 422.738, 426.267 406.425, 426.624 388 C 427.045 366.216, 426.903 352.177, 426.219 347.857 C 425.640 344.203, 423.952 338.353, 422.468 334.857 C 420.984 331.361, 418.824 326.025, 417.667 323 C 415.934 318.470, 415.564 315.296, 415.564 305 C 415.565 293.688, 415.835 291.787, 418.410 285 C 419.974 280.875, 422.393 273.675, 423.784 269 C 426.040 261.425, 426.317 258.705, 426.338 244 C 426.360 228.898, 426.134 226.755, 423.672 218.703 C 422.192 213.865, 419.684 207.340, 418.099 204.203 C 416.513 201.067, 413.207 195.774, 410.752 192.443 C 408.297 189.112, 403.521 184.306, 400.137 181.763 C 396.754 179.219, 391.402 176.164, 388.243 174.973 C 385.084 173.781, 379.012 172.561, 374.750 172.260 L 367 171.714 367 208.179 M 397.427 174.292 C 399.036 175.506, 402.634 178.325, 405.421 180.555 C 408.208 182.786, 413.078 188.411, 416.243 193.055 C 419.408 197.700, 423.308 204.875, 424.911 209 C 426.513 213.125, 428.538 219.969, 429.412 224.208 C 430.292 228.480, 430.997 236.726, 430.994 242.708 C 430.991 248.644, 430.520 256.200, 429.948 259.500 C 429.376 262.800, 428.645 266.962, 428.323 268.750 C 427.738 272, 427.738 272, 444.369 272 L 461 272 460.994 260.750 C 460.991 254.563, 460.340 245.225, 459.548 240 C 458.755 234.775, 457.138 227.350, 455.954 223.500 C 454.769 219.650, 451.948 212.900, 449.683 208.500 C 446.670 202.646, 443.411 198.348, 437.533 192.475 C 432.119 187.067, 427.217 183.266, 422.500 180.817 C 418.650 178.819, 412.350 176.278, 408.500 175.171 C 404.650 174.064, 399.925 172.917, 398 172.621 C 394.500 172.084, 394.500 172.084, 397.427 174.292" stroke="none" fill="%23dc3545" fill-rule="evenodd"/></svg>';var w8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23495057" fill-rule="evenodd"/><path d="M 133.526 85.669 C 133.967 86.676, 135.428 90.650, 136.772 94.500 C 138.426 99.237, 139.389 104.640, 139.751 111.212 C 140.063 116.860, 139.774 124.100, 139.062 128.515 C 138.389 132.689, 136.545 139.929, 134.966 144.602 C 132.941 150.591, 132.449 153.190, 133.297 153.408 C 133.959 153.578, 136.120 154.236, 138.100 154.869 C 141.195 155.859, 142.385 155.720, 146.600 153.873 C 149.295 152.692, 153.989 149.992, 157.031 147.872 C 160.073 145.752, 164.182 142.080, 166.161 139.711 C 168.141 137.343, 170.976 133.008, 172.460 130.078 C 173.945 127.149, 175.832 121.545, 176.653 117.626 C 177.700 112.633, 177.942 108.148, 177.460 102.644 C 176.773 94.789, 176.773 94.789, 170.637 91.917 C 167.261 90.338, 161.125 88.193, 157 87.151 C 152.875 86.110, 145.725 84.938, 141.112 84.548 C 133.221 83.880, 132.772 83.947, 133.526 85.669 M 118 87.520 C 112.775 88.851, 104.450 91.971, 99.500 94.453 C 90.500 98.964, 90.500 98.964, 85 97.465 C 81.975 96.641, 76.088 95.905, 71.918 95.829 C 65.801 95.719, 63.437 96.141, 59.683 98.016 C 57.123 99.294, 54.039 101.394, 52.828 102.683 C 51.480 104.118, 50.990 105.373, 51.563 105.920 C 52.078 106.412, 56.550 109.999, 61.500 113.892 C 70.178 120.716, 70.698 120.970, 76.040 120.985 C 79.087 120.993, 84.190 121.680, 87.380 122.511 C 90.571 123.342, 95.057 125.121, 97.350 126.465 C 99.642 127.808, 102.952 130.391, 104.705 132.204 C 106.458 134.017, 109.070 138.078, 110.509 141.228 C 112.092 144.691, 113.561 150.425, 114.226 155.728 L 115.325 164.500 121.143 158.879 C 124.539 155.597, 127.810 151.276, 129.001 148.498 C 130.123 145.880, 131.884 140.519, 132.915 136.583 C 133.946 132.648, 135.104 126.065, 135.490 121.955 C 135.975 116.772, 135.704 111.666, 134.603 105.288 C 133.730 100.232, 131.912 93.598, 130.563 90.547 C 129.214 87.496, 127.973 85.022, 127.805 85.049 C 127.637 85.076, 123.225 86.188, 118 87.520 M 181.464 108.252 C 181.437 116.219, 180.922 119.989, 179.153 125.190 C 177.901 128.870, 175.162 134.495, 173.066 137.690 C 170.971 140.886, 167.511 145.141, 165.378 147.147 C 163.245 149.153, 159.025 152.353, 156 154.258 C 152.975 156.163, 149.488 158.040, 148.250 158.428 C 147.012 158.817, 146 159.494, 146 159.933 C 146 160.371, 146.838 161.803, 147.863 163.115 C 148.887 164.427, 150.727 167.474, 151.953 169.887 C 154.180 174.273, 154.180 174.273, 161.840 173.741 C 166.727 173.401, 171.853 172.261, 176 170.590 C 179.575 169.150, 185.594 165.650, 189.377 162.811 C 193.159 159.973, 198.821 154.420, 201.960 150.470 C 205.098 146.520, 209.283 140.398, 211.259 136.865 C 213.235 133.332, 215.143 129.278, 215.500 127.856 C 216.074 125.570, 215.162 124.367, 207.636 117.479 C 202.954 113.194, 195.444 107.059, 190.948 103.844 C 186.451 100.630, 182.486 98.001, 182.136 98.002 C 181.786 98.004, 181.484 102.616, 181.464 108.252 M 72 164.725 L 72 204.727 77.750 207.272 C 80.913 208.671, 86.108 210.344, 89.295 210.988 C 92.482 211.633, 96.862 211.861, 99.028 211.495 C 101.632 211.055, 103.804 209.833, 105.443 207.886 C 106.805 206.266, 108.144 203.492, 108.418 201.721 C 108.692 199.949, 109.200 188.516, 109.547 176.313 C 110.090 157.252, 109.943 153.316, 108.506 148.372 C 107.586 145.207, 105.489 140.664, 103.846 138.276 C 102.203 135.889, 99.204 132.842, 97.180 131.507 C 95.156 130.171, 91.558 128.395, 89.184 127.560 C 86.810 126.725, 81.973 125.746, 78.434 125.383 L 72 124.724 72 164.725 M 215.580 137.665 C 213.447 141.808, 209.907 147.515, 207.712 150.348 C 205.517 153.182, 202.097 157.245, 200.111 159.378 C 198.125 161.511, 193.218 165.423, 189.207 168.072 C 185.196 170.721, 179.419 173.822, 176.368 174.963 C 173.317 176.105, 167.487 177.535, 163.411 178.141 C 159.179 178.770, 156.015 179.727, 156.035 180.372 C 156.054 180.992, 156.714 184.425, 157.500 188 C 158.286 191.575, 158.946 196.601, 158.965 199.168 C 158.984 201.736, 159.248 204.482, 159.551 205.272 C 160.026 206.509, 161.297 206.522, 168.801 205.362 C 173.585 204.622, 184.025 202.621, 192 200.915 C 199.975 199.208, 211.204 196.241, 216.952 194.321 C 222.701 192.400, 229.676 189.692, 232.452 188.302 C 235.229 186.913, 238.963 184.679, 240.750 183.337 C 243.511 181.265, 244.001 180.266, 244.006 176.699 C 244.010 174.390, 244.637 171.302, 245.402 169.837 C 246.714 167.322, 246.515 166.744, 241.809 159.398 C 239.069 155.122, 233.474 147.249, 229.377 141.903 C 225.279 136.558, 221.371 131.723, 220.692 131.159 C 219.765 130.390, 218.487 132.017, 215.580 137.665 M 249 208.804 C 249 245.607, 249 245.607, 251.500 250.554 C 253.022 253.564, 255.664 256.674, 258.250 258.500 C 262.500 261.500, 262.500 261.500, 305.573 261.500 C 348.646 261.500, 348.646 261.500, 352.768 258.772 C 355.035 257.272, 358.152 253.897, 359.695 251.272 C 362.500 246.500, 362.500 246.500, 362.796 209.250 L 363.091 172 306.046 172 L 249 172 249 208.804 M 367 208.179 C 367 238.265, 366.733 245.428, 365.472 249.128 C 364.632 251.594, 362.598 255.246, 360.952 257.242 C 359.306 259.239, 355.381 262.139, 352.230 263.686 C 346.500 266.500, 346.500 266.500, 306 266.500 C 274.088 266.500, 264.670 266.207, 261.584 265.118 C 259.430 264.357, 255.648 261.882, 253.179 259.618 C 250.710 257.353, 247.747 253.475, 246.595 251 C 244.644 246.810, 244.477 244.463, 244.173 216.926 L 243.846 187.352 235.173 191.672 C 230.403 194.048, 221.673 197.568, 215.774 199.495 C 209.874 201.421, 198.399 204.322, 190.274 205.942 C 182.148 207.562, 171.817 209.410, 167.317 210.049 C 161.712 210.845, 158.949 211.690, 158.549 212.732 C 158.228 213.569, 157.694 218.809, 157.362 224.377 C 157.027 229.997, 157.266 238.726, 157.899 244 C 158.526 249.225, 160.189 258.152, 161.594 263.838 C 163 269.524, 166.159 279.176, 168.615 285.287 C 171.071 291.397, 174.419 298.737, 176.056 301.598 C 177.692 304.458, 179.679 307.047, 180.470 307.350 C 181.262 307.654, 182.774 309.612, 183.831 311.701 C 184.888 313.791, 186.566 318.875, 187.560 323 C 189.190 329.771, 189.339 334.997, 189.093 376.750 L 188.819 423 200.910 423 C 209.903 423, 213.006 422.680, 213.023 421.750 C 213.036 421.063, 214.967 408.091, 217.313 392.925 C 221.579 365.350, 221.579 365.350, 225.252 360.868 C 227.272 358.403, 230.299 353.449, 231.978 349.860 C 233.658 346.270, 235.713 339.779, 236.544 335.436 C 237.375 331.093, 238.155 322.437, 238.277 316.201 C 238.500 304.864, 238.500 304.864, 241.483 305.453 C 243.123 305.778, 248.748 306.559, 253.983 307.190 C 259.217 307.821, 272.725 308.267, 284 308.183 C 295.275 308.098, 310.800 307.401, 318.500 306.635 C 326.200 305.869, 332.837 305.439, 333.250 305.680 C 333.663 305.921, 334.010 307.104, 334.022 308.309 C 334.034 309.514, 334.875 312.329, 335.890 314.565 C 336.906 316.801, 339.259 320.367, 341.118 322.489 C 342.978 324.611, 347.650 328.669, 351.500 331.509 C 355.350 334.348, 364.742 340.232, 372.371 344.585 C 380.001 348.938, 388.150 354.171, 390.482 356.212 C 392.945 358.369, 395.645 362.072, 396.925 365.048 C 398.137 367.865, 399.824 373.620, 400.674 377.835 C 401.732 383.088, 402.263 392.027, 402.359 406.245 L 402.500 426.989 413.633 426.995 C 424.767 427, 424.767 427, 425.371 424.250 C 425.704 422.738, 426.267 406.425, 426.624 388 C 427.045 366.216, 426.903 352.177, 426.219 347.857 C 425.640 344.203, 423.952 338.353, 422.468 334.857 C 420.984 331.361, 418.824 326.025, 417.667 323 C 415.934 318.470, 415.564 315.296, 415.564 305 C 415.565 293.688, 415.835 291.787, 418.410 285 C 419.974 280.875, 422.393 273.675, 423.784 269 C 426.040 261.425, 426.317 258.705, 426.338 244 C 426.360 228.898, 426.134 226.755, 423.672 218.703 C 422.192 213.865, 419.684 207.340, 418.099 204.203 C 416.513 201.067, 413.207 195.774, 410.752 192.443 C 408.297 189.112, 403.521 184.306, 400.137 181.763 C 396.754 179.219, 391.402 176.164, 388.243 174.973 C 385.084 173.781, 379.012 172.561, 374.750 172.260 L 367 171.714 367 208.179 M 397.427 174.292 C 399.036 175.506, 402.634 178.325, 405.421 180.555 C 408.208 182.786, 413.078 188.411, 416.243 193.055 C 419.408 197.700, 423.308 204.875, 424.911 209 C 426.513 213.125, 428.538 219.969, 429.412 224.208 C 430.292 228.480, 430.997 236.726, 430.994 242.708 C 430.991 248.644, 430.520 256.200, 429.948 259.500 C 429.376 262.800, 428.645 266.962, 428.323 268.750 C 427.738 272, 427.738 272, 444.369 272 L 461 272 460.994 260.750 C 460.991 254.563, 460.340 245.225, 459.548 240 C 458.755 234.775, 457.138 227.350, 455.954 223.500 C 454.769 219.650, 451.948 212.900, 449.683 208.500 C 446.670 202.646, 443.411 198.348, 437.533 192.475 C 432.119 187.067, 427.217 183.266, 422.500 180.817 C 418.650 178.819, 412.350 176.278, 408.500 175.171 C 404.650 174.064, 399.925 172.917, 398 172.621 C 394.500 172.084, 394.500 172.084, 397.427 174.292" stroke="none" fill="%23495057" fill-rule="evenodd"/></svg>';var S8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23dc3545" fill-rule="evenodd"/><path d="M 249.896 56.199 C 250.918 59.167, 252.712 63.475, 253.883 65.770 C 255.054 68.066, 257.406 71.532, 259.110 73.472 C 260.813 75.412, 261.909 77, 261.545 77 C 261.181 77, 255.622 75.679, 249.192 74.064 C 242.761 72.450, 232.775 70.405, 227 69.520 C 221.225 68.636, 209.440 67.640, 200.812 67.309 C 190.554 66.914, 182.420 67.123, 177.312 67.913 C 173.015 68.577, 167.250 69.831, 164.500 70.699 C 161.750 71.568, 156.932 73.562, 153.793 75.132 C 150.655 76.701, 146.413 79.451, 144.367 81.243 C 142.321 83.034, 132.439 94.205, 122.406 106.066 C 112.374 117.927, 101.327 130.260, 97.857 133.472 C 94.388 136.684, 89.556 140.193, 87.121 141.271 C 83.877 142.706, 81.514 143.068, 78.286 142.626 L 73.879 142.022 75.848 144.761 C 76.931 146.267, 79.096 148.692, 80.659 150.149 C 82.221 151.606, 85.695 154.174, 88.378 155.856 C 91.061 157.538, 95.593 159.437, 98.449 160.076 C 102.102 160.893, 105.031 160.942, 108.321 160.240 C 110.895 159.692, 113 159.496, 113 159.807 C 113 160.117, 112.135 161.300, 111.077 162.436 C 110.019 163.571, 106.664 168.475, 103.620 173.334 C 100.576 178.193, 96.300 186.743, 94.118 192.334 C 91.936 197.925, 89.329 206.325, 88.326 211 C 87.019 217.088, 86.501 223.757, 86.501 234.500 C 86.500 243.221, 87.078 252.430, 87.882 256.500 C 88.641 260.350, 90.753 268.092, 92.575 273.705 C 94.397 279.318, 99.547 291.196, 104.020 300.102 C 108.494 309.007, 113.675 320.840, 115.534 326.397 C 117.393 331.954, 119.661 340.775, 120.572 346 C 121.796 353.008, 122.088 358.778, 121.688 368 C 121.343 375.959, 120.388 383.318, 119.058 388.256 C 117.909 392.522, 115.845 398.554, 114.472 401.660 C 113.098 404.766, 112.184 407.517, 112.440 407.774 C 112.697 408.030, 114.390 407.961, 116.203 407.620 C 118.017 407.279, 122.200 405.691, 125.500 404.091 C 128.800 402.491, 134.098 399.101, 137.274 396.557 C 140.450 394.014, 145.978 388.236, 149.559 383.717 C 153.267 379.037, 158.399 370.764, 161.480 364.500 C 164.455 358.450, 168.096 350.016, 169.572 345.758 L 172.254 338.016 168.377 333.429 C 166.245 330.907, 161.064 324.345, 156.865 318.848 C 152.666 313.351, 147.171 304.724, 144.653 299.677 C 142.135 294.630, 138.985 287.113, 137.652 282.974 C 136.320 278.834, 134.483 271.184, 133.570 265.974 C 132.658 260.763, 131.660 250.200, 131.354 242.500 C 130.954 232.437, 131.230 225.688, 132.336 218.500 C 133.181 213, 135.080 204.675, 136.554 200 C 138.029 195.325, 140.594 188.800, 142.254 185.500 C 143.915 182.200, 147.087 176.800, 149.304 173.500 C 151.521 170.200, 156.561 164.300, 160.505 160.390 C 164.449 156.479, 171.011 151.029, 175.088 148.278 C 179.165 145.527, 185.684 141.673, 189.576 139.713 C 193.468 137.753, 201.146 134.586, 206.638 132.674 C 212.130 130.763, 221.095 128.282, 226.561 127.161 C 232.028 126.040, 240.775 124.661, 246 124.096 C 252.288 123.416, 259.727 123.392, 268 124.024 C 274.875 124.550, 284.100 125.703, 288.500 126.586 C 292.900 127.470, 301.269 129.725, 307.098 131.597 C 312.927 133.470, 322.827 137.601, 329.098 140.777 C 335.369 143.954, 343.650 148.656, 347.500 151.226 C 351.350 153.796, 356.617 157.525, 359.204 159.512 L 363.909 163.124 366.869 157.260 C 368.497 154.034, 370.587 148.789, 371.513 145.603 C 372.590 141.898, 373.186 136.331, 373.167 130.155 C 373.150 124.845, 372.395 116.928, 371.489 112.562 C 370.583 108.197, 368.809 101.881, 367.546 98.527 C 366.284 95.173, 364.023 89.970, 362.522 86.965 C 361.021 83.959, 357.351 78.281, 354.365 74.348 C 351.380 70.414, 346.579 65.375, 343.696 63.151 C 340.814 60.927, 335.507 57.728, 331.903 56.042 C 327.954 54.194, 322.080 52.499, 317.115 51.776 C 310.158 50.762, 306.131 50.858, 291.190 52.393 C 281.460 53.394, 270.507 54.446, 266.848 54.733 C 262.274 55.092, 258.837 54.779, 255.848 53.733 C 253.457 52.896, 250.721 51.894, 249.770 51.506 C 248.155 50.848, 248.163 51.161, 249.896 56.199 M 241.500 128.611 C 239.850 128.853, 234.046 129.975, 228.601 131.104 C 223.157 132.233, 214.766 134.443, 209.955 136.015 C 205.144 137.587, 197.449 140.752, 192.854 143.048 C 188.259 145.345, 181.800 149.048, 178.500 151.278 C 175.200 153.507, 170.308 157.170, 167.628 159.416 C 164.948 161.662, 159.955 166.997, 156.531 171.270 C 153.108 175.544, 148.464 182.760, 146.211 187.306 C 143.958 191.852, 141.006 199.401, 139.649 204.082 C 138.293 208.763, 136.641 217.072, 135.979 222.546 C 135.224 228.796, 135.030 236.965, 135.459 244.500 C 135.834 251.100, 136.781 260.177, 137.562 264.671 C 138.343 269.165, 140.165 276.590, 141.610 281.171 C 143.054 285.752, 145.820 292.650, 147.757 296.500 C 149.693 300.350, 153.412 306.650, 156.022 310.500 C 158.632 314.350, 165.577 323.350, 171.456 330.500 C 177.335 337.650, 183.948 346.512, 186.153 350.194 C 188.358 353.876, 191.219 359.951, 192.512 363.694 C 193.805 367.437, 195.347 374.897, 195.938 380.272 C 196.719 387.362, 196.705 392.658, 195.890 399.572 C 195.272 404.812, 195.003 409.337, 195.293 409.627 C 195.583 409.917, 211.274 415.117, 230.160 421.183 C 249.047 427.249, 284.731 438.671, 309.458 446.565 C 334.185 454.458, 354.568 460.765, 354.754 460.580 C 354.939 460.394, 353.282 454.995, 351.070 448.583 C 348.859 442.170, 346.317 433.013, 345.422 428.235 C 344.321 422.358, 343.928 416.143, 344.209 409.024 C 344.540 400.597, 345.091 397.532, 346.972 393.642 C 348.265 390.970, 350.847 387.303, 352.711 385.493 C 354.574 383.682, 357.452 381.641, 359.105 380.956 C 360.759 380.272, 361.749 379.368, 361.306 378.949 C 360.863 378.529, 336.875 367.067, 308 353.476 C 279.125 339.886, 253.025 327.641, 250 326.265 C 246.975 324.888, 240.808 323.193, 236.295 322.496 C 231.563 321.766, 225.331 319.939, 221.572 318.180 C 217.987 316.503, 212.810 313.032, 210.068 310.467 C 207.326 307.902, 203.666 303.597, 201.936 300.900 C 200.205 298.203, 197.937 293.257, 196.895 289.909 C 195.715 286.121, 195 280.868, 195 276 C 195 271.132, 195.715 265.879, 196.895 262.091 C 197.937 258.743, 200.205 253.797, 201.936 251.100 C 203.666 248.403, 207.326 244.098, 210.068 241.533 C 212.810 238.968, 218 235.491, 221.602 233.805 C 225.321 232.065, 231.368 230.278, 235.596 229.668 C 241.061 228.881, 244.504 228.903, 248.543 229.750 L 254.044 230.904 314.272 207.339 C 347.397 194.378, 374.911 183.391, 375.413 182.924 C 375.941 182.433, 372.335 178.164, 366.850 172.787 C 361.639 167.679, 353.454 160.720, 348.660 157.322 C 343.867 153.923, 335.120 148.679, 329.223 145.666 C 323.325 142.654, 313.846 138.572, 308.159 136.596 C 302.471 134.620, 293.471 132.072, 288.159 130.933 C 281.159 129.433, 273.820 128.768, 261.500 128.516 C 252.150 128.326, 243.150 128.368, 241.500 128.611 M 330.500 205.577 C 294.750 219.528, 264.406 231.433, 263.069 232.033 C 260.680 233.103, 260.724 233.172, 265.648 235.984 C 268.403 237.557, 273.001 241.409, 275.866 244.543 C 278.730 247.677, 281.782 251.611, 282.647 253.284 C 283.512 254.957, 285.070 258.798, 286.110 261.819 C 287.399 265.565, 288 270.086, 288 276.031 C 288 281.322, 287.395 286.463, 286.461 289.111 C 285.614 291.511, 285.277 293.598, 285.711 293.749 C 286.145 293.901, 312.573 306.848, 344.441 322.522 C 376.308 338.195, 402.719 350.677, 403.132 350.259 C 403.545 349.842, 411.579 332.684, 420.985 312.131 L 438.088 274.762 417.459 228.131 C 406.113 202.484, 396.531 181.210, 396.165 180.856 C 395.799 180.502, 366.250 191.626, 330.500 205.577 M 229.500 235.399 C 227.300 236.095, 223.925 237.476, 222 238.469 C 220.075 239.462, 216.838 241.580, 214.806 243.177 C 212.774 244.773, 209.500 248.275, 207.530 250.959 C 205.560 253.643, 203.096 258.313, 202.056 261.337 C 201.016 264.361, 199.869 269.234, 199.507 272.167 C 199.092 275.540, 199.396 280.072, 200.335 284.500 C 201.152 288.350, 203.081 293.750, 204.622 296.500 C 206.162 299.250, 209.682 303.710, 212.444 306.411 C 215.205 309.112, 220.172 312.580, 223.482 314.117 C 226.792 315.654, 232.313 317.357, 235.750 317.900 C 239.852 318.549, 244.148 318.551, 248.250 317.907 C 251.688 317.367, 256.946 315.704, 259.936 314.213 C 262.926 312.721, 267.792 309.291, 270.749 306.592 C 273.707 303.892, 277.291 299.392, 278.714 296.592 C 280.137 293.791, 281.903 289.250, 282.639 286.500 C 283.374 283.750, 283.982 278.994, 283.988 275.932 C 283.995 272.869, 283.275 267.919, 282.390 264.932 C 281.504 261.944, 279.910 257.792, 278.846 255.705 C 277.783 253.618, 275.245 250.057, 273.207 247.792 C 271.168 245.527, 267.159 242.172, 264.298 240.337 C 261.436 238.501, 256.504 236.324, 253.337 235.500 C 250.171 234.675, 244.412 234.030, 240.540 234.067 C 236.668 234.104, 231.700 234.703, 229.500 235.399 M 278.751 304.417 C 275.833 308.359, 271.651 312.403, 267.906 314.904 C 264.554 317.142, 259.941 319.475, 257.656 320.088 C 255.370 320.701, 253.103 321.445, 252.619 321.742 C 252.134 322.038, 255.509 324.066, 260.119 326.248 C 264.728 328.431, 298.994 344.568, 336.264 362.108 C 373.533 379.649, 404.443 394, 404.951 394 C 405.459 394, 405.666 392.538, 405.410 390.750 C 405.155 388.962, 404.091 380.355, 403.046 371.623 C 402.001 362.890, 400.775 355.434, 400.323 355.053 C 399.870 354.672, 373.607 341.679, 341.960 326.180 C 310.313 310.681, 284.213 298, 283.960 298 C 283.707 298, 281.363 300.888, 278.751 304.417" stroke="none" fill="%23dc3545" fill-rule="evenodd"/></svg>';var R8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23495057" fill-rule="evenodd"/><path d="M 249.896 56.199 C 250.918 59.167, 252.712 63.475, 253.883 65.770 C 255.054 68.066, 257.406 71.532, 259.110 73.472 C 260.813 75.412, 261.909 77, 261.545 77 C 261.181 77, 255.622 75.679, 249.192 74.064 C 242.761 72.450, 232.775 70.405, 227 69.520 C 221.225 68.636, 209.440 67.640, 200.812 67.309 C 190.554 66.914, 182.420 67.123, 177.312 67.913 C 173.015 68.577, 167.250 69.831, 164.500 70.699 C 161.750 71.568, 156.932 73.562, 153.793 75.132 C 150.655 76.701, 146.413 79.451, 144.367 81.243 C 142.321 83.034, 132.439 94.205, 122.406 106.066 C 112.374 117.927, 101.327 130.260, 97.857 133.472 C 94.388 136.684, 89.556 140.193, 87.121 141.271 C 83.877 142.706, 81.514 143.068, 78.286 142.626 L 73.879 142.022 75.848 144.761 C 76.931 146.267, 79.096 148.692, 80.659 150.149 C 82.221 151.606, 85.695 154.174, 88.378 155.856 C 91.061 157.538, 95.593 159.437, 98.449 160.076 C 102.102 160.893, 105.031 160.942, 108.321 160.240 C 110.895 159.692, 113 159.496, 113 159.807 C 113 160.117, 112.135 161.300, 111.077 162.436 C 110.019 163.571, 106.664 168.475, 103.620 173.334 C 100.576 178.193, 96.300 186.743, 94.118 192.334 C 91.936 197.925, 89.329 206.325, 88.326 211 C 87.019 217.088, 86.501 223.757, 86.501 234.500 C 86.500 243.221, 87.078 252.430, 87.882 256.500 C 88.641 260.350, 90.753 268.092, 92.575 273.705 C 94.397 279.318, 99.547 291.196, 104.020 300.102 C 108.494 309.007, 113.675 320.840, 115.534 326.397 C 117.393 331.954, 119.661 340.775, 120.572 346 C 121.796 353.008, 122.088 358.778, 121.688 368 C 121.343 375.959, 120.388 383.318, 119.058 388.256 C 117.909 392.522, 115.845 398.554, 114.472 401.660 C 113.098 404.766, 112.184 407.517, 112.440 407.774 C 112.697 408.030, 114.390 407.961, 116.203 407.620 C 118.017 407.279, 122.200 405.691, 125.500 404.091 C 128.800 402.491, 134.098 399.101, 137.274 396.557 C 140.450 394.014, 145.978 388.236, 149.559 383.717 C 153.267 379.037, 158.399 370.764, 161.480 364.500 C 164.455 358.450, 168.096 350.016, 169.572 345.758 L 172.254 338.016 168.377 333.429 C 166.245 330.907, 161.064 324.345, 156.865 318.848 C 152.666 313.351, 147.171 304.724, 144.653 299.677 C 142.135 294.630, 138.985 287.113, 137.652 282.974 C 136.320 278.834, 134.483 271.184, 133.570 265.974 C 132.658 260.763, 131.660 250.200, 131.354 242.500 C 130.954 232.437, 131.230 225.688, 132.336 218.500 C 133.181 213, 135.080 204.675, 136.554 200 C 138.029 195.325, 140.594 188.800, 142.254 185.500 C 143.915 182.200, 147.087 176.800, 149.304 173.500 C 151.521 170.200, 156.561 164.300, 160.505 160.390 C 164.449 156.479, 171.011 151.029, 175.088 148.278 C 179.165 145.527, 185.684 141.673, 189.576 139.713 C 193.468 137.753, 201.146 134.586, 206.638 132.674 C 212.130 130.763, 221.095 128.282, 226.561 127.161 C 232.028 126.040, 240.775 124.661, 246 124.096 C 252.288 123.416, 259.727 123.392, 268 124.024 C 274.875 124.550, 284.100 125.703, 288.500 126.586 C 292.900 127.470, 301.269 129.725, 307.098 131.597 C 312.927 133.470, 322.827 137.601, 329.098 140.777 C 335.369 143.954, 343.650 148.656, 347.500 151.226 C 351.350 153.796, 356.617 157.525, 359.204 159.512 L 363.909 163.124 366.869 157.260 C 368.497 154.034, 370.587 148.789, 371.513 145.603 C 372.590 141.898, 373.186 136.331, 373.167 130.155 C 373.150 124.845, 372.395 116.928, 371.489 112.562 C 370.583 108.197, 368.809 101.881, 367.546 98.527 C 366.284 95.173, 364.023 89.970, 362.522 86.965 C 361.021 83.959, 357.351 78.281, 354.365 74.348 C 351.380 70.414, 346.579 65.375, 343.696 63.151 C 340.814 60.927, 335.507 57.728, 331.903 56.042 C 327.954 54.194, 322.080 52.499, 317.115 51.776 C 310.158 50.762, 306.131 50.858, 291.190 52.393 C 281.460 53.394, 270.507 54.446, 266.848 54.733 C 262.274 55.092, 258.837 54.779, 255.848 53.733 C 253.457 52.896, 250.721 51.894, 249.770 51.506 C 248.155 50.848, 248.163 51.161, 249.896 56.199 M 241.500 128.611 C 239.850 128.853, 234.046 129.975, 228.601 131.104 C 223.157 132.233, 214.766 134.443, 209.955 136.015 C 205.144 137.587, 197.449 140.752, 192.854 143.048 C 188.259 145.345, 181.800 149.048, 178.500 151.278 C 175.200 153.507, 170.308 157.170, 167.628 159.416 C 164.948 161.662, 159.955 166.997, 156.531 171.270 C 153.108 175.544, 148.464 182.760, 146.211 187.306 C 143.958 191.852, 141.006 199.401, 139.649 204.082 C 138.293 208.763, 136.641 217.072, 135.979 222.546 C 135.224 228.796, 135.030 236.965, 135.459 244.500 C 135.834 251.100, 136.781 260.177, 137.562 264.671 C 138.343 269.165, 140.165 276.590, 141.610 281.171 C 143.054 285.752, 145.820 292.650, 147.757 296.500 C 149.693 300.350, 153.412 306.650, 156.022 310.500 C 158.632 314.350, 165.577 323.350, 171.456 330.500 C 177.335 337.650, 183.948 346.512, 186.153 350.194 C 188.358 353.876, 191.219 359.951, 192.512 363.694 C 193.805 367.437, 195.347 374.897, 195.938 380.272 C 196.719 387.362, 196.705 392.658, 195.890 399.572 C 195.272 404.812, 195.003 409.337, 195.293 409.627 C 195.583 409.917, 211.274 415.117, 230.160 421.183 C 249.047 427.249, 284.731 438.671, 309.458 446.565 C 334.185 454.458, 354.568 460.765, 354.754 460.580 C 354.939 460.394, 353.282 454.995, 351.070 448.583 C 348.859 442.170, 346.317 433.013, 345.422 428.235 C 344.321 422.358, 343.928 416.143, 344.209 409.024 C 344.540 400.597, 345.091 397.532, 346.972 393.642 C 348.265 390.970, 350.847 387.303, 352.711 385.493 C 354.574 383.682, 357.452 381.641, 359.105 380.956 C 360.759 380.272, 361.749 379.368, 361.306 378.949 C 360.863 378.529, 336.875 367.067, 308 353.476 C 279.125 339.886, 253.025 327.641, 250 326.265 C 246.975 324.888, 240.808 323.193, 236.295 322.496 C 231.563 321.766, 225.331 319.939, 221.572 318.180 C 217.987 316.503, 212.810 313.032, 210.068 310.467 C 207.326 307.902, 203.666 303.597, 201.936 300.900 C 200.205 298.203, 197.937 293.257, 196.895 289.909 C 195.715 286.121, 195 280.868, 195 276 C 195 271.132, 195.715 265.879, 196.895 262.091 C 197.937 258.743, 200.205 253.797, 201.936 251.100 C 203.666 248.403, 207.326 244.098, 210.068 241.533 C 212.810 238.968, 218 235.491, 221.602 233.805 C 225.321 232.065, 231.368 230.278, 235.596 229.668 C 241.061 228.881, 244.504 228.903, 248.543 229.750 L 254.044 230.904 314.272 207.339 C 347.397 194.378, 374.911 183.391, 375.413 182.924 C 375.941 182.433, 372.335 178.164, 366.850 172.787 C 361.639 167.679, 353.454 160.720, 348.660 157.322 C 343.867 153.923, 335.120 148.679, 329.223 145.666 C 323.325 142.654, 313.846 138.572, 308.159 136.596 C 302.471 134.620, 293.471 132.072, 288.159 130.933 C 281.159 129.433, 273.820 128.768, 261.500 128.516 C 252.150 128.326, 243.150 128.368, 241.500 128.611 M 330.500 205.577 C 294.750 219.528, 264.406 231.433, 263.069 232.033 C 260.680 233.103, 260.724 233.172, 265.648 235.984 C 268.403 237.557, 273.001 241.409, 275.866 244.543 C 278.730 247.677, 281.782 251.611, 282.647 253.284 C 283.512 254.957, 285.070 258.798, 286.110 261.819 C 287.399 265.565, 288 270.086, 288 276.031 C 288 281.322, 287.395 286.463, 286.461 289.111 C 285.614 291.511, 285.277 293.598, 285.711 293.749 C 286.145 293.901, 312.573 306.848, 344.441 322.522 C 376.308 338.195, 402.719 350.677, 403.132 350.259 C 403.545 349.842, 411.579 332.684, 420.985 312.131 L 438.088 274.762 417.459 228.131 C 406.113 202.484, 396.531 181.210, 396.165 180.856 C 395.799 180.502, 366.250 191.626, 330.500 205.577 M 229.500 235.399 C 227.300 236.095, 223.925 237.476, 222 238.469 C 220.075 239.462, 216.838 241.580, 214.806 243.177 C 212.774 244.773, 209.500 248.275, 207.530 250.959 C 205.560 253.643, 203.096 258.313, 202.056 261.337 C 201.016 264.361, 199.869 269.234, 199.507 272.167 C 199.092 275.540, 199.396 280.072, 200.335 284.500 C 201.152 288.350, 203.081 293.750, 204.622 296.500 C 206.162 299.250, 209.682 303.710, 212.444 306.411 C 215.205 309.112, 220.172 312.580, 223.482 314.117 C 226.792 315.654, 232.313 317.357, 235.750 317.900 C 239.852 318.549, 244.148 318.551, 248.250 317.907 C 251.688 317.367, 256.946 315.704, 259.936 314.213 C 262.926 312.721, 267.792 309.291, 270.749 306.592 C 273.707 303.892, 277.291 299.392, 278.714 296.592 C 280.137 293.791, 281.903 289.250, 282.639 286.500 C 283.374 283.750, 283.982 278.994, 283.988 275.932 C 283.995 272.869, 283.275 267.919, 282.390 264.932 C 281.504 261.944, 279.910 257.792, 278.846 255.705 C 277.783 253.618, 275.245 250.057, 273.207 247.792 C 271.168 245.527, 267.159 242.172, 264.298 240.337 C 261.436 238.501, 256.504 236.324, 253.337 235.500 C 250.171 234.675, 244.412 234.030, 240.540 234.067 C 236.668 234.104, 231.700 234.703, 229.500 235.399 M 278.751 304.417 C 275.833 308.359, 271.651 312.403, 267.906 314.904 C 264.554 317.142, 259.941 319.475, 257.656 320.088 C 255.370 320.701, 253.103 321.445, 252.619 321.742 C 252.134 322.038, 255.509 324.066, 260.119 326.248 C 264.728 328.431, 298.994 344.568, 336.264 362.108 C 373.533 379.649, 404.443 394, 404.951 394 C 405.459 394, 405.666 392.538, 405.410 390.750 C 405.155 388.962, 404.091 380.355, 403.046 371.623 C 402.001 362.890, 400.775 355.434, 400.323 355.053 C 399.870 354.672, 373.607 341.679, 341.960 326.180 C 310.313 310.681, 284.213 298, 283.960 298 C 283.707 298, 281.363 300.888, 278.751 304.417" stroke="none" fill="%23495057" fill-rule="evenodd"/></svg>';var E8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23dc3545" fill-rule="evenodd"/><path d="M 173.577 52.071 C 151.365 55.145, 119.694 66.388, 118.368 71.670 C 118.043 72.966, 118.268 74.618, 118.868 75.341 C 120.164 76.903, 114.684 336.778, 113.329 337.973 C 112.873 338.375, 99.161 349.558, 82.858 362.823 C 60.332 381.152, 52.950 387.705, 52.108 390.120 C 48.060 401.732, 55.656 417.617, 74 435.899 C 84.729 446.591, 92.761 452.831, 101.444 457.220 C 108.408 460.740, 117.315 461.941, 122.017 459.993 C 124.147 459.111, 132.603 449.563, 149.302 429.184 C 162.611 412.943, 173.774 399.246, 174.108 398.747 C 174.449 398.239, 214.275 397.020, 264.608 395.977 C 410.719 392.949, 434.202 392.659, 437.195 393.843 C 441.131 395.399, 443.039 393.225, 447.925 381.621 C 456.251 361.842, 459.838 345.376, 460.711 322.930 C 461.970 290.557, 454.965 257.493, 439.394 222.305 C 431.929 205.435, 417.993 180.350, 415.090 178.556 C 414.153 177.977, 375 213.513, 375 214.942 C 375 215.361, 377.752 218.808, 381.117 222.602 C 414.990 260.805, 432.430 300.233, 436.175 347.080 C 437.171 359.545, 436.167 384.166, 434.598 385.735 C 434.159 386.175, 381.090 387.364, 246.500 389.951 C 215.700 390.543, 188.094 391.255, 185.154 391.534 L 179.808 392.040 185.866 384.770 L 191.925 377.500 183.729 369.244 C 179.221 364.704, 175.212 361.104, 174.820 361.244 C 174.428 361.385, 163.396 371.879, 150.304 384.563 C 137.212 397.248, 125.659 407.942, 124.630 408.328 C 123.172 408.875, 120.693 407.002, 113.380 399.830 C 107.245 393.814, 104 389.880, 104 388.461 C 104 386.987, 110.985 379.087, 125.750 363.859 C 137.713 351.522, 148.373 340.414, 149.440 339.175 L 151.379 336.923 143.029 328.529 L 134.678 320.135 127.189 326.254 L 119.699 332.374 120.333 314.937 C 120.681 305.347, 121.944 248, 123.139 187.500 C 124.334 127, 125.408 77.371, 125.527 77.212 C 125.645 77.054, 132.351 76.405, 140.428 75.770 C 180.264 72.636, 222.797 84.139, 259.121 107.870 C 270.494 115.300, 282.623 124.681, 290.702 132.296 C 293.563 134.992, 296.379 137.040, 296.959 136.847 C 298.242 136.419, 334.015 98.027, 333.964 97.133 C 333.917 96.305, 317.800 86.467, 307 80.674 C 284.142 68.413, 254.920 58.416, 227.500 53.476 C 216.751 51.539, 183.653 50.677, 173.577 52.071 M 418.500 68.898 C 399.800 75.372, 384.572 81.006, 384.661 81.420 C 385.018 83.097, 429.331 128.056, 430.305 127.732 C 430.884 127.539, 436.830 111.545, 443.518 92.190 C 453.015 64.710, 455.331 57.014, 454.089 57.065 C 453.215 57.100, 437.200 62.425, 418.500 68.898 M 341.251 97.690 C 338.320 99.322, 305.779 134.474, 180 271.873 C 157.725 296.206, 139.334 316.587, 139.131 317.164 C 138.712 318.357, 152.902 333, 154.478 333 C 155.043 333, 182.729 305.037, 216.003 270.861 C 391.818 90.273, 375.128 107.799, 373.259 105.734 C 372.331 104.708, 368.405 102.347, 364.536 100.487 C 355.485 96.136, 346.070 95.005, 341.251 97.690 M 273.853 217.776 C 209.147 284.174, 145.284 349.672, 131.936 363.326 L 107.666 388.151 115.718 396.203 L 123.770 404.255 184.656 344.877 C 233.352 297.387, 362.750 171.360, 407 128.326 L 415.500 120.059 404.016 108.530 C 397.700 102.188, 392.300 97.012, 392.016 97.026 C 391.732 97.040, 338.559 151.378, 273.853 217.776 M 322.810 216.208 C 278.089 259.841, 227.200 309.460, 209.721 326.470 L 177.943 357.398 185.721 365.224 C 190 369.528, 194.048 372.926, 194.719 372.775 C 195.389 372.624, 210.884 358.775, 229.153 342 C 366.978 215.444, 413.192 172.530, 414.610 169.788 C 417.293 164.598, 415.984 156.425, 410.837 146.242 C 408.452 141.522, 405.964 137.484, 405.310 137.267 C 404.655 137.050, 367.530 172.574, 322.810 216.208" stroke="none" fill="%23dc3545" fill-rule="evenodd"/></svg>';var N8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23495057" fill-rule="evenodd"/><path d="M 173.577 52.071 C 151.365 55.145, 119.694 66.388, 118.368 71.670 C 118.043 72.966, 118.268 74.618, 118.868 75.341 C 120.164 76.903, 114.684 336.778, 113.329 337.973 C 112.873 338.375, 99.161 349.558, 82.858 362.823 C 60.332 381.152, 52.950 387.705, 52.108 390.120 C 48.060 401.732, 55.656 417.617, 74 435.899 C 84.729 446.591, 92.761 452.831, 101.444 457.220 C 108.408 460.740, 117.315 461.941, 122.017 459.993 C 124.147 459.111, 132.603 449.563, 149.302 429.184 C 162.611 412.943, 173.774 399.246, 174.108 398.747 C 174.449 398.239, 214.275 397.020, 264.608 395.977 C 410.719 392.949, 434.202 392.659, 437.195 393.843 C 441.131 395.399, 443.039 393.225, 447.925 381.621 C 456.251 361.842, 459.838 345.376, 460.711 322.930 C 461.970 290.557, 454.965 257.493, 439.394 222.305 C 431.929 205.435, 417.993 180.350, 415.090 178.556 C 414.153 177.977, 375 213.513, 375 214.942 C 375 215.361, 377.752 218.808, 381.117 222.602 C 414.990 260.805, 432.430 300.233, 436.175 347.080 C 437.171 359.545, 436.167 384.166, 434.598 385.735 C 434.159 386.175, 381.090 387.364, 246.500 389.951 C 215.700 390.543, 188.094 391.255, 185.154 391.534 L 179.808 392.040 185.866 384.770 L 191.925 377.500 183.729 369.244 C 179.221 364.704, 175.212 361.104, 174.820 361.244 C 174.428 361.385, 163.396 371.879, 150.304 384.563 C 137.212 397.248, 125.659 407.942, 124.630 408.328 C 123.172 408.875, 120.693 407.002, 113.380 399.830 C 107.245 393.814, 104 389.880, 104 388.461 C 104 386.987, 110.985 379.087, 125.750 363.859 C 137.713 351.522, 148.373 340.414, 149.440 339.175 L 151.379 336.923 143.029 328.529 L 134.678 320.135 127.189 326.254 L 119.699 332.374 120.333 314.937 C 120.681 305.347, 121.944 248, 123.139 187.500 C 124.334 127, 125.408 77.371, 125.527 77.212 C 125.645 77.054, 132.351 76.405, 140.428 75.770 C 180.264 72.636, 222.797 84.139, 259.121 107.870 C 270.494 115.300, 282.623 124.681, 290.702 132.296 C 293.563 134.992, 296.379 137.040, 296.959 136.847 C 298.242 136.419, 334.015 98.027, 333.964 97.133 C 333.917 96.305, 317.800 86.467, 307 80.674 C 284.142 68.413, 254.920 58.416, 227.500 53.476 C 216.751 51.539, 183.653 50.677, 173.577 52.071 M 418.500 68.898 C 399.800 75.372, 384.572 81.006, 384.661 81.420 C 385.018 83.097, 429.331 128.056, 430.305 127.732 C 430.884 127.539, 436.830 111.545, 443.518 92.190 C 453.015 64.710, 455.331 57.014, 454.089 57.065 C 453.215 57.100, 437.200 62.425, 418.500 68.898 M 341.251 97.690 C 338.320 99.322, 305.779 134.474, 180 271.873 C 157.725 296.206, 139.334 316.587, 139.131 317.164 C 138.712 318.357, 152.902 333, 154.478 333 C 155.043 333, 182.729 305.037, 216.003 270.861 C 391.818 90.273, 375.128 107.799, 373.259 105.734 C 372.331 104.708, 368.405 102.347, 364.536 100.487 C 355.485 96.136, 346.070 95.005, 341.251 97.690 M 273.853 217.776 C 209.147 284.174, 145.284 349.672, 131.936 363.326 L 107.666 388.151 115.718 396.203 L 123.770 404.255 184.656 344.877 C 233.352 297.387, 362.750 171.360, 407 128.326 L 415.500 120.059 404.016 108.530 C 397.700 102.188, 392.300 97.012, 392.016 97.026 C 391.732 97.040, 338.559 151.378, 273.853 217.776 M 322.810 216.208 C 278.089 259.841, 227.200 309.460, 209.721 326.470 L 177.943 357.398 185.721 365.224 C 190 369.528, 194.048 372.926, 194.719 372.775 C 195.389 372.624, 210.884 358.775, 229.153 342 C 366.978 215.444, 413.192 172.530, 414.610 169.788 C 417.293 164.598, 415.984 156.425, 410.837 146.242 C 408.452 141.522, 405.964 137.484, 405.310 137.267 C 404.655 137.050, 367.530 172.574, 322.810 216.208" stroke="none" fill="%23495057" fill-rule="evenodd"/></svg>';var _8='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23dc3545" fill-rule="evenodd"/><path d="M 247.126 56.102 C 242.387 59.018, 235.079 64.909, 230.067 69.852 C 225.245 74.608, 219.375 81.372, 217.024 84.881 C 214.672 88.391, 211.013 94.964, 208.893 99.488 C 206.773 104.012, 204.133 111.490, 203.026 116.107 C 201.919 120.723, 201.011 125.287, 201.007 126.250 C 201 127.896, 204.283 128, 256 128 L 311 128 311 125.160 C 311 123.598, 310.124 118.896, 309.054 114.711 C 307.984 110.527, 305.578 103.792, 303.708 99.745 C 301.839 95.698, 298.661 89.810, 296.647 86.662 C 294.632 83.513, 289.281 77.079, 284.754 72.364 C 279.837 67.242, 272.657 61.217, 266.917 57.396 C 261.633 53.878, 256.884 51, 256.363 51 C 255.842 51, 251.686 53.296, 247.126 56.102 M 195.500 133.195 C 194.400 133.819, 193.169 134.818, 192.765 135.415 C 192.361 136.012, 192.024 139.713, 192.015 143.639 C 192.003 149.194, 192.424 151.302, 193.911 153.139 L 195.822 155.500 254.161 155.784 C 286.248 155.941, 313.481 155.828, 314.680 155.533 C 315.879 155.238, 317.567 154.291, 318.430 153.427 C 319.607 152.251, 320 149.759, 320 143.485 C 320 135.968, 319.773 134.955, 317.777 133.557 C 315.826 132.190, 308.366 132.004, 256.527 132.030 C 214.415 132.052, 196.927 132.386, 195.500 133.195 M 174.213 149.096 C 174.592 156.205, 175.396 160.208, 177.506 165.500 C 179.042 169.350, 181.617 174.434, 183.229 176.797 C 184.842 179.161, 187.715 182.648, 189.614 184.547 C 191.513 186.446, 193.502 188, 194.033 188 C 194.565 188, 195.008 185.637, 195.017 182.750 C 195.027 179.863, 195.692 174.399, 196.494 170.610 C 197.297 166.820, 198.207 162.922, 198.517 161.948 C 198.946 160.596, 198.365 160.019, 196.066 159.515 C 194.410 159.151, 191.917 157.502, 190.527 155.850 C 188.579 153.535, 188 151.727, 188 147.962 C 188 143.151, 187.942 143.062, 184.196 142.053 C 182.103 141.489, 178.888 140.728, 177.051 140.360 L 173.711 139.692 174.213 149.096 M 333.500 140.681 C 332.400 140.928, 330.038 141.586, 328.250 142.143 C 325.248 143.078, 325 143.481, 325 147.430 C 325 150.212, 324.215 152.864, 322.750 155.025 C 321.512 156.851, 319.150 158.780, 317.500 159.310 C 315.850 159.840, 314.394 160.356, 314.264 160.456 C 314.135 160.556, 314.689 163.757, 315.497 167.569 C 316.305 171.381, 316.973 177.286, 316.983 180.691 C 316.992 184.096, 317.412 187.137, 317.915 187.448 C 318.419 187.759, 320.297 186.780, 322.089 185.272 C 323.881 183.764, 327.055 179.889, 329.141 176.661 C 331.227 173.433, 333.892 168.251, 335.063 165.146 C 336.234 162.041, 337.620 156.575, 338.144 153 C 338.667 149.425, 338.829 145.037, 338.502 143.250 C 338.176 141.463, 337.367 140.052, 336.705 140.116 C 336.042 140.180, 334.600 140.434, 333.500 140.681 M 202.875 162.750 C 202.284 164.262, 201.186 168.875, 200.435 173 C 199.684 177.125, 199.054 183.762, 199.035 187.750 C 199.016 191.738, 199.235 195, 199.522 195 C 199.809 195, 203.681 193.171, 208.126 190.937 C 212.571 188.702, 220.242 185.555, 225.172 183.944 C 230.694 182.139, 238.517 180.558, 245.548 179.825 C 254.433 178.899, 259.277 178.905, 267.414 179.850 C 273.163 180.519, 281.609 182.178, 286.183 183.537 C 290.757 184.897, 298.663 188.013, 303.750 190.462 L 313 194.914 312.994 187.207 C 312.991 182.968, 312.574 176.971, 312.068 173.880 C 311.562 170.790, 310.647 166.402, 310.035 164.130 L 308.923 160 256.437 160 L 203.950 160 202.875 162.750 M 243.500 184.045 C 240.200 184.556, 233.505 186.115, 228.623 187.510 C 223.741 188.906, 215.791 192.013, 210.957 194.415 C 206.123 196.817, 199.543 200.519, 196.335 202.641 C 193.128 204.763, 187.206 209.627, 183.175 213.450 C 177.064 219.246, 176.150 220.508, 177.674 221.055 C 178.678 221.416, 183.937 222.291, 189.360 222.999 C 195.365 223.783, 203.575 224.063, 210.360 223.714 C 217.584 223.343, 223.960 222.373, 228.500 220.955 C 232.350 219.753, 237.839 217.218, 240.697 215.323 C 243.555 213.427, 247.265 209.806, 248.941 207.276 C 250.617 204.745, 252.538 201.155, 253.210 199.296 C 254.104 196.824, 254.954 195.996, 256.378 196.209 C 257.658 196.400, 258.869 198.011, 259.912 200.909 C 260.786 203.334, 263.477 207.522, 265.892 210.215 C 268.308 212.907, 272.463 216.214, 275.126 217.564 C 277.788 218.913, 282.533 220.685, 285.671 221.503 C 288.809 222.320, 296.804 223.260, 303.438 223.592 C 311.907 224.016, 318.425 223.749, 325.322 222.693 C 330.724 221.866, 335.449 220.873, 335.822 220.486 C 336.195 220.098, 333.575 217.115, 330 213.855 C 326.425 210.596, 320.230 205.663, 316.234 202.894 C 312.237 200.124, 304.812 195.891, 299.734 193.487 C 294.655 191.084, 286.170 187.994, 280.879 186.620 C 274.804 185.044, 267.247 183.938, 260.379 183.620 C 254.395 183.344, 246.800 183.535, 243.500 184.045 M 253.515 208.602 C 252.448 210.583, 249.588 213.953, 247.159 216.091 C 244.730 218.230, 240.430 221.110, 237.604 222.493 C 234.777 223.876, 229.323 225.673, 225.483 226.486 C 221.642 227.300, 216.250 227.980, 213.500 227.998 C 210.750 228.016, 207.914 228.402, 207.197 228.857 C 206.171 229.508, 206.520 231.252, 208.848 237.092 C 210.473 241.166, 213.337 247.200, 215.213 250.500 C 217.089 253.800, 219.932 258.525, 221.530 261 C 223.128 263.475, 226.638 268.200, 229.331 271.500 C 232.024 274.800, 238.297 281.175, 243.272 285.666 C 248.247 290.157, 253.336 294.377, 254.581 295.043 C 256.634 296.142, 257.539 295.688, 264.304 290.160 C 268.407 286.808, 274.573 281.013, 278.007 277.282 C 281.442 273.552, 286.486 267.350, 289.218 263.500 C 291.949 259.650, 295.903 253.102, 298.003 248.949 C 300.103 244.797, 302.955 238.610, 304.340 235.201 L 306.859 229.003 304.679 228.562 C 303.481 228.319, 299.034 227.851, 294.798 227.523 C 290.562 227.194, 284.673 226.092, 281.711 225.073 C 278.749 224.054, 274.790 222.429, 272.913 221.462 C 271.036 220.495, 268.033 218.588, 266.239 217.225 C 264.446 215.862, 261.558 212.553, 259.821 209.873 C 258.084 207.193, 256.391 205, 256.059 205 C 255.727 205, 254.582 206.621, 253.515 208.602 M 203.335 249.760 C 201.045 251.267, 195.645 255.022, 191.335 258.105 C 187.026 261.188, 181.576 265.803, 179.225 268.360 C 176.874 270.917, 173.198 275.720, 171.056 279.034 C 168.914 282.348, 165.811 288.309, 164.159 292.280 C 162.508 296.251, 160.389 303.296, 159.450 307.936 C 158.089 314.665, 157.862 319.420, 158.329 331.436 C 158.650 339.721, 159.513 349.200, 160.246 352.500 L 161.579 358.500 174.790 358.779 C 182.055 358.932, 188 358.856, 188 358.610 C 188 358.363, 187.265 355.313, 186.366 351.831 C 185.251 347.511, 184.728 341.212, 184.720 332 C 184.714 323.974, 185.423 313.949, 186.470 307.277 C 187.438 301.104, 188.756 295.618, 189.399 295.084 C 190.041 294.551, 191.128 294.461, 191.813 294.885 C 192.797 295.492, 192.696 297.642, 191.337 305.077 C 190.180 311.401, 189.595 319.926, 189.557 331 C 189.520 341.755, 189.949 348.980, 190.789 351.750 L 192.077 356 255.961 356 L 319.845 356 321.172 352.250 C 322.107 349.609, 322.466 343.175, 322.384 330.500 C 322.310 318.981, 321.718 309.620, 320.740 304.500 C 319.529 298.162, 319.467 296.230, 320.442 295.200 C 321.450 294.134, 321.876 294.146, 322.808 295.268 C 323.432 296.021, 324.665 301.331, 325.547 307.068 C 326.428 312.806, 327.211 323.800, 327.285 331.500 C 327.387 341.925, 326.984 347.116, 325.711 351.831 C 324.770 355.313, 324 358.363, 324 358.610 C 324 358.856, 329.958 358.932, 337.240 358.779 L 350.479 358.500 352.202 349.500 C 353.217 344.198, 353.940 335.542, 353.962 328.434 C 353.983 321.797, 353.527 313.697, 352.949 310.434 C 352.371 307.170, 350.965 301.575, 349.825 298 C 348.685 294.425, 346.209 288.523, 344.323 284.884 C 342.437 281.245, 338.780 275.646, 336.197 272.442 C 333.613 269.238, 329.202 264.790, 326.393 262.558 C 323.584 260.326, 318.409 256.429, 314.893 253.899 C 311.377 251.368, 307.578 248.813, 306.451 248.221 C 304.597 247.247, 303.998 247.831, 300.150 254.358 C 297.812 258.325, 293.584 264.660, 290.756 268.437 C 287.927 272.214, 283.136 277.979, 280.108 281.250 C 277.081 284.520, 271.430 289.781, 267.552 292.941 C 263.673 296.102, 259.451 299.243, 258.168 299.923 C 256.132 301.001, 255.307 300.803, 251.668 298.357 C 249.376 296.817, 242.078 290.144, 235.452 283.528 C 226.806 274.897, 221.440 268.481, 216.452 260.811 C 212.628 254.932, 209.050 249.424, 208.500 248.571 C 207.627 247.218, 206.970 247.369, 203.335 249.760 M 193.262 372.742 C 193.564 379.759, 194.546 388.983, 195.444 393.240 C 196.342 397.497, 198.203 404.472, 199.580 408.740 C 200.956 413.008, 203.938 420.438, 206.207 425.250 L 210.332 434 232.147 434 L 253.962 434 254.231 411.250 C 254.461 391.814, 254.718 388.500, 256 388.500 C 257.282 388.500, 257.539 391.814, 257.769 411.250 L 258.038 434 280.004 434 L 301.971 434 305.120 427.763 C 306.851 424.333, 309.354 418.640, 310.682 415.112 C 312.010 411.584, 314.175 404.378, 315.492 399.099 C 316.809 393.819, 318.396 385, 319.017 379.500 C 319.638 374, 320.001 367.475, 319.823 365 L 319.500 360.500 256.106 360.242 L 192.712 359.985 193.262 372.742 M 162.544 366.250 C 162.930 368.038, 164.274 371.525, 165.530 374 C 166.786 376.475, 169.093 379.714, 170.657 381.197 C 172.221 382.680, 175.173 384.593, 177.218 385.447 C 179.263 386.301, 183.015 387, 185.556 387 L 190.176 387 189.629 383.250 C 189.328 381.188, 188.792 375.788, 188.437 371.250 L 187.792 363 174.816 363 L 161.841 363 162.544 366.250 M 323.993 368.250 C 323.989 371.137, 323.699 376.538, 323.348 380.250 L 322.711 387 326.105 386.994 C 327.972 386.991, 331.219 386.511, 333.321 385.928 C 335.422 385.344, 338.856 383.318, 340.951 381.425 C 343.047 379.532, 345.657 375.850, 346.753 373.242 C 347.848 370.634, 349.035 367.262, 349.391 365.750 L 350.038 363 337.019 363 L 324 363 323.993 368.250 M 183.678 436.385 C 181.577 437.171, 179.228 438.643, 178.460 439.657 C 177.692 440.671, 177.002 442.625, 176.926 444 C 176.850 445.375, 176.861 447.850, 176.950 449.500 C 177.038 451.150, 177.571 453.962, 178.133 455.750 L 179.155 459 216.578 459 L 254 459 254 448.500 L 254 438 230.565 438 C 217.004 438, 205.996 437.569, 204.438 436.977 C 202.958 436.414, 198.541 435.729, 194.623 435.454 C 189.793 435.116, 186.270 435.416, 183.678 436.385 M 312.500 436.193 C 310.300 436.787, 297.250 437.549, 283.500 437.887 L 258.500 438.500 258.500 448.500 L 258.500 458.500 296 458.500 L 333.500 458.500 334.941 452.809 C 335.973 448.731, 336.115 446.065, 335.441 443.405 C 334.917 441.337, 333.335 438.827, 331.870 437.740 C 330.079 436.411, 327.210 435.681, 322.870 435.451 C 319.367 435.265, 314.700 435.599, 312.500 436.193" stroke="none" fill="%23dc3545" fill-rule="evenodd"/></svg>';var Ca='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23495057" fill-rule="evenodd"/><path d="M 247.126 56.102 C 242.387 59.018, 235.079 64.909, 230.067 69.852 C 225.245 74.608, 219.375 81.372, 217.024 84.881 C 214.672 88.391, 211.013 94.964, 208.893 99.488 C 206.773 104.012, 204.133 111.490, 203.026 116.107 C 201.919 120.723, 201.011 125.287, 201.007 126.250 C 201 127.896, 204.283 128, 256 128 L 311 128 311 125.160 C 311 123.598, 310.124 118.896, 309.054 114.711 C 307.984 110.527, 305.578 103.792, 303.708 99.745 C 301.839 95.698, 298.661 89.810, 296.647 86.662 C 294.632 83.513, 289.281 77.079, 284.754 72.364 C 279.837 67.242, 272.657 61.217, 266.917 57.396 C 261.633 53.878, 256.884 51, 256.363 51 C 255.842 51, 251.686 53.296, 247.126 56.102 M 195.500 133.195 C 194.400 133.819, 193.169 134.818, 192.765 135.415 C 192.361 136.012, 192.024 139.713, 192.015 143.639 C 192.003 149.194, 192.424 151.302, 193.911 153.139 L 195.822 155.500 254.161 155.784 C 286.248 155.941, 313.481 155.828, 314.680 155.533 C 315.879 155.238, 317.567 154.291, 318.430 153.427 C 319.607 152.251, 320 149.759, 320 143.485 C 320 135.968, 319.773 134.955, 317.777 133.557 C 315.826 132.190, 308.366 132.004, 256.527 132.030 C 214.415 132.052, 196.927 132.386, 195.500 133.195 M 174.213 149.096 C 174.592 156.205, 175.396 160.208, 177.506 165.500 C 179.042 169.350, 181.617 174.434, 183.229 176.797 C 184.842 179.161, 187.715 182.648, 189.614 184.547 C 191.513 186.446, 193.502 188, 194.033 188 C 194.565 188, 195.008 185.637, 195.017 182.750 C 195.027 179.863, 195.692 174.399, 196.494 170.610 C 197.297 166.820, 198.207 162.922, 198.517 161.948 C 198.946 160.596, 198.365 160.019, 196.066 159.515 C 194.410 159.151, 191.917 157.502, 190.527 155.850 C 188.579 153.535, 188 151.727, 188 147.962 C 188 143.151, 187.942 143.062, 184.196 142.053 C 182.103 141.489, 178.888 140.728, 177.051 140.360 L 173.711 139.692 174.213 149.096 M 333.500 140.681 C 332.400 140.928, 330.038 141.586, 328.250 142.143 C 325.248 143.078, 325 143.481, 325 147.430 C 325 150.212, 324.215 152.864, 322.750 155.025 C 321.512 156.851, 319.150 158.780, 317.500 159.310 C 315.850 159.840, 314.394 160.356, 314.264 160.456 C 314.135 160.556, 314.689 163.757, 315.497 167.569 C 316.305 171.381, 316.973 177.286, 316.983 180.691 C 316.992 184.096, 317.412 187.137, 317.915 187.448 C 318.419 187.759, 320.297 186.780, 322.089 185.272 C 323.881 183.764, 327.055 179.889, 329.141 176.661 C 331.227 173.433, 333.892 168.251, 335.063 165.146 C 336.234 162.041, 337.620 156.575, 338.144 153 C 338.667 149.425, 338.829 145.037, 338.502 143.250 C 338.176 141.463, 337.367 140.052, 336.705 140.116 C 336.042 140.180, 334.600 140.434, 333.500 140.681 M 202.875 162.750 C 202.284 164.262, 201.186 168.875, 200.435 173 C 199.684 177.125, 199.054 183.762, 199.035 187.750 C 199.016 191.738, 199.235 195, 199.522 195 C 199.809 195, 203.681 193.171, 208.126 190.937 C 212.571 188.702, 220.242 185.555, 225.172 183.944 C 230.694 182.139, 238.517 180.558, 245.548 179.825 C 254.433 178.899, 259.277 178.905, 267.414 179.850 C 273.163 180.519, 281.609 182.178, 286.183 183.537 C 290.757 184.897, 298.663 188.013, 303.750 190.462 L 313 194.914 312.994 187.207 C 312.991 182.968, 312.574 176.971, 312.068 173.880 C 311.562 170.790, 310.647 166.402, 310.035 164.130 L 308.923 160 256.437 160 L 203.950 160 202.875 162.750 M 243.500 184.045 C 240.200 184.556, 233.505 186.115, 228.623 187.510 C 223.741 188.906, 215.791 192.013, 210.957 194.415 C 206.123 196.817, 199.543 200.519, 196.335 202.641 C 193.128 204.763, 187.206 209.627, 183.175 213.450 C 177.064 219.246, 176.150 220.508, 177.674 221.055 C 178.678 221.416, 183.937 222.291, 189.360 222.999 C 195.365 223.783, 203.575 224.063, 210.360 223.714 C 217.584 223.343, 223.960 222.373, 228.500 220.955 C 232.350 219.753, 237.839 217.218, 240.697 215.323 C 243.555 213.427, 247.265 209.806, 248.941 207.276 C 250.617 204.745, 252.538 201.155, 253.210 199.296 C 254.104 196.824, 254.954 195.996, 256.378 196.209 C 257.658 196.400, 258.869 198.011, 259.912 200.909 C 260.786 203.334, 263.477 207.522, 265.892 210.215 C 268.308 212.907, 272.463 216.214, 275.126 217.564 C 277.788 218.913, 282.533 220.685, 285.671 221.503 C 288.809 222.320, 296.804 223.260, 303.438 223.592 C 311.907 224.016, 318.425 223.749, 325.322 222.693 C 330.724 221.866, 335.449 220.873, 335.822 220.486 C 336.195 220.098, 333.575 217.115, 330 213.855 C 326.425 210.596, 320.230 205.663, 316.234 202.894 C 312.237 200.124, 304.812 195.891, 299.734 193.487 C 294.655 191.084, 286.170 187.994, 280.879 186.620 C 274.804 185.044, 267.247 183.938, 260.379 183.620 C 254.395 183.344, 246.800 183.535, 243.500 184.045 M 253.515 208.602 C 252.448 210.583, 249.588 213.953, 247.159 216.091 C 244.730 218.230, 240.430 221.110, 237.604 222.493 C 234.777 223.876, 229.323 225.673, 225.483 226.486 C 221.642 227.300, 216.250 227.980, 213.500 227.998 C 210.750 228.016, 207.914 228.402, 207.197 228.857 C 206.171 229.508, 206.520 231.252, 208.848 237.092 C 210.473 241.166, 213.337 247.200, 215.213 250.500 C 217.089 253.800, 219.932 258.525, 221.530 261 C 223.128 263.475, 226.638 268.200, 229.331 271.500 C 232.024 274.800, 238.297 281.175, 243.272 285.666 C 248.247 290.157, 253.336 294.377, 254.581 295.043 C 256.634 296.142, 257.539 295.688, 264.304 290.160 C 268.407 286.808, 274.573 281.013, 278.007 277.282 C 281.442 273.552, 286.486 267.350, 289.218 263.500 C 291.949 259.650, 295.903 253.102, 298.003 248.949 C 300.103 244.797, 302.955 238.610, 304.340 235.201 L 306.859 229.003 304.679 228.562 C 303.481 228.319, 299.034 227.851, 294.798 227.523 C 290.562 227.194, 284.673 226.092, 281.711 225.073 C 278.749 224.054, 274.790 222.429, 272.913 221.462 C 271.036 220.495, 268.033 218.588, 266.239 217.225 C 264.446 215.862, 261.558 212.553, 259.821 209.873 C 258.084 207.193, 256.391 205, 256.059 205 C 255.727 205, 254.582 206.621, 253.515 208.602 M 203.335 249.760 C 201.045 251.267, 195.645 255.022, 191.335 258.105 C 187.026 261.188, 181.576 265.803, 179.225 268.360 C 176.874 270.917, 173.198 275.720, 171.056 279.034 C 168.914 282.348, 165.811 288.309, 164.159 292.280 C 162.508 296.251, 160.389 303.296, 159.450 307.936 C 158.089 314.665, 157.862 319.420, 158.329 331.436 C 158.650 339.721, 159.513 349.200, 160.246 352.500 L 161.579 358.500 174.790 358.779 C 182.055 358.932, 188 358.856, 188 358.610 C 188 358.363, 187.265 355.313, 186.366 351.831 C 185.251 347.511, 184.728 341.212, 184.720 332 C 184.714 323.974, 185.423 313.949, 186.470 307.277 C 187.438 301.104, 188.756 295.618, 189.399 295.084 C 190.041 294.551, 191.128 294.461, 191.813 294.885 C 192.797 295.492, 192.696 297.642, 191.337 305.077 C 190.180 311.401, 189.595 319.926, 189.557 331 C 189.520 341.755, 189.949 348.980, 190.789 351.750 L 192.077 356 255.961 356 L 319.845 356 321.172 352.250 C 322.107 349.609, 322.466 343.175, 322.384 330.500 C 322.310 318.981, 321.718 309.620, 320.740 304.500 C 319.529 298.162, 319.467 296.230, 320.442 295.200 C 321.450 294.134, 321.876 294.146, 322.808 295.268 C 323.432 296.021, 324.665 301.331, 325.547 307.068 C 326.428 312.806, 327.211 323.800, 327.285 331.500 C 327.387 341.925, 326.984 347.116, 325.711 351.831 C 324.770 355.313, 324 358.363, 324 358.610 C 324 358.856, 329.958 358.932, 337.240 358.779 L 350.479 358.500 352.202 349.500 C 353.217 344.198, 353.940 335.542, 353.962 328.434 C 353.983 321.797, 353.527 313.697, 352.949 310.434 C 352.371 307.170, 350.965 301.575, 349.825 298 C 348.685 294.425, 346.209 288.523, 344.323 284.884 C 342.437 281.245, 338.780 275.646, 336.197 272.442 C 333.613 269.238, 329.202 264.790, 326.393 262.558 C 323.584 260.326, 318.409 256.429, 314.893 253.899 C 311.377 251.368, 307.578 248.813, 306.451 248.221 C 304.597 247.247, 303.998 247.831, 300.150 254.358 C 297.812 258.325, 293.584 264.660, 290.756 268.437 C 287.927 272.214, 283.136 277.979, 280.108 281.250 C 277.081 284.520, 271.430 289.781, 267.552 292.941 C 263.673 296.102, 259.451 299.243, 258.168 299.923 C 256.132 301.001, 255.307 300.803, 251.668 298.357 C 249.376 296.817, 242.078 290.144, 235.452 283.528 C 226.806 274.897, 221.440 268.481, 216.452 260.811 C 212.628 254.932, 209.050 249.424, 208.500 248.571 C 207.627 247.218, 206.970 247.369, 203.335 249.760 M 193.262 372.742 C 193.564 379.759, 194.546 388.983, 195.444 393.240 C 196.342 397.497, 198.203 404.472, 199.580 408.740 C 200.956 413.008, 203.938 420.438, 206.207 425.250 L 210.332 434 232.147 434 L 253.962 434 254.231 411.250 C 254.461 391.814, 254.718 388.500, 256 388.500 C 257.282 388.500, 257.539 391.814, 257.769 411.250 L 258.038 434 280.004 434 L 301.971 434 305.120 427.763 C 306.851 424.333, 309.354 418.640, 310.682 415.112 C 312.010 411.584, 314.175 404.378, 315.492 399.099 C 316.809 393.819, 318.396 385, 319.017 379.500 C 319.638 374, 320.001 367.475, 319.823 365 L 319.500 360.500 256.106 360.242 L 192.712 359.985 193.262 372.742 M 162.544 366.250 C 162.930 368.038, 164.274 371.525, 165.530 374 C 166.786 376.475, 169.093 379.714, 170.657 381.197 C 172.221 382.680, 175.173 384.593, 177.218 385.447 C 179.263 386.301, 183.015 387, 185.556 387 L 190.176 387 189.629 383.250 C 189.328 381.188, 188.792 375.788, 188.437 371.250 L 187.792 363 174.816 363 L 161.841 363 162.544 366.250 M 323.993 368.250 C 323.989 371.137, 323.699 376.538, 323.348 380.250 L 322.711 387 326.105 386.994 C 327.972 386.991, 331.219 386.511, 333.321 385.928 C 335.422 385.344, 338.856 383.318, 340.951 381.425 C 343.047 379.532, 345.657 375.850, 346.753 373.242 C 347.848 370.634, 349.035 367.262, 349.391 365.750 L 350.038 363 337.019 363 L 324 363 323.993 368.250 M 183.678 436.385 C 181.577 437.171, 179.228 438.643, 178.460 439.657 C 177.692 440.671, 177.002 442.625, 176.926 444 C 176.850 445.375, 176.861 447.850, 176.950 449.500 C 177.038 451.150, 177.571 453.962, 178.133 455.750 L 179.155 459 216.578 459 L 254 459 254 448.500 L 254 438 230.565 438 C 217.004 438, 205.996 437.569, 204.438 436.977 C 202.958 436.414, 198.541 435.729, 194.623 435.454 C 189.793 435.116, 186.270 435.416, 183.678 436.385 M 312.500 436.193 C 310.300 436.787, 297.250 437.549, 283.500 437.887 L 258.500 438.500 258.500 448.500 L 258.500 458.500 296 458.500 L 333.500 458.500 334.941 452.809 C 335.973 448.731, 336.115 446.065, 335.441 443.405 C 334.917 441.337, 333.335 438.827, 331.870 437.740 C 330.079 436.411, 327.210 435.681, 322.870 435.451 C 319.367 435.265, 314.700 435.599, 312.500 436.193" stroke="none" fill="%23495057" fill-rule="evenodd"/></svg>';var $c={GENERAL_RED:ua,GENERAL_BLACK:da,ADVISOR_RED:v8,ADVISOR_BLACK:y8,ELEPHANT_RED:b8,ELEPHANT_BLACK:x8,HORSE_RED:fa,HORSE_BLACK:w8,CHARIOT_RED:S8,CHARIOT_BLACK:R8,CANNON_RED:E8,CANNON_BLACK:N8,SOLDIER_RED:_8,SOLDIER_BLACK:Ca};var vh=e=>$c[e]||null,yh=$c;var we={classic:{id:"classic",name:"Classic",description:"Traditional Chinese chess pieces with authentic calligraphy",pieceColors:{red:"#dc3545",black:"#495057"},pieceStyle:"classic",pieceAssets:i8,uiElements:{startIcon:{main:V0,piece1:F0,piece2:Y0},lobbyEmpty:j0}},modern:{id:"modern",name:"Modern",description:"Fresh yellow and blue color scheme",pieceColors:{red:"#ffc107",black:"#0d6efd"},pieceStyle:"modern",pieceAssets:h8,uiElements:{startIcon:{main:ia,piece1:sa,piece2:ca},lobbyEmpty:la}},medieval:{id:"medieval",name:"Medieval",description:"European medieval-style pieces with heraldic designs",pieceColors:{red:"#dc3545",black:"#495057"},pieceStyle:"medieval",pieceAssets:T8,uiElements:{startIcon:{main:ua,piece1:fa,piece2:Ca},lobbyEmpty:da}}},k8=()=>{let e=localStorage.getItem("liap-tui-theme");return e&&we[e]?we[e]:we.medieval},Ic=e=>we[e]?(localStorage.setItem("liap-tui-theme",e),_4(we[e]),!0):(console.error(`Theme ${e} not found`),!1),_4=e=>{let t=document.documentElement;t.className=`theme-${e.id}`,t.style.setProperty("--piece-color-red",e.pieceColors.red),t.style.setProperty("--piece-color-black",e.pieceColors.black),t.style.setProperty("--ui-piece-red",e.pieceColors.red),t.style.setProperty("--ui-piece-black",e.pieceColors.black)},Xc=()=>{let e=k8();return _4(e),e};var Zc=x(L(),1),Kc=(0,rt.createContext)();function Qc({children:e}){let[t,a]=(0,rt.useState)(()=>k8());(0,rt.useEffect)(()=>{_4(t)},[t]);let n={currentTheme:t,changeTheme:o=>{let i=we[o];if(!i){console.error(`Theme ${o} not found`);return}Ic(o),a(i)},themes:we};return(0,Zc.jsx)(Kc.Provider,{value:n,children:e})}var Ge=()=>{let e=(0,rt.useContext)(Kc);if(!e)throw new Error("useTheme must be used within a ThemeProvider");return e};var Jc=x(z(),1),y3=x(L(),1),Wc=(0,Jc.memo)(({children:e,variant:t="primary",size:a="md",disabled:r=!1,loading:n=!1,onClick:o,className:i="",type:l="button",loadingText:s="Loading...",icon:c=null,fullWidth:f=!1,...d})=>{let u=`
    inline-flex items-center justify-center font-medium rounded-md transform-gpu
    transition-all duration-300 ease-out focus:outline-none focus:ring-2 focus:ring-offset-2
    hover:scale-105 active:scale-95 hover:shadow-lg
    disabled:opacity-50 disabled:cursor-not-allowed disabled:pointer-events-none
    disabled:hover:scale-100 disabled:hover:shadow-none
  `,m={primary:"bg-gradient-to-r from-blue-600 to-blue-700 text-white hover:from-blue-700 hover:to-blue-800 focus:ring-blue-500 shadow-blue-500/25",secondary:"bg-gradient-to-r from-gray-200 to-gray-300 text-gray-900 hover:from-gray-300 hover:to-gray-400 focus:ring-gray-500 shadow-gray-400/25",success:"bg-gradient-to-r from-green-600 to-green-700 text-white hover:from-green-700 hover:to-green-800 focus:ring-green-500 shadow-green-500/25",danger:"bg-gradient-to-r from-red-600 to-red-700 text-white hover:from-red-700 hover:to-red-800 focus:ring-red-500 shadow-red-500/25",ghost:"bg-transparent text-gray-700 hover:bg-gray-100 hover:shadow-gray-300/50 focus:ring-gray-500 border border-gray-300",outline:"bg-transparent border-2 border-blue-600 text-blue-600 hover:bg-blue-50 hover:border-blue-700 focus:ring-blue-500"},b={sm:"px-3 py-1.5 text-sm",md:"px-4 py-2 text-base",lg:"px-6 py-3 text-lg"},R=[u,m[t],b[a],f&&"w-full",i].filter(Boolean).join(" ");return(0,y3.jsx)("button",{type:l,className:R,disabled:r||n,onClick:C=>{r||n||o?.(C)},...d,children:n?(0,y3.jsxs)("div",{className:"flex items-center space-x-2",children:[(0,y3.jsx)("div",{className:"w-4 h-4 border-2 border-current border-t-transparent rounded-full animate-spin"}),(0,y3.jsx)("span",{children:s})]}):(0,y3.jsxs)("div",{className:"flex items-center space-x-2",children:[c&&(0,y3.jsx)("span",{className:"w-4 h-4",children:c}),(0,y3.jsx)("span",{children:e})]})})});Wc.displayName="Button";var pa=Wc;var eu=x(z(),1),nt=x(L(),1),bh=(0,eu.forwardRef)(({type:e="text",placeholder:t="",value:a,onChange:r,onBlur:n,onFocus:o,disabled:i=!1,required:l=!1,error:s=null,label:c="",helperText:f="",size:d="md",fullWidth:u=!1,className:m="",...b},R)=>{let g=`${`
    border rounded-md transition-all duration-200 focus:outline-none focus:ring-2
    disabled:opacity-50 disabled:cursor-not-allowed disabled:bg-gray-100
    ${{sm:"px-3 py-1.5 text-sm",md:"px-4 py-2 text-base",lg:"px-5 py-3 text-lg"}[d]}
    ${u?"w-full":""}
  `} ${s?"border-red-300 focus:border-red-500 focus:ring-red-200":"border-gray-300 focus:border-blue-500 focus:ring-blue-200 hover:border-gray-400"} ${m}`;return(0,nt.jsxs)("div",{className:u?"w-full":"",children:[c&&(0,nt.jsxs)("label",{className:"block text-sm font-medium text-gray-700 mb-1",children:[c,l&&(0,nt.jsx)("span",{className:"text-red-500 ml-1",children:"*"})]}),(0,nt.jsx)("input",{ref:R,type:e,placeholder:t,value:a,onChange:r,onBlur:n,onFocus:o,disabled:i,required:l,className:g,...b}),s&&(0,nt.jsx)("p",{className:"mt-1 text-sm text-red-600",role:"alert",children:s}),f&&!s&&(0,nt.jsx)("p",{className:"mt-1 text-sm text-gray-500",children:f})]})});bh.displayName="Input";var tu=x(z(),1);var au=x(L(),1);var Vw=x(z(),1);var Pw=x(z(),1),Ve=x(L(),1),xh=({isConnected:e=!1,isConnecting:t=!1,isReconnecting:a=!1,error:r=null,roomId:n=null,showDetails:o=!1,className:i="",disconnectedPlayers:l=[]})=>{let c=r?{status:"error",text:"Connection Error",color:"bg-red-500",icon:"\u274C"}:a?{status:"reconnecting",text:"Reconnecting...",color:"bg-yellow-500 animate-pulse",icon:"\u{1F504}"}:t?{status:"connecting",text:"Connecting...",color:"bg-yellow-500 animate-pulse",icon:"\u26A1"}:e?{status:"connected",text:"Connected",color:"bg-green-500",icon:"\u2705"}:{status:"disconnected",text:"Disconnected",color:"bg-gray-500",icon:"\u26AB"},f=`
    inline-flex items-center space-x-2 px-3 py-1 rounded-full text-sm font-medium text-white
    ${c.color}
  `,d=l.length>0;return(0,Ve.jsxs)("div",{className:"flex flex-col gap-2",children:[(0,Ve.jsxs)("div",{className:`${f} ${i}`,children:[(0,Ve.jsx)("span",{className:"text-xs",children:c.icon}),(0,Ve.jsx)("span",{children:c.text}),o&&n&&(0,Ve.jsxs)("span",{className:"text-xs opacity-75",children:["(",n,")"]}),r&&o&&(0,Ve.jsx)("span",{className:"text-xs opacity-75",title:r.message||r,children:"\u26A0\uFE0F"})]}),d&&(0,Ve.jsxs)("div",{className:"text-xs text-gray-600 bg-yellow-100 px-3 py-1 rounded-full",children:[(0,Ve.jsx)("span",{className:"mr-1",children:"\u{1F916}"}),"AI Playing for: ",l.join(", ")," - Can reconnect anytime"]})]})},ma=xh;var Se=x(L(),1),wh=({children:e,title:t="Liap TUI",showConnection:a=!1,connectionProps:r={},showHeader:n=!0,headerContent:o=null,className:i=""})=>(0,Se.jsxs)("div",{className:`${i}`,children:[n&&(0,Se.jsx)("header",{children:(0,Se.jsx)("div",{children:(0,Se.jsxs)("div",{children:[(0,Se.jsx)("div",{children:(0,Se.jsx)("h1",{children:t})}),(0,Se.jsxs)("div",{children:[o,a&&(0,Se.jsx)(ma,{showDetails:!0,...r})]})]})})}),(0,Se.jsx)("main",{children:e})]}),je=wh;var qw=x(z(),1),Re=x(L(),1),Sh=({isVisible:e=!1,message:t="Loading...",subtitle:a="",showSpinner:r=!0,overlay:n=!0,className:o=""})=>e?(0,Re.jsx)("div",{className:`${n?"fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm z-50":"absolute inset-0 bg-white bg-opacity-90 z-10"} flex items-center justify-center ${o} animate-in fade-in duration-300`,children:(0,Re.jsx)("div",{className:"bg-white rounded-xl shadow-2xl p-8 max-w-sm w-full mx-4 transform-gpu animate-in zoom-in-95 duration-300 delay-100",children:(0,Re.jsxs)("div",{className:"flex flex-col items-center space-y-4",children:[r&&(0,Re.jsxs)("div",{className:"relative",children:[(0,Re.jsx)("div",{className:"w-12 h-12 border-4 border-blue-200 border-t-blue-600 rounded-full animate-spin"}),(0,Re.jsx)("div",{className:"absolute inset-0 w-12 h-12 border-4 border-transparent border-l-blue-400 rounded-full animate-spin animate-reverse"})]}),(0,Re.jsxs)("div",{className:"text-center animate-in slide-in-from-bottom-4 duration-500 delay-200",children:[(0,Re.jsx)("h3",{className:"text-lg font-medium text-gray-900 mb-1",children:t}),a&&(0,Re.jsx)("p",{className:"text-sm text-gray-500",children:a})]})]})})}):null,Fe=Sh;var Xw=x(z(),1);var ru=x(L(),1);var nu=x(z(),1),fe=x(L(),1),L8=class extends nu.default.Component{constructor(t){super(t),this.state={hasError:!1,error:null,errorInfo:null}}static getDerivedStateFromError(t){return{hasError:!0}}componentDidCatch(t,a){this.setState({error:t,errorInfo:a})}render(){return this.state.hasError?(0,fe.jsx)("div",{className:"min-h-screen bg-gray-100 flex items-center justify-center p-4",children:(0,fe.jsxs)("div",{className:"bg-white rounded-lg shadow-lg p-6 max-w-md w-full",children:[(0,fe.jsxs)("div",{className:"text-red-600 text-center mb-4",children:[(0,fe.jsx)("svg",{className:"w-16 h-16 mx-auto mb-4",fill:"none",stroke:"currentColor",viewBox:"0 0 24 24",children:(0,fe.jsx)("path",{strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:2,d:"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.732-.833-2.5 0L4.268 18.5c-.77.833.192 2.5 1.732 2.5z"})}),(0,fe.jsx)("h2",{className:"text-xl font-bold mb-2",children:"Something went wrong"}),(0,fe.jsx)("p",{className:"text-gray-600 mb-4",children:"An unexpected error occurred. Please try refreshing the page."})]}),(0,fe.jsxs)("div",{className:"space-y-2",children:[(0,fe.jsx)("button",{onClick:()=>window.location.reload(),className:"w-full bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 transition-colors",children:"Refresh Page"}),(0,fe.jsx)("button",{onClick:()=>this.setState({hasError:!1,error:null,errorInfo:null}),className:"w-full bg-gray-300 text-gray-700 py-2 px-4 rounded hover:bg-gray-400 transition-colors",children:"Try Again"})]}),!1]})}):this.props.children}},Ye=L8;var Rh=x(z(),1);var Eh=x(L(),1);var lS=x(z(),1),b3=x(M1(),1);var A1=x(L(),1);function M8({isConnected:e,isConnecting:t,isReconnecting:a,connectionError:r,message:n="Waiting...",phase:o="waiting",onRetry:i,onCancel:l}){return(0,A1.jsx)("div",{className:"min-h-screen flex items-center justify-center p-4",children:(0,A1.jsxs)("div",{className:"rounded-2xl p-8 max-w-md w-full text-center",style:{background:"var(--gradient-white)",boxShadow:"var(--shadow-lg), var(--shadow-inset-white)"},children:[(0,A1.jsx)("div",{className:"mb-6",children:(0,A1.jsx)(ma,{isConnected:e,isConnecting:t,isReconnecting:a,error:r})}),(0,A1.jsxs)("div",{className:"mb-8",children:[(0,A1.jsx)("div",{className:"text-6xl mb-4",children:Th(o)}),(0,A1.jsx)("h1",{className:"text-2xl font-bold mb-2",style:{color:"var(--color-gray-700)"},children:kh(o)}),(0,A1.jsx)("p",{className:"text-lg",style:{color:"var(--color-gray-500)"},children:n})]}),(t||a)&&(0,A1.jsx)("div",{className:"mb-6",children:(0,A1.jsx)(Fe,{message:a?"Reconnecting...":"Connecting..."})}),r&&(0,A1.jsxs)("div",{className:"mb-6 p-4 rounded-lg",style:{backgroundColor:"rgba(220, 53, 69, 0.1)",border:"1px solid rgba(220, 53, 69, 0.3)"},children:[(0,A1.jsxs)("div",{className:"text-sm mb-3",style:{color:"var(--color-danger)"},children:["Connection Error: ",r]}),i&&(0,A1.jsx)("button",{onClick:i,className:"px-4 py-2 rounded-lg text-sm font-medium transition-colors text-white",style:{background:"var(--gradient-danger)"},onMouseOver:s=>s.target.style.background="var(--color-danger-dark)",onMouseOut:s=>s.target.style.background="var(--gradient-danger)","aria-label":"Retry connection",children:"Retry Connection"})]}),!r&&!t&&!a&&(0,A1.jsx)("div",{className:"mb-6",children:(0,A1.jsx)("div",{className:"waiting-dots",children:[0,1,2].map(s=>(0,A1.jsx)("div",{className:"waiting-dot"},s))})}),(0,A1.jsxs)("div",{className:"text-sm space-y-1",style:{color:"var(--color-gray-600)"},children:[(0,A1.jsxs)("div",{children:["Phase:"," ",(0,A1.jsx)("span",{className:"font-medium",style:{color:"var(--color-gray-500)"},children:o})]}),(0,A1.jsxs)("div",{children:["Status:"," ",(0,A1.jsx)("span",{className:"font-medium",style:{color:"var(--color-gray-500)"},children:Lh(e,t,a,r)})]})]}),l&&(0,A1.jsx)("div",{className:"mt-6",children:(0,A1.jsx)("button",{onClick:l,className:"text-sm underline transition-colors",style:{color:"var(--color-gray-400)"},onMouseOver:s=>s.target.style.color="var(--color-gray-600)",onMouseOut:s=>s.target.style.color="var(--color-gray-400)","aria-label":"Cancel and return",children:"Cancel"})})]})})}function Th(e){switch(e){case"waiting":return"\u23F3";case"preparation":return"\u{1F0CF}";case"declaration":return"\u{1F3AF}";case"turn":return"\u{1F3AE}";case"scoring":return"\u{1F3C6}";default:return"\u23F3"}}function kh(e){switch(e){case"waiting":return"Waiting for Game";case"preparation":return"Preparing Cards";case"declaration":return"Making Declarations";case"turn":return"Playing Turn";case"scoring":return"Calculating Scores";default:return"Waiting"}}function Lh(e,t,a,r){return r?"Error":a?"Reconnecting":t?"Connecting":e?"Connected":"Disconnected"}M8.propTypes={isConnected:b3.default.bool.isRequired,isConnecting:b3.default.bool,isReconnecting:b3.default.bool,connectionError:b3.default.string,message:b3.default.string,phase:b3.default.oneOf(["waiting","preparation","declaration","turn","scoring"]),onRetry:b3.default.func,onCancel:b3.default.func};M8.defaultProps={isConnecting:!1,isReconnecting:!1,connectionError:null,message:"Waiting...",phase:"waiting",onRetry:null,onCancel:null};var q0=M8;var FS=x(z(),1),T1=x(M1(),1);var ot=x(z(),1),f2=x(M1(),1);var pS=x(z(),1),qe=x(M1(),1);var fu='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23080404" fill-rule="evenodd"/><path d="M 102 110.379 L 102 135.759 89.750 136.187 C 78.951 136.564, 76.755 136.952, 71.209 139.463 C 66.939 141.395, 63.346 144.029, 60.029 147.659 C 57.129 150.832, 54.290 155.281, 53.049 158.599 C 50.978 164.134, 50.959 165.058, 51.228 248.846 C 51.500 333.500, 51.500 333.500, 54.270 339.142 C 55.794 342.244, 59.090 346.672, 61.595 348.981 C 64.100 351.290, 68.704 354.355, 71.825 355.791 C 76.715 358.042, 79.195 358.461, 89.750 358.822 L 102 359.241 102 377.939 C 102 392.118, 102.384 397.931, 103.590 401.991 C 104.464 404.936, 105.895 408.505, 106.770 409.922 C 107.645 411.340, 109.742 414.012, 111.430 415.859 C 113.119 417.707, 116.075 420.224, 118 421.454 C 119.925 422.683, 123.769 424.439, 126.543 425.356 C 131.159 426.882, 142.227 427.001, 257.564 426.761 C 383.543 426.500, 383.543 426.500, 390.164 423.240 C 393.827 421.437, 398.448 418.140, 400.507 415.860 C 402.555 413.594, 405.415 409.211, 406.865 406.120 C 409.402 400.709, 409.512 399.734, 409.821 379.868 L 410.142 359.237 422.424 358.828 C 433.838 358.448, 435.173 358.189, 441.301 355.173 C 445.306 353.201, 449.449 350.161, 451.853 347.430 C 454.030 344.956, 456.866 340.810, 458.156 338.216 C 460.500 333.500, 460.500 333.500, 460.500 247.500 C 460.500 161.500, 460.500 161.500, 457.338 155.500 C 455.598 152.200, 452.448 147.836, 450.338 145.802 C 448.227 143.769, 443.800 140.865, 440.500 139.351 C 435.245 136.939, 432.979 136.545, 422.250 136.178 L 410 135.759 410 110.379 L 410 85 392.583 85 L 375.167 85 366.751 110.250 L 358.335 135.500 341.668 135.774 L 325 136.048 325 127.524 L 325 119 256 119 L 187 119 187 127.524 L 187 136.048 170.332 135.774 L 153.665 135.500 145.249 110.250 L 136.833 85 119.417 85 L 102 85 102 110.379 M 86 247.500 L 86 324 256 324 L 426 324 426 247.500 L 426 171 256 171 L 86 171 86 247.500 M 154.715 205.006 C 152.083 205.467, 147.010 207.211, 143.441 208.881 C 139.544 210.704, 134.842 214.031, 131.668 217.209 C 128.761 220.119, 125.138 225.048, 123.617 228.163 C 122.095 231.278, 120.343 236.791, 119.722 240.414 C 118.864 245.422, 118.885 248.703, 119.808 254.088 C 120.477 257.985, 122.256 263.706, 123.762 266.801 C 125.268 269.897, 128.826 274.762, 131.669 277.612 C 134.535 280.485, 139.660 284.166, 143.169 285.872 C 146.651 287.564, 152.530 289.417, 156.234 289.991 C 161.512 290.808, 164.491 290.716, 170.010 289.565 C 173.883 288.758, 179.243 286.904, 181.923 285.446 C 184.602 283.987, 188.481 281.403, 190.544 279.703 C 192.607 278.003, 195.975 274.012, 198.029 270.835 C 200.082 267.657, 202.556 262.125, 203.526 258.541 C 204.806 253.812, 205.138 250.031, 204.734 244.762 C 204.427 240.768, 203.189 234.870, 201.981 231.656 C 200.774 228.442, 197.904 223.492, 195.604 220.656 C 193.304 217.820, 189.297 214.068, 186.699 212.317 C 184.101 210.567, 179.618 208.257, 176.738 207.185 C 173.857 206.113, 168.800 204.996, 165.500 204.702 C 162.200 204.408, 157.347 204.545, 154.715 205.006 M 344.500 204.665 C 342.850 204.903, 339.250 205.817, 336.500 206.697 C 333.750 207.577, 329.250 209.732, 326.500 211.485 C 323.750 213.239, 319.762 216.605, 317.638 218.964 C 315.514 221.323, 312.364 226.234, 310.638 229.877 C 307.730 236.014, 307.502 237.270, 307.532 247 C 307.558 255.597, 307.985 258.559, 309.889 263.344 C 311.167 266.558, 314.078 271.467, 316.357 274.254 C 318.636 277.041, 322.925 280.987, 325.890 283.022 C 328.854 285.057, 333.804 287.527, 336.890 288.511 C 340.030 289.511, 345.582 290.306, 349.500 290.315 C 354.098 290.326, 358.785 289.571, 363.159 288.115 C 366.821 286.895, 372.257 284.150, 375.240 282.015 C 378.222 279.879, 381.799 276.640, 383.189 274.816 C 384.579 272.992, 386.903 269.156, 388.354 266.291 C 389.805 263.426, 391.530 257.947, 392.187 254.116 C 393.093 248.834, 393.106 245.673, 392.243 241.029 C 391.616 237.662, 389.943 232.372, 388.525 229.273 C 387.106 226.175, 384.393 221.745, 382.495 219.429 C 380.598 217.113, 376.945 213.827, 374.378 212.127 C 371.811 210.427, 367.413 208.181, 364.605 207.136 C 361.797 206.091, 356.800 205.010, 353.500 204.734 C 350.200 204.458, 346.150 204.427, 344.500 204.665 M 156.001 232.123 C 154.626 232.672, 152.446 234.106, 151.155 235.310 C 149.865 236.515, 148.140 238.788, 147.322 240.361 C 146.503 241.935, 145.833 245.148, 145.833 247.500 C 145.833 249.852, 146.503 253.065, 147.322 254.639 C 148.140 256.212, 149.865 258.483, 151.155 259.683 C 152.445 260.884, 154.767 262.347, 156.315 262.933 C 157.863 263.520, 160.534 264, 162.249 264 C 163.965 264, 167.294 263.068, 169.647 261.929 C 172.154 260.715, 174.857 258.350, 176.177 256.214 C 177.751 253.667, 178.429 251.018, 178.429 247.410 C 178.429 243.575, 177.800 241.332, 175.981 238.678 C 174.636 236.714, 171.890 234.183, 169.881 233.053 C 167.846 231.909, 164.516 231.028, 162.364 231.063 C 160.239 231.098, 157.375 231.575, 156.001 232.123 M 341.337 233.455 C 338.671 235.091, 336.423 237.561, 335.087 240.321 C 333.939 242.692, 333 245.922, 333 247.500 C 333 249.078, 333.943 252.317, 335.096 254.698 C 336.526 257.652, 338.607 259.858, 341.643 261.637 C 345.322 263.793, 346.967 264.162, 351.122 263.762 C 353.887 263.497, 357.325 262.401, 358.763 261.328 C 360.200 260.255, 362.222 258.244, 363.255 256.861 C 364.288 255.477, 365.469 252.805, 365.881 250.923 C 366.292 249.040, 366.308 245.980, 365.915 244.123 C 365.522 242.265, 364.340 239.593, 363.288 238.185 C 362.237 236.776, 360.185 234.734, 358.730 233.648 C 357.127 232.451, 353.996 231.519, 350.791 231.286 C 346.448 230.970, 344.754 231.358, 341.337 233.455 M 137 375.500 L 137 392 151.500 392 L 166 392 166 375.500 L 166 359 151.500 359 L 137 359 137 375.500 M 192 375.500 L 192 392 204.500 392 L 217 392 217 375.500 L 217 359 204.500 359 L 192 359 192 375.500 M 244 375.500 L 244 392 256 392 L 268 392 268 375.500 L 268 359 256 359 L 244 359 244 375.500 M 295 375.500 L 295 392 307.500 392 L 320 392 320 375.500 L 320 359 307.500 359 L 295 359 295 375.500 M 346 375.500 L 346 392 360.500 392 L 375 392 375 375.500 L 375 359 360.500 359 L 346 359 346 375.500" stroke="none" fill="%23040404" fill-rule="evenodd"/></svg>';var Cu='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23080404" fill-rule="evenodd"/><path d="M 197.500 52.030 C 193.100 52.519, 185.447 53.604, 180.493 54.440 C 175.540 55.276, 165.640 57.562, 158.493 59.520 C 151.347 61.478, 140.325 65.145, 134 67.669 C 127.675 70.192, 118.225 74.409, 113 77.038 C 107.775 79.668, 99.590 84.288, 94.810 87.304 C 90.031 90.321, 81.931 95.969, 76.810 99.855 C 71.690 103.741, 64.125 110.055, 60 113.887 L 52.500 120.853 88.681 157.177 L 124.861 193.500 119.834 199 C 117.068 202.025, 113.010 207.121, 110.816 210.324 C 107.794 214.734, 106.422 215.977, 105.163 215.448 C 104.248 215.063, 99.183 213.256, 93.906 211.432 C 88.629 209.608, 80.304 207.456, 75.406 206.649 C 70.508 205.842, 63.013 204.922, 58.750 204.604 L 51 204.026 51 290.013 L 51 376 68.500 376 L 86 376 86 359 L 86 342 139.352 342 C 192.704 342, 192.704 342, 196.078 344.274 C 197.934 345.524, 200.476 348.066, 201.726 349.922 C 203.368 352.358, 204 354.743, 204 358.500 C 204 362.251, 203.372 364.628, 201.750 367.010 C 200.512 368.828, 198.230 371.257, 196.678 372.408 C 193.950 374.430, 192.607 374.510, 156.428 374.785 L 119 375.070 119 418.035 L 119 461 213.500 461 L 308 461 308 429.058 L 308 397.116 318.550 386.566 L 329.100 376.016 387.209 375.758 L 445.318 375.500 448.191 367 C 449.771 362.325, 452.168 354.225, 453.519 349 C 454.870 343.775, 456.916 334.100, 458.066 327.500 C 459.479 319.392, 460.326 309.175, 460.675 296 C 461.048 281.979, 460.771 272.988, 459.689 264 C 458.862 257.125, 456.987 246.100, 455.522 239.500 C 454.057 232.900, 450.919 221.650, 448.547 214.500 C 446.176 207.350, 442.315 197.225, 439.969 192 C 437.622 186.775, 433.445 178.450, 430.688 173.500 C 427.930 168.550, 423.069 160.675, 419.884 156 C 416.700 151.325, 411.202 143.900, 407.668 139.500 C 404.133 135.100, 396.575 126.816, 390.871 121.091 C 385.167 115.366, 376.450 107.445, 371.500 103.487 C 366.550 99.530, 358.379 93.543, 353.342 90.182 C 348.304 86.821, 339.973 81.822, 334.828 79.073 C 329.682 76.324, 320.677 72.065, 314.817 69.610 C 308.956 67.154, 299.843 63.762, 294.566 62.072 C 289.288 60.381, 280.814 58.060, 275.735 56.914 C 270.656 55.768, 262.450 54.159, 257.500 53.339 C 252.225 52.466, 239.602 51.702, 227 51.494 C 215.175 51.300, 201.900 51.541, 197.500 52.030 M 190.822 88.026 C 183.848 89.114, 172.676 91.579, 165.993 93.502 C 159.311 95.425, 150.841 98.187, 147.172 99.639 C 143.502 101.091, 136.528 104.242, 131.672 106.641 C 126.817 109.040, 119.842 112.796, 116.172 114.988 C 112.503 117.181, 108.250 119.992, 106.721 121.237 C 103.943 123.500, 103.943 123.500, 128.252 147.773 C 152.561 172.046, 152.561 172.046, 158.046 169.074 C 161.064 167.440, 167.671 164.505, 172.730 162.551 C 177.789 160.597, 185.786 158.099, 190.503 156.999 C 195.219 155.900, 200.185 155, 201.539 155 C 204 155, 204 155, 204 137 L 204 119 221.477 119 L 238.954 119 239.227 136.738 C 239.500 154.477, 239.500 154.477, 244.048 155.127 C 246.549 155.484, 252.901 156.949, 258.162 158.383 C 263.424 159.816, 269.287 161.640, 271.191 162.436 C 274.654 163.882, 274.654 163.882, 282.883 149.465 C 287.409 141.536, 291.554 134.776, 292.093 134.442 C 292.633 134.109, 299.608 137.533, 307.593 142.052 C 318.879 148.440, 321.975 150.629, 321.501 151.884 C 321.165 152.773, 317.275 159.732, 312.856 167.349 L 304.822 181.197 310.657 186.349 C 313.867 189.182, 317.394 192.402, 318.496 193.504 C 319.598 194.606, 322.823 198.139, 325.663 201.356 L 330.826 207.204 345.528 198.602 C 353.614 193.871, 360.536 190, 360.911 190 C 361.286 190, 365.329 196.496, 369.895 204.436 C 374.461 212.376, 377.936 219.295, 377.617 219.811 C 377.298 220.327, 370.576 224.462, 362.680 228.999 C 348.324 237.248, 348.324 237.248, 351.111 245.374 C 352.644 249.843, 354.755 257.775, 355.803 263 L 357.708 272.500 375.354 272.773 L 393 273.046 393 290.523 L 393 308 375.195 308 L 357.390 308 356.118 315.572 C 355.418 319.736, 353.536 327.049, 351.935 331.822 C 350.334 336.595, 349.019 340.613, 349.012 340.750 C 349.005 340.887, 364.913 341, 384.362 341 C 419.724 341, 419.724 341, 420.916 335.250 C 421.571 332.087, 422.787 325.900, 423.617 321.500 C 424.447 317.100, 425.381 305.850, 425.692 296.500 C 426.030 286.336, 425.795 275.292, 425.109 269.035 C 424.478 263.280, 422.801 253.380, 421.383 247.035 C 419.965 240.691, 417.243 230.775, 415.334 225 C 413.425 219.225, 409.432 209.408, 406.460 203.185 C 403.488 196.962, 398.736 188.030, 395.901 183.337 C 393.067 178.643, 387.382 170.460, 383.269 165.152 C 379.155 159.843, 372.575 152.201, 368.645 148.168 C 364.715 144.135, 357.568 137.515, 352.762 133.457 C 347.956 129.398, 340.756 123.875, 336.762 121.183 C 332.768 118.492, 325.450 114.017, 320.500 111.240 C 315.550 108.462, 306.586 104.098, 300.579 101.541 C 294.573 98.984, 285.798 95.773, 281.079 94.404 C 276.361 93.036, 267.100 90.777, 260.500 89.384 C 250.242 87.219, 245.234 86.793, 226 86.449 C 207.107 86.111, 201.467 86.364, 190.822 88.026 M 205.908 189.465 C 201.183 190.239, 194.433 191.831, 190.908 193.004 C 187.384 194.176, 181.248 196.728, 177.272 198.676 C 173.297 200.623, 167.298 204.128, 163.940 206.464 C 160.583 208.801, 154.678 213.815, 150.820 217.606 C 146.961 221.398, 142.250 226.616, 140.351 229.203 C 136.899 233.906, 136.899 233.906, 147.202 244.203 C 152.869 249.866, 159.931 258.041, 162.895 262.370 C 165.860 266.698, 170.390 274.373, 172.962 279.426 C 175.535 284.479, 178.958 292.740, 180.570 297.783 C 183.500 306.952, 183.500 306.952, 189.040 306.976 C 192.087 306.989, 197.225 307.689, 200.458 308.531 C 203.692 309.373, 209.018 311.492, 212.296 313.238 C 215.573 314.985, 220.804 318.964, 223.920 322.080 C 227.036 325.196, 230.991 330.391, 232.709 333.623 C 234.426 336.855, 236.545 342.265, 237.416 345.644 C 238.287 349.024, 239 354.892, 239 358.684 C 239 362.477, 238.311 368.225, 237.469 371.458 C 236.627 374.692, 234.550 379.941, 232.853 383.124 C 231.157 386.307, 227.101 391.579, 223.840 394.840 C 220.579 398.101, 215.344 402.133, 212.206 403.800 C 209.068 405.467, 203.735 407.545, 200.356 408.416 C 195.743 409.605, 189.200 410, 174.106 410 L 154 410 154 418 L 154 426 213.500 426 L 273 426 273 402.212 C 273 378.424, 273 378.424, 279.695 374.022 C 283.378 371.601, 289.790 366.187, 293.945 361.990 C 298.100 357.794, 303.657 351.143, 306.293 347.211 C 308.929 343.278, 312.689 336.560, 314.649 332.280 C 316.608 328.001, 319.352 320.225, 320.746 315 C 322.858 307.080, 323.291 303.172, 323.347 291.500 C 323.385 283.699, 322.852 274.843, 322.144 271.500 C 321.444 268.200, 319.937 262.575, 318.795 259 C 317.652 255.425, 314.922 248.900, 312.728 244.500 C 310.534 240.100, 307.372 234.510, 305.702 232.077 C 304.033 229.645, 299.535 224.358, 295.707 220.329 C 291.880 216.300, 285.767 210.804, 282.124 208.117 C 278.481 205.429, 271.900 201.414, 267.500 199.193 C 263.100 196.972, 256.575 194.224, 253 193.086 C 249.425 191.948, 244.109 190.569, 241.187 190.022 C 238.265 189.475, 231.065 188.810, 225.187 188.543 C 218.431 188.236, 211.339 188.575, 205.908 189.465 M 86 276.500 L 86 307 116.500 307 C 133.275 307, 147 306.746, 147 306.434 C 147 306.123, 145.459 302.534, 143.576 298.457 C 141.692 294.381, 137.846 287.711, 135.029 283.636 C 132.212 279.561, 127.116 273.411, 123.704 269.969 C 120.292 266.528, 114.800 261.702, 111.500 259.246 C 108.200 256.790, 101.571 252.805, 96.770 250.390 C 91.968 247.976, 87.581 246, 87.020 246 C 86.349 246, 86 256.435, 86 276.500" stroke="none" fill="%23040404" fill-rule="evenodd"/></svg>';var $e=x(L(),1),pu=({name:e,isBot:t=!1,isThinking:a=!1,className:r="",size:n="medium",theme:o="default",isDisconnected:i=!1,showAIBadge:l=!1,avatarColor:s=null})=>{console.log("\u{1F3A8} PlayerAvatar received:",{name:e,isBot:t,avatarColor:s});let c=()=>{switch(n){case"mini":return"player-avatar--mini";case"small":return"player-avatar--small";case"large":return"player-avatar--large";default:return"player-avatar--medium"}},f=()=>o==="yellow"?"player-avatar--yellow":"",d=()=>{if(!t&&s){let u=`player-avatar--color-${s}`;return console.log(`\u{1F3A8} PlayerAvatar ${e} color class:`,u),u}return""};return t?(0,$e.jsxs)("div",{className:"player-avatar-wrapper",children:[(0,$e.jsx)("div",{className:`player-avatar player-avatar--bot ${c()} ${f()} ${d()} ${a?"thinking":""} ${i?"disconnected":""} ${r}`,children:(0,$e.jsx)("img",{src:fu,alt:"Bot",className:"bot-icon"})}),l&&(0,$e.jsx)("div",{className:"ai-badge",children:"AI"})]}):(0,$e.jsxs)("div",{className:"player-avatar-wrapper",children:[(0,$e.jsx)("div",{className:`player-avatar ${c()} ${f()} ${d()} ${i?"disconnected":""} ${r}`,children:(0,$e.jsx)("img",{src:Cu,alt:e,className:"human-icon"})}),i&&(0,$e.jsx)("div",{className:"disconnect-badge",children:"\u{1F534}"})]})};pu.propTypes={name:qe.default.string.isRequired,isBot:qe.default.bool,isThinking:qe.default.bool,className:qe.default.string,size:qe.default.oneOf(["mini","small","medium","large"]),theme:qe.default.oneOf(["default","yellow"]),isDisconnected:qe.default.bool,showAIBadge:qe.default.bool,avatarColor:qe.default.string};var Ce=pu;var wS=x(z(),1),H2=x(M1(),1);var T4={GENERAL_RED:"\u5E25",GENERAL_BLACK:"\u5C07",ADVISOR_RED:"\u4ED5",ADVISOR_BLACK:"\u58EB",ELEPHANT_RED:"\u76F8",ELEPHANT_BLACK:"\u8C61",CHARIOT_RED:"\u4FE5",CHARIOT_BLACK:"\u8ECA",HORSE_RED:"\u508C",HORSE_BLACK:"\u99AC",CANNON_RED:"\u70AE",CANNON_BLACK:"\u7832",SOLDIER_RED:"\u5175",SOLDIER_BLACK:"\u5352"},mu={GENERAL:"\u5E25/\u5C07",ADVISOR:"\u4ED5/\u58EB",ELEPHANT:"\u76F8/\u8C61",CHARIOT:"\u4FE5/\u8ECA",HORSE:"\u508C/\u99AC",CANNON:"\u70AE/\u7832",SOLDIER:"\u5175/\u5352"};function A8(e){if(typeof e=="object"&&e!==null&&e.kind)return e;if(typeof e=="string"){let t=e.match(/^([A-Z]+)_([A-Z]+)\((\d+)\)$/);if(t){let[,a,r,n]=t;return{kind:a,color:r.toLowerCase(),value:parseInt(n,10)}}}return{kind:"UNKNOWN",color:"black",value:0}}function ga(e){let t=A8(e);if(!t||!t.kind)return"?";let a=`${t.kind}_${t.color?.toUpperCase()}`;if(T4[a])return T4[a];if(T4[t.kind])return T4[t.kind];let r=t.kind.replace(/_RED|_BLACK/i,"");if(mu[r]){let n=mu[r].split("/");return t.color?.toLowerCase()==="red"?n[0]:n[1]||n[0]}return t.kind.charAt(0).toUpperCase()}function D8(e){if(e&&e.color)return`piece-${e.color.toLowerCase()}`;let t=A8(e);return!t||!t.color?"piece-unknown":`piece-${t.color.toLowerCase()}`}function gu(e){let t=A8(e);return t.value===void 0||t.value===null?"0":t.value.toString()}function O8(e,t){if(!e||!e.kind||!t||!t.pieceAssets)return null;let a=`${e.kind}_${e.color.toUpperCase()}`;return t.pieceAssets[a]||null}var z8=!0;var Ie=x(L(),1),hu=({piece:e,size:t="medium",variant:a="default",selected:r=!1,flipped:n=!1,flippable:o=!1,showValue:i=!1,onClick:l,className:s="",animationDelay:c})=>{let{currentTheme:f}=Ge(),d=["game-piece",`game-piece--${t}`,`game-piece--${a}`,D8(e),r&&"selected",o&&"flippable",n&&"flipped",s].filter(Boolean).join(" "),u={};return c!==void 0&&(u.animationDelay=`${c}s`),o?(0,Ie.jsxs)("div",{className:d,onClick:l,style:u,title:s.includes("invalid-play")?"Play type doesn't match":"",children:[(0,Ie.jsx)("div",{className:"game-piece__face game-piece__face--back"}),(0,Ie.jsx)("div",{className:`game-piece__face game-piece__face--front ${D8(e)}`,children:z8?(0,Ie.jsx)("img",{src:O8(e,f),alt:ga(e)}):ga(e)})]}):(0,Ie.jsxs)("div",{className:d,onClick:l,style:u,children:[(0,Ie.jsx)("div",{className:"game-piece__character",children:z8?(0,Ie.jsx)("img",{src:O8(e,f),alt:ga(e)}):ga(e)}),i&&(0,Ie.jsx)("div",{className:"game-piece__value",children:gu(e)})]})};hu.propTypes={piece:H2.default.shape({kind:H2.default.string,color:H2.default.string,value:H2.default.number}).isRequired,size:H2.default.oneOf(["mini","small","medium","large"]),variant:H2.default.oneOf(["default","table","selectable","dealing"]),selected:H2.default.bool,flipped:H2.default.bool,flippable:H2.default.bool,showValue:H2.default.bool,onClick:H2.default.func,className:H2.default.string,animationDelay:H2.default.number};var q=hu;var TS=x(z(),1),Q2=x(M1(),1);var ha=x(L(),1),vu=({pieces:e=[],variant:t="default",onPieceClick:a,selectedPieces:r=[],showValues:n=!0,animateAppear:o=!1,animationType:i="bounce",className:l=""})=>{let s=["piece-tray",t==="active"&&"piece-tray--active",t==="fixed"&&"piece-tray--fixed",l].filter(Boolean).join(" "),c=(d,u)=>{a&&a(d,u)},f=(d,u)=>{if(!r.length)return!1;let m=`${u}-${d.kind}-${d.color}`;return r.some(b=>b.id===m||b===m)};return(0,ha.jsx)("div",{className:s,children:(0,ha.jsx)("div",{className:"piece-tray__inner",children:(0,ha.jsx)("div",{className:"piece-tray__grid",children:e.map((d,u)=>{let m=!!a,b=f(d,u),R="default";o&&i==="verticalDrop"?R="dealing":m&&(R="selectable");let S=o?i==="verticalDrop"?u*.08:u*.1:void 0;return(0,ha.jsx)(q,{piece:d,size:"large",variant:R,selected:b,showValue:n,onClick:m?()=>c(d,u):null,animationDelay:S},u)})})})})};vu.propTypes={pieces:Q2.default.arrayOf(Q2.default.shape({type:Q2.default.string,color:Q2.default.string,value:Q2.default.number})),variant:Q2.default.oneOf(["default","active","fixed"]),onPieceClick:Q2.default.func,selectedPieces:Q2.default.array,showValues:Q2.default.bool,animateAppear:Q2.default.bool,animationType:Q2.default.oneOf(["bounce","verticalDrop"]),className:Q2.default.string};var Dt=vu;var k4=x(z(),1),Ot=x(M1(),1),zt=x(L(),1),yu=({duration:e=5,onComplete:t,prefix:a="",suffix:r="seconds",variant:n="inline",className:o=""})=>{let[i,l]=(0,k4.useState)(e);(0,k4.useEffect)(()=>{let c=setInterval(()=>{l(f=>f<=1?(clearInterval(c),t&&t(),0):f-1)},1e3);return()=>clearInterval(c)},[t]);let s=["footer-timer",`footer-timer--${n}`,o].filter(Boolean).join(" ");return(0,zt.jsx)("div",{className:s,children:(0,zt.jsxs)("span",{className:"footer-timer__text",children:[a&&(0,zt.jsxs)("span",{className:"footer-timer__prefix",children:[a," "]}),(0,zt.jsx)("span",{className:"footer-timer__count",children:i}),r&&(0,zt.jsxs)("span",{className:"footer-timer__suffix",children:[" ",r]})]})})};yu.propTypes={duration:Ot.default.number,onComplete:Ot.default.func,prefix:Ot.default.string,suffix:Ot.default.string,variant:Ot.default.oneOf(["inline","footer"]),className:Ot.default.string};var x3=yu;var h1=x(L(),1),bu=({myHand:e=[],players:t=[],weakHands:a=[],redealMultiplier:r=1,currentWeakPlayer:n,isMyDecision:o=!1,isMyHandWeak:i=!1,handValue:l=0,highestCardValue:s=0,simultaneousMode:c=!1,weakPlayersAwaiting:f=[],decisionsReceived:d=0,decisionsNeeded:u=0,dealingCards:m=!1,onAcceptRedeal:b,onDeclineRedeal:R})=>{let[S,C]=(0,ot.useState)(!0),[p,g]=(0,ot.useState)(!1),[h,w]=(0,ot.useState)(0);return(0,ot.useEffect)(()=>{let N=setTimeout(()=>{C(!1)},I1.DEALING_ANIMATION_DURATION);return()=>{clearTimeout(N)}},[]),(0,ot.useEffect)(()=>{m===!0&&!S&&(g(!0),w(N=>N+1))},[m,S]),(0,ot.useEffect)(()=>{if(p){let N=setTimeout(()=>{g(!1)},I1.DEALING_ANIMATION_DURATION);return()=>{clearTimeout(N)}}},[p,i,f]),(0,h1.jsxs)(h1.Fragment,{children:[(0,h1.jsx)("div",{className:"content-section",children:S||p?(0,h1.jsxs)("div",{className:"dealing-container",children:[(0,h1.jsxs)("div",{className:"dealing-icon",children:[(0,h1.jsx)("div",{className:"card-stack"}),(0,h1.jsx)("div",{className:"card-stack"}),(0,h1.jsx)("div",{className:"card-stack"})]}),(0,h1.jsx)("div",{className:"dealing-message",children:p?"Redealing Cards":"Dealing Cards"}),(0,h1.jsx)("div",{className:"dealing-status",children:"Please wait while cards are being dealt..."}),(0,h1.jsx)("div",{className:"progress-container",children:(0,h1.jsx)("div",{className:"progress-bar",children:(0,h1.jsx)("div",{className:"progress-fill"})})})]}):(0,h1.jsxs)(h1.Fragment,{children:[(()=>{let N=!S&&!p&&i;return!S&&!p&&i?c?!0:o:!1})()&&(0,h1.jsxs)("div",{className:"weak-hand-alert show",children:[(0,h1.jsx)("div",{className:"alert-title",children:"\u26A0\uFE0F Weak Hand Detected"}),(0,h1.jsxs)("div",{className:"alert-message",children:["No piece greater than ",s," points. Would you like to request a redeal?",(0,h1.jsxs)("div",{className:"multiplier-warning",children:["Warning: ",r+1,"x penalty if you redeal!"]})]}),(0,h1.jsxs)("div",{className:"alert-buttons",children:[(0,h1.jsx)("button",{className:"alert-button primary",onClick:b,children:"Request Redeal"}),(0,h1.jsx)("button",{className:"alert-button secondary",onClick:R,children:"Keep Hand"})]})]}),c&&f.length>0&&!o&&(0,h1.jsxs)("div",{className:"waiting-indicator",children:[(0,h1.jsx)("div",{className:"waiting-text",children:"Waiting for weak hand decisions..."}),(0,h1.jsxs)("div",{className:"waiting-progress",children:[d," of ",u," players decided"]})]})]})}),(0,h1.jsx)(Dt,{pieces:e,variant:"fixed",showValues:!0,animateAppear:!0,animationType:"verticalDrop"},`deal-${h}`)]})};bu.propTypes={myHand:f2.default.array,players:f2.default.array,weakHands:f2.default.array,redealMultiplier:f2.default.number,currentWeakPlayer:f2.default.string,isMyDecision:f2.default.bool,isMyHandWeak:f2.default.bool,handValue:f2.default.number,highestCardValue:f2.default.number,simultaneousMode:f2.default.bool,weakPlayersAwaiting:f2.default.array,decisionsReceived:f2.default.number,decisionsNeeded:f2.default.number,dealingCards:f2.default.bool,onAcceptRedeal:f2.default.func,onDeclineRedeal:f2.default.func};var xu=bu;var wu=x(L(),1);function H8({myHand:e=[],players:t=[],weakHands:a=[],redealMultiplier:r=1,currentWeakPlayer:n=null,isMyDecision:o=!1,isMyHandWeak:i=!1,handValue:l=0,highestCardValue:s=0,simultaneousMode:c=!1,weakPlayersAwaiting:f=[],decisionsReceived:d=0,decisionsNeeded:u=0,dealingCards:m=!1,onAcceptRedeal:b,onDeclineRedeal:R}){return(0,wu.jsx)(xu,{myHand:e,players:t,weakHands:a,redealMultiplier:r,currentWeakPlayer:n,isMyDecision:o,isMyHandWeak:i,handValue:l,highestCardValue:s,simultaneousMode:c,weakPlayersAwaiting:f,decisionsReceived:d,decisionsNeeded:u,dealingCards:m,onAcceptRedeal:b,onDeclineRedeal:R})}H8.propTypes={myHand:T1.default.arrayOf(T1.default.shape({type:T1.default.string.isRequired,color:T1.default.oneOf(["red","black"]).isRequired,value:T1.default.number.isRequired})),players:T1.default.arrayOf(T1.default.shape({name:T1.default.string.isRequired,isActive:T1.default.bool})).isRequired,weakHands:T1.default.arrayOf(T1.default.string),redealMultiplier:T1.default.number,currentWeakPlayer:T1.default.string,isMyDecision:T1.default.bool.isRequired,isMyHandWeak:T1.default.bool,handValue:T1.default.number,highestCardValue:T1.default.number,simultaneousMode:T1.default.bool,weakPlayersAwaiting:T1.default.arrayOf(T1.default.string),decisionsReceived:T1.default.number,decisionsNeeded:T1.default.number,dealingCards:T1.default.bool,onAcceptRedeal:T1.default.func,onDeclineRedeal:T1.default.func};H8.defaultProps={myHand:[],weakHands:[],redealMultiplier:1,currentWeakPlayer:null,isMyHandWeak:!1,handValue:0,highestCardValue:0,simultaneousMode:!1,weakPlayersAwaiting:[],decisionsReceived:0,decisionsNeeded:0,dealingCards:!1,onAcceptRedeal:()=>{},onDeclineRedeal:()=>{}};var U8=H8;var QS=x(z(),1),l2=x(M1(),1);var va=x(z(),1),Xe=x(M1(),1);var X1=x(L(),1),Su=({myHand:e=[],players:t=[],currentPlayer:a="",myName:r="",declarations:n={},totalDeclared:o=0,consecutiveZeros:i=0,redealMultiplier:l=1,onDeclare:s})=>{let[c,f]=(0,va.useState)(null),[d,u]=(0,va.useState)(!1),m=a===r;(0,va.useEffect)(()=>{m?u(!0):(u(!1),f(null))},[m]);let R=(()=>{let h={message:"Declare your target pile count",disabledValues:[]};if(Object.keys(n).length===t.length-1){let N=8-o;N>=0&&N<=8&&(h.disabledValues.push(N),h.message="The total number cannot be 8")}return i>=2&&(h.disabledValues.push(0),h.message="No third consecutive 0"),h})(),S=h=>{let w=h.name;if(n[w]!==void 0)return{type:"declared",value:n[w]};if(w===a)return{type:"current",text:"Declaring"};{let _=t.findIndex(M=>M.name===a),N=t.findIndex(M=>M.name===w);return _!==-1&&N!==-1&&N===_+1?{type:"pending",text:"Next"}:{type:"waiting",text:"Waiting"}}},C=h=>{R.disabledValues.includes(h)||f(h)},p=()=>{c!==null&&s&&s(c)},g=()=>{f(null)};return(0,X1.jsxs)(X1.Fragment,{children:[(0,X1.jsx)("div",{className:"dec-game-status-section",children:(0,X1.jsx)("div",{className:"dec-players-list",children:t.map(h=>{console.log("\u{1F3A8} Declaration player data:",h.name,"avatar_color:",h.avatar_color,"is_bot:",h.is_bot,"full player:",h);let w=h.name,_=w,N=S(h),M=w===a,V=N.type==="declared";return(0,X1.jsxs)("div",{className:`dec-player-row ${M?"current-turn":""} ${V?"declared":""}`,children:[(0,X1.jsx)(Ce,{name:_,isBot:h.is_bot,isThinking:M&&h.is_bot,avatarColor:h.avatar_color,size:"large"}),(0,X1.jsx)("div",{className:"dec-player-info",children:(0,X1.jsxs)("div",{className:"dec-player-name",children:[_,w===r?" (You)":""]})}),(0,X1.jsx)("div",{className:"dec-player-status",children:N.type==="declared"?(0,X1.jsx)("div",{className:"dec-declared-value",children:N.value}):(0,X1.jsx)("div",{className:`dec-status-badge ${N.type}`,children:N.text})})]},w)})})}),(0,X1.jsxs)("div",{className:`dec-panel ${d?"show":""}`,children:[(0,X1.jsx)("div",{className:"dec-options",children:[0,1,2,3,4,5,6,7,8].map(h=>{let w=R.disabledValues.includes(h);return(0,X1.jsx)("button",{className:`dec-option ${c===h?"selected":""} ${w?"disabled":""}`,onClick:()=>C(h),disabled:w,children:h},h)})}),(0,X1.jsxs)("div",{className:"dec-actions",children:[(0,X1.jsx)("button",{className:"dec-action-btn",onClick:p,disabled:c===null,children:"Confirm"}),(0,X1.jsx)("button",{className:"dec-action-btn secondary",onClick:g,children:"Clear"})]})]}),(0,X1.jsx)(Dt,{pieces:e,showValues:!0})]})};Su.propTypes={myHand:Xe.default.array,players:Xe.default.array,currentPlayer:Xe.default.string,myName:Xe.default.string,declarations:Xe.default.object,totalDeclared:Xe.default.number,consecutiveZeros:Xe.default.number,redealMultiplier:Xe.default.number,onDeclare:Xe.default.func};var Ru=Su;var Nu=x(L(),1);function Eu({myHand:e=[],declarations:t={},players:a=[],currentTotal:r=0,isMyTurn:n=!1,validOptions:o=[],declarationProgress:i={declared:0,total:4},isLastPlayer:l=!1,estimatedPiles:s=0,handStrength:c=0,currentPlayer:f="",myName:d="",consecutiveZeros:u=0,redealMultiplier:m=1,onDeclare:b}){return(0,Nu.jsx)(Ru,{myHand:e,players:a,currentPlayer:f,myName:d,declarations:t,totalDeclared:r,consecutiveZeros:u,redealMultiplier:m,onDeclare:b})}Eu.propTypes={myHand:l2.default.array,declarations:l2.default.object,players:l2.default.array,currentTotal:l2.default.number,isMyTurn:l2.default.bool,validOptions:l2.default.array,declarationProgress:l2.default.shape({declared:l2.default.number,total:l2.default.number}),isLastPlayer:l2.default.bool,estimatedPiles:l2.default.number,handStrength:l2.default.number,currentPlayer:l2.default.string,myName:l2.default.string,consecutiveZeros:l2.default.number,redealMultiplier:l2.default.number,onDeclare:l2.default.func};var P8=Eu;var dR=x(z(),1),s2=x(M1(),1);var Ke=x(z(),1),E2=x(M1(),1);function it(e){return{SINGLE:"Single",PAIR:"Pair",THREE_OF_A_KIND:"Three of a Kind",STRAIGHT:"Straight",FOUR_OF_A_KIND:"Four of a Kind",EXTENDED_STRAIGHT:"Extended Straight",EXTENDED_STRAIGHT_5:"Five-Card Straight",FIVE_OF_A_KIND:"Five of a Kind",DOUBLE_STRAIGHT:"Double Straight",INVALID:"Invalid Play",UNKNOWN:"Unknown"}[e]||e}var _u={GENERAL:14,ADVISOR:13,SOLDIER:11,ELEPHANT:10,CHARIOT:9,CANNON:8,HORSE:7};function w3(e){return e.value!==void 0?e.value:e.kind&&_u[e.kind]?_u[e.kind]:0}function Oh(e){return e.length!==2?!1:w3(e[0])===w3(e[1])}function zh(e){if(e.length!==3)return!1;let t=w3(e[0]);return e.every(a=>w3(a)===t)}function Hh(e){let t=e.map(r=>r.kind),a=[["GENERAL","ADVISOR","ELEPHANT"],["CHARIOT","HORSE","CANNON"]];return e.every(r=>r.color===e[0].color)&&a.some(r=>t.sort().join()===r.sort().join())}function Uh(e){if(e.length!==4)return!1;let t=w3(e[0]),a=e.every(r=>w3(r)===t);return console.log("[isFourOfAKind] Check:",{firstPieceValue:t,allPieceValues:e.map(r=>w3(r)),result:a}),a}function Ph(e){let t=e[0].color,a=e.map(o=>o.kind),r={};a.forEach(o=>r[o]=(r[o]||0)+1);let n=[["GENERAL","ADVISOR","ELEPHANT"],["CHARIOT","HORSE","CANNON"]];return e.every(o=>o.color===t)&&n.some(o=>a.every(i=>o.includes(i))&&Object.keys(r).length===3&&Object.values(r).sort().join()==="1,1,2")}function Bh(e){if(e.length!==5)return!1;let t=w3(e[0]);return e.every(a=>w3(a)===t)}function Gh(e){let t=e[0].color,a=e.map(o=>o.kind),r={};a.forEach(o=>r[o]=(r[o]||0)+1);let n=[["GENERAL","ADVISOR","ELEPHANT"],["CHARIOT","HORSE","CANNON"]];return e.every(o=>o.color===t)&&n.some(o=>a.every(i=>o.includes(i)))&&Object.values(r).sort().join()==="1,2,2"}function Vh(e){if(e.length!==6)return!1;let t=e[0].color,a=e.map(n=>n.kind),r={};return a.forEach(n=>r[n]=(r[n]||0)+1),e.every(n=>n.color===t)&&Object.keys(r).sort().join()==="CANNON,CHARIOT,HORSE"&&Object.values(r).every(n=>n===2)}function S3(e){if(console.log("[getPlayType] Analyzing pieces:",{count:e?.length,pieces:JSON.stringify(e?.map(t=>({kind:t.kind||t.type,color:t.color,value:t.value})))}),!e||e.length===0)return null;if(e.length===1)return"SINGLE";if(e.length===2&&Oh(e))return"PAIR";if(e.length===3){if(zh(e))return"THREE_OF_A_KIND";if(Hh(e))return"STRAIGHT"}if(e.length===4){if(Uh(e))return console.log("[getPlayType] Detected FOUR_OF_A_KIND"),"FOUR_OF_A_KIND";if(Ph(e))return console.log("[getPlayType] Detected EXTENDED_STRAIGHT"),"EXTENDED_STRAIGHT"}if(e.length===5){if(Bh(e))return"FIVE_OF_A_KIND";if(Gh(e))return"EXTENDED_STRAIGHT_5"}return e.length===6&&Vh(e)?"DOUBLE_STRAIGHT":null}function jh(e,t){if(console.log("[doesPlayMatchStarterType] Input:",{starterPlayType:t,pieceCount:e?.length,pieceDetails:JSON.stringify(e?.map(n=>({kind:n.kind||n.type,color:n.color,value:n.value})))}),!e)return console.log("[doesPlayMatchStarterType] Missing pieces, returning false"),!1;if(!t)return console.log("[doesPlayMatchStarterType] Missing starterPlayType, returning false"),!1;let a=S3(e);if(console.log("[doesPlayMatchStarterType] Player play type:",a),!a||a==="INVALID"||a==="UNKNOWN")return console.log("[doesPlayMatchStarterType] Invalid/unknown play type, returning false"),!1;if(t==="SINGLE"&&e.length===1)return console.log("[doesPlayMatchStarterType] Single piece match, returning true"),!0;let r=a===t;return console.log("[doesPlayMatchStarterType] Comparison result:",{playerPlayType:a,starterPlayType:t,matches:r}),r}function L4(e,t,a){console.log("[determinePiecesToReveal] Input:",{playerPieces:e,starterPlayType:t,starterName:a});let r=new Set;if(!e)return console.log("[determinePiecesToReveal] Missing playerPieces, returning empty set"),r;let n=t;return!t&&a&&e[a]&&(n=S3(e[a]),console.log("[determinePiecesToReveal] Calculated starter play type from pieces:",{starterName:a,starterPieces:e[a],calculatedType:n})),n?(Object.entries(e).forEach(([o,i])=>{if(console.log(`[determinePiecesToReveal] Checking player: ${o}`,{pieces:i,pieceCount:i?.length}),!i||i.length===0){console.log(`[determinePiecesToReveal] ${o} has no pieces, skipping`);return}if(o===a){console.log(`[determinePiecesToReveal] ${o} is the starter, revealing all pieces`),i.forEach((s,c)=>{r.add(`${o}-${c}`)});return}let l=jh(i,n);console.log(`[determinePiecesToReveal] ${o} matches starter type: ${l}`),l&&i.forEach((s,c)=>{r.add(`${o}-${c}`)})}),console.log("[determinePiecesToReveal] Final pieces to reveal:",Array.from(r)),r):(console.log("[determinePiecesToReveal] No starter play type available, revealing all pieces"),Object.entries(e).forEach(([o,i])=>{i&&i.length>0&&i.forEach((l,s)=>{r.add(`${o}-${s}`)})}),r)}function $0(e,t,a=0,r=100){let n=t.findIndex(o=>o.name===e);return n===-1?a:a+n*r}var v1=x(L(),1),Tu=({myHand:e=[],players:t=[],currentPlayer:a="",myName:r="",currentPile:n=[],requiredPieceCount:o=0,turnNumber:i=1,playerPieces:l={},lastWinner:s="",playType:c="",playerStats:f={},playerHandSizes:d={},onPlayPieces:u,onPass:m})=>{let[b,R]=(0,Ke.useState)([]),[S,C]=(0,Ke.useState)(!1),[p,g]=(0,Ke.useState)(new Set),h=(0,Ke.useRef)(!1),w=a===r,_=t.findIndex(H=>H.name===r),N=H=>{let t1=t.findIndex(G2=>G2.name===H);if(t1===-1)return"bottom";let X=(t1-_+4)%4;return["bottom","right","top","left"][X]};(0,Ke.useEffect)(()=>{C(b.length>0&&w)},[b,w]),(0,Ke.useEffect)(()=>{if(Object.keys(l).filter(X=>l[X]?.length>0).length===t.length&&!h.current){h.current=!0;let X=setTimeout(()=>{console.log("[TurnContent] Determining pieces to reveal:",{playType:c,lastWinner:s,playerPieces:l});let B1=L4(l,c,s);console.log("[TurnContent] Pieces to reveal:",B1),g(B1)},I1.TURN_FLIP_DELAY);return()=>clearTimeout(X)}},[l,t.length,c,s]),(0,Ke.useEffect)(()=>{h.current=!1,g(new Set)},[i]);let M=(H,t1)=>{if(!w)return;let X=`${t1}-${H.kind}-${H.color}`;R(B1=>{if(B1.some(Te=>Te.id===X))return B1.filter(Te=>Te.id!==X);let G2=H.originalIndex!==void 0?H.originalIndex:t1,Je={...H,id:X,index:G2,displayIndex:t1};return o>0&&B1.length>=o?[Je]:o===0&&B1.length>=6?B1:[...B1,Je]})},V=()=>{R([])},B=()=>w?o===0||o===null?b.length===0?!1:b.length===1?!0:S3(b)!==null:b.length===o:!1,G=()=>{if(B()&&u){let H=b.map(t1=>t1.index);u(H),R([])}},j=()=>{w&&m&&(m(),R([]))},Q=H=>f[H]||{pilesWon:0,declared:0},l1=(H,t1)=>H===0&&t1===0?"pile-status-none":H===t1&&t1>0?"pile-status-perfect":H>t1?"pile-status-over":"pile-status-under",R1=w?o===0?{type:"active",text:"Play any number of pieces or pass"}:{type:"active",text:`Must play exactly ${o} piece${o>1?"s":""}`}:{type:"waiting",text:`Waiting for ${a} to play`};return(0,v1.jsxs)(v1.Fragment,{children:[(0,v1.jsxs)("div",{className:`turn-indicator ${l1(Q(r).pilesWon,Q(r).declared)}`,children:[Q(r).pilesWon,"/",Q(r).declared]}),(0,v1.jsx)("div",{className:"turn-table-section",children:(0,v1.jsxs)("div",{className:"turn-table-layout",children:[(0,v1.jsxs)("div",{className:"turn-central-table",children:[(0,v1.jsx)("div",{className:"turn-table-wood-grain"}),t.map(H=>{let t1=N(H.name),X=l[H.name]||[];return X.length>0&&(0,v1.jsx)("div",{className:`turn-player-pieces-area ${t1} ${X.length<=3?"single-line":""}`,children:X.map((G2,Je)=>{let Te=`${H.name}-${Je}`,Vt=p.has(Te),jt=!Vt&&h.current,F4=$0(H.name,t)/1e3;return(0,v1.jsx)(q,{piece:G2,size:"mini",variant:"table",flippable:!0,flipped:Vt,className:jt?"invalid-play":"",animationDelay:Vt?F4:void 0},Je)})},H.name)})]}),t.map(H=>{console.log("\u{1F3A8} Turn player data:",H.name,"avatar_color:",H.avatar_color,"is_bot:",H.is_bot,"full player:",H);let t1=N(H.name),X=H.name===a,B1=(l[H.name]||[]).length>0,G2=Q(H.name),Je=d[H.name]||0,Te=H.name===r;return t1==="bottom"?null:(0,v1.jsxs)("div",{className:`turn-player-summary-bar ${t1} ${X?"active":""} ${B1?"played":""} ${Te?"current-user":""}`,children:[(0,v1.jsxs)("div",{className:"turn-player-summary-content",children:[(0,v1.jsx)(Ce,{name:H.name,isBot:H.is_bot,isThinking:X&&H.is_bot,avatarColor:H.avatar_color,size:"mini"}),(0,v1.jsx)("span",{className:"turn-player-name-short",children:H.name}),(0,v1.jsxs)("div",{className:"turn-player-stats-compact",children:[(0,v1.jsx)("span",{className:`turn-stat-number ${l1(G2.pilesWon,G2.declared)}`,children:G2.pilesWon}),(0,v1.jsx)("span",{className:"turn-stat-separator",children:"/"}),(0,v1.jsx)("span",{className:"turn-stat-number",children:G2.declared})]})]}),(0,v1.jsx)("div",{className:"turn-status-icons",children:[...Array(Math.min(Je,8))].map((Vt,jt)=>(0,v1.jsx)("span",{className:"turn-status-icon"},jt))})]},H.name)})]})}),(0,v1.jsxs)("div",{className:`turn-confirm-panel ${S?"show":""}`,children:[(0,v1.jsx)("div",{className:"turn-selection-info",children:(0,v1.jsx)("div",{className:"turn-selection-count",children:(()=>{if(o===0||o===null){if(b.length>=2){let X=S3(b);return X?`\u2713 Valid ${it(X)}`:"That's not a valid play"}return"As starter, your play must be valid"}let t1=`Must play exactly ${o} piece${o>1?"s":""}`;if(b.length===o){if(o===1)return"\u2713 Ready to play";let X=S3(b);return X?X===c?`\u2713 Your ${it(X)} can compete this turn`:`\u26A0\uFE0F Your ${it(X)} cannot compete against ${it(c)}`:`\u26A0\uFE0F Not a ${it(c||"combination")} - play to forfeit turn`}return t1})()})}),(0,v1.jsxs)("div",{className:"turn-action-buttons",children:[(0,v1.jsx)("button",{className:"turn-action-button",onClick:G,disabled:!B(),children:"Play Pieces"}),(0,v1.jsx)("button",{className:"turn-action-button secondary",onClick:V,children:"Clear"})]})]}),(0,v1.jsx)(Dt,{pieces:e,variant:w?"active":"default",showValues:!0,onPieceClick:w?M:null,selectedPieces:b})]})};Tu.propTypes={myHand:E2.default.array,players:E2.default.array,currentPlayer:E2.default.string,myName:E2.default.string,currentPile:E2.default.array,requiredPieceCount:E2.default.number,turnNumber:E2.default.number,playerPieces:E2.default.object,lastWinner:E2.default.string,playType:E2.default.string,playerStats:E2.default.object,playerHandSizes:E2.default.object,onPlayPieces:E2.default.func,onPass:E2.default.func};var ku=Tu;var Mu=x(L(),1);function Lu({myHand:e=[],players:t=[],currentPlayer:a="",playerName:r="",currentPile:n=[],requiredPieceCount:o=0,turnNumber:i=1,piecesWonCount:l={},previousWinner:s="",currentTurnPlays:c=[],playType:f="",declarationData:d={},playerHandSizes:u={},isMyTurn:m=!1,canPlayAnyCount:b=!1,onPlayPieces:R,onPass:S}){let C={};console.log("[TurnUI] Building playerPieces from currentTurnPlays:",c),c.forEach((_,N)=>{console.log(`[TurnUI] Turn play ${N+1}:`,{player:_.player,hasPieces:!!_.pieces,hasCards:!!_.cards,playType:_.playType||_.play_type,isValid:_.isValid,pieces:_.pieces?JSON.stringify(_.pieces):"null",cards:_.cards?JSON.stringify(_.cards):"null"})}),c.forEach(_=>{_.player&&(_.pieces||_.cards)&&(C[_.player]=_.pieces||_.cards)});let p=f||(()=>{let _=c.filter(N=>N.isValid!==!1);if(_.length>0){let N=_[_.length-1],M=N.playType||N.play_type||"";return console.log("[TurnUI] Extracting play type:",{playType:f,currentTurnPlays:c,validPlays:_,lastPlay:N,extractedType:M}),M}return console.log("[TurnUI] No valid plays found, returning empty play type"),""})(),g={};t.forEach(_=>{g[_.name]={pilesWon:l[_.name]||0,declared:d[_.name]||0}});let h=n.length>0?n:c.reduce((_,N)=>[..._,...N.pieces||N.cards||[]],[]);return(0,Mu.jsx)(ku,{myHand:e,players:t,currentPlayer:a,myName:r,currentPile:h,requiredPieceCount:b?0:o,turnNumber:i,playerPieces:C,lastWinner:s,playType:p,playerStats:g,playerHandSizes:u,onPlayPieces:R,onPass:S})}Lu.propTypes={myHand:s2.default.array,players:s2.default.array,currentPlayer:s2.default.string,playerName:s2.default.string,currentPile:s2.default.array,requiredPieceCount:s2.default.number,turnNumber:s2.default.number,piecesWonCount:s2.default.object,previousWinner:s2.default.string,currentTurnPlays:s2.default.array,playType:s2.default.string,declarationData:s2.default.object,playerHandSizes:s2.default.object,isMyTurn:s2.default.bool,canPlayAnyCount:s2.default.bool,onPlayPieces:s2.default.func,onPass:s2.default.func};var B8=Lu;var yR=x(z(),1),S1=x(M1(),1);var mR=x(z(),1),C2=x(M1(),1);var n1=x(L(),1),Au=({players:e=[],scores:t=[],roundNumber:a=1,redealMultiplier:r=1,myName:n="",onContinue:o})=>{let i=u=>u>0?"positive":u<0?"negative":"neutral",l=u=>u>0?`+${u}`:u.toString(),s=u=>u.declared===0&&u.actual===0?"value-blue":u.declared===u.actual?"value-positive":"value-negative",c=u=>u.declared===0&&u.actual===0?"value-blue":u.hit?"value-positive":"value-negative",f=u=>u.declared===0&&u.actual===0?"value-blue":u.bonus>0?"value-positive":"value-neutral",d=u=>u.declared===0&&u.actual===0?"value-blue":u.roundScore>0?"value-positive":u.roundScore<0?"value-negative":"value-neutral";return(0,n1.jsxs)(n1.Fragment,{children:[(0,n1.jsx)("div",{className:"sc-scoring-section",children:t.map((u,m)=>{let b=e.find(R=>R.name===u.playerName)||{name:u.playerName};return console.log("\u{1F3A8} Scoring player data:",b.name,"avatar_color:",b.avatar_color,"is_bot:",b.is_bot,"full player:",b),(0,n1.jsxs)("div",{className:"sc-score-card",children:[(0,n1.jsxs)("div",{className:"sc-top-row",children:[(0,n1.jsxs)("div",{className:"sc-player-info",children:[(0,n1.jsx)(Ce,{name:b.name,isBot:b.is_bot,avatarColor:b.avatar_color,size:"medium"}),(0,n1.jsxs)("div",{className:"sc-player-name",children:[b.name,b.name===n?" (You)":""]})]}),(0,n1.jsxs)("div",{className:"sc-total-score",children:[(0,n1.jsx)("span",{className:"sc-total-label",children:"Total:"}),(0,n1.jsx)("span",{className:"sc-total-value neutral",children:u.totalScore})]})]}),(0,n1.jsxs)("div",{className:"sc-bottom-row",children:[(0,n1.jsxs)("div",{className:"sc-stat sc-target",children:[(0,n1.jsx)("span",{className:"sc-stat-label",children:"Target"}),(0,n1.jsxs)("span",{className:`sc-target-value ${s(u)}`,children:[u.actual,"/",u.declared]})]}),(0,n1.jsxs)("div",{className:"sc-stat",children:[(0,n1.jsx)("span",{className:"sc-stat-label",children:u.hit?"Hit":"Penalty"}),(0,n1.jsx)("span",{className:`sc-stat-value ${c(u)}`,children:l(u.hitValue)})]}),(0,n1.jsxs)("div",{className:"sc-stat",children:[(0,n1.jsx)("span",{className:"sc-stat-label",children:"Bonus"}),(0,n1.jsx)("span",{className:`sc-stat-value ${f(u)}`,children:l(u.bonus)})]}),u.multiplier>1&&(0,n1.jsxs)("div",{className:"sc-stat",children:[(0,n1.jsx)("span",{className:"sc-stat-label",children:"Mult"}),(0,n1.jsxs)("span",{className:"sc-multiplier",children:["\xD7",u.multiplier]})]}),(0,n1.jsxs)("div",{className:"sc-stat",children:[(0,n1.jsx)("span",{className:"sc-stat-label",children:"Score"}),(0,n1.jsx)("span",{className:`sc-stat-value ${d(u)}`,children:l(u.roundScore)})]})]})]},b.name)})}),(0,n1.jsx)("div",{className:"sc-continue-section",children:(0,n1.jsxs)("div",{className:"sc-continue-info",children:[(0,n1.jsxs)("div",{className:"sc-next-round",children:["Starting Round ",a+1]}),(0,n1.jsx)("div",{className:"sc-auto-continue",children:(0,n1.jsx)(x3,{prefix:"Continuing in",onComplete:o,variant:"inline"})})]})})]})};Au.propTypes={players:C2.default.array,scores:C2.default.arrayOf(C2.default.shape({playerName:C2.default.string,declared:C2.default.number,actual:C2.default.number,hit:C2.default.bool,hitValue:C2.default.number,bonus:C2.default.number,multiplier:C2.default.number,roundScore:C2.default.number,totalScore:C2.default.number})),roundNumber:C2.default.number,redealMultiplier:C2.default.number,myName:C2.default.string,onContinue:C2.default.func};var Du=Au;var Ou=x(L(),1);function G8({players:e=[],roundScores:t={},totalScores:a={},redealMultiplier:r=1,playersWithScores:n=[],roundNumber:o=1,playerName:i="",gameOver:l=!1,winners:s=[],onStartNextRound:c}){let f=n.length>0?n.map(d=>({playerName:d.name,declared:d.pile_count||0,actual:d.actualPiles||0,hit:d.pile_count===d.actualPiles,hitValue:d.hitValue||(d.pile_count===d.actualPiles?d.pile_count:-Math.abs(d.pile_count-d.actualPiles)),bonus:d.bonus||0,multiplier:r,roundScore:d.roundScore||t[d.name]||0,totalScore:d.totalScore||a[d.name]||0})):e.map(d=>({playerName:d.name,declared:d.pile_count||0,actual:d.actualPiles||0,hit:d.pile_count===d.actualPiles,hitValue:d.pile_count===d.actualPiles?d.pile_count:-Math.abs(d.pile_count-d.actualPiles),bonus:d.pile_count===d.actualPiles?d.pile_count===0?3:5:0,multiplier:r,roundScore:t[d.name]||0,totalScore:a[d.name]||0}));return(0,Ou.jsx)(Du,{players:e,scores:f,roundNumber:o,redealMultiplier:r,myName:i,onContinue:c})}G8.propTypes={players:S1.default.arrayOf(S1.default.shape({name:S1.default.string.isRequired,pile_count:S1.default.number,actualPiles:S1.default.number})).isRequired,roundScores:S1.default.objectOf(S1.default.number),totalScores:S1.default.objectOf(S1.default.number),redealMultiplier:S1.default.number,roundNumber:S1.default.number,playerName:S1.default.string,playersWithScores:S1.default.arrayOf(S1.default.shape({name:S1.default.string.isRequired,pile_count:S1.default.number,actualPiles:S1.default.number,roundScore:S1.default.number,totalScore:S1.default.number,baseScore:S1.default.number,scoreExplanation:S1.default.string,isWinner:S1.default.bool})),gameOver:S1.default.bool,winners:S1.default.arrayOf(S1.default.string),onStartNextRound:S1.default.func};G8.defaultProps={players:[],roundScores:{},totalScores:{},redealMultiplier:1,roundNumber:1,playerName:"",playersWithScores:[],gameOver:!1,winners:[],onStartNextRound:null};var V8=G8;var E3=x(z(),1),$8=x(M1(),1);var Ht=x(z(),1);function ya(){let[e,t]=(0,Ht.useState)(()=>f1.getState()),a=(0,Ht.useRef)(e);return(0,Ht.useEffect)(()=>{let r=i=>{a.current!==i&&(a.current=i,t(i))},n=f1.addListener(r),o=f1.getState();return a.current!==o&&(a.current=o,t(o)),n},[]),e}var zu=ya;var p2=x(z(),1);function j8(e={}){let t=ya(),{enableLogging:a=!1,throwOnError:r=!1,validateState:n=!0}=e,o=(0,p2.useCallback)((h,w)=>{a&&console.log(`\u{1F3AF} Action: ${h}`,w||"")},[a]),i=(0,p2.useCallback)((h,w)=>{let _=w instanceof Error?w.message:"Unknown error";if(console.error(`\u274C Action ${h} failed:`,w),r)throw w;return _},[r]),l=(0,p2.useCallback)((h,w,_=!0)=>n?_&&!t.isConnected?(console.warn(`Cannot ${h}: Not connected to game`),!1):w&&t.phase!==w?(console.warn(`Cannot ${h}: Wrong phase (current: ${t.phase}, required: ${w})`),!1):t.error?(console.warn(`Cannot ${h}: Game has error - ${t.error}`),!1):!0:!0,[t,n]),s=(0,p2.useCallback)(async(h,w)=>{try{if(o("connectToRoom",{roomId:h,playerName:w}),!h||!w)throw new Error("Room ID and player name are required");await Y1.connectToRoom(h,w)}catch(_){throw i("connectToRoom",_),_}},[o,i]),c=(0,p2.useCallback)(async()=>{try{o("disconnectFromRoom"),await Y1.disconnectFromRoom()}catch(h){throw i("disconnectFromRoom",h),h}},[o,i]),f=(0,p2.useCallback)(async()=>{try{if(o("acceptRedeal"),!l("acceptRedeal","preparation"))return;if(!t.isMyDecision)throw new Error("Not your turn to make redeal decision");f1.acceptRedeal()}catch(h){if(i("acceptRedeal",h),r)throw h}},[o,l,t.isMyDecision,i,r]),d=(0,p2.useCallback)(async()=>{try{if(o("declineRedeal"),!l("declineRedeal","preparation"))return;if(!t.isMyDecision)throw new Error("Not your turn to make redeal decision");f1.declineRedeal()}catch(h){if(i("declineRedeal",h),r)throw h}},[o,l,t.isMyDecision,i,r]),u=(0,p2.useCallback)(async h=>{try{if(o("makeDeclaration",{value:h}),!l("makeDeclaration","declaration"))return;if(!t.isMyTurn)throw new Error("Not your turn to declare");if(typeof h!="number"||h<0||h>8)throw new Error("Declaration value must be between 0 and 8");let w=Object.keys(t.declarations).length,_=t.players.length;if(w===_-1&&Object.values(t.declarations).reduce((V,B)=>V+B,0)+h===8)throw new Error("Last player cannot make total equal 8");f1.makeDeclaration(h)}catch(w){if(i("makeDeclaration",w),r)throw w}},[o,l,t.isMyTurn,t.declarations,t.players.length,i,r]),m=(0,p2.useCallback)(async h=>{try{if(o("playPieces",{indices:h}),!l("playPieces","turn"))return;if(!t.isMyTurn)throw new Error("Not your turn to play pieces");if(!Array.isArray(h)||h.length===0)throw new Error("Must select at least one piece to play");if(h.some(N=>N<0||N>=t.myHand.length))throw new Error("Invalid piece indices selected");if(t.requiredPieceCount!==null&&h.length!==t.requiredPieceCount)throw new Error(`Must play exactly ${t.requiredPieceCount} pieces`);let _=Array.from(new Set(h));if(_.length!==h.length)throw new Error("Cannot play the same piece multiple times");f1.playPieces(_)}catch(w){if(i("playPieces",w),r)throw w}},[o,l,t.isMyTurn,t.myHand.length,t.requiredPieceCount,i,r,t]),b=(0,p2.useCallback)(async()=>{try{if(o("startNextRound"),!l("startNextRound","scoring"))return;if(t.gameOver)throw new Error("Game is over, cannot start next round");f1.startNextRound()}catch(h){if(i("startNextRound",h),r)throw h}},[o,l,t.gameOver,i,r]),R=(0,p2.useCallback)(async h=>{try{return o("triggerRecovery",{errorType:h}),await Y1.triggerRecovery(h)}catch(w){throw i("triggerRecovery",w),w}},[o,i]),S=(0,p2.useCallback)(async()=>{try{o("emergencyReset"),await Y1.emergencyReset()}catch(h){throw i("emergencyReset",h),h}},[o,i]),C=(0,p2.useCallback)(()=>{o("refreshState"),Y1.getHealthStatus()},[o]),p=(0,p2.useCallback)(()=>{o("clearError")},[o]);return(0,p2.useMemo)(()=>({connectToRoom:s,disconnectFromRoom:c,acceptRedeal:f,declineRedeal:d,makeDeclaration:u,playPieces:m,startNextRound:b,triggerRecovery:R,emergencyReset:S,refreshState:C,clearError:p}),[s,c,f,d,u,m,b,R,S,C,p])}var Hu=j8;var Ut=x(z(),1);function F8(e){let[t,a]=(0,Ut.useState)(()=>Fh(e)),r=(0,Ut.useCallback)(()=>{let n=U.getStatus(),o=Y1.getHealthStatus(),i=e?n.rooms[e]:null,l=o.network.healthy,s={isConnected:i?i.connected:o.network.connections>0,isConnecting:i?.status==="connecting"||!1,isReconnecting:i?i.reconnecting:!1,roomId:i?.roomId||null,connectedAt:i?.connectedAt||null,uptime:i?.uptime||null,latency:i?.latency||null,messagesSent:i?.messagesSent||0,messagesReceived:i?.messagesReceived||0,queuedMessages:i?.queueSize||o.network.queuedMessages,status:Yh(i,l),error:i||o.network.healthy?null:"Network error",reconnectAttempts:i?.reconnectAttempts||0,lastActivity:i?.lastActivity||null};a(s)},[e]);return(0,Ut.useEffect)(()=>{r();let n=["connected","disconnected","connecting","reconnecting","reconnected","connectionFailed","connectionError","messageSent","messageReceived"],o=()=>{r()};return n.forEach(i=>{U.addEventListener(i,o)}),Y1.addEventListener("healthIssue",o),Y1.addEventListener("initialized",o),Y1.addEventListener("metricsUpdated",o),U.addEventListener("metricsUpdated",o),()=>{n.forEach(i=>{U.removeEventListener(i,o)}),Y1.removeEventListener("healthIssue",o),Y1.removeEventListener("initialized",o),Y1.removeEventListener("metricsUpdated",o),U.removeEventListener("metricsUpdated",o)}},[r]),t}function Fh(e){let t=U.getStatus(),a=e?t.rooms[e]:null;return{isConnected:a?a.connected:!1,isConnecting:!1,isReconnecting:!1,roomId:a?.roomId||null,connectedAt:a?.connectedAt||null,uptime:a?.uptime||null,latency:a?.latency||null,messagesSent:a?.messagesSent||0,messagesReceived:a?.messagesReceived||0,queuedMessages:a?.queueSize||0,status:a?.connected?"connected":"disconnected",error:null,reconnectAttempts:a?.reconnectAttempts||0,lastActivity:a?.lastActivity||null}}function Yh(e,t){return e?e.reconnecting?"reconnecting":e.connected?"connected":e.status==="connecting"?"connecting":"disconnected":t?"disconnected":"error"}var Uu=F8;var UR=x(z(),1),A4=x(M1(),1);var DR=x(z(),1),M4=x(M1(),1);var U2=x(L(),1),Pu=({roundNumber:e,starter:t,starterReason:a})=>(0,U2.jsxs)("div",{className:"rs-content",children:[(0,U2.jsxs)("div",{className:"rs-round-section",children:[(0,U2.jsx)("div",{className:"rs-round-label",children:"Round"}),(0,U2.jsx)("div",{className:"rs-round-number",children:e})]}),(0,U2.jsxs)("div",{className:"rs-starter-section",children:[(0,U2.jsx)("div",{className:"rs-starter-label",children:"Starter"}),(0,U2.jsx)("div",{className:"rs-starter-name",children:t}),a==="has_general_red"?(0,U2.jsx)("div",{className:"rs-general-piece",children:(0,U2.jsx)(q,{piece:{kind:"GENERAL",color:"red",value:14},size:"large",showValue:!1})}):(0,U2.jsx)("div",{className:"rs-starter-reason",children:(()=>{switch(a){case"has_general_red":return"has the General Red piece";case"won_last_turn":return"won the last turn";case"accepted_redeal":return"accepted the redeal";default:return"starts this round"}})()})]}),(0,U2.jsx)("div",{className:"rs-timer-section",children:(0,U2.jsx)(x3,{duration:5,prefix:"Starting in",onComplete:()=>{},variant:"inline"})})]});Pu.propTypes={roundNumber:M4.default.number.isRequired,starter:M4.default.string.isRequired,starterReason:M4.default.string.isRequired};var Bu=Pu;var Vu=x(L(),1);function Y8({roundNumber:e=1,starter:t="",starterReason:a="default"}){return(0,Vu.jsx)(Bu,{roundNumber:e,starter:t,starterReason:a})}Y8.propTypes={roundNumber:A4.default.number.isRequired,starter:A4.default.string.isRequired,starterReason:A4.default.oneOf(["has_general_red","won_last_turn","accepted_redeal","default"]).isRequired};Y8.defaultProps={roundNumber:1,starter:"",starterReason:"default"};var Gu=Y8;var IR=x(z(),1),y2=x(M1(),1);var D4=x(z(),1),v2=x(M1(),1);var P1=x(L(),1),ju=({winner:e="",winningPieces:t=[],playerPlays:a=[],myName:r="",turnNumber:n=1,roundNumber:o=1,isLastTurn:i=!1,nextStarter:l="",starterPlayType:s="",starterName:c="",onContinue:f})=>{let[d,u]=(0,D4.useState)(new Set),m=s||(()=>{let C=a.find(g=>g.playerName===c||g.playerName===e),p=C?S3(C.pieces):"";return console.log("[TurnResultsContent] Calculating starter play type:",{starterPlayType:s,starterName:c,winner:e,starterPlay:C,calculatedType:p}),p})();(0,D4.useEffect)(()=>{let C=setTimeout(()=>{let p={};a.forEach(h=>{p[h.playerName]=h.pieces}),console.log("[TurnResultsContent] Determining pieces to reveal:",{effectiveStarterPlayType:m,starterName:c,winner:e,playerPiecesMap:p});let g=L4(p,m,c||e);console.log("[TurnResultsContent] Pieces to reveal:",g),u(g)},I1.TURN_RESULTS_REVEAL_DELAY);return()=>clearTimeout(C)},[a,m,c,e]);let R=i?{starter:`${l} will start Round ${o+1}`,continue:`Starting Round ${o+1} in`}:{starter:`${l} will start Turn ${n+1}`,continue:"Continuing in"},S=(C,p)=>C===0&&p===0?"pile-status-none":C===p&&p>0?"pile-status-perfect":C>p?"pile-status-over":"pile-status-under";return(0,P1.jsxs)(P1.Fragment,{children:[(0,P1.jsx)("div",{className:"tr-players-summary",children:(0,P1.jsx)("div",{className:"tr-player-list",children:a.map(C=>{let p=C.playerName===e,g=C.pieces.length,h=g>3;return(0,P1.jsxs)("div",{className:`tr-player-row ${p?"winner":""}`,children:[(0,P1.jsxs)("div",{className:"tr-player-info",children:[(0,P1.jsx)("div",{className:"tr-player-name",children:C.playerName}),(0,P1.jsxs)("div",{className:`tr-player-piles ${S(C.player?.captured_piles||0,C.player?.declared||0)}`,children:[C.player?.captured_piles||0,"/",C.player?.declared||0," piles"]})]}),(0,P1.jsx)("div",{className:`tr-played-pieces ${h?"two-rows":""}`,children:g===0?(0,P1.jsx)("span",{className:"tr-pass-indicator",children:"Passed"}):h?(0,P1.jsxs)(P1.Fragment,{children:[(0,P1.jsx)("div",{className:"pieces-row",children:C.pieces.slice(0,Math.ceil(g/2)).map((w,_)=>{let N=`${C.playerName}-${_}`,M=d.has(N),V=!M&&d.size>0,B=$0(C.playerName,a.map(G=>({name:G.playerName})))/1e3;return(0,P1.jsx)(q,{piece:w,size:"small",flippable:!0,flipped:M,className:`tr-played-piece ${V?"invalid-play":""}`,animationDelay:M?B:void 0},_)})}),(0,P1.jsx)("div",{className:"pieces-row",children:C.pieces.slice(Math.ceil(g/2)).map((w,_)=>{let N=_+Math.ceil(g/2),M=`${C.playerName}-${N}`,V=d.has(M),B=!V&&d.size>0,G=$0(C.playerName,a.map(j=>({name:j.playerName})))/1e3;return(0,P1.jsx)(q,{piece:w,size:"small",flippable:!0,flipped:V,className:`tr-played-piece ${B?"invalid-play":""}`,animationDelay:V?G:void 0},N)})})]}):C.pieces.map((w,_)=>{let N=`${C.playerName}-${_}`,M=d.has(N),V=!M&&d.size>0,B=$0(C.playerName,a.map(G=>({name:G.playerName})))/1e3;return(0,P1.jsx)(q,{piece:w,size:"medium",flippable:!0,flipped:M,className:`tr-played-piece ${V?"invalid-play":""}`,animationDelay:M?B:void 0},_)})})]},C.playerName)})})}),(0,P1.jsxs)("div",{className:"tr-next-turn-info",children:[(0,P1.jsx)("div",{className:"tr-next-starter",children:R.starter}),(0,P1.jsx)("div",{className:"tr-auto-continue",children:(0,P1.jsx)(x3,{prefix:R.continue,onComplete:f,variant:"inline"})})]})]})};ju.propTypes={winner:v2.default.string,winningPieces:v2.default.array,playerPlays:v2.default.arrayOf(v2.default.shape({playerName:v2.default.string,pieces:v2.default.array,player:v2.default.object})),myName:v2.default.string,turnNumber:v2.default.number,roundNumber:v2.default.number,isLastTurn:v2.default.bool,nextStarter:v2.default.string,starterPlayType:v2.default.string,starterName:v2.default.string,onContinue:v2.default.func};var Fu=ju;var $u=x(L(),1);function Yu({winner:e="",winningPlay:t=null,playerPiles:a={},players:r=[],turnNumber:n=1,roundNumber:o=1,nextStarter:i="",playerName:l="",isLastTurn:s=!1,currentTurnPlays:c=[],onContinue:f}){let d=t?.pieces||[];console.log("[TurnResultsUI] Building playerPlays from currentTurnPlays:",c),c.forEach((S,C)=>{console.log(`[TurnResultsUI] Turn play ${C+1}:`,{player:S.player,hasPieces:!!S.pieces,hasCards:!!S.cards,playType:S.playType||S.play_type,isValid:S.isValid,isStarter:S.isStarter,pieces:S.pieces?JSON.stringify(S.pieces):"null",cards:S.cards?JSON.stringify(S.cards):"null"})});let u=r.map(S=>{let C=c.find(p=>p.player===S.name);return{playerName:S.name,player:S,pieces:C?.pieces||C?.cards||[]}}),m=c.find(S=>S.isStarter||S.player===t?.starter),b=m?.player||e,R=m?.playType||m?.play_type||t?.type||"";return console.log("[TurnResultsUI] Extracting starter info:",{currentTurnPlays:c,starterPlay:m,starterName:b,starterPlayType:R,winningPlay:t}),(0,$u.jsx)(Fu,{winner:e,winningPieces:d,playerPlays:u,myName:l,turnNumber:n,roundNumber:o,isLastTurn:s,nextStarter:i,starterPlayType:R,starterName:b,onContinue:f})}Yu.propTypes={winner:y2.default.string,winningPlay:y2.default.shape({pieces:y2.default.array,value:y2.default.number,type:y2.default.string,pilesWon:y2.default.number}),playerPiles:y2.default.object,players:y2.default.array,turnNumber:y2.default.number,roundNumber:y2.default.number,nextStarter:y2.default.string,playerName:y2.default.string,isLastTurn:y2.default.bool,currentTurnPlays:y2.default.array,onContinue:y2.default.func};var qu=Yu;var rE=x(z(),1),pe=x(M1(),1);var Iu=x(z(),1),Ee=x(M1(),1);var i1=x(L(),1),Xu=({winner:e,finalScores:t,players:a,gameStats:r,onBackToLobby:n})=>{let o=()=>{let f=[],d=["color-1","color-2","color-3","color-4","color-5","color-6"],u=["size-small","size-medium","size-large"];for(let m=0;m<50;m++){let b=d[Math.floor(Math.random()*d.length)],R=u[Math.floor(Math.random()*u.length)],S=Math.random()*100,C=Math.random()*3,p=3+Math.random()*2;f.push((0,i1.jsx)("div",{className:`go-confetti ${b} ${R}`,style:{left:`${S}%`,top:"-20px",animationDelay:`${C}s`,animationDuration:`${p}s`}},m))}return f},i=[...a].sort((f,d)=>{let u=t[f.id]||0;return(t[d.id]||0)-u}),l=f=>{switch(f){case 1:return"\u{1F947}";case 2:return"\u{1F948}";case 3:return"\u{1F949}";default:return null}},s=(0,Iu.useCallback)(()=>{n&&n()},[n]),c=f=>`${Math.floor(f/60)}`;return(0,i1.jsxs)("div",{className:"go-content",children:[(0,i1.jsx)("div",{className:"go-confetti-container",children:o()}),(0,i1.jsx)("div",{className:"go-trophy-container",children:(0,i1.jsx)("div",{className:"go-trophy",children:"\u{1F3C6}"})}),(0,i1.jsxs)("div",{className:"go-winner-section",children:[(0,i1.jsx)("div",{className:"go-winner-name",children:e?.name||"Unknown"}),(0,i1.jsx)("div",{className:"go-winner-subtitle",children:"Champion!"})]}),(0,i1.jsx)("div",{className:"go-rankings-container",children:(0,i1.jsx)("div",{className:"go-rankings",children:i.map((f,d)=>{let u=d+1,m=l(u),b=t[f.id]||0;return(0,i1.jsxs)("div",{className:"go-rank-item",children:[(0,i1.jsx)("div",{className:"go-rank-position",children:u}),m&&(0,i1.jsx)("div",{className:"go-medal",children:m}),(0,i1.jsxs)("div",{className:"go-player-info",children:[(0,i1.jsx)("div",{className:"go-player-name",children:f.name}),(0,i1.jsx)("div",{className:"go-player-score",children:f.perfect_rounds>0?`${f.perfect_rounds} perfect round${f.perfect_rounds>1?"s":""}`:"Aim needs work \u{1F3AF}"})]}),(0,i1.jsx)("div",{className:"go-final-score",children:b})]},f.id)})})}),r&&(0,i1.jsxs)("div",{className:"go-stats",children:[(0,i1.jsx)("div",{className:"go-stats-title",children:"Game Statistics"}),r.duration!==void 0&&(0,i1.jsxs)("div",{className:"go-stat-item",children:[(0,i1.jsx)("span",{className:"go-stat-label",children:"Game Duration"}),(0,i1.jsx)("span",{className:"go-stat-value",children:c(r.duration)})]}),r.totalRounds&&(0,i1.jsxs)("div",{className:"go-stat-item",children:[(0,i1.jsx)("span",{className:"go-stat-label",children:"Rounds Played"}),(0,i1.jsx)("span",{className:"go-stat-value",children:r.totalRounds})]}),r.highestScore!==void 0&&(0,i1.jsxs)("div",{className:"go-stat-item",children:[(0,i1.jsx)("span",{className:"go-stat-label",children:"Highest Score"}),(0,i1.jsx)("span",{className:"go-stat-value",children:r.highestScore})]})]}),(0,i1.jsxs)("div",{className:"go-actions",children:[(0,i1.jsx)("button",{className:"go-action-button primary",onClick:s,children:"Return to Lobby"}),(0,i1.jsx)("button",{className:"go-action-button secondary",disabled:!0,children:"Play Again"})]}),(0,i1.jsx)(x3,{duration:10,prefix:"Returning to lobby in",suffix:"seconds...",onComplete:s,variant:"footer"})]})};Xu.propTypes={winner:Ee.default.shape({id:Ee.default.string,name:Ee.default.string}),finalScores:Ee.default.object.isRequired,players:Ee.default.array.isRequired,gameStats:Ee.default.shape({duration:Ee.default.number,totalRounds:Ee.default.number,highestScore:Ee.default.number}),onBackToLobby:Ee.default.func};var Ku=Xu;var Zu=x(L(),1);function q8({finalRankings:e,gameStats:t,onBackToLobby:a}){let r=e.map(c=>({id:c.name,name:c.name,turns_won:c.turns_won||0,perfect_rounds:c.perfect_rounds||0})),n=e.reduce((c,f)=>(c[f.name]=f.score,c),{}),o=e.find(c=>c.rank===1),i=o?{id:o.name,name:o.name}:null,l={totalRounds:t.total_rounds,duration:t.game_duration?s(t.game_duration):void 0,highestScore:e.length>0?Math.max(...e.map(c=>c.score)):0};function s(c){let f=c.match(/(\d+)\s*min/);return f?parseInt(f[1])*60:0}return(0,Zu.jsx)(Ku,{winner:i,finalScores:n,players:r,gameStats:l,onBackToLobby:a})}q8.propTypes={finalRankings:pe.default.arrayOf(pe.default.shape({name:pe.default.string.isRequired,score:pe.default.number.isRequired,rank:pe.default.number.isRequired})).isRequired,gameStats:pe.default.shape({total_rounds:pe.default.number.isRequired,game_duration:pe.default.string.isRequired}).isRequired,winners:pe.default.arrayOf(pe.default.string),onBackToLobby:pe.default.func.isRequired};q8.defaultProps={winners:[]};var Qu=q8;var lE=x(z(),1),me=x(M1(),1);var R3=x(L(),1),Ju=({children:e,phase:t,roundNumber:a=1,showMultiplier:r=!1,multiplierValue:n=2,playType:o="",currentPlayer:i="",turnRequirement:l=null,winner:s=""})=>{let c=()=>{switch(t){case"preparation":return{title:"Preparation Phase",subtitle:"Dealing cards to all players"};case"declaration":return{title:"Declaration",subtitle:"Choose your target piles"};case"turn":return{title:o?it(o):"Turn Phase",subtitle:i?`Round ${a} \u2022 ${i}'s Turn`:"Play your pieces strategically"};case"turn_results":return{title:"Turn Results",subtitle:s?`${s} wins this turn!`:"See who won this turn"};case"scoring":return{title:"Scoring",subtitle:"Round complete"};case"game_over":return{title:"Game Over",subtitle:"Final results"};default:return{title:"Loading",subtitle:"Please wait..."}}},{title:f,subtitle:d}=c();return(0,R3.jsxs)("div",{className:"gl-game-container",children:[(0,R3.jsxs)("div",{className:"gl-round-indicator",children:["Round ",a]}),(0,R3.jsxs)("div",{className:`gl-multiplier-badge ${r?"show":""}`,children:[n,"x Multiplier"]}),(0,R3.jsxs)("div",{className:"gl-phase-header",children:[(0,R3.jsx)("h1",{className:`gl-phase-title ${t==="turn"&&o?"turn-play-type":""}`,children:f}),(0,R3.jsx)("p",{className:"gl-phase-subtitle",children:d})]}),(0,R3.jsx)("div",{className:"gl-content-section",children:e})]})};Ju.propTypes={children:me.default.node.isRequired,phase:me.default.oneOf(["preparation","declaration","turn","turn_results","scoring","game_over"]).isRequired,roundNumber:me.default.number,showMultiplier:me.default.bool,multiplierValue:me.default.number,playType:me.default.string,currentPlayer:me.default.string,turnRequirement:me.default.shape({type:me.default.string,text:me.default.string}),winner:me.default.string};var lt=Ju;var V1=x(L(),1);function O4({roomId:e,onNavigateToLobby:t}){let a=zu(),r=Hu(),n=Uu(e),o=(0,E3.useMemo)(()=>a.phase!=="preparation"?null:{myHand:a.myHand||[],players:a.players||[],weakHands:a.weakHands||[],redealMultiplier:a.redealMultiplier||1,currentWeakPlayer:a.currentWeakPlayer,isMyDecision:a.isMyDecision||!1,isMyHandWeak:a.isMyHandWeak||!1,handValue:a.handValue||0,highestCardValue:a.highestCardValue||0,simultaneousMode:a.simultaneousMode||!1,weakPlayersAwaiting:a.weakPlayersAwaiting||[],decisionsReceived:a.decisionsReceived||0,decisionsNeeded:a.decisionsNeeded||0,dealingCards:a.dealingCards||!1,onAcceptRedeal:r.acceptRedeal,onDeclineRedeal:r.declineRedeal},[a,r]),i=(0,E3.useMemo)(()=>a.phase!=="round_start"?null:{roundNumber:a.currentRound||1,starter:a.currentStarter||"",starterReason:a.starterReason||"default"},[a]),l=(0,E3.useMemo)(()=>{if(a.phase!=="declaration")return null;let m=a.players||[];a.declarationOrder&&a.declarationOrder.length>0&&(m=a.declarationOrder.map(S=>a.players.find(p=>p.name===S)||{name:S}).filter(S=>S!==void 0));let R=a.players?.find(S=>S.name===a.playerName)?.zero_declares_in_a_row||0;return{myHand:a.myHand||[],declarations:a.declarations||{},players:m,currentTotal:a.currentTotal||0,currentPlayer:a.currentDeclarer||"",myName:a.playerName||"",isMyTurn:a.isMyTurn||!1,validOptions:a.validOptions||[],declarationProgress:a.declarationProgress||{declared:0,total:4},isLastPlayer:a.isLastPlayer||!1,estimatedPiles:a.estimatedPiles||0,handStrength:a.handStrength||0,consecutiveZeros:R,redealMultiplier:a.redealMultiplier||1,onDeclare:r.makeDeclaration}},[a,r]),s=(0,E3.useMemo)(()=>{if(a.phase!=="turn")return null;let m="";if(a.currentTurnPlays&&a.currentTurnPlays.length>0&&a.currentTurnStarter){let S=a.currentTurnPlays.find(C=>C.player===a.currentTurnStarter);if(S){let C=S.playType||S.play_type;C&&C!=="UNKNOWN"&&C!=="unknown"&&(m=C)}}let b=a.pileCounts||a.pile_counts||{},R={};return a.players&&a.players.forEach(S=>{S.name===a.playerName?R[S.name]=a.myHand.length:R[S.name]=S.hand_size||0}),{myHand:a.myHand||[],players:a.players||[],currentPlayer:a.currentPlayer||"",playerName:a.playerName||"",currentTurnPlays:a.currentTurnPlays||[],requiredPieceCount:a.requiredPieceCount,turnNumber:a.currentTurnNumber||1,piecesWonCount:b,previousWinner:a.currentTurnStarter||"",playType:m,declarationData:a.declarations||{},playerHandSizes:R,isMyTurn:a.isMyTurn||!1,canPlayAnyCount:a.canPlayAnyCount||!1,onPlayPieces:r.playPieces,onPass:r.pass}},[a,r]),c=(0,E3.useMemo)(()=>{if(a.phase!=="turn_results")return null;let m=a.allHandsEmpty||!1;return{winner:a.turnWinner||null,winningPlay:a.winningPlay||null,playerPiles:a.playerPiles||{},players:a.players||[],turnNumber:a.currentTurnNumber||a.turnNumber||1,roundNumber:a.currentRound||1,nextStarter:a.nextStarter||null,playerName:a.playerName||"",isLastTurn:m,currentTurnPlays:a.currentTurnPlays||[],onContinue:()=>{console.log("Turn results continue requested")}}},[a,r]),f=(0,E3.useMemo)(()=>a.phase!=="scoring"?null:{players:a.players||[],roundScores:a.roundScores||{},totalScores:a.totalScores||{},redealMultiplier:a.redealMultiplier||1,playersWithScores:a.playersWithScores||[],roundNumber:a.currentRound||1,playerName:a.playerName||"",gameOver:a.gameOver||!1,winners:a.winners||[],onStartNextRound:a.gameOver?null:r.startNextRound},[a,r]),d=(0,E3.useMemo)(()=>({isConnected:n.isConnected,isConnecting:n.isConnecting,isReconnecting:n.isReconnecting,connectionError:n.error,message:qh(a,n),phase:a.phase||"waiting",onRetry:r.triggerRecovery,onCancel:()=>window.location.href="/lobby"}),[a,n,r]),u=(0,E3.useMemo)(()=>a.phase!=="game_over"?null:{finalRankings:a.final_rankings||[],gameStats:a.game_stats||{total_rounds:0,game_duration:"Unknown"},winners:a.winners||[],onBackToLobby:()=>{r.cleanup&&r.cleanup(),t&&t()}},[a,r,t]);return a.error?(0,V1.jsx)(Ye,{children:(0,V1.jsx)(q0,{...d,message:`Error: ${a.error}`,connectionError:a.error})}):!n.isConnected&&!n.isConnecting?(0,V1.jsx)(Ye,{children:(0,V1.jsx)(q0,{...d,message:"Not connected to game"})}):n.isConnecting||n.isReconnecting?(0,V1.jsx)(Ye,{children:(0,V1.jsx)(q0,{...d,message:n.isReconnecting?"Reconnecting to game...":"Connecting to game..."})}):(0,V1.jsx)(Ye,{children:(()=>{switch(a.phase){case"preparation":return(0,V1.jsx)(lt,{phase:"preparation",roundNumber:a.currentRound,showMultiplier:a.redealMultiplier>1,multiplierValue:a.redealMultiplier,children:(0,V1.jsx)(U8,{...o})});case"round_start":return(0,V1.jsx)(lt,{phase:"round_start",roundNumber:a.currentRound,showMultiplier:a.redealMultiplier>1,multiplierValue:a.redealMultiplier,children:(0,V1.jsx)(Gu,{...i})});case"declaration":return(0,V1.jsx)(lt,{phase:"declaration",roundNumber:a.currentRound,showMultiplier:a.redealMultiplier>1,multiplierValue:a.redealMultiplier,children:(0,V1.jsx)(P8,{...l})});case"turn":{let m=(()=>{if(!s)return null;let{currentPlayer:b,playerName:R,requiredPieceCount:S}=s;return b===R?S===0||S===null?{type:"active",text:"Play any number of pieces or pass"}:{type:"active",text:`Must play exactly ${S} piece${S>1?"s":""}`}:{type:"waiting",text:`Waiting for ${b} to play`}})();return(0,V1.jsx)(lt,{phase:"turn",roundNumber:a.currentRound,showMultiplier:a.redealMultiplier>1,multiplierValue:a.redealMultiplier,playType:s?.playType||"",currentPlayer:s?.currentPlayer||"",turnRequirement:m,children:(0,V1.jsx)(B8,{...s})})}case"turn_results":return(0,V1.jsx)(lt,{phase:"turn_results",roundNumber:a.currentRound,showMultiplier:a.redealMultiplier>1,multiplierValue:a.redealMultiplier,winner:a.turnWinner,children:(0,V1.jsx)(qu,{...c})});case"scoring":return(0,V1.jsx)(lt,{phase:"scoring",roundNumber:a.currentRound,showMultiplier:a.redealMultiplier>1,multiplierValue:a.redealMultiplier,children:(0,V1.jsx)(V8,{...f})});case"game_over":return(0,V1.jsx)(lt,{phase:"game_over",roundNumber:a.currentRound,showMultiplier:!1,children:(0,V1.jsx)(Qu,{...u})});case"waiting":default:return(0,V1.jsx)(q0,{...d})}})()})}function qh(e,t){if(!t.isConnected)return"Connecting to game...";if(t.isReconnecting)return"Reconnecting...";switch(e.phase){case"waiting":return"Waiting for game to start...";case"preparation":return"Preparing for next phase...";case"round_start":return"Starting new round...";case"declaration":return"Declaration phase in progress...";case"turn":return"Turn phase in progress...";case"turn_results":return"Showing turn results...";case"scoring":return"Calculating scores...";default:return"Loading game..."}}O4.propTypes={roomId:$8.default.string,onNavigateToLobby:$8.default.func};O4.defaultProps={roomId:null,onNavigateToLobby:null};oa();var Na=x(z(),1);var B4=x(z(),1),ge=x(z(),1),Ra=e=>e.type==="checkbox",Pt=e=>e instanceof Date,N2=e=>e==null,dd=e=>typeof e=="object",K1=e=>!N2(e)&&!Array.isArray(e)&&dd(e)&&!Pt(e),$h=e=>K1(e)&&e.target?Ra(e.target)?e.target.checked:e.target.value:e,Ih=e=>e.substring(0,e.search(/\.\d+(\.|$)/))||e,Xh=(e,t)=>e.has(Ih(t)),Kh=e=>{let t=e.constructor&&e.constructor.prototype;return K1(t)&&t.hasOwnProperty("isPrototypeOf")},K8=typeof window<"u"&&typeof window.HTMLElement<"u"&&typeof document<"u";function b2(e){let t,a=Array.isArray(e),r=typeof FileList<"u"?e instanceof FileList:!1;if(e instanceof Date)t=new Date(e);else if(e instanceof Set)t=new Set(e);else if(!(K8&&(e instanceof Blob||r))&&(a||K1(e)))if(t=a?[]:{},!a&&!Kh(e))t=e;else for(let n in e)e.hasOwnProperty(n)&&(t[n]=b2(e[n]));else return e;return t}var G4=e=>/^\w*$/.test(e),J1=e=>e===void 0,Q8=e=>Array.isArray(e)?e.filter(Boolean):[],Z8=e=>Q8(e.replace(/["|']|\]/g,"").split(/\.|\[/)),P=(e,t,a)=>{if(!t||!K1(e))return a;let r=(G4(t)?[t]:Z8(t)).reduce((n,o)=>N2(n)?n:n[o],e);return J1(r)||r===e?J1(e[t])?a:e[t]:r},Qe=e=>typeof e=="boolean",D1=(e,t,a)=>{let r=-1,n=G4(t)?[t]:Z8(t),o=n.length,i=o-1;for(;++r<o;){let l=n[r],s=a;if(r!==i){let c=e[l];s=K1(c)||Array.isArray(c)?c:isNaN(+n[r+1])?{}:[]}if(l==="__proto__"||l==="constructor"||l==="prototype")return;e[l]=s,e=e[l]}},Wu={BLUR:"blur",FOCUS_OUT:"focusout",CHANGE:"change"},Ne={onBlur:"onBlur",onChange:"onChange",onSubmit:"onSubmit",onTouched:"onTouched",all:"all"},N3={max:"max",min:"min",maxLength:"maxLength",minLength:"minLength",pattern:"pattern",required:"required",validate:"validate"},Qh=ge.default.createContext(null);Qh.displayName="HookFormContext";var Zh=(e,t,a,r=!0)=>{let n={defaultValues:t._defaultValues};for(let o in e)Object.defineProperty(n,o,{get:()=>{let i=o;return t._proxyFormState[i]!==Ne.all&&(t._proxyFormState[i]=!r||Ne.all),a&&(a[i]=!0),e[i]}});return n},Jh=typeof window<"u"?B4.useLayoutEffect:B4.useEffect;var Ze=e=>typeof e=="string",Wh=(e,t,a,r,n)=>Ze(e)?(r&&t.watch.add(e),P(a,e,n)):Array.isArray(e)?e.map(o=>(r&&t.watch.add(o),P(a,o))):(r&&(t.watchAll=!0),a);var ev=(e,t,a,r,n)=>t?{...a[e],types:{...a[e]&&a[e].types?a[e].types:{},[r]:n||!0}}:{},wa=e=>Array.isArray(e)?e:[e],ed=()=>{let e=[];return{get observers(){return e},next:n=>{for(let o of e)o.next&&o.next(n)},subscribe:n=>(e.push(n),{unsubscribe:()=>{e=e.filter(o=>o!==n)}}),unsubscribe:()=>{e=[]}}},X8=e=>N2(e)||!dd(e);function st(e,t){if(X8(e)||X8(t))return e===t;if(Pt(e)&&Pt(t))return e.getTime()===t.getTime();let a=Object.keys(e),r=Object.keys(t);if(a.length!==r.length)return!1;for(let n of a){let o=e[n];if(!r.includes(n))return!1;if(n!=="ref"){let i=t[n];if(Pt(o)&&Pt(i)||K1(o)&&K1(i)||Array.isArray(o)&&Array.isArray(i)?!st(o,i):o!==i)return!1}}return!0}var P2=e=>K1(e)&&!Object.keys(e).length,J8=e=>e.type==="file",_e=e=>typeof e=="function",H4=e=>{if(!K8)return!1;let t=e?e.ownerDocument:0;return e instanceof(t&&t.defaultView?t.defaultView.HTMLElement:HTMLElement)},fd=e=>e.type==="select-multiple",W8=e=>e.type==="radio",tv=e=>W8(e)||Ra(e),I8=e=>H4(e)&&e.isConnected;function av(e,t){let a=t.slice(0,-1).length,r=0;for(;r<a;)e=J1(e)?r++:e[t[r++]];return e}function rv(e){for(let t in e)if(e.hasOwnProperty(t)&&!J1(e[t]))return!1;return!0}function a2(e,t){let a=Array.isArray(t)?t:G4(t)?[t]:Z8(t),r=a.length===1?e:av(e,a),n=a.length-1,o=a[n];return r&&delete r[o],n!==0&&(K1(r)&&P2(r)||Array.isArray(r)&&rv(r))&&a2(e,a.slice(0,-1)),e}var Cd=e=>{for(let t in e)if(_e(e[t]))return!0;return!1};function U4(e,t={}){let a=Array.isArray(e);if(K1(e)||a)for(let r in e)Array.isArray(e[r])||K1(e[r])&&!Cd(e[r])?(t[r]=Array.isArray(e[r])?[]:{},U4(e[r],t[r])):N2(e[r])||(t[r]=!0);return t}function pd(e,t,a){let r=Array.isArray(e);if(K1(e)||r)for(let n in e)Array.isArray(e[n])||K1(e[n])&&!Cd(e[n])?J1(t)||X8(a[n])?a[n]=Array.isArray(e[n])?U4(e[n],[]):{...U4(e[n])}:pd(e[n],N2(t)?{}:t[n],a[n]):a[n]=!st(e[n],t[n]);return a}var ba=(e,t)=>pd(e,t,U4(t)),td={value:!1,isValid:!1},ad={value:!0,isValid:!0},md=e=>{if(Array.isArray(e)){if(e.length>1){let t=e.filter(a=>a&&a.checked&&!a.disabled).map(a=>a.value);return{value:t,isValid:!!t.length}}return e[0].checked&&!e[0].disabled?e[0].attributes&&!J1(e[0].attributes.value)?J1(e[0].value)||e[0].value===""?ad:{value:e[0].value,isValid:!0}:ad:td}return td},gd=(e,{valueAsNumber:t,valueAsDate:a,setValueAs:r})=>J1(e)?e:t?e===""?NaN:e&&+e:a&&Ze(e)?new Date(e):r?r(e):e,rd={isValid:!1,value:null},hd=e=>Array.isArray(e)?e.reduce((t,a)=>a&&a.checked&&!a.disabled?{isValid:!0,value:a.value}:t,rd):rd;function nd(e){let t=e.ref;return J8(t)?t.files:W8(t)?hd(e.refs).value:fd(t)?[...t.selectedOptions].map(({value:a})=>a):Ra(t)?md(e.refs).value:gd(J1(t.value)?e.ref.value:t.value,e)}var nv=(e,t,a,r)=>{let n={};for(let o of e){let i=P(t,o);i&&D1(n,o,i._f)}return{criteriaMode:a,names:[...e],fields:n,shouldUseNativeValidation:r}},P4=e=>e instanceof RegExp,xa=e=>J1(e)?e:P4(e)?e.source:K1(e)?P4(e.value)?e.value.source:e.value:e,od=e=>({isOnSubmit:!e||e===Ne.onSubmit,isOnBlur:e===Ne.onBlur,isOnChange:e===Ne.onChange,isOnAll:e===Ne.all,isOnTouch:e===Ne.onTouched}),id="AsyncFunction",ov=e=>!!e&&!!e.validate&&!!(_e(e.validate)&&e.validate.constructor.name===id||K1(e.validate)&&Object.values(e.validate).find(t=>t.constructor.name===id)),iv=e=>e.mount&&(e.required||e.min||e.max||e.maxLength||e.minLength||e.pattern||e.validate),ld=(e,t,a)=>!a&&(t.watchAll||t.watch.has(e)||[...t.watch].some(r=>e.startsWith(r)&&/^\.\w+/.test(e.slice(r.length)))),Sa=(e,t,a,r)=>{for(let n of a||Object.keys(e)){let o=P(e,n);if(o){let{_f:i,...l}=o;if(i){if(i.refs&&i.refs[0]&&t(i.refs[0],n)&&!r)return!0;if(i.ref&&t(i.ref,i.name)&&!r)return!0;if(Sa(l,t))break}else if(K1(l)&&Sa(l,t))break}}};function sd(e,t,a){let r=P(e,a);if(r||G4(a))return{error:r,name:a};let n=a.split(".");for(;n.length;){let o=n.join("."),i=P(t,o),l=P(e,o);if(i&&!Array.isArray(i)&&a!==o)return{name:a};if(l&&l.type)return{name:o,error:l};if(l&&l.root&&l.root.type)return{name:`${o}.root`,error:l.root};n.pop()}return{name:a}}var lv=(e,t,a,r)=>{a(e);let{name:n,...o}=e;return P2(o)||Object.keys(o).length>=Object.keys(t).length||Object.keys(o).find(i=>t[i]===(!r||Ne.all))},sv=(e,t,a)=>!e||!t||e===t||wa(e).some(r=>r&&(a?r===t:r.startsWith(t)||t.startsWith(r))),cv=(e,t,a,r,n)=>n.isOnAll?!1:!a&&n.isOnTouch?!(t||e):(a?r.isOnBlur:n.isOnBlur)?!e:(a?r.isOnChange:n.isOnChange)?e:!0,uv=(e,t)=>!Q8(P(e,t)).length&&a2(e,t),dv=(e,t,a)=>{let r=wa(P(e,a));return D1(r,"root",t[a]),D1(e,a,r),e},z4=e=>Ze(e);function cd(e,t,a="validate"){if(z4(e)||Array.isArray(e)&&e.every(z4)||Qe(e)&&!e)return{type:a,message:z4(e)?e:"",ref:t}}var I0=e=>K1(e)&&!P4(e)?e:{value:e,message:""},ud=async(e,t,a,r,n,o)=>{let{ref:i,refs:l,required:s,maxLength:c,minLength:f,min:d,max:u,pattern:m,validate:b,name:R,valueAsNumber:S,mount:C}=e._f,p=P(a,R);if(!C||t.has(R))return{};let g=l?l[0]:i,h=j=>{n&&g.reportValidity&&(g.setCustomValidity(Qe(j)?"":j||""),g.reportValidity())},w={},_=W8(i),N=Ra(i),M=_||N,V=(S||J8(i))&&J1(i.value)&&J1(p)||H4(i)&&i.value===""||p===""||Array.isArray(p)&&!p.length,B=ev.bind(null,R,r,w),G=(j,Q,l1,y1=N3.maxLength,R1=N3.minLength)=>{let H=j?Q:l1;w[R]={type:j?y1:R1,message:H,ref:i,...B(j?y1:R1,H)}};if(o?!Array.isArray(p)||!p.length:s&&(!M&&(V||N2(p))||Qe(p)&&!p||N&&!md(l).isValid||_&&!hd(l).isValid)){let{value:j,message:Q}=z4(s)?{value:!!s,message:s}:I0(s);if(j&&(w[R]={type:N3.required,message:Q,ref:g,...B(N3.required,Q)},!r))return h(Q),w}if(!V&&(!N2(d)||!N2(u))){let j,Q,l1=I0(u),y1=I0(d);if(!N2(p)&&!isNaN(p)){let R1=i.valueAsNumber||p&&+p;N2(l1.value)||(j=R1>l1.value),N2(y1.value)||(Q=R1<y1.value)}else{let R1=i.valueAsDate||new Date(p),H=B1=>new Date(new Date().toDateString()+" "+B1),t1=i.type=="time",X=i.type=="week";Ze(l1.value)&&p&&(j=t1?H(p)>H(l1.value):X?p>l1.value:R1>new Date(l1.value)),Ze(y1.value)&&p&&(Q=t1?H(p)<H(y1.value):X?p<y1.value:R1<new Date(y1.value))}if((j||Q)&&(G(!!j,l1.message,y1.message,N3.max,N3.min),!r))return h(w[R].message),w}if((c||f)&&!V&&(Ze(p)||o&&Array.isArray(p))){let j=I0(c),Q=I0(f),l1=!N2(j.value)&&p.length>+j.value,y1=!N2(Q.value)&&p.length<+Q.value;if((l1||y1)&&(G(l1,j.message,Q.message),!r))return h(w[R].message),w}if(m&&!V&&Ze(p)){let{value:j,message:Q}=I0(m);if(P4(j)&&!p.match(j)&&(w[R]={type:N3.pattern,message:Q,ref:i,...B(N3.pattern,Q)},!r))return h(Q),w}if(b){if(_e(b)){let j=await b(p,a),Q=cd(j,g);if(Q&&(w[R]={...Q,...B(N3.validate,Q.message)},!r))return h(Q.message),w}else if(K1(b)){let j={};for(let Q in b){if(!P2(j)&&!r)break;let l1=cd(await b[Q](p,a),g,Q);l1&&(j={...l1,...B(Q,l1.message)},h(l1.message),r&&(w[R]=j))}if(!P2(j)&&(w[R]={ref:g,...j},!r))return w}}return h(!0),w},fv={mode:Ne.onSubmit,reValidateMode:Ne.onChange,shouldFocusError:!0};function Cv(e={}){let t={...fv,...e},a={submitCount:0,isDirty:!1,isReady:!1,isLoading:_e(t.defaultValues),isValidating:!1,isSubmitted:!1,isSubmitting:!1,isSubmitSuccessful:!1,isValid:!1,touchedFields:{},dirtyFields:{},validatingFields:{},errors:t.errors||{},disabled:t.disabled||!1},r={},n=K1(t.defaultValues)||K1(t.values)?b2(t.defaultValues||t.values)||{}:{},o=t.shouldUnregister?{}:b2(n),i={action:!1,mount:!1,watch:!1},l={mount:new Set,disabled:new Set,unMount:new Set,array:new Set,watch:new Set},s,c=0,f={isDirty:!1,dirtyFields:!1,validatingFields:!1,touchedFields:!1,isValidating:!1,isValid:!1,errors:!1},d={...f},u={array:ed(),state:ed()},m=t.criteriaMode===Ne.all,b=y=>E=>{clearTimeout(c),c=setTimeout(y,E)},R=async y=>{if(!t.disabled&&(f.isValid||d.isValid||y)){let E=t.resolver?P2((await N()).errors):await V(r,!0);E!==a.isValid&&u.state.next({isValid:E})}},S=(y,E)=>{!t.disabled&&(f.isValidating||f.validatingFields||d.isValidating||d.validatingFields)&&((y||Array.from(l.mount)).forEach(T=>{T&&(E?D1(a.validatingFields,T,E):a2(a.validatingFields,T))}),u.state.next({validatingFields:a.validatingFields,isValidating:!P2(a.validatingFields)}))},C=(y,E=[],T,O,D=!0,A=!0)=>{if(O&&T&&!t.disabled){if(i.action=!0,A&&Array.isArray(P(r,y))){let $=T(P(r,y),O.argA,O.argB);D&&D1(r,y,$)}if(A&&Array.isArray(P(a.errors,y))){let $=T(P(a.errors,y),O.argA,O.argB);D&&D1(a.errors,y,$),uv(a.errors,y)}if((f.touchedFields||d.touchedFields)&&A&&Array.isArray(P(a.touchedFields,y))){let $=T(P(a.touchedFields,y),O.argA,O.argB);D&&D1(a.touchedFields,y,$)}(f.dirtyFields||d.dirtyFields)&&(a.dirtyFields=ba(n,o)),u.state.next({name:y,isDirty:G(y,E),dirtyFields:a.dirtyFields,errors:a.errors,isValid:a.isValid})}else D1(o,y,E)},p=(y,E)=>{D1(a.errors,y,E),u.state.next({errors:a.errors})},g=y=>{a.errors=y,u.state.next({errors:a.errors,isValid:!1})},h=(y,E,T,O)=>{let D=P(r,y);if(D){let A=P(o,y,J1(T)?P(n,y):T);J1(A)||O&&O.defaultChecked||E?D1(o,y,E?A:nd(D._f)):l1(y,A),i.mount&&R()}},w=(y,E,T,O,D)=>{let A=!1,$=!1,p1={name:y};if(!t.disabled){if(!T||O){(f.isDirty||d.isDirty)&&($=a.isDirty,a.isDirty=p1.isDirty=G(),A=$!==p1.isDirty);let E1=st(P(n,y),E);$=!!P(a.dirtyFields,y),E1?a2(a.dirtyFields,y):D1(a.dirtyFields,y,!0),p1.dirtyFields=a.dirtyFields,A=A||(f.dirtyFields||d.dirtyFields)&&$!==!E1}if(T){let E1=P(a.touchedFields,y);E1||(D1(a.touchedFields,y,T),p1.touchedFields=a.touchedFields,A=A||(f.touchedFields||d.touchedFields)&&E1!==T)}A&&D&&u.state.next(p1)}return A?p1:{}},_=(y,E,T,O)=>{let D=P(a.errors,y),A=(f.isValid||d.isValid)&&Qe(E)&&a.isValid!==E;if(t.delayError&&T?(s=b(()=>p(y,T)),s(t.delayError)):(clearTimeout(c),s=null,T?D1(a.errors,y,T):a2(a.errors,y)),(T?!st(D,T):D)||!P2(O)||A){let $={...O,...A&&Qe(E)?{isValid:E}:{},errors:a.errors,name:y};a={...a,...$},u.state.next($)}},N=async y=>{S(y,!0);let E=await t.resolver(o,t.context,nv(y||l.mount,r,t.criteriaMode,t.shouldUseNativeValidation));return S(y),E},M=async y=>{let{errors:E}=await N(y);if(y)for(let T of y){let O=P(E,T);O?D1(a.errors,T,O):a2(a.errors,T)}else a.errors=E;return E},V=async(y,E,T={valid:!0})=>{for(let O in y){let D=y[O];if(D){let{_f:A,...$}=D;if(A){let p1=l.array.has(A.name),E1=D._f&&ov(D._f);E1&&f.validatingFields&&S([O],!0);let J2=await ud(D,l.disabled,o,m,t.shouldUseNativeValidation&&!E,p1);if(E1&&f.validatingFields&&S([O]),J2[A.name]&&(T.valid=!1,E))break;!E&&(P(J2,A.name)?p1?dv(a.errors,J2,A.name):D1(a.errors,A.name,J2[A.name]):a2(a.errors,A.name))}!P2($)&&await V($,E,T)}}return T.valid},B=()=>{for(let y of l.unMount){let E=P(r,y);E&&(E._f.refs?E._f.refs.every(T=>!I8(T)):!I8(E._f.ref))&&Y4(y)}l.unMount=new Set},G=(y,E)=>!t.disabled&&(y&&E&&D1(o,y,E),!st(B1(),n)),j=(y,E,T)=>Wh(y,l,{...i.mount?o:J1(E)?n:Ze(y)?{[y]:E}:E},T,E),Q=y=>Q8(P(i.mount?o:n,y,t.shouldUnregister?P(n,y,[]):[])),l1=(y,E,T={})=>{let O=P(r,y),D=E;if(O){let A=O._f;A&&(!A.disabled&&D1(o,y,gd(E,A)),D=H4(A.ref)&&N2(E)?"":E,fd(A.ref)?[...A.ref.options].forEach($=>$.selected=D.includes($.value)):A.refs?Ra(A.ref)?A.refs.forEach($=>{(!$.defaultChecked||!$.disabled)&&(Array.isArray(D)?$.checked=!!D.find(p1=>p1===$.value):$.checked=D===$.value||!!D)}):A.refs.forEach($=>$.checked=$.value===D):J8(A.ref)?A.ref.value="":(A.ref.value=D,A.ref.type||u.state.next({name:y,values:b2(o)})))}(T.shouldDirty||T.shouldTouch)&&w(y,D,T.shouldTouch,T.shouldDirty,!0),T.shouldValidate&&X(y)},y1=(y,E,T)=>{for(let O in E){if(!E.hasOwnProperty(O))return;let D=E[O],A=y+"."+O,$=P(r,A);(l.array.has(y)||K1(D)||$&&!$._f)&&!Pt(D)?y1(A,D,T):l1(A,D,T)}},R1=(y,E,T={})=>{let O=P(r,y),D=l.array.has(y),A=b2(E);D1(o,y,A),D?(u.array.next({name:y,values:b2(o)}),(f.isDirty||f.dirtyFields||d.isDirty||d.dirtyFields)&&T.shouldDirty&&u.state.next({name:y,dirtyFields:ba(n,o),isDirty:G(y,A)})):O&&!O._f&&!N2(A)?y1(y,A,T):l1(y,A,T),ld(y,l)&&u.state.next({...a}),u.state.next({name:i.mount?y:void 0,values:b2(o)})},H=async y=>{i.mount=!0;let E=y.target,T=E.name,O=!0,D=P(r,T),A=E1=>{O=Number.isNaN(E1)||Pt(E1)&&isNaN(E1.getTime())||st(E1,P(o,T,E1))},$=od(t.mode),p1=od(t.reValidateMode);if(D){let E1,J2,Ta=E.type?nd(D._f):$h(y),k3=y.type===Wu.BLUR||y.type===Wu.FOCUS_OUT,$d=!iv(D._f)&&!t.resolver&&!P(a.errors,T)&&!D._f.deps||cv(k3,P(a.touchedFields,T),a.isSubmitted,p1,$),I4=ld(T,l,k3);D1(o,T,Ta),k3?(D._f.onBlur&&D._f.onBlur(y),s&&s(0)):D._f.onChange&&D._f.onChange(y);let X4=w(T,Ta,k3),Id=!P2(X4)||I4;if(!k3&&u.state.next({name:T,type:y.type,values:b2(o)}),$d)return(f.isValid||d.isValid)&&(t.mode==="onBlur"?k3&&R():k3||R()),Id&&u.state.next({name:T,...I4?{}:X4});if(!k3&&I4&&u.state.next({...a}),t.resolver){let{errors:l6}=await N([T]);if(A(Ta),O){let Xd=sd(a.errors,r,T),s6=sd(l6,r,Xd.name||T);E1=s6.error,T=s6.name,J2=P2(l6)}}else S([T],!0),E1=(await ud(D,l.disabled,o,m,t.shouldUseNativeValidation))[T],S([T]),A(Ta),O&&(E1?J2=!1:(f.isValid||d.isValid)&&(J2=await V(r,!0)));O&&(D._f.deps&&X(D._f.deps),_(T,J2,E1,X4))}},t1=(y,E)=>{if(P(a.errors,E)&&y.focus)return y.focus(),1},X=async(y,E={})=>{let T,O,D=wa(y);if(t.resolver){let A=await M(J1(y)?y:D);T=P2(A),O=y?!D.some($=>P(A,$)):T}else y?(O=(await Promise.all(D.map(async A=>{let $=P(r,A);return await V($&&$._f?{[A]:$}:$)}))).every(Boolean),!(!O&&!a.isValid)&&R()):O=T=await V(r);return u.state.next({...!Ze(y)||(f.isValid||d.isValid)&&T!==a.isValid?{}:{name:y},...t.resolver||!y?{isValid:T}:{},errors:a.errors}),E.shouldFocus&&!O&&Sa(r,t1,y?D:l.mount),O},B1=y=>{let E={...i.mount?o:n};return J1(y)?E:Ze(y)?P(E,y):y.map(T=>P(E,T))},G2=(y,E)=>({invalid:!!P((E||a).errors,y),isDirty:!!P((E||a).dirtyFields,y),error:P((E||a).errors,y),isValidating:!!P(a.validatingFields,y),isTouched:!!P((E||a).touchedFields,y)}),Je=y=>{y&&wa(y).forEach(E=>a2(a.errors,E)),u.state.next({errors:y?a.errors:{}})},Te=(y,E,T)=>{let O=(P(r,y,{_f:{}})._f||{}).ref,D=P(a.errors,y)||{},{ref:A,message:$,type:p1,...E1}=D;D1(a.errors,y,{...E1,...E,ref:O}),u.state.next({name:y,errors:a.errors,isValid:!1}),T&&T.shouldFocus&&O&&O.focus&&O.focus()},Vt=(y,E)=>_e(y)?u.state.subscribe({next:T=>y(j(void 0,E),T)}):j(y,E,!0),jt=y=>u.state.subscribe({next:E=>{sv(y.name,E.name,y.exact)&&lv(E,y.formState||f,qd,y.reRenderRoot)&&y.callback({values:{...o},...a,...E})}}).unsubscribe,F4=y=>(i.mount=!0,d={...d,...y.formState},jt({...y,formState:d})),Y4=(y,E={})=>{for(let T of y?wa(y):l.mount)l.mount.delete(T),l.array.delete(T),E.keepValue||(a2(r,T),a2(o,T)),!E.keepError&&a2(a.errors,T),!E.keepDirty&&a2(a.dirtyFields,T),!E.keepTouched&&a2(a.touchedFields,T),!E.keepIsValidating&&a2(a.validatingFields,T),!t.shouldUnregister&&!E.keepDefaultValue&&a2(n,T);u.state.next({values:b2(o)}),u.state.next({...a,...E.keepDirty?{isDirty:G()}:{}}),!E.keepIsValid&&R()},a6=({disabled:y,name:E})=>{(Qe(y)&&i.mount||y||l.disabled.has(E))&&(y?l.disabled.add(E):l.disabled.delete(E))},q4=(y,E={})=>{let T=P(r,y),O=Qe(E.disabled)||Qe(t.disabled);return D1(r,y,{...T||{},_f:{...T&&T._f?T._f:{ref:{name:y}},name:y,mount:!0,...E}}),l.mount.add(y),T?a6({disabled:Qe(E.disabled)?E.disabled:t.disabled,name:y}):h(y,!0,E.value),{...O?{disabled:E.disabled||t.disabled}:{},...t.progressive?{required:!!E.required,min:xa(E.min),max:xa(E.max),minLength:xa(E.minLength),maxLength:xa(E.maxLength),pattern:xa(E.pattern)}:{},name:y,onChange:H,onBlur:H,ref:D=>{if(D){q4(y,E),T=P(r,y);let A=J1(D.value)&&D.querySelectorAll&&D.querySelectorAll("input,select,textarea")[0]||D,$=tv(A),p1=T._f.refs||[];if($?p1.find(E1=>E1===A):A===T._f.ref)return;D1(r,y,{_f:{...T._f,...$?{refs:[...p1.filter(I8),A,...Array.isArray(P(n,y))?[{}]:[]],ref:{type:A.type,name:y}}:{ref:A}}}),h(y,!1,void 0,A)}else T=P(r,y,{}),T._f&&(T._f.mount=!1),(t.shouldUnregister||E.shouldUnregister)&&!(Xh(l.array,y)&&i.action)&&l.unMount.add(y)}}},$4=()=>t.shouldFocusError&&Sa(r,t1,l.mount),jd=y=>{Qe(y)&&(u.state.next({disabled:y}),Sa(r,(E,T)=>{let O=P(r,T);O&&(E.disabled=O._f.disabled||y,Array.isArray(O._f.refs)&&O._f.refs.forEach(D=>{D.disabled=O._f.disabled||y}))},0,!1))},r6=(y,E)=>async T=>{let O;T&&(T.preventDefault&&T.preventDefault(),T.persist&&T.persist());let D=b2(o);if(u.state.next({isSubmitting:!0}),t.resolver){let{errors:A,values:$}=await N();a.errors=A,D=$}else await V(r);if(l.disabled.size)for(let A of l.disabled)D1(D,A,void 0);if(a2(a.errors,"root"),P2(a.errors)){u.state.next({errors:{}});try{await y(D,T)}catch(A){O=A}}else E&&await E({...a.errors},T),$4(),setTimeout($4);if(u.state.next({isSubmitted:!0,isSubmitting:!1,isSubmitSuccessful:P2(a.errors)&&!O,submitCount:a.submitCount+1,errors:a.errors}),O)throw O},Fd=(y,E={})=>{P(r,y)&&(J1(E.defaultValue)?R1(y,b2(P(n,y))):(R1(y,E.defaultValue),D1(n,y,b2(E.defaultValue))),E.keepTouched||a2(a.touchedFields,y),E.keepDirty||(a2(a.dirtyFields,y),a.isDirty=E.defaultValue?G(y,b2(P(n,y))):G()),E.keepError||(a2(a.errors,y),f.isValid&&R()),u.state.next({...a}))},n6=(y,E={})=>{let T=y?b2(y):n,O=b2(T),D=P2(y),A=D?n:O;if(E.keepDefaultValues||(n=T),!E.keepValues){if(E.keepDirtyValues){let $=new Set([...l.mount,...Object.keys(ba(n,o))]);for(let p1 of Array.from($))P(a.dirtyFields,p1)?D1(A,p1,P(o,p1)):R1(p1,P(A,p1))}else{if(K8&&J1(y))for(let $ of l.mount){let p1=P(r,$);if(p1&&p1._f){let E1=Array.isArray(p1._f.refs)?p1._f.refs[0]:p1._f.ref;if(H4(E1)){let J2=E1.closest("form");if(J2){J2.reset();break}}}}for(let $ of l.mount)R1($,P(A,$))}o=b2(A),u.array.next({values:{...A}}),u.state.next({values:{...A}})}l={mount:E.keepDirtyValues?l.mount:new Set,unMount:new Set,array:new Set,disabled:new Set,watch:new Set,watchAll:!1,focus:""},i.mount=!f.isValid||!!E.keepIsValid||!!E.keepDirtyValues,i.watch=!!t.shouldUnregister,u.state.next({submitCount:E.keepSubmitCount?a.submitCount:0,isDirty:D?!1:E.keepDirty?a.isDirty:!!(E.keepDefaultValues&&!st(y,n)),isSubmitted:E.keepIsSubmitted?a.isSubmitted:!1,dirtyFields:D?{}:E.keepDirtyValues?E.keepDefaultValues&&o?ba(n,o):a.dirtyFields:E.keepDefaultValues&&y?ba(n,y):E.keepDirty?a.dirtyFields:{},touchedFields:E.keepTouched?a.touchedFields:{},errors:E.keepErrors?a.errors:{},isSubmitSuccessful:E.keepIsSubmitSuccessful?a.isSubmitSuccessful:!1,isSubmitting:!1})},o6=(y,E)=>n6(_e(y)?y(o):y,E),Yd=(y,E={})=>{let T=P(r,y),O=T&&T._f;if(O){let D=O.refs?O.refs[0]:O.ref;D.focus&&(D.focus(),E.shouldSelect&&_e(D.select)&&D.select())}},qd=y=>{a={...a,...y}},i6={control:{register:q4,unregister:Y4,getFieldState:G2,handleSubmit:r6,setError:Te,_subscribe:jt,_runSchema:N,_focusError:$4,_getWatch:j,_getDirty:G,_setValid:R,_setFieldArray:C,_setDisabledField:a6,_setErrors:g,_getFieldArray:Q,_reset:n6,_resetDefaultValues:()=>_e(t.defaultValues)&&t.defaultValues().then(y=>{o6(y,t.resetOptions),u.state.next({isLoading:!1})}),_removeUnmounted:B,_disableForm:jd,_subjects:u,_proxyFormState:f,get _fields(){return r},get _formValues(){return o},get _state(){return i},set _state(y){i=y},get _defaultValues(){return n},get _names(){return l},set _names(y){l=y},get _formState(){return a},get _options(){return t},set _options(y){t={...t,...y}}},subscribe:F4,trigger:X,register:q4,handleSubmit:r6,watch:Vt,setValue:R1,getValues:B1,reset:o6,resetField:Fd,clearErrors:Je,unregister:Y4,setError:Te,setFocus:Yd,getFieldState:G2};return{...i6,formControl:i6}}function vd(e={}){let t=ge.default.useRef(void 0),a=ge.default.useRef(void 0),[r,n]=ge.default.useState({isDirty:!1,isValidating:!1,isLoading:_e(e.defaultValues),isSubmitted:!1,isSubmitting:!1,isSubmitSuccessful:!1,isValid:!1,submitCount:0,dirtyFields:{},touchedFields:{},validatingFields:{},errors:e.errors||{},disabled:e.disabled||!1,isReady:!1,defaultValues:_e(e.defaultValues)?void 0:e.defaultValues});if(!t.current)if(e.formControl)t.current={...e.formControl,formState:r},e.defaultValues&&!_e(e.defaultValues)&&e.formControl.reset(e.defaultValues,e.resetOptions);else{let{formControl:i,...l}=Cv(e);t.current={...l,formState:r}}let o=t.current.control;return o._options=e,Jh(()=>{let i=o._subscribe({formState:o._proxyFormState,callback:()=>n({...o._formState}),reRenderRoot:!0});return n(l=>({...l,isReady:!0})),o._formState.isReady=!0,i},[o]),ge.default.useEffect(()=>o._disableForm(e.disabled),[o,e.disabled]),ge.default.useEffect(()=>{e.mode&&(o._options.mode=e.mode),e.reValidateMode&&(o._options.reValidateMode=e.reValidateMode)},[o,e.mode,e.reValidateMode]),ge.default.useEffect(()=>{e.errors&&(o._setErrors(e.errors),o._focusError())},[o,e.errors]),ge.default.useEffect(()=>{e.shouldUnregister&&o._subjects.state.next({values:o._getWatch()})},[o,e.shouldUnregister]),ge.default.useEffect(()=>{if(o._proxyFormState.isDirty){let i=o._getDirty();i!==r.isDirty&&o._subjects.state.next({isDirty:i})}},[o,r.isDirty]),ge.default.useEffect(()=>{e.values&&!st(e.values,a.current)?(o._reset(e.values,o._options.resetOptions),a.current=e.values,n(i=>({...i}))):o._resetDefaultValues()},[o,e.values]),ge.default.useEffect(()=>{o._state.mount||(o._setValid(),o._state.mount=!0),o._state.watch&&(o._state.watch=!1,o._subjects.state.next({...o._formState})),o._removeUnmounted()}),t.current.formState=Zh(r,o),t.current}var ZE=x(z(),1);var yd='data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512" version="1.1"><path d="" stroke="none" fill="%23080404" fill-rule="evenodd"/><path d="M 177.445 62.899 C 151.832 73.662, 150.745 74.214, 148.542 77.576 C 145.057 82.896, 144.957 85.557, 147.616 102.376 C 149.118 111.871, 149.949 120.425, 149.638 123.182 C 148.567 132.686, 142.248 141.221, 132.778 145.953 C 125.259 149.710, 120.906 149.840, 101.312 146.890 C 92.921 145.627, 85.650 145.031, 83.517 145.431 C 76.786 146.694, 74.720 149.829, 64.366 174.500 C 50.605 207.291, 50.577 207.088, 70.910 222.467 C 86.569 234.310, 88.178 235.888, 90.922 242.091 C 95.287 251.957, 94.310 264.146, 88.454 272.915 C 87.136 274.887, 79.890 281.225, 72.350 287 C 55.884 299.611, 54.536 301.233, 54.672 308.275 C 54.754 312.526, 56.564 317.684, 64.376 335.935 C 69.778 348.554, 75.118 359.558, 76.583 361.087 C 81.079 365.779, 85.258 366.153, 102.696 363.422 C 121.493 360.479, 123.461 360.452, 130.389 363.044 C 139.775 366.556, 148.250 377.227, 149.619 387.256 C 149.963 389.775, 149.150 398.222, 147.620 408.032 C 144.769 426.307, 145.024 429.751, 149.562 434.290 C 151.028 435.756, 161.680 440.909, 174.799 446.498 C 206.779 460.124, 207.744 460.020, 221.798 441.459 C 236.461 422.094, 240.899 418.838, 253.529 418.173 C 268.100 417.407, 274.184 421.175, 287.834 439.419 C 299.622 455.174, 301.260 456.506, 308.823 456.483 C 313.717 456.468, 317.534 455.186, 336.500 447.184 C 359.596 437.440, 364.073 434.538, 365.640 428.299 C 366.028 426.754, 365.516 420.121, 364.498 413.500 C 361.585 394.551, 361.414 386.112, 363.835 380.641 C 366.791 373.957, 371.470 368.606, 376.980 365.607 C 385.286 361.086, 389.500 360.824, 407.655 363.700 C 434.016 367.875, 433.902 367.953, 447.161 336.500 C 455 317.903, 456.439 313.649, 456.467 309 C 456.512 301.531, 454.680 299.225, 438.801 286.769 C 421.496 273.193, 419.500 269.951, 419.500 255.422 C 419.500 245.938, 419.679 245.053, 422.541 240.424 C 424.758 236.839, 429.327 232.631, 439.393 224.905 C 446.989 219.075, 454.145 212.820, 455.294 211.004 C 459.161 204.896, 458.287 200.765, 447.991 176.500 C 442.857 164.400, 437.990 153.462, 437.176 152.192 C 436.361 150.923, 433.885 148.962, 431.673 147.833 C 427.189 145.546, 426.669 145.559, 403.500 148.535 C 390.324 150.227, 389.166 150.234, 383.816 148.658 C 377.163 146.697, 370.677 142.053, 366.797 136.471 C 361.295 128.557, 360.728 121.555, 363.868 100.311 C 365.956 86.183, 365.643 81.715, 362.243 77.077 C 360.892 75.236, 353.809 71.655, 337.426 64.533 C 316.789 55.561, 313.901 54.566, 308.500 54.568 C 304.380 54.569, 301.647 55.138, 299.779 56.381 C 298.282 57.377, 292.722 64.264, 287.422 71.686 C 274.783 89.385, 269.383 92.982, 255.428 92.994 C 247.708 93.002, 241.322 90.823, 236.194 86.434 C 233.972 84.532, 227.870 77.195, 222.633 70.129 C 207.972 50.346, 207.500 50.270, 177.445 62.899 M 238.334 155.410 C 186.946 165.242, 151.338 210.205, 154.317 261.500 C 157.566 317.449, 204.890 360.306, 260.500 357.661 C 273.773 357.029, 281.142 355.513, 292.821 351.009 C 333.446 335.342, 359.988 294.538, 357.618 251.393 C 355.036 204.397, 322.404 165.838, 277.295 156.483 C 266.449 154.233, 247.246 153.705, 238.334 155.410 M 248.500 204.980 C 234.084 207.280, 219.162 217.081, 212.304 228.755 C 191.619 263.965, 215.737 307.334, 256 307.331 C 291.889 307.328, 316.691 271.431, 304.021 237.828 C 295.575 215.426, 271.671 201.283, 248.500 204.980" stroke="none" fill="%23040404" fill-rule="evenodd"/></svg>';var e6=x(L(),1),mv=({onClick:e})=>(0,e6.jsx)("button",{className:"settings-button",onClick:e,"aria-label":"Settings",children:(0,e6.jsx)("img",{src:yd,alt:"Settings",className:"settings-icon"})}),bd=mv;var Ea=x(z(),1);var C1=x(L(),1),gv=({isOpen:e,onClose:t})=>{let{currentTheme:a,changeTheme:r}=Ge(),[n,o]=(0,Ea.useState)(a.id),i=[we.classic,we.medieval];(0,Ea.useEffect)(()=>{o(a.id)},[a]);let l=d=>{o(d)},s=()=>{n!==a.id&&r(n),t()},c=()=>{o(a.id),t()},f=d=>{d.target===d.currentTarget&&c()};return(0,Ea.useEffect)(()=>{let d=u=>{u.key==="Escape"&&e&&c()};return document.addEventListener("keydown",d),()=>document.removeEventListener("keydown",d)},[e]),e?(0,C1.jsx)("div",{className:"settings-modal-overlay",onClick:f,children:(0,C1.jsxs)("div",{className:"settings-modal",children:[(0,C1.jsxs)("div",{className:"settings-modal-header",children:[(0,C1.jsx)("h2",{className:"settings-modal-title",children:"Settings"}),(0,C1.jsx)("button",{className:"settings-modal-close",onClick:c,"aria-label":"Close settings",children:(0,C1.jsx)("svg",{className:"modal-close-icon",viewBox:"0 0 20 20",fill:"currentColor",children:(0,C1.jsx)("path",{fillRule:"evenodd",d:"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z",clipRule:"evenodd"})})})]}),(0,C1.jsxs)("div",{className:"settings-modal-body",children:[(0,C1.jsxs)("div",{className:"settings-section",children:[(0,C1.jsx)("h3",{className:"settings-section-title",children:"Theme"}),(0,C1.jsx)("div",{className:"theme-options",children:i.map(d=>(0,C1.jsxs)("div",{className:`theme-option ${n===d.id?"active":""}`,onClick:()=>l(d.id),children:[(0,C1.jsxs)("div",{className:"theme-option-preview",children:[(0,C1.jsx)("img",{src:d.pieceAssets.GENERAL_RED,alt:"Red General",className:"piece-preview"}),(0,C1.jsx)("img",{src:d.pieceAssets.GENERAL_BLACK,alt:"Black General",className:"piece-preview"})]}),(0,C1.jsxs)("div",{className:"theme-option-info",children:[(0,C1.jsx)("div",{className:"theme-option-name",children:d.name}),(0,C1.jsx)("div",{className:"theme-option-desc",children:d.description})]}),n===d.id&&(0,C1.jsx)("div",{className:"theme-option-check",children:(0,C1.jsx)("svg",{className:"check-icon",viewBox:"0 0 20 20",fill:"currentColor",children:(0,C1.jsx)("path",{fillRule:"evenodd",d:"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z",clipRule:"evenodd"})})})]},d.id))})]}),(0,C1.jsxs)("div",{className:"settings-section",children:[(0,C1.jsx)("h3",{className:"settings-section-title",children:"Other Settings"}),(0,C1.jsxs)("div",{className:"settings-placeholder",children:["More settings coming soon...",(0,C1.jsx)("br",{}),"(Sound, Animations, etc.)"]})]})]}),(0,C1.jsxs)("div",{className:"settings-modal-footer",children:[(0,C1.jsx)("button",{className:"btn-modal btn-cancel",onClick:c,children:"Cancel"}),(0,C1.jsx)("button",{className:"btn-modal btn-apply",onClick:s,children:"Apply"})]})]})}):null},xd=gv;var s1=x(L(),1),hv=()=>{let e=R2(),t=de(),{currentTheme:a}=Ge(),[r,n]=(0,Na.useState)(!1),[o,i]=(0,Na.useState)(!1),{register:l,handleSubmit:s,formState:{errors:c},setValue:f,watch:d}=vd({defaultValues:{playerName:t.playerName||""}}),u=d("playerName");(0,Na.useEffect)(()=>{t.playerName&&f("playerName",t.playerName)},[t.playerName,f]);let m=async R=>{n(!0);try{t.updatePlayerName(R.playerName),e("/lobby")}catch(S){console.error("Failed to set player name:",S)}finally{n(!1)}},b=()=>{t.playerName&&e("/lobby")};return(0,s1.jsxs)(s1.Fragment,{children:[(0,s1.jsx)(je,{title:"Liap TUI - Welcome",showConnection:!1,showHeader:!1,children:(0,s1.jsx)("div",{className:"min-h-screen flex items-center justify-center",style:{background:"var(--gradient-gray)"},children:(0,s1.jsxs)("div",{className:"sp-game-container",children:[(0,s1.jsx)(bd,{onClick:()=>i(!0)}),(0,s1.jsxs)("div",{className:"sp-content-wrapper",children:[(0,s1.jsxs)("div",{className:"sp-game-icon",children:[(0,s1.jsx)("div",{className:"sp-icon-circle",children:(0,s1.jsx)("img",{src:a.uiElements.startIcon.main,alt:"Game icon"})}),(0,s1.jsx)("div",{className:"sp-icon-pieces sp-icon-piece-1",children:(0,s1.jsx)("img",{src:a.uiElements.startIcon.piece1,alt:"Red piece"})}),(0,s1.jsx)("div",{className:"sp-icon-pieces sp-icon-piece-2",children:(0,s1.jsx)("img",{src:a.uiElements.startIcon.piece2,alt:"Black piece"})})]}),(0,s1.jsx)("h1",{className:"sp-game-title",children:"Welcome to Liap TUI"}),(0,s1.jsx)("p",{className:"sp-game-subtitle",children:"Enter your player name to start playing"}),(0,s1.jsxs)("form",{onSubmit:s(m),className:"sp-form-container",children:[(0,s1.jsxs)("div",{className:"sp-input-wrapper",children:[(0,s1.jsx)("label",{className:"sp-input-label",children:"Player Name"}),(0,s1.jsx)("input",{type:"text",className:"sp-glowing-input",placeholder:"Enter your name...",...l("playerName",{required:"Player name is required",minLength:{value:2,message:"Name must be at least 2 characters"},maxLength:{value:20,message:"Name must be less than 20 characters"},pattern:{value:/^[a-zA-Z0-9_-]+$/,message:"Only letters, numbers, underscore and dash allowed"}})}),c.playerName?(0,s1.jsxs)("p",{className:"sp-input-error",children:["\u26A0\uFE0F ",c.playerName.message]}):(0,s1.jsx)("p",{className:"sp-input-helper-text",children:"2-20 characters, letters and numbers only"})]}),(0,s1.jsxs)("div",{className:"sp-button-group",children:[(0,s1.jsxs)("button",{type:"submit",className:"btn btn-secondary btn-full",disabled:!u||r,style:{background:"#495057",color:"white"},children:[r&&(0,s1.jsx)("span",{className:"sp-loading-spinner"}),r?"Setting up...":"Enter Lobby"]}),t.playerName&&(0,s1.jsxs)("button",{type:"button",className:"btn btn-secondary btn-full",onClick:b,children:["Continue as ",t.playerName]}),(0,s1.jsx)("div",{style:{height:"1px",background:"rgba(173, 181, 189, 0.2)",margin:"4px 0"}}),(0,s1.jsx)("button",{type:"button",className:"btn btn-danger btn-full",onClick:()=>e("/tutorial"),style:{background:"#dc3545",color:"white"},children:"How to Play"})]})]})]})]})})}),(0,s1.jsx)(Fe,{isVisible:r,message:"Setting up your profile...",subtitle:"Please wait while we prepare your game session"}),(0,s1.jsx)(xd,{isOpen:o,onClose:()=>i(!1)})]})},wd=hv;var B2=x(z(),1);var F=x(L(),1),vv=()=>{let e=R2(),t=de(),{currentTheme:a}=Ge(),[r,n]=(0,B2.useState)([]),[o,i]=(0,B2.useState)(!1);(0,B2.useEffect)(()=>{console.log("\u{1F504} Rooms state changed:",r.length,"rooms"),console.log("\u{1F4CB} Current rooms:",r)},[r]);let[l,s]=(0,B2.useState)(!1),[c,f]=(0,B2.useState)(!1),[d,u]=(0,B2.useState)(!1),[m,b]=(0,B2.useState)(""),[R,S]=(0,B2.useState)(Date.now());(0,B2.useEffect)(()=>{(async()=>{try{await U.connectToRoom("lobby"),i(!0)}catch(H){console.error("Failed to connect to lobby:",H),i(!1)}})();let j=[],Q=H=>{let t1=H.detail,X=t1.data;console.log("\u{1F3AF} Received room_list_update:",t1),console.log("\u{1F4CA} Room list data structure:",X),console.log("\u{1F3E0} Rooms array:",X?.rooms),console.log("\u{1F522} Rooms count:",X?.rooms?.length||0);let B1=X?.rooms||[];console.log("\u{1F504} Setting rooms state to:",B1),n(B1),S(Date.now()),setTimeout(()=>{console.log("\u{1F4C8} State update check - rooms should now be:",B1.length,"rooms")},100)};U.addEventListener("room_list_update",Q),j.push(()=>U.removeEventListener("room_list_update",Q));let l1=H=>{let t1=H.detail,X=t1.data;console.log("Received room_created:",t1),console.log("\u{1F7E2} Navigation: room_id =",X.room_id,"navigating to:",`/room/${X.room_id}`),X.room_id&&X.room_id!=="lobby"&&c?(console.log("\u2705 Navigating to new room:",X.room_id),f(!1),t.goToRoom(X.room_id),U.disconnectFromRoom("lobby"),e(`/room/${X.room_id}`)):console.log("\u23ED\uFE0F Ignoring room_created event:",{roomId:X.room_id,isCreatingRoom:c,reason:X.room_id==="lobby"?"lobby event":"not creating room"})};U.addEventListener("room_created",l1),j.push(()=>U.removeEventListener("room_created",l1));let y1=H=>{let X=H.detail.data;u(!1),s(!1),X.room_id&&(t.goToRoom(X.room_id),e(`/room/${X.room_id}`))};U.addEventListener("room_joined",y1),j.push(()=>U.removeEventListener("room_joined",y1));let R1=H=>{let t1=H.detail,X=t1.data;f(!1),u(!1),console.error("Lobby error:",t1),alert(X?.message||"An error occurred")};return U.addEventListener("error",R1),j.push(()=>U.removeEventListener("error",R1)),()=>{j.forEach(H=>H()),U.disconnectFromRoom("lobby")}},[c,t,e,d]),(0,B2.useEffect)(()=>{o&&U.send("lobby","get_rooms",{})},[o]);let C=()=>{o&&U.send("lobby","get_rooms",{})},p=()=>{f(!0),setTimeout(()=>{U.send("lobby","create_room",{player_name:t.playerName})},I1.CREATE_ROOM_DELAY)},g=()=>{m.trim()&&U.send("lobby","join_room",{room_id:m.trim(),player_name:t.playerName})},h=G=>{U.send("lobby","join_room",{room_id:G,player_name:t.playerName})},w=G=>{let j=G.players?G.players.filter(l1=>l1!==null).length:G.occupied_slots||0,Q=G.total_slots||4;return!G.started&&j<Q},[_,N]=(0,B2.useState)(!1),M=async()=>{N(!0),C(),setTimeout(()=>{N(!1),S(Date.now());let G=document.querySelector(".lp-refreshIcon");if(G){let j=G.textContent;G.textContent="\u2713",setTimeout(()=>{G.textContent=j},I1.CHECKMARK_DISPLAY_DURATION)}},I1.REFRESH_ANIMATION_DURATION)},V=()=>{let G=Date.now(),j=Math.floor((G-R)/1e3);return j<5?"just now":j<60?`${j}s ago`:`${Math.floor(j/60)}m ago`};(0,B2.useEffect)(()=>{let G=setInterval(()=>{S(j=>j)},1e3);return()=>clearInterval(G)},[]);let B=G=>{let j=G.players?.filter(y1=>y1!==null).length||0,Q=w(G),l1=G.room_id||G.id;return(0,F.jsxs)("div",{className:`lp-roomCard ${Q?"":"lp-full"}`,onClick:()=>Q&&h(l1),children:[(0,F.jsxs)("div",{className:"lp-roomCardHeader",children:[(0,F.jsxs)("div",{className:"lp-roomInfo",children:[(0,F.jsx)("div",{className:"lp-roomId",children:l1}),(0,F.jsxs)("span",{className:"lp-hostName",children:["Host:"," ",G.host_name||G.players?.find(y1=>y1?.is_host)?.name||"Unknown"]})]}),(0,F.jsxs)("div",{className:`lp-roomOccupancy ${j===4?"lp-full":""}`,children:[j,"/4"]})]}),(0,F.jsx)("div",{className:"lp-roomPlayers",children:[0,1,2,3].map(y1=>{let R1=G.players?.[y1];return(0,F.jsx)("div",{className:`lp-playerSlot ${R1?R1.is_bot?"lp-bot":"lp-filled":"lp-empty"}`,children:R1?(0,F.jsxs)("div",{className:"lp-playerSlotContent",children:[(0,F.jsx)(Ce,{name:R1.name||`Bot ${y1+1}`,isBot:R1.is_bot,size:"mini"}),(0,F.jsx)("span",{className:"lp-playerSlotName",children:R1.is_bot?`Bot ${y1+1}`:R1.name})]}):"Empty"},y1)})})]},l1)};return(0,F.jsx)(F.Fragment,{children:(0,F.jsx)(je,{title:"",showConnection:!1,showHeader:!1,children:(0,F.jsx)("div",{className:"min-h-screen flex items-center justify-center",style:{background:"var(--gradient-gray)"},children:(0,F.jsxs)("div",{className:"lp-gameContainer",children:[(0,F.jsxs)("div",{className:"lp-playerInfoBadge",children:[(0,F.jsx)(Ce,{name:t.playerName||"Anonymous",size:"mini",theme:"yellow"}),(0,F.jsx)("span",{children:t.playerName})]}),(0,F.jsxs)("div",{className:`connection-status ${o?"":"disconnected"}`,children:[(0,F.jsx)("span",{className:"status-dot"}),o?"Connected":"Disconnected"]}),(0,F.jsxs)("div",{className:"lp-lobbyHeader",children:[(0,F.jsx)("h1",{className:"lp-lobbyTitle",children:"Game Lobby"}),(0,F.jsx)("p",{className:"lp-lobbySubtitle",children:"Find a room or create your own"})]}),(0,F.jsxs)("div",{className:"lp-actionBar",children:[(0,F.jsxs)("div",{className:"lp-actionButtonsLeft",children:[(0,F.jsxs)("button",{className:"btn btn-success btn-sm",onClick:p,disabled:!o||c,children:[(0,F.jsx)("span",{children:"\u2795"})," ",c?"Creating...":"Create Room"]}),(0,F.jsxs)("button",{className:"btn btn-secondary btn-sm",onClick:()=>s(!0),disabled:!o,children:[(0,F.jsx)("span",{children:"\u{1F517}"})," Join by ID"]})]}),(0,F.jsx)("button",{className:`btn btn-secondary btn-sm btn-icon-only ${_?"lp-loading":""}`,onClick:M,disabled:!o||_,title:"Refresh room list",children:(0,F.jsx)("span",{className:"lp-refreshIcon",children:"\u{1F504}"})})]}),(0,F.jsxs)("div",{className:"lp-roomListSection",children:[(0,F.jsxs)("div",{className:"lp-roomListHeader",children:[(0,F.jsxs)("h2",{className:"lp-roomCount",children:["Available Rooms (",r.length,")"]}),(0,F.jsxs)("span",{className:"lp-lastUpdated",children:["Updated: ",V()]})]}),r.length===0?(0,F.jsxs)("div",{className:"lp-emptyState",children:[(0,F.jsx)("div",{className:"lp-emptyIcon",children:(0,F.jsx)("div",{className:"lp-iconCircle",children:(0,F.jsx)("img",{src:a.uiElements.lobbyEmpty,alt:"Empty lobby"})})}),(0,F.jsx)("div",{className:"lp-emptyText",children:"No rooms available right now"})]}):(0,F.jsx)("div",{className:"lp-roomList custom-scrollbar",children:r.map(B)})]}),(0,F.jsx)("div",{className:"lp-footerActions",children:(0,F.jsxs)("button",{className:"btn btn-secondary btn-sm",onClick:()=>e("/"),children:[(0,F.jsx)("span",{children:"\u2190"})," Back to Start Page"]})}),(0,F.jsx)("div",{className:`lp-modalOverlay ${l?"show":""}`,children:(0,F.jsxs)("div",{className:"lp-modalContent",children:[(0,F.jsx)("h3",{className:"lp-modalTitle",children:"Join Room by ID"}),(0,F.jsx)("input",{type:"text",className:"lp-modalInput",placeholder:"Enter Room ID",maxLength:"6",value:m,onChange:G=>b(G.target.value.toUpperCase()),onKeyDown:G=>{G.key==="Enter"&&m.trim()&&g()}}),(0,F.jsxs)("div",{className:"lp-modalButtons",children:[(0,F.jsx)("button",{className:"btn btn-info btn-sm",onClick:g,disabled:!m.trim()||d,children:d?"Joining...":"Join"}),(0,F.jsx)("button",{className:"btn btn-secondary btn-sm",onClick:()=>{s(!1),b("")},children:"Cancel"})]})]})}),(0,F.jsx)("div",{className:`lp-loadingOverlay ${c||d?"show":""}`,children:(0,F.jsx)("div",{className:"lp-loadingSpinner"})})]})})})})},Sd=vv;var Bt=x(z(),1);var SN=x(z(),1),V4=x(M1(),1),Nd=x(L(),1),Rd=({name:e,maxLength:t=8,className:a=""})=>{let r=e.length>t?`${e.substring(0,t-1)}\u2026`:e;return(0,Nd.jsx)("span",{className:`truncated-name ${a}`,title:e,children:r})};Rd.propTypes={name:V4.default.string.isRequired,maxLength:V4.default.number,className:V4.default.string};var Ed=Rd;var e1=x(L(),1),yv=()=>{let e=R2(),{roomId:t}=At(),a=de(),[r,n]=(0,Bt.useState)(null),[o,i]=(0,Bt.useState)(!1),[l,s]=(0,Bt.useState)(!1),c=r?.players?.filter(S=>S!==null).length||0,f=c===4,d=r?.players?.some(S=>S?.name===a.playerName&&S?.is_host)||!1;(0,Bt.useEffect)(()=>{let S=!0,C=async()=>{try{await U.connectToRoom(t,{playerName:a.playerName}),S&&(i(!0),U.send(t,"get_room_state",{room_id:t}))}catch(p){console.error("Failed to connect to room:",p)}};return t&&a.playerName&&C(),()=>{S=!1,t&&U.disconnectFromRoom(t)}},[t,a.playerName]),(0,Bt.useEffect)(()=>{if(!o)return;let S=g=>{let w=g.detail.data;console.log("\u{1F3E0} ROOM_UPDATE: Full data received:",w),console.log("\u{1F3E0} ROOM_UPDATE: Players array:",w.players),console.log("\u{1F3E0} ROOM_UPDATE: Players array type:",typeof w.players),console.log("\u{1F3E0} ROOM_UPDATE: Players array length:",w.players?.length),console.log("\u{1F3E0} ROOM_UPDATE: Players array entries:",Object.entries(w.players||{})),n(w)},C=g=>{let h=g.detail;console.log("Game started, navigating to game page"),e(`/game/${t}`)},p=g=>{let w=g.detail.data;console.log("\u{1F3E0} ROOM_CLOSED: Room was closed, navigating to lobby"),console.log("\u{1F3E0} ROOM_CLOSED: Reason:",w.reason),console.log("\u{1F3E0} ROOM_CLOSED: Message:",w.message),e("/lobby")};return U.addEventListener("room_update",S),U.addEventListener("game_started",C),U.addEventListener("room_closed",p),()=>{U.removeEventListener("room_update",S),U.removeEventListener("game_started",C),U.removeEventListener("room_closed",p)}},[o,t,e]);let u=()=>{console.log("\u{1F3AE} START_GAME: Button clicked"),console.log("\u{1F3AE} START_GAME: Room ID:",t),s(!0),U.send(t,"start_game",{})},m=S=>{console.log("\u{1F916} ADD_BOT: Button clicked for slot",S),console.log("\u{1F916} ADD_BOT: Sending to room",t),U.send(t,"add_bot",{slot_id:S})},b=S=>{console.log("\u{1F5D1}\uFE0F REMOVE_PLAYER: Button clicked for player",S),console.log("\u{1F5D1}\uFE0F REMOVE_PLAYER: Sending to room",t),U.send(t,"remove_player",{player_id:S})},R=()=>{console.log("\u{1F6AA} LEAVE_ROOM: Button clicked"),console.log("\u{1F6AA} LEAVE_ROOM: Player name:",a.playerName),console.log("\u{1F6AA} LEAVE_ROOM: Room ID:",t),U.send(t,"leave_room",{player_name:a.playerName}),e("/lobby")};return a.playerName?(0,e1.jsx)(je,{title:"",showConnection:!1,showHeader:!1,children:(0,e1.jsx)("div",{className:"min-h-screen flex items-center justify-center",style:{background:"var(--gradient-gray)"},children:(0,e1.jsxs)("div",{className:"rp-gameContainer",children:[(0,e1.jsxs)("div",{className:`connection-status ${o?"":"disconnected"}`,children:[(0,e1.jsx)("span",{className:"status-dot"}),o?"Connected":"Disconnected"]}),(0,e1.jsxs)("div",{className:"rp-roomHeader",children:[(0,e1.jsx)("h1",{className:"rp-roomTitle",children:"Game Room"}),(0,e1.jsxs)("div",{className:"rp-roomIdBadge",children:[(0,e1.jsx)("span",{className:"rp-roomIdLabel",children:"Room ID:"}),(0,e1.jsx)("span",{className:"rp-roomIdValue",children:t})]})]}),(0,e1.jsxs)("div",{className:"rp-playersSection",children:[(0,e1.jsx)("div",{className:"rp-sectionHeader",children:(0,e1.jsxs)("div",{className:`rp-playerCount ${f?"full":""}`,children:[c," / 4"]})}),(0,e1.jsx)("div",{className:"rp-gameTable",children:(0,e1.jsxs)("div",{className:"rp-tableSurface",children:[(0,e1.jsx)("div",{className:"rp-table-wood-grain"}),[1,2,3,4].map(S=>{let C=r?.players?.[S-1],p=!C,g=C?.is_host,h=C?.is_bot,w=C?h?`Bot ${S}`:C.name:"Waiting...";return(0,e1.jsx)("div",{className:`rp-playerSeat rp-position-${S}`,children:(0,e1.jsxs)("div",{className:`rp-playerCard ${p?"rp-empty":"rp-filled"} ${g?"rp-host":""}`,children:[(0,e1.jsxs)("div",{className:"rp-playerInfo",children:[!p&&(0,e1.jsx)(Ce,{name:w,isBot:h,size:"medium",avatarColor:C?.avatar_color}),(0,e1.jsx)(Ed,{name:w,className:"rp-playerName"})]}),g&&(0,e1.jsx)("span",{className:"rp-hostBadge",children:"Host"}),p&&d?(0,e1.jsx)("div",{className:"rp-playerAction",children:(0,e1.jsx)("button",{className:"rp-actionBtn rp-addBotBtn",onClick:()=>m(S),disabled:!o,children:"Add Bot"})}):!g&&d&&(0,e1.jsx)("div",{className:"rp-playerAction",children:(0,e1.jsx)("button",{className:"rp-actionBtn rp-removeBtn",onClick:()=>b(C?.player_id),disabled:!o,children:"Remove"})})]})},S)})]})})]}),(0,e1.jsxs)("div",{className:"rp-gameControls",children:[(0,e1.jsx)("div",{className:`rp-roomStatus ${f?"rp-ready":""}`,children:f?"All players ready!":`Need ${4-c} more player${4-c>1?"s":""} to start`}),(0,e1.jsxs)("div",{className:"rp-controlButtons",children:[d&&(0,e1.jsx)("button",{className:"rp-controlButton rp-startButton",onClick:u,disabled:!o||l||!f,children:l?"Starting...":"Start Game"}),(0,e1.jsx)("button",{className:"rp-controlButton rp-leaveButton",onClick:R,children:"Leave Room"})]})]})]})})}):(0,e1.jsx)(je,{title:"Room Access",children:(0,e1.jsxs)("div",{className:"text-center py-12",children:[(0,e1.jsx)("h2",{className:"text-xl font-semibold text-gray-900 mb-4",children:"Player Name Required"}),(0,e1.jsx)("p",{className:"text-gray-600 mb-6",children:"Please set your player name first."}),(0,e1.jsx)(pa,{onClick:()=>e("/"),children:"Go to Start Page"})]})})},_d=yv;var _a=x(z(),1);oa();var VN=x(z(),1),Ad=x(dn(),1),t6=x(M1(),1);var Td=x(z(),1),ct=x(M1(),1);var _3=x(L(),1),kd=({id:e,type:t="info",title:a,message:r,duration:n=5e3,onClose:o,position:i="top-right"})=>{(0,Td.useEffect)(()=>{if(n>0){let c=setTimeout(()=>{o(e)},n);return()=>clearTimeout(c)}},[e,n,o]);let l=()=>{switch(t){case"disconnect":return"\u{1F50C}";case"reconnect":return"\u{1F517}";case"ai-activated":return"\u{1F916}";case"error":return"\u274C";case"warning":return"\u26A0\uFE0F";case"success":return"\u2705";default:return"\u2139\uFE0F"}};return(0,_3.jsxs)("div",{className:`toast-notification ${(()=>{switch(t){case"disconnect":return"toast--disconnect";case"reconnect":return"toast--reconnect";case"ai-activated":return"toast--ai";case"error":return"toast--error";case"warning":return"toast--warning";case"success":return"toast--success";default:return"toast--info"}})()}`,children:[(0,_3.jsx)("div",{className:"toast-icon",children:l()}),(0,_3.jsxs)("div",{className:"toast-content",children:[a&&(0,_3.jsx)("div",{className:"toast-title",children:a}),(0,_3.jsx)("div",{className:"toast-message",children:r})]}),(0,_3.jsx)("button",{className:"toast-close",onClick:()=>o(e),"aria-label":"Close notification",children:"\xD7"}),n>0&&(0,_3.jsx)("div",{className:"toast-progress",style:{animationDuration:`${n}ms`}})]})};kd.propTypes={id:ct.default.string.isRequired,type:ct.default.oneOf(["info","success","warning","error","disconnect","reconnect","ai-activated"]),title:ct.default.string,message:ct.default.string.isRequired,duration:ct.default.number,onClose:ct.default.func.isRequired,position:ct.default.oneOf(["top-left","top-right","bottom-left","bottom-right"])};var Ld=kd;var Z2=x(z(),1);function bv(){let[e,t]=(0,Z2.useState)([]),a=(0,Z2.useRef)([]),r=(0,Z2.useRef)(null),n=(0,Z2.useRef)(0),o=500,i=()=>(n.current+=1,`toast-${Date.now()}-${n.current}`),l=(0,Z2.useCallback)(f=>{let d=i(),u={id:d,message:f.message,type:f.type||"info",duration:f.duration||5e3,timestamp:Date.now()};return t(m=>[...m,u]),u.duration>0&&setTimeout(()=>{s(d)},u.duration),d},[]),s=(0,Z2.useCallback)(f=>{t(d=>d.filter(u=>u.id!==f))},[]),c=(0,Z2.useCallback)(()=>{t([])},[]);return(0,Z2.useEffect)(()=>{let f=m=>{let b=m.disconnectedPlayers||[],R=b.filter(C=>!a.current.includes(C)),S=a.current.filter(C=>!b.includes(C));R.forEach(C=>{let p=m.gameStartTime,g=Date.now(),h=p?g-p:null,w=p&&h<o;console.log("\u{1F514} Disconnect notification check:",{playerName:C,gameStartTime:p?new Date(p).toISOString():"null",now:new Date(g).toISOString(),timeSinceGameStart:h,GRACE_PERIOD_MS:o,isWithinGracePeriod:w,willShowToast:!w}),w?console.log("\u{1F514} Suppressing disconnect toast for",C,"(within grace period)"):(console.log("\u{1F514} Showing disconnect toast for",C),l({message:`${C} disconnected - AI is now playing for them`,type:"warning",duration:7e3}))}),S.forEach(C=>{l({message:`${C} reconnected and resumed control`,type:"success",duration:5e3})}),m.host!==r.current&&r.current!==null&&l({message:`${m.host} is now the host`,type:"info",duration:5e3}),a.current=[...b],r.current=m.host},d=f1.addListener(f),u=f1.getState();return u.disconnectedPlayers&&(a.current=[...u.disconnectedPlayers]),u.host&&(r.current=u.host),()=>{d()}},[l]),(0,Z2.useEffect)(()=>{let f=u=>{let{playerName:m,isBot:b}=u.detail||{};m&&b&&l({message:`${m} disconnected - AI is now playing for them`,type:"warning",duration:7e3})},d=u=>{let{playerName:m}=u.detail||{};m&&l({message:`${m} reconnected and resumed control`,type:"success",duration:5e3})};return window.addEventListener("player_disconnected",f),window.addEventListener("player_reconnected",d),()=>{window.removeEventListener("player_disconnected",f),window.removeEventListener("player_reconnected",d)}},[l]),{toasts:e,addToast:l,removeToast:s,clearToasts:c}}var Md=bv;var j4=x(L(),1),Dd=({position:e="top-right",maxToasts:t=5})=>{let{toasts:a,removeToast:r}=Md(),n=a.slice(-t);return n.length===0?null:(0,Ad.createPortal)((0,j4.jsx)("div",{className:`toast-container toast-container--${e}`,children:n.map((o,i)=>(0,j4.jsx)("div",{className:"toast-wrapper",style:{animationDelay:`${i*50}ms`},children:(0,j4.jsx)(Ld,{...o,onClose:r})},o.id))}),document.body)};Dd.propTypes={position:t6.default.oneOf(["top-left","top-right","bottom-left","bottom-right"]),maxToasts:t6.default.number};var Od=Dd;var Gt=x(L(),1),xv=()=>{let e=R2(),{roomId:t}=At(),a=de(),r=ya(),n=j8(),o=F8(t),[i,l]=(0,_a.useState)(!1);return(0,_a.useEffect)(()=>((async()=>{try{let c=a.playerName;if(!c){console.error("No player name found, redirecting to start page"),e("/");return}if(t){let f=xe();f&&f.roomId===t&&f.playerName===c&&console.log("\u{1F3AE} GamePage: Recovering session for",c,"in room",t),await Y1.connectToRoom(t,c),l(!0)}}catch(c){console.error("Failed to initialize game:",c),c.message.includes("Room not found")&&e("/lobby")}})(),()=>{t&&Y1.disconnectFromRoom().catch(c=>{console.error("Error disconnecting on unmount:",c)})}),[t,e,a.playerName]),(0,_a.useEffect)(()=>{o.error&&!o.isConnecting&&console.error("Critical connection error:",o.error)},[o.error,o.isConnecting]),!i&&!r.error?(0,Gt.jsx)(Fe,{isVisible:!0,message:"Connecting to game...",subtitle:"Initializing game state and connecting to server"}):(0,Gt.jsx)(Ye,{children:(0,Gt.jsxs)("div",{className:"game-page-wrapper",children:[(0,Gt.jsx)(Od,{position:"top-right",maxToasts:5}),(0,Gt.jsx)(O4,{roomId:t,onNavigateToLobby:()=>e("/lobby")})]})})},zd=xv;var Hd=x(z(),1);var v=x(L(),1),wv=()=>{let e=R2(),{currentTheme:t}=Ge(),[a,r]=(0,Hd.useState)(0),n=7,o={general:{kind:"GENERAL",color:"RED",value:11},advisor:{kind:"ADVISOR",color:"BLACK",value:10},elephant:{kind:"ELEPHANT",color:"RED",value:9},horse:{kind:"HORSE",color:"BLACK",value:8},chariot:{kind:"CHARIOT",color:"RED",value:7},cannon:{kind:"CANNON",color:"BLACK",value:6},soldier1:{kind:"SOLDIER",color:"RED",value:3},soldier2:{kind:"SOLDIER",color:"BLACK",value:2}},i=[{title:"Welcome to Liap!",content:(0,v.jsx)("div",{className:"tutorial-phase",children:(0,v.jsxs)("div",{className:"prep-steps",children:[(0,v.jsxs)("div",{className:"prep-step",children:[(0,v.jsx)("div",{className:"step-number",children:"\u{1F3AE}"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"What is Liap?"}),(0,v.jsx)("p",{className:"step-detail",children:"A strategic trick-taking game where prediction meets skill. Outsmart your opponents by accurately forecasting your victories!"})]})]}),(0,v.jsxs)("div",{className:"prep-step",children:[(0,v.jsx)("div",{className:"step-number",children:"\u{1F4CA}"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"Game Setup"}),(0,v.jsxs)("div",{className:"game-setup-details",children:[(0,v.jsxs)("div",{className:"setup-row",children:[(0,v.jsx)("span",{className:"setup-icon",children:"\u{1F465}"}),(0,v.jsxs)("span",{children:[(0,v.jsx)("strong",{children:"4 Players"})," compete each round"]})]}),(0,v.jsxs)("div",{className:"setup-row",children:[(0,v.jsx)("span",{className:"setup-icon",children:"\u{1F3AF}"}),(0,v.jsxs)("span",{children:["First to ",(0,v.jsx)("strong",{children:"50 Points"})," wins"]})]})]})]})]}),(0,v.jsxs)("div",{className:"prep-step",style:{background:"rgba(255, 193, 7, 0.05)",borderColor:"rgba(255, 193, 7, 0.2)"},children:[(0,v.jsx)("div",{className:"step-number",style:{background:"var(--color-warning)",color:"var(--color-gray-800)"},children:"\u{1F3AF}"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"How to Win"}),(0,v.jsx)("p",{className:"step-detail",children:"Score points by accurately predicting how many tricks (piles) you'll win each round."}),(0,v.jsxs)("div",{className:"key-rule",children:["\u{1F4A1} Remember: It's not about winning the most tricks \u2014 it's about winning ",(0,v.jsx)("strong",{children:"exactly"})," what you predict!"]})]})]})]})})},{title:"Know Your Army",content:(0,v.jsxs)("div",{className:"tutorial-pieces",children:[(0,v.jsxs)("div",{className:"piece-showcase",children:[(0,v.jsxs)("div",{className:"piece-group",children:[(0,v.jsx)("div",{className:"piece-set",children:(0,v.jsx)(q,{piece:o.general,size:"small"})}),(0,v.jsx)("div",{className:"piece-set",children:(0,v.jsx)(q,{piece:{...o.general,color:"BLACK"},size:"small"})})]}),(0,v.jsxs)("div",{className:"piece-group",children:[(0,v.jsxs)("div",{className:"piece-set",children:[(0,v.jsx)(q,{piece:{...o.advisor,color:"RED"},size:"small"}),(0,v.jsx)(q,{piece:{...o.advisor,color:"RED"},size:"small"})]}),(0,v.jsxs)("div",{className:"piece-set",children:[(0,v.jsx)(q,{piece:o.advisor,size:"small"}),(0,v.jsx)(q,{piece:o.advisor,size:"small"})]})]}),(0,v.jsxs)("div",{className:"piece-group",children:[(0,v.jsxs)("div",{className:"piece-set",children:[(0,v.jsx)(q,{piece:o.elephant,size:"small"}),(0,v.jsx)(q,{piece:o.elephant,size:"small"})]}),(0,v.jsxs)("div",{className:"piece-set",children:[(0,v.jsx)(q,{piece:{...o.elephant,color:"BLACK"},size:"small"}),(0,v.jsx)(q,{piece:{...o.elephant,color:"BLACK"},size:"small"})]})]}),(0,v.jsxs)("div",{className:"piece-group",children:[(0,v.jsxs)("div",{className:"piece-set",children:[(0,v.jsx)(q,{piece:{...o.horse,color:"RED"},size:"small"}),(0,v.jsx)(q,{piece:{...o.horse,color:"RED"},size:"small"})]}),(0,v.jsxs)("div",{className:"piece-set",children:[(0,v.jsx)(q,{piece:o.horse,size:"small"}),(0,v.jsx)(q,{piece:o.horse,size:"small"})]})]}),(0,v.jsxs)("div",{className:"piece-group",children:[(0,v.jsxs)("div",{className:"piece-set",children:[(0,v.jsx)(q,{piece:o.chariot,size:"small"}),(0,v.jsx)(q,{piece:o.chariot,size:"small"})]}),(0,v.jsxs)("div",{className:"piece-set",children:[(0,v.jsx)(q,{piece:{...o.chariot,color:"BLACK"},size:"small"}),(0,v.jsx)(q,{piece:{...o.chariot,color:"BLACK"},size:"small"})]})]}),(0,v.jsxs)("div",{className:"piece-group",children:[(0,v.jsxs)("div",{className:"piece-set",children:[(0,v.jsx)(q,{piece:{...o.cannon,color:"RED"},size:"small"}),(0,v.jsx)(q,{piece:{...o.cannon,color:"RED"},size:"small"})]}),(0,v.jsxs)("div",{className:"piece-set",children:[(0,v.jsx)(q,{piece:o.cannon,size:"small"}),(0,v.jsx)(q,{piece:o.cannon,size:"small"})]})]}),(0,v.jsxs)("div",{className:"soldiers-section",children:[(0,v.jsxs)("div",{className:"soldier-row",children:[(0,v.jsx)(q,{piece:{kind:"SOLDIER",color:"RED",value:5},size:"small"}),(0,v.jsx)(q,{piece:{kind:"SOLDIER",color:"RED",value:4},size:"small"}),(0,v.jsx)(q,{piece:{kind:"SOLDIER",color:"RED",value:3},size:"small"}),(0,v.jsx)(q,{piece:{kind:"SOLDIER",color:"RED",value:2},size:"small"}),(0,v.jsx)(q,{piece:{kind:"SOLDIER",color:"RED",value:1},size:"small"})]}),(0,v.jsxs)("div",{className:"soldier-row",children:[(0,v.jsx)(q,{piece:{kind:"SOLDIER",color:"BLACK",value:5},size:"small"}),(0,v.jsx)(q,{piece:{kind:"SOLDIER",color:"BLACK",value:4},size:"small"}),(0,v.jsx)(q,{piece:{kind:"SOLDIER",color:"BLACK",value:3},size:"small"}),(0,v.jsx)(q,{piece:{kind:"SOLDIER",color:"BLACK",value:2},size:"small"}),(0,v.jsx)(q,{piece:{kind:"SOLDIER",color:"BLACK",value:1},size:"small"})]})]})]}),(0,v.jsx)("p",{className:"tutorial-note",children:"Higher value pieces beat lower ones. Same value? First played wins!"})]})},{title:"Phase 1: Preparation",content:(0,v.jsx)("div",{className:"tutorial-phase",children:(0,v.jsxs)("div",{className:"prep-steps",children:[(0,v.jsxs)("div",{className:"prep-step",children:[(0,v.jsx)("div",{className:"step-number",children:"1"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"Deal Phase"}),(0,v.jsx)("p",{className:"step-detail",children:"Each player receives 8 random pieces from the deck. These are your soldiers for this round."})]})]}),(0,v.jsxs)("div",{className:"prep-step weak",children:[(0,v.jsx)("div",{className:"step-number",children:"2"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"Check for Weak Hand"}),(0,v.jsxs)("div",{className:"weak-definition",children:[(0,v.jsxs)("div",{children:["If your strongest piece is only ",(0,v.jsx)(q,{piece:{kind:"ELEPHANT",color:"BLACK",value:9},size:"mini"})," or lower:"]}),(0,v.jsxs)("div",{className:"redeal-option",children:["\u2022 You may request a redeal",(0,v.jsx)("br",{}),"\u2022 All players get new hands",(0,v.jsx)("br",{}),"\u2022 ",(0,v.jsx)("span",{className:"warning",children:"Warning: Reduces your score multiplier!"})]})]})]})]}),(0,v.jsxs)("div",{className:"prep-step starter",children:[(0,v.jsx)("div",{className:"step-number",children:"3"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"Starting Player"}),(0,v.jsxs)("p",{className:"step-detail",children:["The player holding ",(0,v.jsx)(q,{piece:o.general,size:"mini"})," will lead the first trick and set the pace for the round."]})]})]})]})})},{title:"Phase 2: Declaration",content:(0,v.jsx)("div",{className:"tutorial-phase",children:(0,v.jsxs)("div",{className:"prep-steps",children:[(0,v.jsxs)("div",{className:"prep-step",children:[(0,v.jsx)("div",{className:"step-number",children:"1"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"Make Your Prediction"}),(0,v.jsx)("p",{className:"step-detail",children:"Each player declares how many tricks (0-8) they expect to win this round. This is your target score."})]})]}),(0,v.jsxs)("div",{className:"prep-step",style:{background:"rgba(220, 53, 69, 0.05)",borderColor:"rgba(220, 53, 69, 0.2)"},children:[(0,v.jsx)("div",{className:"step-number",style:{background:"var(--color-danger)",color:"white"},children:"!"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"The Forcing Rule"}),(0,v.jsx)("p",{className:"step-detail",children:"Total declarations cannot equal 8! This guarantees competition - not everyone can achieve their goal."}),(0,v.jsxs)("div",{className:"example-box",style:{marginTop:"8px"},children:[(0,v.jsx)("strong",{children:"Example:"})," If 3 players declared 2, 2, 3 (total = 7), the last player CANNOT declare 1"]})]})]})]})})},{title:"Phase 3: Playing",content:(0,v.jsx)("div",{className:"tutorial-phase",children:(0,v.jsxs)("div",{className:"prep-steps",children:[(0,v.jsxs)("div",{className:"prep-step",children:[(0,v.jsx)("div",{className:"step-number",children:"1"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"Leader Plays First"}),(0,v.jsx)("p",{className:"step-detail",children:"The trick leader plays 1-6 pieces. Must be a valid combination (single, pair, three-of-a-kind, or straight)."})]})]}),(0,v.jsxs)("div",{className:"prep-step",children:[(0,v.jsx)("div",{className:"step-number",children:"2"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"Others Follow"}),(0,v.jsx)("p",{className:"step-detail",children:"Each player must play the same number of pieces. You can play invalid combinations to forfeit the trick."})]})]}),(0,v.jsxs)("div",{className:"prep-step",children:[(0,v.jsx)("div",{className:"step-number",children:"3"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"Winner Takes Trick"}),(0,v.jsx)("p",{className:"step-detail",children:"Highest valid play wins all pieces in the trick and leads the next one."})]})]}),(0,v.jsxs)("div",{className:"prep-step",style:{background:"rgba(255, 193, 7, 0.05)",borderColor:"rgba(255, 193, 7, 0.2)"},children:[(0,v.jsx)("div",{className:"step-number",style:{background:"var(--color-warning)",color:"var(--color-gray-800)"},children:"\u{1F4A1}"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"Strategic Forfeit"}),(0,v.jsx)("p",{className:"step-detail",children:"Playing invalid combinations lets you dump unwanted pieces without winning tricks you don't want!"})]})]})]})})},{title:"Valid Play Types",content:(0,v.jsxs)("div",{className:"tutorial-phase",children:[(0,v.jsxs)("div",{className:"play-types-showcase",children:[(0,v.jsxs)("div",{className:"play-type-item",children:[(0,v.jsx)("div",{className:"play-type-visual",children:(0,v.jsx)(q,{piece:o.cannon,size:"small"})}),(0,v.jsxs)("div",{className:"play-type-info",children:[(0,v.jsx)("strong",{children:"Single"}),(0,v.jsx)("p",{className:"step-detail",children:"Any one piece"})]})]}),(0,v.jsxs)("div",{className:"play-type-item",children:[(0,v.jsxs)("div",{className:"play-type-visual",children:[(0,v.jsx)(q,{piece:o.horse,size:"small"}),(0,v.jsx)(q,{piece:o.horse,size:"small"})]}),(0,v.jsxs)("div",{className:"play-type-info",children:[(0,v.jsx)("strong",{children:"Pair"}),(0,v.jsx)("p",{className:"step-detail",children:"Two pieces of same type AND same color"})]})]}),(0,v.jsxs)("div",{className:"play-type-item",children:[(0,v.jsxs)("div",{className:"play-type-visual",children:[(0,v.jsx)(q,{piece:o.soldier1,size:"small"}),(0,v.jsx)(q,{piece:o.soldier1,size:"small"}),(0,v.jsx)(q,{piece:o.soldier1,size:"small"})]}),(0,v.jsxs)("div",{className:"play-type-info",children:[(0,v.jsx)("strong",{children:"Three-of-a-kind"}),(0,v.jsx)("p",{className:"step-detail",children:"Three soldiers only (any combination)"})]})]}),(0,v.jsxs)("div",{className:"play-type-item",children:[(0,v.jsxs)("div",{className:"play-type-visual",children:[(0,v.jsx)(q,{piece:{...o.cannon,color:"RED"},size:"small"}),(0,v.jsx)(q,{piece:o.chariot,size:"small"}),(0,v.jsx)(q,{piece:{...o.horse,color:"RED"},size:"small"})]}),(0,v.jsxs)("div",{className:"play-type-info",children:[(0,v.jsx)("strong",{children:"Straight"}),(0,v.jsx)("p",{className:"step-detail",children:"Consecutive values (all same color)"})]})]})]}),(0,v.jsxs)("div",{className:"prep-step",style:{background:"rgba(255, 193, 7, 0.05)",borderColor:"rgba(255, 193, 7, 0.2)",marginTop:"16px"},children:[(0,v.jsx)("div",{className:"step-number",style:{background:"var(--color-warning)",color:"var(--color-gray-800)"},children:"!"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"Key Rule"}),(0,v.jsx)("p",{className:"step-detail",children:"Only the trick leader needs valid combinations. Others can play any pieces to match the count!"})]})]})]})},{title:"Scoring System",content:(0,v.jsx)("div",{className:"tutorial-phase",children:(0,v.jsxs)("div",{className:"prep-steps",children:[(0,v.jsxs)("div",{className:"prep-step compact",children:[(0,v.jsx)("div",{className:"step-number",children:"\u2713"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"Hit Your Target"}),(0,v.jsxs)("p",{className:"step-detail",children:["Win exactly what you declared = ",(0,v.jsx)("strong",{children:"Tricks + 5 bonus"})]}),(0,v.jsxs)("div",{className:"example-inline",children:["Example: Declare 2, win 2 = 2 + 5 = ",(0,v.jsx)("strong",{children:"+7 points"})]})]})]}),(0,v.jsxs)("div",{className:"prep-step compact",style:{background:"rgba(220, 53, 69, 0.05)",borderColor:"rgba(220, 53, 69, 0.2)"},children:[(0,v.jsx)("div",{className:"step-number",style:{background:"var(--color-danger)",color:"white"},children:"\u2717"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"Miss Your Target"}),(0,v.jsxs)("p",{className:"step-detail",children:["Penalty = ",(0,v.jsx)("strong",{children:"-|difference|"})," between declared and won"]}),(0,v.jsxs)("div",{className:"example-inline",children:["Example: Declare 3, win 1 = -(3-1) = ",(0,v.jsx)("strong",{children:"-2 points"})]})]})]}),(0,v.jsxs)("div",{className:"prep-step",style:{background:"rgba(255, 193, 7, 0.05)",borderColor:"rgba(255, 193, 7, 0.2)"},children:[(0,v.jsx)("div",{className:"step-number",style:{background:"var(--color-warning)",color:"var(--color-gray-800)"},children:"\u{1F48E}"}),(0,v.jsxs)("div",{className:"step-text",children:[(0,v.jsx)("strong",{children:"Special: The 0/0 Strategy"}),(0,v.jsxs)("p",{className:"step-detail",children:["Declaring 0 and winning 0 tricks gives ",(0,v.jsx)("strong",{children:"+3 points"}),". High risk, but saves you when you have a terrible hand!"]})]})]})]})})}],l=()=>{},s=()=>{a<n-1&&(r(a+1),l())},c=()=>{a>0&&(r(a-1),l())},f=m=>{r(m),l()},d=()=>{e("/")},u=()=>{e("/")};return(0,v.jsx)(je,{title:"How to Play",showConnection:!1,showHeader:!1,children:(0,v.jsx)("div",{className:"min-h-screen flex items-center justify-center",style:{background:"var(--gradient-gray)"},children:(0,v.jsxs)("div",{className:"tp-gameContainer",children:[(0,v.jsxs)("div",{className:"tp-tutorialHeader",children:[(0,v.jsx)("button",{className:"tp-backButton",onClick:()=>e("/"),title:"Back to Start",children:(0,v.jsx)("svg",{width:"20",height:"20",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",children:(0,v.jsx)("path",{d:"M19 12H5M12 19l-7-7 7-7"})})}),(0,v.jsx)("h1",{className:"tp-tutorialTitle",children:i[a].title})]}),(0,v.jsxs)("div",{className:"tp-tutorialContent",children:[(0,v.jsx)("div",{className:"tp-slideContainer",children:i.map((m,b)=>(0,v.jsx)("div",{className:`tp-slide ${b===a?"active":""}`,style:{transform:`translateX(${(b-a)*100}%)`},children:(0,v.jsx)("div",{className:"tp-slideContent",children:m.content})},b))}),(0,v.jsx)("div",{className:"tp-navDots",children:i.map((m,b)=>(0,v.jsx)("div",{className:`tp-dot ${b===a?"active":""}`,onClick:()=>f(b)},b))})]}),(0,v.jsxs)("div",{className:"tp-footer",children:[(0,v.jsx)("button",{className:"tp-navArrow",onClick:c,disabled:a===0,title:"Previous",children:(0,v.jsx)("svg",{width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",children:(0,v.jsx)("path",{d:"M15 18l-6-6 6-6"})})}),(0,v.jsxs)("div",{className:"tp-slideCounter",children:[a+1," / ",n]}),a===n-1?(0,v.jsx)("button",{className:"btn btn-primary btn-sm",onClick:u,children:"Start Playing"}):(0,v.jsx)("button",{className:"tp-navArrow",onClick:s,title:"Next",children:(0,v.jsx)("svg",{width:"24",height:"24",viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:"2",children:(0,v.jsx)("path",{d:"M9 18l6-6-6-6"})})}),a<n-1&&(0,v.jsx)("button",{className:"tp-skipButton",onClick:d,children:"Skip tutorial"})]})]})})})},Ud=wv;var W=x(L(),1),Pd=({children:e,requiredData:t=[]})=>{let a=de();if(!t.every(n=>{switch(n){case"playerName":return!!a.playerName;case"roomId":return!!a.currentRoomId;default:return!0}})){if(!a.playerName)return(0,W.jsx)(G0,{to:"/",replace:!0});if(!a.currentRoomId)return(0,W.jsx)(G0,{to:"/lobby",replace:!0})}return e},Sv=({children:e})=>{let t=de(),{roomId:a}=At(),[r,n]=(0,T3.useState)(!0);return(0,T3.useEffect)(()=>{if(!t.playerName||!t.currentRoomId){let o=xe();o&&o.roomId===a&&(console.log("\u{1F3AE} GameRoute: Recovering session data"),t.setPlayerName(o.playerName),t.setCurrentRoomId(o.roomId))}n(!1)},[t,a]),r?(0,W.jsx)(Fe,{isVisible:!0,message:"Checking session...",subtitle:"Please wait while we verify your game session"}):!t.playerName||!t.currentRoomId?(0,W.jsx)(G0,{to:"/",replace:!0}):(0,W.jsx)(jc,{roomId:t.currentRoomId,playerName:t.playerName,children:e})},Rv=({sessionToRecover:e})=>(0,W.jsx)(Z9,{children:(0,W.jsx)(Ev,{sessionToRecover:e})}),Ev=({sessionToRecover:e})=>{let t=R2(),a=de();return(0,T3.useEffect)(()=>{e&&(a.updatePlayerName(e.playerName),console.log("\u{1F3AE} Recovering session, navigating to game:",e.roomId),t(`/game/${e.roomId}`))},[e,t,a]),(0,W.jsxs)(X9,{children:[(0,W.jsx)(h3,{path:"/",element:(0,W.jsx)(wd,{})}),(0,W.jsx)(h3,{path:"/tutorial",element:(0,W.jsx)(Ud,{})}),(0,W.jsx)(h3,{path:"/lobby",element:(0,W.jsx)(Pd,{requiredData:["playerName"],children:(0,W.jsx)(Sd,{})})}),(0,W.jsx)(h3,{path:"/room/:roomId",element:(0,W.jsx)(Pd,{requiredData:["playerName","roomId"],children:(0,W.jsx)(_d,{})})}),(0,W.jsx)(h3,{path:"/game/:roomId",element:(0,W.jsx)(Sv,{children:(0,W.jsx)(zd,{})})}),(0,W.jsx)(h3,{path:"*",element:(0,W.jsx)(G0,{to:"/",replace:!0})})]})},Nv=()=>{let[e,t]=(0,T3.useState)(!1),[a,r]=(0,T3.useState)(null),[n,o]=(0,T3.useState)(null);return(0,T3.useEffect)(()=>((async()=>{try{if(Xc(),await Gc(),r8()){let l=xe();console.log("\u{1F3AE} Found stored session:",l),o(l)}t(!0),console.log("\u{1F3AE} Global services initialized")}catch(l){console.error("Failed to initialize global services:",l),r(l.message)}})(),()=>{Vc(),console.log("\u{1F3AE} Global services cleaned up")}),[]),a?(0,W.jsx)("div",{className:"service-init-overlay",children:(0,W.jsxs)("div",{className:"service-init-container",children:[(0,W.jsx)("h1",{className:"service-error-title",children:"Service Initialization Failed"}),(0,W.jsx)("p",{className:"service-error-message",children:a}),(0,W.jsx)("button",{onClick:()=>window.location.reload(),className:"service-retry-button",children:"Retry"})]})}):e?(0,W.jsx)(Rv,{sessionToRecover:n}):(0,W.jsx)("div",{className:"service-init-overlay",children:(0,W.jsxs)("div",{className:"service-init-container",children:[(0,W.jsx)("div",{className:"service-loading-spinner"}),(0,W.jsx)("p",{className:"service-loading-text",children:"Initializing game services..."})]})})},_v=()=>(0,W.jsx)(Ye,{children:(0,W.jsx)(Qc,{children:(0,W.jsx)(Hc,{children:(0,W.jsx)(Nv,{})})})}),Bd=_v;var Vd=x(L(),1),Tv=document.getElementById("root"),kv=(0,Gd.createRoot)(Tv);kv.render((0,Vd.jsx)(Bd,{}));})();
/*! Bundled license information:

react/cjs/react.production.js:
  (**
   * @license React
   * react.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.production.js:
  (**
   * @license React
   * scheduler.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom.production.js:
  (**
   * @license React
   * react-dom.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-client.production.js:
  (**
   * @license React
   * react-dom-client.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react/cjs/react-jsx-runtime.production.js:
  (**
   * @license React
   * react-jsx-runtime.production.js
   *
   * Copyright (c) Meta Platforms, Inc. and affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-router/dist/development/chunk-NL6KNZEE.mjs:
react-router/dist/development/index.mjs:
  (**
   * react-router v7.6.2
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)
*/
//# sourceMappingURL=bundle.js.map
