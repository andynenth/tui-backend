RecoveryService.ts:66 🔄 RecoveryService: Initialized
ServiceIntegration.ts:79 🔗 ServiceIntegration: Initialized
ServiceIntegration.ts:98 
ServiceIntegration.ts:99 🎯 =============================================
ServiceIntegration.ts:100 🚀 PHASE 1-4 ENTERPRISE ARCHITECTURE STARTING
ServiceIntegration.ts:101 🎯 =============================================
ServiceIntegration.ts:102 🔧 Initializing integrated service layer...
ServiceIntegration.ts:567 ✅ NetworkService integrated
ServiceIntegration.ts:575 ✅ GameService integrated
ServiceIntegration.ts:583 ✅ RecoveryService integrated
ServiceIntegration.ts:594 🩺 Health monitoring started (30000ms interval)
ServiceIntegration.ts:124 
ServiceIntegration.ts:125 ✅ =============================================
ServiceIntegration.ts:126 🎉 PHASE 1-4 ARCHITECTURE FULLY OPERATIONAL!
ServiceIntegration.ts:127 ✅ =============================================
ServiceIntegration.ts:128 🔗 NetworkService: Advanced WebSocket with auto-reconnection
ServiceIntegration.ts:129 🎮 GameService: React hooks with TypeScript state management
ServiceIntegration.ts:130 🛠️ RecoveryService: Automatic error recovery and health monitoring
ServiceIntegration.ts:131 🏢 Enterprise Features: Event sourcing, logging, metrics
ServiceIntegration.ts:132 ✅ Service integration layer initialized successfully
ServiceIntegration.ts:133 
App.jsx:117 🎮 Global services initialized
NetworkService.ts:337 🔗 Connection opened to room lobby
GameService.ts:1264 🎮 State Change: NETWORK_CONNECTED
GameService.ts:1265 Previous: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1267 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:129 🌐 NetworkService: Connected to room lobby
LobbyPage.jsx:45 Received room_list_update: {roomId: 'lobby', data: {…}, message: {…}, timestamp: 1752138541933}
GameService.ts:1264 🎮 State Change: NETWORK_DISCONNECTED
GameService.ts:1265 Previous: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1267 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:171 🌐 NetworkService: Disconnected from room lobby
NetworkService.ts:214 📤 Queued message for lobby: get_rooms (1 queued)
NetworkService.ts:337 🔗 Connection opened to room lobby
GameService.ts:1264 🎮 State Change: NETWORK_CONNECTED
GameService.ts:1265 Previous: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1267 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:129 🌐 NetworkService: Connected to room lobby
LobbyPage.jsx:45 Received room_list_update: {roomId: 'lobby', data: {…}, message: {…}, timestamp: 1752138541946}
GameService.ts:1264 🎮 State Change: NETWORK_DISCONNECTED
GameService.ts:1265 Previous: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1267 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:171 🌐 NetworkService: Disconnected from room lobby
NetworkService.ts:214 📤 Queued message for lobby: get_rooms (1 queued)
NetworkService.ts:337 🔗 Connection opened to room lobby
GameService.ts:1264 🎮 State Change: NETWORK_CONNECTED
GameService.ts:1265 Previous: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1267 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:129 🌐 NetworkService: Connected to room lobby
LobbyPage.jsx:45 Received room_list_update: {roomId: 'lobby', data: {…}, message: {…}, timestamp: 1752138543093}
LobbyPage.jsx:56 Received room_created: {roomId: 'lobby', data: {…}, message: {…}, timestamp: 1752138543184}
LobbyPage.jsx:57 🟢 Navigation: room_id = CC28C0 navigating to: /room/CC28C0
LobbyPage.jsx:61 ✅ Navigating to new room: CC28C0
GameService.ts:1264 🎮 State Change: NETWORK_DISCONNECTED
GameService.ts:1265 Previous: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1267 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:171 🌐 NetworkService: Disconnected from room lobby
NetworkService.ts:214 📤 Queued message for lobby: get_rooms (1 queued)
NetworkService.ts:337 🔗 Connection opened to room lobby
GameService.ts:1264 🎮 State Change: NETWORK_CONNECTED
GameService.ts:1265 Previous: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1267 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:129 🌐 NetworkService: Connected to room lobby
NetworkService.ts:337 🔗 Connection opened to room CC28C0
GameService.ts:1264 🎮 State Change: NETWORK_CONNECTED
GameService.ts:1265 Previous: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1267 Diff: {lastEventSequence: {…}}
NetworkService.ts:129 🌐 NetworkService: Connected to room CC28C0
RoomPage.jsx:61 🏠 ROOM_UPDATE: Full data received: {players: Array(4), host_name: 'Andy', room_id: 'CC28C0', started: false}
RoomPage.jsx:62 🏠 ROOM_UPDATE: Players array: (4) [{…}, {…}, {…}, {…}]
RoomPage.jsx:63 🏠 ROOM_UPDATE: Players array type: object
RoomPage.jsx:64 🏠 ROOM_UPDATE: Players array length: 4
RoomPage.jsx:65 🏠 ROOM_UPDATE: Players array entries: (4) [Array(2), Array(2), Array(2), Array(2)]
RoomPage.jsx:99 🎮 START_GAME: Button clicked
RoomPage.jsx:100 🎮 START_GAME: Room ID: CC28C0
RoomPage.jsx:72 Game started, navigating to game page
GameService.ts:1264 🎮 State Change: NETWORK_DISCONNECTED
GameService.ts:1265 Previous: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1267 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:171 🌐 NetworkService: Disconnected from room CC28C0
ServiceIntegration.ts:157 🔗 Connecting to room CC28C0 as Andy...
RecoveryService.ts:106 🔄 RecoveryService: Initialized tracking for room CC28C0
GameService.ts:1264 🎮 State Change: JOIN_ROOM_INIT
GameService.ts:1265 Previous: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: false, roomId: 'CC28C0', playerName: 'Andy', phase: 'waiting', currentRound: 1, …}
GameService.ts:1267 Diff: {roomId: {…}, playerName: {…}, lastEventSequence: {…}}
GameContext.jsx:36 🚀 GAME_CONTEXT: Phase 1-4 Enterprise Architecture initializing
NetworkService.ts:337 🔗 Connection opened to room CC28C0
GameService.ts:1264 🎮 State Change: NETWORK_CONNECTED
GameService.ts:1265 Previous: {isConnected: false, roomId: 'CC28C0', playerName: 'Andy', phase: 'waiting', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'waiting', currentRound: 1, …}
GameService.ts:1267 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:129 🌐 NetworkService: Connected to room CC28C0
GameService.ts:1264 🎮 State Change: JOIN_ROOM_CONNECTED
GameService.ts:1265 Previous: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'waiting', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'waiting', currentRound: 1, …}
GameService.ts:1267 Diff: {lastEventSequence: {…}}
GameService.ts:99 🎮 GameService: Joined room CC28C0 as Andy
ServiceIntegration.ts:169 ✅ Successfully connected to room CC28C0
GameService.ts:441 🔍 GAME_SERVICE_DEBUG: processGameEvent received multiplier: {eventType: 'phase_change', multiplier: 1, currentMultiplier: 1, phase: 'preparation'}
GameService.ts:588 🔍 GAME_SERVICE_DEBUG: Preparation phase - redeal_multiplier: {fromBackend: 1, setValue: 1}
GameService.ts:1264 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1265 Previous: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'waiting', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1267 Diff: {phase: {…}, players: {…}, myHand: {…}, lastEventSequence: {…}, simultaneousMode: {…}, …}
GameContainer.jsx:43 🔍 GAME_CONTAINER_DEBUG: Preparation props: {phase: 'preparation', redealMultiplier: 1, isMyHandWeak: true, simultaneousMode: true, weakPlayersAwaiting: Array(2), …}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: false, multiplierValue: 1, displayText: 'No multiplier shown'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 1, isMyHandWeak: true, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(2), …}
GameService.ts:441 🔍 GAME_SERVICE_DEBUG: processGameEvent received multiplier: {eventType: 'phase_change', multiplier: 1, currentMultiplier: 1, phase: 'preparation'}
GameService.ts:588 🔍 GAME_SERVICE_DEBUG: Preparation phase - redeal_multiplier: {fromBackend: 1, setValue: 1}
GameService.ts:1264 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1265 Previous: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1267 Diff: {lastEventSequence: {…}, weakPlayersAwaiting: {…}, decisionsReceived: {…}}
GameContainer.jsx:43 🔍 GAME_CONTAINER_DEBUG: Preparation props: {phase: 'preparation', redealMultiplier: 1, isMyHandWeak: true, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: false, multiplierValue: 1, displayText: 'No multiplier shown'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 1, isMyHandWeak: true, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 1, isMyHandWeak: true, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 1, weakPlayersAwaiting: Array(1), isMyDecision: true, shouldShowWaiting: false, …}
PreparationContent.jsx:110 🔍 PREP_DEBUG: Request Redeal clicked {currentMultiplier: 1, decisionsReceived: 1, decisionsNeeded: 2}
GameService.ts:1229 🎮 Action sent: accept_redeal {player_name: 'Andy'}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: false, multiplierValue: 1, displayText: 'No multiplier shown'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 1, isMyHandWeak: true, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 1, weakPlayersAwaiting: Array(1), isMyDecision: true, shouldShowWaiting: false, …}
GameService.ts:441 🔍 GAME_SERVICE_DEBUG: processGameEvent received multiplier: {eventType: 'phase_change', multiplier: 2, currentMultiplier: 1, phase: 'preparation'}
GameService.ts:588 🔍 GAME_SERVICE_DEBUG: Preparation phase - redeal_multiplier: {fromBackend: 2, setValue: 2}
GameService.ts:1264 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1265 Previous: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1267 Diff: {redealMultiplier: {…}, myHand: {…}, lastEventSequence: {…}, weakPlayersAwaiting: {…}, decisionsReceived: {…}, …}
GameContainer.jsx:43 🔍 GAME_CONTAINER_DEBUG: Preparation props: {phase: 'preparation', redealMultiplier: 2, isMyHandWeak: true, simultaneousMode: true, weakPlayersAwaiting: Array(2), …}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: true, multiplierValue: 2, displayText: '2x Multiplier'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 2, isMyHandWeak: true, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(2), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 2, weakPlayersAwaiting: Array(2), isMyDecision: true, shouldShowWaiting: false, …}
PreparationContent.jsx:110 🔍 PREP_DEBUG: Request Redeal clicked {currentMultiplier: 2, decisionsReceived: 0, decisionsNeeded: 2}
GameService.ts:1229 🎮 Action sent: accept_redeal {player_name: 'Andy'}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: true, multiplierValue: 2, displayText: '2x Multiplier'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 2, isMyHandWeak: true, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(2), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 2, weakPlayersAwaiting: Array(2), isMyDecision: true, shouldShowWaiting: false, …}
GameService.ts:441 🔍 GAME_SERVICE_DEBUG: processGameEvent received multiplier: {eventType: 'phase_change', multiplier: 2, currentMultiplier: 2, phase: 'preparation'}
GameService.ts:588 🔍 GAME_SERVICE_DEBUG: Preparation phase - redeal_multiplier: {fromBackend: 2, setValue: 2}
GameService.ts:1264 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1265 Previous: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1267 Diff: {lastEventSequence: {…}, weakPlayersAwaiting: {…}, decisionsReceived: {…}, isMyDecision: {…}}
GameContainer.jsx:43 🔍 GAME_CONTAINER_DEBUG: Preparation props: {phase: 'preparation', redealMultiplier: 2, isMyHandWeak: true, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: true, multiplierValue: 2, displayText: '2x Multiplier'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 2, isMyHandWeak: true, isMyDecision: false, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 1, weakPlayersAwaiting: Array(1), isMyDecision: false, shouldShowWaiting: true, …}
PreparationContent.jsx:110 🔍 PREP_DEBUG: Request Redeal clicked {currentMultiplier: 2, decisionsReceived: 1, decisionsNeeded: 2}
useGameActions.ts:80 ❌ Action acceptRedeal failed: Error: Not your turn to make redeal decision
    at useGameActions.ts:151:15
    at onClick (PreparationContent.jsx:115:23)
    at Jg (react-dom-client.production.js:11858:13)
    at react-dom-client.production.js:12410:5
    at t0 (react-dom-client.production.js:1470:36)
    at Vc (react-dom-client.production.js:11996:3)
    at Dd (react-dom-client.production.js:14699:7)
    at Fw (react-dom-client.production.js:14667:7)
overrideMethod @ hook.js:608
(anonymous) @ useGameActions.ts:80
(anonymous) @ useGameActions.ts:156
onClick @ PreparationContent.jsx:115
Jg @ react-dom-client.production.js:11858
(anonymous) @ react-dom-client.production.js:12410
t0 @ react-dom-client.production.js:1470
Vc @ react-dom-client.production.js:11996
Dd @ react-dom-client.production.js:14699
Fw @ react-dom-client.production.js:14667
GameService.ts:441 🔍 GAME_SERVICE_DEBUG: processGameEvent received multiplier: {eventType: 'phase_change', multiplier: 3, currentMultiplier: 2, phase: 'preparation'}
GameService.ts:588 🔍 GAME_SERVICE_DEBUG: Preparation phase - redeal_multiplier: {fromBackend: 3, setValue: 3}
GameService.ts:1264 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1265 Previous: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1267 Diff: {redealMultiplier: {…}, myHand: {…}, lastEventSequence: {…}, weakPlayersAwaiting: {…}, decisionsReceived: {…}, …}
GameContainer.jsx:43 🔍 GAME_CONTAINER_DEBUG: Preparation props: {phase: 'preparation', redealMultiplier: 3, isMyHandWeak: true, simultaneousMode: true, weakPlayersAwaiting: Array(2), …}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: true, multiplierValue: 3, displayText: '3x Multiplier'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 3, isMyHandWeak: true, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(2), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 2, weakPlayersAwaiting: Array(2), isMyDecision: true, shouldShowWaiting: false, …}
PreparationContent.jsx:110 🔍 PREP_DEBUG: Request Redeal clicked {currentMultiplier: 3, decisionsReceived: 0, decisionsNeeded: 2}
GameService.ts:1229 🎮 Action sent: accept_redeal {player_name: 'Andy'}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: true, multiplierValue: 3, displayText: '3x Multiplier'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 3, isMyHandWeak: true, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(2), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 2, weakPlayersAwaiting: Array(2), isMyDecision: true, shouldShowWaiting: false, …}
GameService.ts:441 🔍 GAME_SERVICE_DEBUG: processGameEvent received multiplier: {eventType: 'phase_change', multiplier: 3, currentMultiplier: 3, phase: 'preparation'}
GameService.ts:588 🔍 GAME_SERVICE_DEBUG: Preparation phase - redeal_multiplier: {fromBackend: 3, setValue: 3}
GameService.ts:1264 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1265 Previous: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1267 Diff: {lastEventSequence: {…}, weakPlayersAwaiting: {…}, decisionsReceived: {…}}
GameContainer.jsx:43 🔍 GAME_CONTAINER_DEBUG: Preparation props: {phase: 'preparation', redealMultiplier: 3, isMyHandWeak: true, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: true, multiplierValue: 3, displayText: '3x Multiplier'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 3, isMyHandWeak: true, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 1, weakPlayersAwaiting: Array(1), isMyDecision: true, shouldShowWaiting: false, …}
GameService.ts:441 🔍 GAME_SERVICE_DEBUG: processGameEvent received multiplier: {eventType: 'phase_change', multiplier: 4, currentMultiplier: 3, phase: 'preparation'}
GameService.ts:588 🔍 GAME_SERVICE_DEBUG: Preparation phase - redeal_multiplier: {fromBackend: 4, setValue: 4}
GameService.ts:1264 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1265 Previous: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1267 Diff: {redealMultiplier: {…}, myHand: {…}, lastEventSequence: {…}, weakPlayersAwaiting: {…}, decisionsReceived: {…}, …}
GameContainer.jsx:43 🔍 GAME_CONTAINER_DEBUG: Preparation props: {phase: 'preparation', redealMultiplier: 4, isMyHandWeak: true, simultaneousMode: true, weakPlayersAwaiting: Array(2), …}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: true, multiplierValue: 4, displayText: '4x Multiplier'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 4, isMyHandWeak: true, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(2), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 2, weakPlayersAwaiting: Array(2), isMyDecision: true, shouldShowWaiting: false, …}
PreparationContent.jsx:110 🔍 PREP_DEBUG: Request Redeal clicked {currentMultiplier: 4, decisionsReceived: 0, decisionsNeeded: 2}
GameService.ts:1229 🎮 Action sent: accept_redeal {player_name: 'Andy'}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: true, multiplierValue: 4, displayText: '4x Multiplier'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 4, isMyHandWeak: true, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(2), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 2, weakPlayersAwaiting: Array(2), isMyDecision: true, shouldShowWaiting: false, …}
GameService.ts:441 🔍 GAME_SERVICE_DEBUG: processGameEvent received multiplier: {eventType: 'phase_change', multiplier: 4, currentMultiplier: 4, phase: 'preparation'}
GameService.ts:588 🔍 GAME_SERVICE_DEBUG: Preparation phase - redeal_multiplier: {fromBackend: 4, setValue: 4}
GameService.ts:1264 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1265 Previous: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1267 Diff: {lastEventSequence: {…}, weakPlayersAwaiting: {…}, decisionsReceived: {…}, isMyDecision: {…}}
GameContainer.jsx:43 🔍 GAME_CONTAINER_DEBUG: Preparation props: {phase: 'preparation', redealMultiplier: 4, isMyHandWeak: true, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: true, multiplierValue: 4, displayText: '4x Multiplier'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 4, isMyHandWeak: true, isMyDecision: false, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 1, weakPlayersAwaiting: Array(1), isMyDecision: false, shouldShowWaiting: true, …}
GameService.ts:441 🔍 GAME_SERVICE_DEBUG: processGameEvent received multiplier: {eventType: 'phase_change', multiplier: 5, currentMultiplier: 4, phase: 'preparation'}
GameService.ts:588 🔍 GAME_SERVICE_DEBUG: Preparation phase - redeal_multiplier: {fromBackend: 5, setValue: 5}
GameService.ts:1264 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1265 Previous: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1267 Diff: {redealMultiplier: {…}, myHand: {…}, lastEventSequence: {…}, weakPlayersAwaiting: {…}, decisionsReceived: {…}, …}
GameContainer.jsx:43 🔍 GAME_CONTAINER_DEBUG: Preparation props: {phase: 'preparation', redealMultiplier: 5, isMyHandWeak: true, simultaneousMode: true, weakPlayersAwaiting: Array(2), …}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: true, multiplierValue: 5, displayText: '5x Multiplier'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 5, isMyHandWeak: true, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(2), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 2, weakPlayersAwaiting: Array(2), isMyDecision: true, shouldShowWaiting: false, …}
GameService.ts:441 🔍 GAME_SERVICE_DEBUG: processGameEvent received multiplier: {eventType: 'phase_change', multiplier: 5, currentMultiplier: 5, phase: 'preparation'}
GameService.ts:588 🔍 GAME_SERVICE_DEBUG: Preparation phase - redeal_multiplier: {fromBackend: 5, setValue: 5}
GameService.ts:1264 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1265 Previous: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1267 Diff: {lastEventSequence: {…}, weakPlayersAwaiting: {…}, decisionsReceived: {…}}
GameContainer.jsx:43 🔍 GAME_CONTAINER_DEBUG: Preparation props: {phase: 'preparation', redealMultiplier: 5, isMyHandWeak: true, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: true, multiplierValue: 5, displayText: '5x Multiplier'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 5, isMyHandWeak: true, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 1, weakPlayersAwaiting: Array(1), isMyDecision: true, shouldShowWaiting: false, …}
PreparationContent.jsx:110 🔍 PREP_DEBUG: Request Redeal clicked {currentMultiplier: 5, decisionsReceived: 1, decisionsNeeded: 2}
GameService.ts:1229 🎮 Action sent: accept_redeal {player_name: 'Andy'}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: true, multiplierValue: 5, displayText: '5x Multiplier'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 5, isMyHandWeak: true, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 1, weakPlayersAwaiting: Array(1), isMyDecision: true, shouldShowWaiting: false, …}
GameService.ts:441 🔍 GAME_SERVICE_DEBUG: processGameEvent received multiplier: {eventType: 'phase_change', multiplier: 6, currentMultiplier: 5, phase: 'preparation'}
GameService.ts:588 🔍 GAME_SERVICE_DEBUG: Preparation phase - redeal_multiplier: {fromBackend: 6, setValue: 6}
GameService.ts:1264 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1265 Previous: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1267 Diff: {redealMultiplier: {…}, myHand: {…}, lastEventSequence: {…}, isMyHandWeak: {…}, handValue: {…}, …}
GameContainer.jsx:43 🔍 GAME_CONTAINER_DEBUG: Preparation props: {phase: 'preparation', redealMultiplier: 6, isMyHandWeak: false, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'preparation', showMultiplier: true, multiplierValue: 6, displayText: '6x Multiplier'}
PreparationContent.jsx:30 🔍 PREP_DEBUG: PreparationContent props: {redealMultiplier: 6, isMyHandWeak: false, isMyDecision: true, simultaneousMode: true, weakPlayersAwaiting: Array(1), …}
PreparationContent.jsx:138 🔍 PREP_DEBUG: Waiting indicator check: {simultaneousMode: true, weakPlayersAwaitingLength: 1, weakPlayersAwaiting: Array(1), isMyDecision: true, shouldShowWaiting: false, …}
GameService.ts:1264 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1265 Previous: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'preparation', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'declaration', currentRound: 1, …}
GameService.ts:1267 Diff: {phase: {…}, declarationOrder: {…}, lastEventSequence: {…}, currentTotal: {…}, declarationProgress: {…}, …}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'declaration', showMultiplier: true, multiplierValue: 6, displayText: '6x Multiplier'}
GameService.ts:1264 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1265 Previous: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'declaration', currentRound: 1, …}
GameService.ts:1266 New: {isConnected: true, roomId: 'CC28C0', playerName: 'Andy', phase: 'declaration', currentRound: 1, …}
GameService.ts:1267 Diff: {currentDeclarer: {…}, isMyTurn: {…}, allowedActions: {…}, validOptions: {…}, lastEventSequence: {…}}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'declaration', showMultiplier: true, multiplierValue: 6, displayText: '6x Multiplier'}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'declaration', showMultiplier: true, multiplierValue: 6, displayText: '6x Multiplier'}
GameLayout.jsx:25 🔍 GAME_LAYOUT_DEBUG: Multiplier badge: {phase: 'declaration', showMultiplier: true, multiplierValue: 6, displayText: '6x Multiplier'}

---

🔒 [Room CC28C0] Starting game: op_id=CC28C0_1
🔍 PREP_STATE_DEBUG: _notify_weak_hands sending data:
  weak_players: ['Andy', 'Bot 2']
  weak_players_awaiting: ['Andy', 'Bot 2']
  redeal_multiplier: 1
  decisions_received: 0
  decisions_needed: 2
🔍 BASE_STATE_DEBUG: update_phase_data called
  Phase: preparation
  Reason: Weak hands detected: ['Andy', 'Bot 2'] - awaiting simultaneous decisions
  📊 MULTIPLIER UPDATE: 1
🤖 Bot Bot 2 deciding: ACCEPT redeal
✅ Bot Bot 2 ACCEPTED redeal
🔍 PREP_STATE_DEBUG: _notify_weak_hands complete
✅ [Room CC28C0] Game and StateMachine started successfully: op_id=CC28C0_1
✅ [Room CC28C0] Bot manager registered for 3 bots
✅ Game started in room CC28C0
INFO:     connection closed
INFO:     ('127.0.0.1', 58309) - "WebSocket /ws/CC28C0" [accepted]
INFO:     connection open
🔍 PREP_STATE_DEBUG: Decision recorded for Bot 2: ACCEPT
  Current decisions: {'Bot 2': True}
  Remaining awaiting: {'Andy'}
  Current multiplier: 1
🔍 PREP_STATE_DEBUG: Broadcasting decision update:
  Player: Bot 2 - ACCEPTED
  Decisions received: 1/2
  Current multiplier: 1
🔍 BASE_STATE_DEBUG: update_phase_data called
  Phase: preparation
  Reason: Player Bot 2 accepted redeal (1/2 decided)
  📊 MULTIPLIER UPDATE: 1
✅ Redeal accept queued: Andy
🔍 PREP_STATE_DEBUG: Decision recorded for Andy: ACCEPT
  Current decisions: {'Bot 2': True, 'Andy': True}
  Remaining awaiting: set()
  Current multiplier: 1
🔍 PREP_STATE_DEBUG: REDEAL EXECUTED!
  First accepter: Andy
  Old multiplier: 1
  New multiplier: 2
🔍 PREP_STATE_DEBUG: About to deal new cards...
🔍 PREP_STATE_DEBUG: Before _deal_cards - multiplier is 2
🔍 PREP_STATE_DEBUG: _notify_weak_hands sending data:
  weak_players: ['Andy', 'Bot 2']
  weak_players_awaiting: ['Andy', 'Bot 2']
  redeal_multiplier: 2
  decisions_received: 0
  decisions_needed: 2
🔍 BASE_STATE_DEBUG: update_phase_data called
  Phase: preparation
  Reason: Weak hands detected: ['Andy', 'Bot 2'] - awaiting simultaneous decisions
  📊 MULTIPLIER UPDATE: 2
🔍 PREP_STATE_DEBUG: _notify_weak_hands complete
🔍 PREP_STATE_DEBUG: After _deal_cards - multiplier is 2
✅ Redeal accept queued: Andy
🔍 PREP_STATE_DEBUG: Decision recorded for Andy: ACCEPT
  Current decisions: {'Andy': True}
  Remaining awaiting: {'Bot 2'}
  Current multiplier: 2
🔍 PREP_STATE_DEBUG: Broadcasting decision update:
  Player: Andy - ACCEPTED
  Decisions received: 1/2
  Current multiplier: 2
🔍 BASE_STATE_DEBUG: update_phase_data called
  Phase: preparation
  Reason: Player Andy accepted redeal (1/2 decided)
  📊 MULTIPLIER UPDATE: 2
🤖 Bot Bot 2 deciding: ACCEPT redeal
✅ Bot Bot 2 ACCEPTED redeal
🔍 PREP_STATE_DEBUG: Decision recorded for Bot 2: ACCEPT
  Current decisions: {'Andy': True, 'Bot 2': True}
  Remaining awaiting: set()
  Current multiplier: 2
🔍 PREP_STATE_DEBUG: REDEAL EXECUTED!
  First accepter: Andy
  Old multiplier: 2
  New multiplier: 3
🔍 PREP_STATE_DEBUG: About to deal new cards...
🔍 PREP_STATE_DEBUG: Before _deal_cards - multiplier is 3
🔍 PREP_STATE_DEBUG: _notify_weak_hands sending data:
  weak_players: ['Andy', 'Bot 2']
  weak_players_awaiting: ['Andy', 'Bot 2']
  redeal_multiplier: 3
  decisions_received: 0
  decisions_needed: 2
🔍 BASE_STATE_DEBUG: update_phase_data called
  Phase: preparation
  Reason: Weak hands detected: ['Andy', 'Bot 2'] - awaiting simultaneous decisions
  📊 MULTIPLIER UPDATE: 3
🤖 Bot Bot 2 deciding: ACCEPT redeal
✅ Bot Bot 2 ACCEPTED redeal
🔍 PREP_STATE_DEBUG: _notify_weak_hands complete
🔍 PREP_STATE_DEBUG: After _deal_cards - multiplier is 3
✅ Redeal accept queued: Andy
🔍 PREP_STATE_DEBUG: Decision recorded for Bot 2: ACCEPT
  Current decisions: {'Bot 2': True}
  Remaining awaiting: {'Andy'}
  Current multiplier: 3
🔍 PREP_STATE_DEBUG: Broadcasting decision update:
  Player: Bot 2 - ACCEPTED
  Decisions received: 1/2
  Current multiplier: 3
🔍 BASE_STATE_DEBUG: update_phase_data called
  Phase: preparation
  Reason: Player Bot 2 accepted redeal (1/2 decided)
  📊 MULTIPLIER UPDATE: 3
🔍 PREP_STATE_DEBUG: Decision recorded for Andy: ACCEPT
  Current decisions: {'Bot 2': True, 'Andy': True}
  Remaining awaiting: set()
  Current multiplier: 3
🔍 PREP_STATE_DEBUG: REDEAL EXECUTED!
  First accepter: Andy
  Old multiplier: 3
  New multiplier: 4
🔍 PREP_STATE_DEBUG: About to deal new cards...
🔍 PREP_STATE_DEBUG: Before _deal_cards - multiplier is 4
🔍 PREP_STATE_DEBUG: _notify_weak_hands sending data:
  weak_players: ['Andy', 'Bot 2']
  weak_players_awaiting: ['Andy', 'Bot 2']
  redeal_multiplier: 4
  decisions_received: 0
  decisions_needed: 2
🔍 BASE_STATE_DEBUG: update_phase_data called
  Phase: preparation
  Reason: Weak hands detected: ['Andy', 'Bot 2'] - awaiting simultaneous decisions
  📊 MULTIPLIER UPDATE: 4
🔍 PREP_STATE_DEBUG: _notify_weak_hands complete
🔍 PREP_STATE_DEBUG: After _deal_cards - multiplier is 4
✅ Redeal accept queued: Andy
🔍 PREP_STATE_DEBUG: Decision recorded for Andy: ACCEPT
  Current decisions: {'Andy': True}
  Remaining awaiting: {'Bot 2'}
  Current multiplier: 4
🔍 PREP_STATE_DEBUG: Broadcasting decision update:
  Player: Andy - ACCEPTED
  Decisions received: 1/2
  Current multiplier: 4
🔍 BASE_STATE_DEBUG: update_phase_data called
  Phase: preparation
  Reason: Player Andy accepted redeal (1/2 decided)
  📊 MULTIPLIER UPDATE: 4
🤖 Bot Bot 2 deciding: ACCEPT redeal
✅ Bot Bot 2 ACCEPTED redeal
🔍 PREP_STATE_DEBUG: Decision recorded for Bot 2: ACCEPT
  Current decisions: {'Andy': True, 'Bot 2': True}
  Remaining awaiting: set()
  Current multiplier: 4
🔍 PREP_STATE_DEBUG: REDEAL EXECUTED!
  First accepter: Andy
  Old multiplier: 4
  New multiplier: 5
🔍 PREP_STATE_DEBUG: About to deal new cards...
🔍 PREP_STATE_DEBUG: Before _deal_cards - multiplier is 5
🔍 PREP_STATE_DEBUG: _notify_weak_hands sending data:
  weak_players: ['Andy', 'Bot 2']
  weak_players_awaiting: ['Andy', 'Bot 2']
  redeal_multiplier: 5
  decisions_received: 0
  decisions_needed: 2
🔍 BASE_STATE_DEBUG: update_phase_data called
  Phase: preparation
  Reason: Weak hands detected: ['Andy', 'Bot 2'] - awaiting simultaneous decisions
  📊 MULTIPLIER UPDATE: 5
🤖 Bot Bot 2 deciding: ACCEPT redeal
✅ Bot Bot 2 ACCEPTED redeal
🔍 PREP_STATE_DEBUG: _notify_weak_hands complete
🔍 PREP_STATE_DEBUG: After _deal_cards - multiplier is 5
🔍 PREP_STATE_DEBUG: Decision recorded for Bot 2: ACCEPT
  Current decisions: {'Bot 2': True}
  Remaining awaiting: {'Andy'}
  Current multiplier: 5
🔍 PREP_STATE_DEBUG: Broadcasting decision update:
  Player: Bot 2 - ACCEPTED
  Decisions received: 1/2
  Current multiplier: 5
🔍 BASE_STATE_DEBUG: update_phase_data called
  Phase: preparation
  Reason: Player Bot 2 accepted redeal (1/2 decided)
  📊 MULTIPLIER UPDATE: 5
✅ Redeal accept queued: Andy
🔍 PREP_STATE_DEBUG: Decision recorded for Andy: ACCEPT
  Current decisions: {'Bot 2': True, 'Andy': True}
  Remaining awaiting: set()
  Current multiplier: 5
🔍 PREP_STATE_DEBUG: REDEAL EXECUTED!
  First accepter: Andy
  Old multiplier: 5
  New multiplier: 6
🔍 PREP_STATE_DEBUG: About to deal new cards...
🔍 PREP_STATE_DEBUG: Before _deal_cards - multiplier is 6
🔍 PREP_STATE_DEBUG: After _deal_cards - multiplier is 6
🔍 BASE_STATE_DEBUG: update_phase_data called
  Phase: preparation
  Reason: Redeal complete - no weak hands found, multiplier now 6x
  📊 MULTIPLIER UPDATE: 6
🔍 BASE_STATE_DEBUG: update_phase_data called
  Phase: declaration
  Reason: Declaration phase setup - basic data
🔍 BASE_STATE_DEBUG: update_phase_data called
  Phase: declaration
  Reason: Declaration phase setup complete - current declarer: Andy
👤 Round starter is human or None: None
