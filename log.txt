
GameService.ts:708 🔢 FRONTEND_TURN_DEBUG: phaseData.current_turn_number = 1
GameService.ts:523 🌐 PROCESS_EVENT_DEBUG: Event phase_change processed, updating derived state
GameService.ts:1119 🎯 TURN_DEBUG: currentPlayer: Bot 4, playerName: Andy, isMyTurn: false
GameService.ts:1120 🎯 TURN_DEBUG: turnOrder: (4) ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
GameService.ts:1121 🎯 TURN_DEBUG: currentTurnPlays: (3) [{…}, {…}, {…}]
GameService.ts:1119 🎯 TURN_DEBUG: currentPlayer: Bot 4, playerName: Andy, isMyTurn: false
GameService.ts:1120 🎯 TURN_DEBUG: turnOrder: (4) ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
GameService.ts:1121 🎯 TURN_DEBUG: currentTurnPlays: (3) [{…}, {…}, {…}]
GameService.ts:1119 🎯 TURN_DEBUG: currentPlayer: Bot 4, playerName: Andy, isMyTurn: false
GameService.ts:1120 🎯 TURN_DEBUG: turnOrder: (4) ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
GameService.ts:1121 🎯 TURN_DEBUG: currentTurnPlays: (3) [{…}, {…}, {…}]
GameService.ts:527 🌐 PROCESS_EVENT_DEBUG: Finished processing phase_change event
GameService.ts:1329 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1330 Previous: {isConnected: true, roomId: '0090B8', playerName: 'Andy', phase: 'turn', currentRound: 1, …}
GameService.ts:1331 New: {isConnected: true, roomId: '0090B8', playerName: 'Andy', phase: 'turn', currentRound: 1, …}
GameService.ts:1332 Diff: {currentPlayer: {…}, currentTurnPlays: {…}, lastEventSequence: {…}}
GameContainer.jsx:95 🔢 GAMECONTAINER_DEBUG: gameState.currentTurnNumber = 1
GameContainer.jsx:96 🔢 GAMECONTAINER_DEBUG: currentTurnPlays = (3) [{…}, {…}, {…}]
GameContainer.jsx:101 🎲 PLAYTYPE_DEBUG: currentTurnStarter: Andy
GameContainer.jsx:102 🎲 PLAYTYPE_DEBUG: currentTurnPlays: (3) [{…}, {…}, {…}]
GameContainer.jsx:108 🎲 PLAYTYPE_DEBUG: starterPlay: {player: 'Andy', cards: Array(4), isValid: true, playType: 'EXTENDED_STRAIGHT', totalValue: 22}
GameContainer.jsx:115 🎲 PLAYTYPE_DEBUG: Found play type: EXTENDED_STRAIGHT
GameService.ts:430 🌐 FRONTEND_EVENT_DEBUG: Received phase_change event for room 0090B8 {phase: 'turn', allowed_actions: Array(5), phase_data: {…}, players: {…}, round: 1, …}
GameService.ts:540 🔄 PHASE_CHANGE_DEBUG: Phase: turn
GameService.ts:541 🔄 PHASE_CHANGE_DEBUG: Data players: {Andy: {…}, Bot 2: {…}, Bot 3: {…}, Bot 4: {…}}
 🔄 PHASE_CHANGE_DEBUG: Data phase_data: {current_turn_starter: 'Andy', current_player: null, turn_order: Array(4), required_piece_count: 4, turn_plays: {…}, …}
 🔄 PHASE_CHANGE_DEBUG: First player raw: Andy {hand: Array(4), hand_size: 4, zero_declares_in_a_row: 0, declared: 4, score: 0}
 🔄 PHASE_CHANGE_DEBUG: Converted players array: (4) [{…}, {…}, {…}, {…}]
 🔄 PHASE_CHANGE_DEBUG: Sample player object: {name: 'Andy', is_bot: false, is_host: false, zero_declares_in_a_row: 0}
 🎯 REQUIRED_COUNT_FIX: Set requiredPieceCount to 4 from backend phase_data
GameService.ts:672 🎯 ANIMATION_DEBUG: Animation pending: true
GameService.ts:683 🔢 FRONTEND_ROUND_TURN_DEBUG: Round 1, Turn 1
GameService.ts:684 🎯 FRONTEND_TURN_STATE: Starter: Andy, Current: unknown, Required: 4, Plays: 4
GameService.ts:689 🎯 TURN_PLAY_DEBUG: Player Andy, playData: {pieces: Array(4), piece_count: 4, play_type: 'EXTENDED_STRAIGHT', play_value: 22, is_valid: true, …}
GameService.ts:691 🎯 TURN_PLAY_DEBUG: Extracted playType: EXTENDED_STRAIGHT from type: undefined, play_type: EXTENDED_STRAIGHT
GameService.ts:689 🎯 TURN_PLAY_DEBUG: Player Bot 2, playData: {pieces: Array(4), piece_count: 4, play_type: 'EXTENDED_STRAIGHT', play_value: 22, is_valid: true, …}
GameService.ts:691 🎯 TURN_PLAY_DEBUG: Extracted playType: EXTENDED_STRAIGHT from type: undefined, play_type: EXTENDED_STRAIGHT
GameService.ts:689 🎯 TURN_PLAY_DEBUG: Player Bot 3, playData: {pieces: Array(4), piece_count: 4, play_type: 'INVALID', play_value: 6, is_valid: true, …}
GameService.ts:691 🎯 TURN_PLAY_DEBUG: Extracted playType: INVALID from type: undefined, play_type: INVALID
GameService.ts:689 🎯 TURN_PLAY_DEBUG: Player Bot 4, playData: {pieces: Array(4), piece_count: 4, play_type: 'INVALID', play_value: 9, is_valid: true, …}
GameService.ts:691 🎯 TURN_PLAY_DEBUG: Extracted playType: INVALID from type: undefined, play_type: INVALID
GameService.ts:703 🎲 TURN_PLAYS_DEBUG: Converted 4 plays to currentTurnPlays: (4) [{…}, {…}, {…}, {…}]
GameService.ts:708 🔢 FRONTEND_TURN_DEBUG: phaseData.current_turn_number = 1
GameService.ts:523 🌐 PROCESS_EVENT_DEBUG: Event phase_change processed, updating derived state
GameService.ts:1119 🎯 TURN_DEBUG: currentPlayer: Bot 4, playerName: Andy, isMyTurn: false
GameService.ts:1120 🎯 TURN_DEBUG: turnOrder: (4) ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
GameService.ts:1121 🎯 TURN_DEBUG: currentTurnPlays: (4) [{…}, {…}, {…}, {…}]
GameService.ts:1119 🎯 TURN_DEBUG: currentPlayer: Bot 4, playerName: Andy, isMyTurn: false
GameService.ts:1120 🎯 TURN_DEBUG: turnOrder: (4) ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
GameService.ts:1121 🎯 TURN_DEBUG: currentTurnPlays: (4) [{…}, {…}, {…}, {…}]
GameService.ts:1119 🎯 TURN_DEBUG: currentPlayer: Bot 4, playerName: Andy, isMyTurn: false
GameService.ts:1120 🎯 TURN_DEBUG: turnOrder: (4) ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
GameService.ts:1121 🎯 TURN_DEBUG: currentTurnPlays: (4) [{…}, {…}, {…}, {…}]
GameService.ts:527 🌐 PROCESS_EVENT_DEBUG: Finished processing phase_change event
GameService.ts:1329 🎮 State Change: NETWORK_EVENT:PHASE_CHANGE
GameService.ts:1330 Previous: {isConnected: true, roomId: '0090B8', playerName: 'Andy', phase: 'turn', currentRound: 1, …}
GameService.ts:1331 New: {isConnected: true, roomId: '0090B8', playerName: 'Andy', phase: 'turn', currentRound: 1, …}
GameService.ts:1332 Diff: {currentTurnPlays: {…}, lastEventSequence: {…}, animationPending: {…}}
GameContainer.jsx:95 🔢 GAMECONTAINER_DEBUG: gameState.currentTurnNumber = 1
GameContainer.jsx:96 🔢 GAMECONTAINER_DEBUG: currentTurnPlays = (4) [{…}, {…}, {…}, {…}]
GameContainer.jsx:101 🎲 PLAYTYPE_DEBUG: currentTurnStarter: Andy
GameContainer.jsx:102 🎲 PLAYTYPE_DEBUG: currentTurnPlays: (4) [{…}, {…}, {…}, {…}]
GameContainer.jsx:108 🎲 PLAYTYPE_DEBUG: starterPlay: {player: 'Andy', cards: Array(4), isValid: true, playType: 'EXTENDED_STRAIGHT', totalValue: 22}
GameContainer.jsx:115 🎲 PLAYTYPE_DEBUG: Found play type: EXTENDED_STRAIGHT
GameService.ts:233 🎮 GameService: Sent animation complete signal

---

🎯 TURN_STATE_DEBUG: Processing action play_pieces from Bot 4
🎯 TURN_STATE_DEBUG: _handle_play_pieces called for Bot 4
🎯 TURN_STATE_DEBUG: Current state - player_index: 3, turn_order: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🎯 TURN_STATE_DEBUG: Player Bot 4 playing 4 pieces: ['SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'HORSE_BLACK(5)']
🎯 TURN_STATE_DEBUG: Calculated play type: INVALID
🎯 TURN_STATE_DEBUG: Calculated play value: 9
🎯 TURN_STATE_DEBUG: Before advancing - current_player_index: 3
🎯 TURN_STATE_DEBUG: After advancing - current_player_index: 4
🎯 UPDATE_DEBUG: About to update phase data with current_player: None, animation_pending: True
DEBUG_WS: Message for event 'phase_change' added to queue for room 0090B8.
🎯 TURN_STATE_DEBUG: Turn complete! Marking pending_completion=True
🎯 UPDATE_DEBUG: Phase data updated - next_player should be: None
🎯 TURN_STATE_DEBUG: Play pieces result: {'status': 'play_accepted', 'player': 'Bot 4', 'pieces': [SOLDIER_BLACK(1), SOLDIER_BLACK(1), SOLDIER_RED(2), HORSE_BLACK(5)], 'piece_count': 4, 'required_count': 4, 'next_player': None, 'turn_complete': False}
✅ BOT_VALIDATION_FIX: Bot Bot 4 play accepted - state machine handling all updates
Not Bot 3's turn - expected None
Invalid action: GameAction(player_name='Bot 3', action_type=<ActionType.PLAY_PIECES: 'play_pieces'>, payload={'pieces': [SOLDIER_BLACK(1), SOLDIER_BLACK(1), SOLDIER_RED(2), SOLDIER_RED(2)]}, timestamp=datetime.datetime(2025, 7, 9, 6, 40, 39, 56114), sequence_id=15, is_bot=True)
✅ BOT_VALIDATION_FIX: Bot Bot 3 play accepted - state machine handling all updates
Not Bot 4's turn - expected None
Invalid action: GameAction(player_name='Bot 4', action_type=<ActionType.PLAY_PIECES: 'play_pieces'>, payload={'pieces': [SOLDIER_BLACK(1), SOLDIER_BLACK(1), SOLDIER_RED(2), HORSE_BLACK(5)]}, timestamp=datetime.datetime(2025, 7, 9, 6, 40, 40, 23811), sequence_id=16, is_bot=True)
✅ BOT_VALIDATION_FIX: Bot Bot 4 play accepted - state machine handling all updates
Not Bot 4's turn - expected None
Invalid action: GameAction(player_name='Bot 4', action_type=<ActionType.PLAY_PIECES: 'play_pieces'>, payload={'pieces': [SOLDIER_BLACK(1), SOLDIER_BLACK(1), SOLDIER_RED(2), HORSE_BLACK(5)]}, timestamp=datetime.datetime(2025, 7, 9, 6, 40, 40, 765249), sequence_id=17, is_bot=True)
✅ BOT_VALIDATION_FIX: Bot Bot 4 play accepted - state machine handling all updates
DEBUG_WS_RECEIVE: Received event 'action' from client in room 0090B8 with data: {'action_type': 'animation_complete', 'payload': {}}
DEBUG_WS_RECEIVE: Received event 'ping' from client in room lobby with data: {'timestamp': 1752068455844}