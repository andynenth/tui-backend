üîí [Room 4810BA] Starting game: op_id=4810BA_1
{"timestamp": "2025-06-30T16:38:04.918171Z", "level": "INFO", "logger": "game.state.preparation", "message": "Entering preparation phase", "module": "base_state", "function": "on_enter", "line": 34}
{"timestamp": "2025-06-30T16:38:04.918286Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfb4 Preparation phase starting - dealing cards", "module": "preparation_state", "function": "_setup_phase", "line": 80}
üé¥ PREP_STATE_DEBUG: Setup phase starting for room 4810BA
üîÑ PREP_RESET_DEBUG: Reset Andy - declared: 0, captured_piles: 0
üîÑ PREP_RESET_DEBUG: Reset Bot 2 - declared: 0, captured_piles: 0
üîÑ PREP_RESET_DEBUG: Reset Bot 3 - declared: 0, captured_piles: 0
üîÑ PREP_RESET_DEBUG: Reset Bot 4 - declared: 0, captured_piles: 0
üé¥ PREP_STATE_DEBUG: Using guaranteed no redeal dealing
üõ°Ô∏è DEBUG: Dealing guaranteed no-redeal hands with RED_GENERAL assigned to player 1
üõ°Ô∏è DEBUG: Available pieces - Strong: 7, Weak: 24
  ‚Üí Bot 2 gets RED_GENERAL: GENERAL_RED(14)
  ‚Üí Andy gets strong piece: ELEPHANT_RED(10)
  ‚Üí Bot 3 gets strong piece: GENERAL_BLACK(13)
  ‚Üí Bot 4 gets strong piece: ELEPHANT_RED(10)
üõ°Ô∏è DEBUG: Guaranteed no-redeal hands dealt:
üîß DEBUG: Final hands verification:
  Andy: ['ELEPHANT_BLACK(9)', 'CANNON_BLACK(3)', 'CHARIOT_RED(8)', 'ELEPHANT_RED(10)', 'SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'CANNON_BLACK(3)', 'CHARIOT_BLACK(7)']
    ‚Üí Strong pieces (>9): 1
    ‚Üí Has RED_GENERAL: False
  Bot 2: ['ADVISOR_RED(12)', 'SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)', 'ADVISOR_RED(12)', 'CANNON_RED(4)', 'HORSE_RED(6)', 'SOLDIER_BLACK(1)']
    ‚Üí Strong pieces (>9): 3
    ‚Üí Has RED_GENERAL: True
  Bot 3: ['GENERAL_BLACK(13)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'HORSE_RED(6)', 'CANNON_RED(4)', 'CHARIOT_BLACK(7)', 'ELEPHANT_BLACK(9)', 'SOLDIER_RED(2)']
    ‚Üí Strong pieces (>9): 1
    ‚Üí Has RED_GENERAL: False
  Bot 4: ['ADVISOR_BLACK(11)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'SOLDIER_RED(2)', 'CHARIOT_RED(8)', 'HORSE_BLACK(5)', 'HORSE_BLACK(5)']
    ‚Üí Strong pieces (>9): 3
    ‚Üí Has RED_GENERAL: False
‚úÖ SUCCESS: No weak hands - redeal prevented!
{"timestamp": "2025-06-30T16:38:04.919248Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udd0d Weak hand check - Found 0 weak players: set()", "module": "preparation_state", "function": "_deal_cards", "line": 141}
{"timestamp": "2025-06-30T16:38:04.919397Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udd0d STARTER_DEBUG: Current round number: 1", "module": "preparation_state", "function": "_determine_starter", "line": 396}
üîç STARTER_DEBUG: Looking for GENERAL_RED holder in round 1
üîç STARTER_DEBUG: Checking player Andy
üîç STARTER_DEBUG: Player Andy hand: ['ELEPHANT_BLACK(9)', 'CANNON_BLACK(3)', 'CHARIOT_RED(8)', 'ELEPHANT_RED(10)', 'SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'CANNON_BLACK(3)', 'CHARIOT_BLACK(7)']
üîç STARTER_DEBUG: Checking piece 'ELEPHANT_BLACK(9)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'CANNON_BLACK(3)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'CHARIOT_RED(8)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'ELEPHANT_RED(10)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'SOLDIER_RED(2)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'SOLDIER_BLACK(1)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'CANNON_BLACK(3)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'CHARIOT_BLACK(7)' for GENERAL_RED
üîç STARTER_DEBUG: Checking player Bot 2
üîç STARTER_DEBUG: Player Bot 2 hand: ['ADVISOR_RED(12)', 'SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)', 'ADVISOR_RED(12)', 'CANNON_RED(4)', 'HORSE_RED(6)', 'SOLDIER_BLACK(1)']
üîç STARTER_DEBUG: Checking piece 'ADVISOR_RED(12)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'SOLDIER_RED(2)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'SOLDIER_BLACK(1)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'GENERAL_RED(14)' for GENERAL_RED
‚úÖ STARTER_DEBUG: Found GENERAL_RED in Bot 2's hand!
{"timestamp": "2025-06-30T16:38:04.919755Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf Starter: Bot 2 (has GENERAL_RED)", "module": "preparation_state", "function": "_determine_starter", "line": 411}
‚úÖ PREP_STATE_DEBUG: No weak hands - determined new starter: Bot 2
{"timestamp": "2025-06-30T16:38:04.920242Z", "level": "INFO", "logger": "game.state.preparation", "message": "\u2705 No weak hands - determined new starter: Bot 2", "module": "preparation_state", "function": "_deal_cards", "line": 212}
üéØ PREP_STATE_DEBUG: No weak hands detected - auto-transitioning to Declaration phase
{"timestamp": "2025-06-30T16:38:04.920364Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf No weak hands detected - transitioning to Declaration phase", "module": "preparation_state", "function": "_deal_cards", "line": 217}
{"timestamp": "2025-06-30T16:38:04.920852Z", "level": "INFO", "logger": "game.state.preparation", "message": "Exiting preparation phase", "module": "base_state", "function": "on_exit", "line": 39}
{"timestamp": "2025-06-30T16:38:04.920996Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf Round starter already set: Bot 2", "module": "preparation_state", "function": "_cleanup_phase", "line": 94}
üéØ PREP_STATE_DEBUG: Cleanup phase - current_player: Bot 2
üéØ PREP_STATE_DEBUG: Cleanup phase - round_starter: Bot 2
{"timestamp": "2025-06-30T16:38:04.921089Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udccb Preparation complete - Starter: Bot 2, Multiplier: 1x", "module": "preparation_state", "function": "_cleanup_phase", "line": 105}
{"timestamp": "2025-06-30T16:38:04.921207Z", "level": "INFO", "logger": "game.state.declaration", "message": "Entering declaration phase", "module": "base_state", "function": "on_enter", "line": 34}
üì¢ DECL_STATE_DEBUG: Using round_starter: Bot 2
{"timestamp": "2025-06-30T16:38:04.921662Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup - basic data", "module": "base_state", "function": "update_phase_data", "line": 152}
DEBUG_WS: Message for event 'phase_change' added to queue for room 4810BA.
{"timestamp": "2025-06-30T16:38:04.924219Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 4810BA - Declaration phase setup - basic data", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 214}
ü§ñ ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup - basic data
{"timestamp": "2025-06-30T16:38:04.924381Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup complete - current declarer: Bot 2", "module": "base_state", "function": "update_phase_data", "line": 152}
DEBUG_WS: Message for event 'phase_change' added to queue for room 4810BA.
{"timestamp": "2025-06-30T16:38:04.924661Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 4810BA - Declaration phase setup complete - current declarer: Bot 2", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 214}
ü§ñ ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup complete - current declarer: Bot 2
ü§ñ ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Bot 2
üîî BOT_MANAGER_DEBUG: Received event 'phase_change' for room 4810BA with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Bot 2'}, 'current_declarer': 'Bot 2', 'reason': 'Declaration phase setup complete - current declarer: Bot 2'}
‚úÖ BOT_MANAGER_DEBUG: Found handler for room 4810BA, delegating to handler...
üéÆ BOT_HANDLER_DEBUG: Room 4810BA handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
üîç BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
üîç BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
üîç BOT_HANDLER_DEBUG: Attempting to acquire lock...
üîç BOT_HANDLER_DEBUG: Lock acquired, processing event...
üöÄ BOT_HANDLER_DEBUG: Handling enterprise phase change
üöÄ ENTERPRISE_BOT_DEBUG: Processing phase change - phase: declaration, reason: Declaration phase setup complete - current declarer: Bot 2
üöÄ ENTERPRISE_BOT_DEBUG: Declaration phase - checking if Bot 2 is a bot
üîç ENTERPRISE_BOT_DEBUG: Checking player Andy vs target Bot 2
üîç ENTERPRISE_BOT_DEBUG: Checking player Bot 2 vs target Bot 2
ü§ñ ENTERPRISE_BOT_DEBUG: Current declarer Bot 2 is a bot - triggering declaration
ü§ñ DECLARATION_DEBUG: Triggering bot manager for declaration phase
üîß DECLARATION_DEBUG: Bot manager active games: ['4810BA']
‚ö†Ô∏è DECLARATION_DEBUG: No room_id found to trigger bot manager
‚ùå [Room 4810BA] Game start failed: op_id=4810BA_1, error=websocket_endpoint.<locals>.room_broadcast() takes 2 positional arguments but 3 were given
‚ùå Start game error: websocket_endpoint.<locals>.room_broadcast() takes 2 positional arguments but 3 were given
DEBUG_WS_QUEUE: Room 4810BA got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room 4810BA.
DEBUG_WS: Successfully sent 'phase_change' to a client in room 4810BA.
ü§ñ BOT_SINGLE_DECLARE: Handling declaration for Bot 2
ü§ñ BOT_SINGLE_DECLARE: Bot Bot 2 will declare in 1.5s...
DEBUG_WS_QUEUE: Room 4810BA got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room 4810BA.
DEBUG_WS: Successfully sent 'phase_change' to a client in room 4810BA.
üîç BOT_DEBUG: Got declaration order from state machine: ['Bot 2', 'Bot 3', 'Bot 4', 'Andy']
ü§ñ BOT_SINGLE_DECLARE: Bot Bot 2 declaring at position 0
{"timestamp": "2025-06-30T16:38:06.412401Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Player Bot 2 declared 2", "module": "base_state", "function": "update_phase_data", "line": 152}
DEBUG_WS: Message for event 'phase_change' added to queue for room 4810BA.
üîÑ RELIABLE_MSG: Message retry worker started
{"timestamp": "2025-06-30T16:38:06.412862Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 4810BA - Player Bot 2 declared 2", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 214}
ü§ñ ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Player Bot 2 declared 2
ü§ñ ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Bot 3
üîî BOT_MANAGER_DEBUG: Received event 'phase_change' for room 4810BA with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 1, 'declarations': {'Bot 2': 2}, 'declaration_total': 2, 'current_declarer': 'Bot 3'}, 'current_declarer': 'Bot 3', 'reason': 'Player Bot 2 declared 2'}
‚úÖ BOT_MANAGER_DEBUG: Found handler for room 4810BA, delegating to handler...
üéÆ BOT_HANDLER_DEBUG: Room 4810BA handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
üîç BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
üîç BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
üîç BOT_HANDLER_DEBUG: Attempting to acquire lock...
üîç BOT_HANDLER_DEBUG: Lock acquired, processing event...
üöÄ BOT_HANDLER_DEBUG: Handling enterprise phase change
üöÄ ENTERPRISE_BOT_DEBUG: Processing phase change - phase: declaration, reason: Player Bot 2 declared 2
üöÄ ENTERPRISE_BOT_DEBUG: Declaration phase - checking if Bot 3 is a bot
üîç ENTERPRISE_BOT_DEBUG: Checking player Andy vs target Bot 3
üîç ENTERPRISE_BOT_DEBUG: Checking player Bot 2 vs target Bot 3
üîç ENTERPRISE_BOT_DEBUG: Checking player Bot 3 vs target Bot 3
ü§ñ ENTERPRISE_BOT_DEBUG: Current declarer Bot 3 is a bot - triggering declaration
{"timestamp": "2025-06-30T16:38:06.413368Z", "level": "INFO", "logger": "game.state.declaration", "message": "Player Bot 2 declared 2", "module": "declaration_state", "function": "_handle_declaration", "line": 157}
ü§ñ DECLARATION_DEBUG: Triggering bot manager after Bot 2 declared
‚ö†Ô∏è DECLARATION_DEBUG: No room_id found to trigger bot manager
üîß BOT_DECLARE_DEBUG: State machine result: {'success': True, 'immediate': True, 'transition': False, 'processing_time': 0.001344919204711914, 'reason': 'Declaration processed successfully', 'data': {'status': 'declaration_recorded', 'player': 'Bot 2', 'value': 2, 'total': 2}}
ü§ñ BOT_SINGLE_DECLARE: Handling declaration for Bot 3
ü§ñ BOT_SINGLE_DECLARE: Bot Bot 3 will declare in 1.1s...
DEBUG_WS_QUEUE: Room 4810BA got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room 4810BA.
DEBUG_WS: Successfully sent 'phase_change' to a client in room 4810BA.
‚úÖ Bot Bot 2 declared 2
üîç BOT_DEBUG: Got declaration order from state machine: ['Bot 2', 'Bot 3', 'Bot 4', 'Andy']
ü§ñ BOT_SINGLE_DECLARE: Bot Bot 3 declaring at position 1
{"timestamp": "2025-06-30T16:38:07.517244Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Player Bot 3 declared 1", "module": "base_state", "function": "update_phase_data", "line": 152}
DEBUG_WS: Message for event 'phase_change' added to queue for room 4810BA.
{"timestamp": "2025-06-30T16:38:07.517696Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 4810BA - Player Bot 3 declared 1", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 214}
ü§ñ ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Player Bot 3 declared 1
ü§ñ ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Bot 4
üîî BOT_MANAGER_DEBUG: Received event 'phase_change' for room 4810BA with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 2, 'declarations': {'Bot 2': 2, 'Bot 3': 1}, 'declaration_total': 3, 'current_declarer': 'Bot 4'}, 'current_declarer': 'Bot 4', 'reason': 'Player Bot 3 declared 1'}
‚úÖ BOT_MANAGER_DEBUG: Found handler for room 4810BA, delegating to handler...
üéÆ BOT_HANDLER_DEBUG: Room 4810BA handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
üîç BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
üîç BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
üîç BOT_HANDLER_DEBUG: Attempting to acquire lock...
üîç BOT_HANDLER_DEBUG: Lock acquired, processing event...
üöÄ BOT_HANDLER_DEBUG: Handling enterprise phase change
üöÄ ENTERPRISE_BOT_DEBUG: Processing phase change - phase: declaration, reason: Player Bot 3 declared 1
üöÄ ENTERPRISE_BOT_DEBUG: Declaration phase - checking if Bot 4 is a bot
üîç ENTERPRISE_BOT_DEBUG: Checking player Andy vs target Bot 4
üîç ENTERPRISE_BOT_DEBUG: Checking player Bot 2 vs target Bot 4
üîç ENTERPRISE_BOT_DEBUG: Checking player Bot 3 vs target Bot 4
üîç ENTERPRISE_BOT_DEBUG: Checking player Bot 4 vs target Bot 4
ü§ñ ENTERPRISE_BOT_DEBUG: Current declarer Bot 4 is a bot - triggering declaration
{"timestamp": "2025-06-30T16:38:07.518149Z", "level": "INFO", "logger": "game.state.declaration", "message": "Player Bot 3 declared 1", "module": "declaration_state", "function": "_handle_declaration", "line": 157}
ü§ñ DECLARATION_DEBUG: Triggering bot manager after Bot 3 declared
‚ö†Ô∏è DECLARATION_DEBUG: No room_id found to trigger bot manager
üîß BOT_DECLARE_DEBUG: State machine result: {'success': True, 'immediate': True, 'transition': False, 'processing_time': 0.0012359619140625, 'reason': 'Declaration processed successfully', 'data': {'status': 'declaration_recorded', 'player': 'Bot 3', 'value': 1, 'total': 3}}
ü§ñ BOT_SINGLE_DECLARE: Handling declaration for Bot 4
ü§ñ BOT_SINGLE_DECLARE: Bot Bot 4 will declare in 0.7s...
DEBUG_WS_QUEUE: Room 4810BA got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room 4810BA.
DEBUG_WS: Successfully sent 'phase_change' to a client in room 4810BA.
‚úÖ Bot Bot 3 declared 1
üîç BOT_DEBUG: Got declaration order from state machine: ['Bot 2', 'Bot 3', 'Bot 4', 'Andy']
ü§ñ BOT_SINGLE_DECLARE: Bot Bot 4 declaring at position 2
{"timestamp": "2025-06-30T16:38:08.180717Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Player Bot 4 declared 1", "module": "base_state", "function": "update_phase_data", "line": 152}
DEBUG_WS: Message for event 'phase_change' added to queue for room 4810BA.
{"timestamp": "2025-06-30T16:38:08.180939Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 4810BA - Player Bot 4 declared 1", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 214}
ü§ñ ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Player Bot 4 declared 1
ü§ñ ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Andy
üîî BOT_MANAGER_DEBUG: Received event 'phase_change' for room 4810BA with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 3, 'declarations': {'Bot 2': 2, 'Bot 3': 1, 'Bot 4': 1}, 'declaration_total': 4, 'current_declarer': 'Andy'}, 'current_declarer': 'Andy', 'reason': 'Player Bot 4 declared 1'}
‚úÖ BOT_MANAGER_DEBUG: Found handler for room 4810BA, delegating to handler...
üéÆ BOT_HANDLER_DEBUG: Room 4810BA handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
üîç BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
üîç BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
üîç BOT_HANDLER_DEBUG: Attempting to acquire lock...
üîç BOT_HANDLER_DEBUG: Lock acquired, processing event...
üöÄ BOT_HANDLER_DEBUG: Handling enterprise phase change
üöÄ ENTERPRISE_BOT_DEBUG: Processing phase change - phase: declaration, reason: Player Bot 4 declared 1
üöÄ ENTERPRISE_BOT_DEBUG: Declaration phase - checking if Andy is a bot
üîç ENTERPRISE_BOT_DEBUG: Checking player Andy vs target Andy
üë§ ENTERPRISE_BOT_DEBUG: Current declarer Andy is human - waiting
{"timestamp": "2025-06-30T16:38:08.181085Z", "level": "INFO", "logger": "game.state.declaration", "message": "Player Bot 4 declared 1", "module": "declaration_state", "function": "_handle_declaration", "line": 157}
ü§ñ DECLARATION_DEBUG: Triggering bot manager after Bot 4 declared
‚ö†Ô∏è DECLARATION_DEBUG: No room_id found to trigger bot manager
üîß BOT_DECLARE_DEBUG: State machine result: {'success': True, 'immediate': True, 'transition': False, 'processing_time': 0.0005087852478027344, 'reason': 'Declaration processed successfully', 'data': {'status': 'declaration_recorded', 'player': 'Bot 4', 'value': 1, 'total': 4}}
DEBUG_WS_QUEUE: Room 4810BA got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room 4810BA.
DEBUG_WS: Successfully sent 'phase_change' to a client in room 4810BA.
‚úÖ Bot Bot 4 declared 1
DEBUG_WS_RECEIVE: Received event 'ping' from client in room lobby with data: {'timestamp': 1751301513801}

---

RecoveryService.ts:66 üîÑ RecoveryService: Initialized
ServiceIntegration.ts:79 üîó ServiceIntegration: Initialized
ServiceIntegration.ts:98 
ServiceIntegration.ts:99 üéØ =============================================
ServiceIntegration.ts:100 üöÄ PHASE 1-4 ENTERPRISE ARCHITECTURE STARTING
ServiceIntegration.ts:101 üéØ =============================================
ServiceIntegration.ts:102 üîß Initializing integrated service layer...
ServiceIntegration.ts:567 ‚úÖ NetworkService integrated
ServiceIntegration.ts:575 ‚úÖ GameService integrated
ServiceIntegration.ts:583 ‚úÖ RecoveryService integrated
ServiceIntegration.ts:594 ü©∫ Health monitoring started (30000ms interval)
ServiceIntegration.ts:124 
ServiceIntegration.ts:125 ‚úÖ =============================================
ServiceIntegration.ts:126 üéâ PHASE 1-4 ARCHITECTURE FULLY OPERATIONAL!
ServiceIntegration.ts:127 ‚úÖ =============================================
ServiceIntegration.ts:128 üîó NetworkService: Advanced WebSocket with auto-reconnection
ServiceIntegration.ts:129 üéÆ GameService: React hooks with TypeScript state management
ServiceIntegration.ts:130 üõ†Ô∏è RecoveryService: Automatic error recovery and health monitoring
ServiceIntegration.ts:131 üè¢ Enterprise Features: Event sourcing, logging, metrics
ServiceIntegration.ts:132 ‚úÖ Service integration layer initialized successfully
ServiceIntegration.ts:133 
App.jsx:121 üéÆ Phase 1-4 Enterprise Architecture - Global services initialized
NetworkService.ts:337 üîó Connection opened to room lobby
GameService.ts:1282 üéÆ State Change: NETWORK_CONNECTED
GameService.ts:1283 Previous: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1284 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1285 Diff: {isConnected: {‚Ä¶}, lastEventSequence: {‚Ä¶}}
NetworkService.ts:129 üåê NetworkService: Connected to room lobby
GameService.ts:1282 üéÆ State Change: NETWORK_DISCONNECTED
GameService.ts:1283 Previous: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1284 New: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1285 Diff: {isConnected: {‚Ä¶}, lastEventSequence: {‚Ä¶}}
NetworkService.ts:171 üåê NetworkService: Disconnected from room lobby
NetworkService.ts:214 üì§ Queued message for lobby: get_rooms (1 queued)
NetworkService.ts:337 üîó Connection opened to room lobby
GameService.ts:1282 üéÆ State Change: NETWORK_CONNECTED
GameService.ts:1283 Previous: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1284 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1285 Diff: {isConnected: {‚Ä¶}, lastEventSequence: {‚Ä¶}}
NetworkService.ts:129 üåê NetworkService: Connected to room lobby
LobbyPage.jsx:50 Received room_list_update: {roomId: 'lobby', data: {‚Ä¶}, message: {‚Ä¶}, timestamp: 1751301482433}
GameService.ts:1282 üéÆ State Change: NETWORK_DISCONNECTED
GameService.ts:1283 Previous: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1284 New: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1285 Diff: {isConnected: {‚Ä¶}, lastEventSequence: {‚Ä¶}}
NetworkService.ts:171 üåê NetworkService: Disconnected from room lobby
NetworkService.ts:214 üì§ Queued message for lobby: get_rooms (1 queued)
NetworkService.ts:337 üîó Connection opened to room lobby
GameService.ts:1282 üéÆ State Change: NETWORK_CONNECTED
GameService.ts:1283 Previous: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1284 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1285 Diff: {isConnected: {‚Ä¶}, lastEventSequence: {‚Ä¶}}
NetworkService.ts:129 üåê NetworkService: Connected to room lobby
LobbyPage.jsx:50 Received room_list_update: {roomId: 'lobby', data: {‚Ä¶}, message: {‚Ä¶}, timestamp: 1751301483689}
LobbyPage.jsx:60 Received room_created: {roomId: 'lobby', data: {‚Ä¶}, message: {‚Ä¶}, timestamp: 1751301483768}
LobbyPage.jsx:61 üü¢ Navigation: room_id = 4810BA navigating to: /room/4810BA
LobbyPage.jsx:65 ‚úÖ Navigating to new room: 4810BA
GameService.ts:1282 üéÆ State Change: NETWORK_DISCONNECTED
GameService.ts:1283 Previous: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1284 New: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1285 Diff: {isConnected: {‚Ä¶}, lastEventSequence: {‚Ä¶}}
NetworkService.ts:171 üåê NetworkService: Disconnected from room lobby
NetworkService.ts:214 üì§ Queued message for lobby: get_rooms (1 queued)
RoomPage.jsx:181 üéØ SLOT_1: player= undefined isEmpty= true
RoomPage.jsx:181 üéØ SLOT_2: player= undefined isEmpty= true
RoomPage.jsx:181 üéØ SLOT_3: player= undefined isEmpty= true
RoomPage.jsx:181 üéØ SLOT_4: player= undefined isEmpty= true
NetworkService.ts:337 üîó Connection opened to room lobby
GameService.ts:1282 üéÆ State Change: NETWORK_CONNECTED
GameService.ts:1283 Previous: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1284 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1285 Diff: {isConnected: {‚Ä¶}, lastEventSequence: {‚Ä¶}}
NetworkService.ts:129 üåê NetworkService: Connected to room lobby
NetworkService.ts:337 üîó Connection opened to room 4810BA
GameService.ts:1282 üéÆ State Change: NETWORK_CONNECTED
GameService.ts:1283 Previous: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1284 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0,¬†‚Ä¶}
GameService.ts:1285 Diff: {lastEventSequence: {‚Ä¶}}
NetworkService.ts:129 üåê NetworkService: Connected to room 4810BA
RoomPage.jsx:181 üéØ SLOT_1: player= undefined isEmpty= true
RoomPage.jsx:181 üéØ SLOT_2: player= undefined isEmpty= true
RoomPage.jsx:181 üéØ SLOT_3: player= undefined isEmpty= true
RoomPage.jsx:181 üéØ SLOT_4: player= undefined isEmpty= true
RoomPage.jsx:49 üè† ROOM_UPDATE: Full data received: {players: Array(4), host_name: 'Andy', room_id: '4810BA', started: false}
RoomPage.jsx:50 üè† ROOM_UPDATE: Players array: (4)¬†[{‚Ä¶}, {‚Ä¶}, {‚Ä¶}, {‚Ä¶}]
RoomPage.jsx:51 üè† ROOM_UPDATE: Players array type: object
RoomPage.jsx:52 üè† ROOM_UPDATE: Players array length: 4
RoomPage.jsx:53 üè† ROOM_UPDATE: Players array entries: (4)¬†[Array(2), Array(2), Array(2), Array(2)]
RoomPage.jsx:181 üéØ SLOT_1: player= {name: 'Andy', is_bot: false, is_host: true} isEmpty= false
RoomPage.jsx:181 üéØ SLOT_2: player= {name: 'Bot 2', is_bot: true, is_host: false} isEmpty= false
RoomPage.jsx:181 üéØ SLOT_3: player= {name: 'Bot 3', is_bot: true, is_host: false} isEmpty= false
RoomPage.jsx:181 üéØ SLOT_4: player= {name: 'Bot 4', is_bot: true, is_host: false} isEmpty= false
RoomPage.jsx:87 üéÆ START_GAME: Button clicked
RoomPage.jsx:88 üéÆ START_GAME: Room ID: 4810BA
RoomPage.jsx:181 üéØ SLOT_1: player= {name: 'Andy', is_bot: false, is_host: true} isEmpty= false
RoomPage.jsx:181 üéØ SLOT_2: player= {name: 'Bot 2', is_bot: true, is_host: false} isEmpty= false
RoomPage.jsx:181 üéØ SLOT_3: player= {name: 'Bot 3', is_bot: true, is_host: false} isEmpty= false
RoomPage.jsx:181 üéØ SLOT_4: player= {name: 'Bot 4', is_bot: true, is_host: false} isEmpty= false
GameService.ts:410 üåê FRONTEND_EVENT_DEBUG: Received phase_change event for room 4810BA {phase: 'declaration', allowed_actions: Array(4), phase_data: {‚Ä¶}, players: {‚Ä¶}, round: 1,¬†‚Ä¶}
GameService.ts:414 üåê FRONTEND_EVENT_DEBUG: Ignoring event for different room (ours: null)
GameService.ts:410 üåê FRONTEND_EVENT_DEBUG: Received phase_change event for room 4810BA {phase: 'declaration', allowed_actions: Array(4), phase_data: {‚Ä¶}, players: {‚Ä¶}, round: 1,¬†‚Ä¶}
GameService.ts:414 üåê FRONTEND_EVENT_DEBUG: Ignoring event for different room (ours: null)
GameService.ts:410 üåê FRONTEND_EVENT_DEBUG: Received phase_change event for room 4810BA {phase: 'declaration', allowed_actions: Array(4), phase_data: {‚Ä¶}, players: {‚Ä¶}, round: 1,¬†‚Ä¶}
GameService.ts:414 üåê FRONTEND_EVENT_DEBUG: Ignoring event for different room (ours: null)
GameService.ts:410 üåê FRONTEND_EVENT_DEBUG: Received phase_change event for room 4810BA {phase: 'declaration', allowed_actions: Array(4), phase_data: {‚Ä¶}, players: {‚Ä¶}, round: 1,¬†‚Ä¶}
GameService.ts:414 üåê FRONTEND_EVENT_DEBUG: Ignoring event for different room (ours: null)
GameService.ts:410 üåê FRONTEND_EVENT_DEBUG: Received phase_change event for room 4810BA {phase: 'declaration', allowed_actions: Array(4), phase_data: {‚Ä¶}, players: {‚Ä¶}, round: 1,¬†‚Ä¶}
GameService.ts:414 üåê FRONTEND_EVENT_DEBUG: Ignoring event for different room (ours: null)
