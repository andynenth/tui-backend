['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'Scoring complete - starting next round'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'preparation', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'preparation', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'Scoring complete - starting next round', 'display': {'type': 'preparation', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}, 'players': {'Andy': {'hand': ['GENERAL_BLACK(13)', 'CHARIOT_BLACK(7)', 'HORSE_RED(6)', 'HORSE_RED(6)', 'SOLDIER_RED(2)', 'CANNON_BLACK(3)', 'CHARIOT_RED(8)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'ELEPHANT_BLACK(9)', 'GENERAL_RED(14)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'ELEPHANT_RED(10)'], 'hand_size': 8}, 'Bot 3': {'hand': ['CHARIOT_RED(8)', 'CANNON_RED(4)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}, 'Bot 4': {'hand': ['CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'HORSE_BLACK(5)', 'ELEPHANT_RED(10)', 'CANNON_RED(4)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)'], 'hand_size': 8}}, 'timestamp': 1751472946.174879, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1314 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
DEBUG_WS_QUEUE: Room 9655E4 got message: turn_complete
DEBUG_WS: Broadcasting event 'turn_complete' (op_id: unknown) to 1 clients in room 9655E4.
DEBUG_WS: Successfully sent 'turn_complete' to a client in room 9655E4.
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for preparation
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase preparation for room 9655E4
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for scoring
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for scoring
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.DECLARATION -> GamePhase.SCORING
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'declaration', 'new_phase': 'scoring', 'timestamp': '2025-07-02T09:15:46.175486', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 110, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to scoring with reason: All hands empty - round complete
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for scoring
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'scoring', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'All hands empty - round complete'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'scoring', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:scoring:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for scoring
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase scoring for room 9655E4
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.DECLARATION -> GamePhase.SCORING
{"timestamp": "2025-07-02T16:15:46.175775Z", "level": "INFO", "logger": "game.state.turn", "message": "\ud83c\udfc1 Turn phase complete - all hands empty", "module": "turn_state", "function": "_cleanup_phase", "line": 125}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for scoring
🔧 BASE_STATE_DEBUG: on_enter() called for scoring phase
{"timestamp": "2025-07-02T16:15:46.175999Z", "level": "INFO", "logger": "game.state.scoring", "message": "Entering scoring phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for scoring
🔄 SCORING_SETUP_DEBUG: Reset display_delay_complete = False
{"timestamp": "2025-07-02T16:15:46.176312Z", "level": "INFO", "logger": "game.state.scoring", "message": "Setting up Scoring Phase", "module": "scoring_state", "function": "_setup_phase", "line": 83}
🗳️ DECLARATION_DEBUG: game.player_declarations = {'Bot 2': 2, 'Bot 3': 1, 'Bot 4': 1, 'Andy': 3}
📋 SCORING_FIX_DEBUG: Andy - declared: 3, actual: 0
🏆 SCORING_DEBUG: Andy scoring data:
   📋 Declared: 3, Actual: 0
   📊 Base Score: -3, Multiplier: 1x, Final: -3
   💯 Total Score: -544
{"timestamp": "2025-07-02T16:15:46.176744Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Andy: declared 3, actual 0, base -3, final -3 (\u00d71), total -544", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 2 - declared: 2, actual: 0
🏆 SCORING_DEBUG: Bot 2 scoring data:
   📋 Declared: 2, Actual: 0
   📊 Base Score: -2, Multiplier: 1x, Final: -2
   💯 Total Score: -366
{"timestamp": "2025-07-02T16:15:46.177016Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 2: declared 2, actual 0, base -2, final -2 (\u00d71), total -366", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 3 - declared: 1, actual: 0
🏆 SCORING_DEBUG: Bot 3 scoring data:
   📋 Declared: 1, Actual: 0
   📊 Base Score: -1, Multiplier: 1x, Final: -1
   💯 Total Score: -182
{"timestamp": "2025-07-02T16:15:46.177226Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 3: declared 1, actual 0, base -1, final -1 (\u00d71), total -182", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 4 - declared: 1, actual: 0
🏆 SCORING_DEBUG: Bot 4 scoring data:
   📋 Declared: 1, Actual: 0
   📊 Base Score: -1, Multiplier: 1x, Final: -1
   💯 Total Score: -182
{"timestamp": "2025-07-02T16:15:46.177331Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 4: declared 1, actual 0, base -1, final -1 (\u00d71), total -182", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
🚀 SCORING_BROADCAST_DEBUG: Broadcasting scoring data:
   📊 Round scores: {'Andy': {'declared': 3, 'actual': 0, 'base_score': -3, 'multiplier': 1, 'final_score': -3, 'total_score': -544}, 'Bot 2': {'declared': 2, 'actual': 0, 'base_score': -2, 'multiplier': 1, 'final_score': -2, 'total_score': -366}, 'Bot 3': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -182}, 'Bot 4': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -182}}
   🏁 Game complete: False
   🏆 Winners: []
🚀 SCORING_BROADCAST_DEBUG: Also sending:
   💯 Total scores: {'Andy': -544, 'Bot 2': -366, 'Bot 3': -182, 'Bot 4': -182}
   👥 Players data: [{'name': 'Andy', 'is_bot': False, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 2', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 3', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 4', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}]
{"timestamp": "2025-07-02T16:15:46.177590Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83c\udfae Phase Data Update: Scoring calculated for round 110", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'scoring', 'allowed_actions': ['player_reconnect', 'player_disconnect', 'timeout', 'game_state_update'], 'phase_data': {'round_scores': {'Andy': {'declared': 3, 'actual': 0, 'base_score': -3, 'multiplier': 1, 'final_score': -3, 'total_score': -544}, 'Bot 2': {'declared': 2, 'actual': 0, 'base_score': -2, 'multiplier': 1, 'final_score': -2, 'total_score': -366}, 'Bot 3': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -182}, 'Bot 4': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -182}}, 'total_scores': {'Andy': -544, 'Bot 2': -366, 'Bot 3': -182, 'Bot 4': -182}, 'players': [{'name': 'Andy', 'is_bot': False, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 2', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 3', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 4', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}], 'game_complete': False, 'winners': [], 'scores_calculated': True, 'redeal_multiplier': 1}, 'players': {'Andy': {'hand': ['GENERAL_BLACK(13)', 'CHARIOT_BLACK(7)', 'HORSE_RED(6)', 'HORSE_RED(6)', 'SOLDIER_RED(2)', 'CANNON_BLACK(3)', 'CHARIOT_RED(8)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'ELEPHANT_BLACK(9)', 'GENERAL_RED(14)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'ELEPHANT_RED(10)'], 'hand_size': 8}, 'Bot 3': {'hand': ['CHARIOT_RED(8)', 'CANNON_RED(4)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}, 'Bot 4': {'hand': ['CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'HORSE_BLACK(5)', 'ELEPHANT_RED(10)', 'CANNON_RED(4)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)'], 'hand_size': 8}}, 'round': 110, 'reason': 'Scoring calculated for round 110', 'sequence': 182, 'timestamp': 1751472946.177925, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 2008 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
{"timestamp": "2025-07-02T16:15:46.178234Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Scoring calculated for round 110", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Scoring calculated for round 110
{"timestamp": "2025-07-02T16:15:46.178320Z", "level": "INFO", "logger": "game.state.scoring", "message": "Scoring complete. Game over: False", "module": "scoring_state", "function": "_setup_phase", "line": 131}
🎯 SCORING_DEBUG: Scores complete - auto-transitioning to next round (Preparation)
🔧 TRANSITION_DEBUG: _immediate_transition_to called: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 ASYNC_DEBUG: Thread: MainThread
🔧 ASYNC_DEBUG: Is running: True
🔧 ASYNC_DEBUG: Transition lock acquired: True
🔧 ASYNC_DEBUG: Transition depth: 1
🔧 REENTRANT_FIX: Already in transition (depth=1), proceeding without lock
🔧 TRANSITION_DEBUG: Starting transition steps...
🔧 TRANSITION_DEBUG: Step 1 - Cleanup tasks
🔧 TRANSITION_DEBUG: Step 2 - Exit current state
{"timestamp": "2025-07-02T16:15:46.178455Z", "level": "INFO", "logger": "game.state.scoring", "message": "Exiting scoring phase", "module": "base_state", "function": "on_exit", "line": 52}
{"timestamp": "2025-07-02T16:15:46.178585Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83c\udfaf Next round starter set to last turn winner: Andy", "module": "scoring_state", "function": "_prepare_next_round", "line": 386}
{"timestamp": "2025-07-02T16:15:46.178697Z", "level": "INFO", "logger": "game.state.scoring", "message": "Prepared for round 111", "module": "scoring_state", "function": "_prepare_next_round", "line": 396}
{"timestamp": "2025-07-02T16:15:46.178781Z", "level": "INFO", "logger": "game.state.scoring", "message": "Prepared for next round", "module": "scoring_state", "function": "_cleanup_phase", "line": 158}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for preparation
🔧 BASE_STATE_DEBUG: on_enter() called for preparation phase
{"timestamp": "2025-07-02T16:15:46.179896Z", "level": "INFO", "logger": "game.state.preparation", "message": "Entering preparation phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for preparation
{"timestamp": "2025-07-02T16:15:46.179984Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfb4 Preparation phase starting - dealing cards", "module": "preparation_state", "function": "_setup_phase", "line": 80}
🎴 PREP_STATE_DEBUG: Setup phase starting for room 9655E4
🔄 PREP_RESET_DEBUG: Reset Andy - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 2 - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 3 - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 4 - declared: 0, captured_piles: 0
🎴 PREP_STATE_DEBUG: Using guaranteed no redeal dealing
🛡️ DEBUG: Dealing guaranteed no-redeal hands with RED_GENERAL assigned to player 1
🛡️ DEBUG: Available pieces - Strong: 7, Weak: 24
  → Bot 2 gets RED_GENERAL: GENERAL_RED(14)
  → Andy gets strong piece: ADVISOR_RED(12)
  → Bot 3 gets strong piece: GENERAL_BLACK(13)
  → Bot 4 gets strong piece: ADVISOR_BLACK(11)
🛡️ DEBUG: Guaranteed no-redeal hands dealt:
🔧 DEBUG: Final hands verification:
  Andy: ['SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ELEPHANT_RED(10)', 'ELEPHANT_BLACK(9)', 'HORSE_RED(6)', 'CHARIOT_RED(8)', 'ADVISOR_RED(12)', 'SOLDIER_RED(2)']
    → Strong pieces (>9): 2
    → Has RED_GENERAL: False
  Bot 2: ['HORSE_BLACK(5)', 'SOLDIER_RED(2)', 'CHARIOT_BLACK(7)', 'GENERAL_RED(14)', 'HORSE_RED(6)', 'SOLDIER_BLACK(1)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)']
    → Strong pieces (>9): 1
    → Has RED_GENERAL: True
  Bot 3: ['CANNON_RED(4)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'GENERAL_BLACK(13)', 'CHARIOT_RED(8)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)', 'ADVISOR_RED(12)']
    → Strong pieces (>9): 3
    → Has RED_GENERAL: False
  Bot 4: ['CANNON_BLACK(3)', 'ADVISOR_BLACK(11)', 'CANNON_RED(4)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)']
    → Strong pieces (>9): 2
    → Has RED_GENERAL: False
✅ SUCCESS: No weak hands - redeal prevented!
{"timestamp": "2025-07-02T16:15:46.180588Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udd0d Weak hand check - Found 0 weak players: set()", "module": "preparation_state", "function": "_deal_cards", "line": 141}
✅ PREP_STATE_DEBUG: No weak hands - keeping existing starter: Andy
{"timestamp": "2025-07-02T16:15:46.180734Z", "level": "INFO", "logger": "game.state.preparation", "message": "\u2705 No weak hands - keeping existing starter: Andy", "module": "preparation_state", "function": "_deal_cards", "line": 205}
🎯 PREP_STATE_DEBUG: No weak hands detected - auto-transitioning to Declaration phase
{"timestamp": "2025-07-02T16:15:46.180841Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf No weak hands detected - transitioning to Declaration phase", "module": "preparation_state", "function": "_deal_cards", "line": 217}
🔧 TRANSITION_DEBUG: _immediate_transition_to called: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 ASYNC_DEBUG: Thread: MainThread
🔧 ASYNC_DEBUG: Is running: True
🔧 ASYNC_DEBUG: Transition lock acquired: True
🔧 ASYNC_DEBUG: Transition depth: 1
🔧 REENTRANT_FIX: Already in transition (depth=1), proceeding without lock
🔧 TRANSITION_DEBUG: Starting transition steps...
🔧 TRANSITION_DEBUG: Step 1 - Cleanup tasks
🔧 TRANSITION_DEBUG: Step 2 - Exit current state
{"timestamp": "2025-07-02T16:15:46.181079Z", "level": "INFO", "logger": "game.state.preparation", "message": "Exiting preparation phase", "module": "base_state", "function": "on_exit", "line": 52}
{"timestamp": "2025-07-02T16:15:46.181263Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf Round starter already set: Andy", "module": "preparation_state", "function": "_cleanup_phase", "line": 94}
🎯 PREP_STATE_DEBUG: Cleanup phase - current_player: Andy
🎯 PREP_STATE_DEBUG: Cleanup phase - round_starter: Andy
{"timestamp": "2025-07-02T16:15:46.181444Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udccb Preparation complete - Starter: Andy, Multiplier: 1x", "module": "preparation_state", "function": "_cleanup_phase", "line": 105}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for declaration
🔧 BASE_STATE_DEBUG: on_enter() called for declaration phase
{"timestamp": "2025-07-02T16:15:46.181545Z", "level": "INFO", "logger": "game.state.declaration", "message": "Entering declaration phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for declaration
📢 DECL_STATE_DEBUG: Using round_starter: Andy
{"timestamp": "2025-07-02T16:15:46.181642Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup - basic data", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy - -544 pts', 'Bot 2 - -366 pts', 'Bot 3 - -182 pts', 'Bot 4 - -182 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0}, 'players': {'Andy': {'hand': ['SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ELEPHANT_RED(10)', 'ELEPHANT_BLACK(9)', 'HORSE_RED(6)', 'CHARIOT_RED(8)', 'ADVISOR_RED(12)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['HORSE_BLACK(5)', 'SOLDIER_RED(2)', 'CHARIOT_BLACK(7)', 'GENERAL_RED(14)', 'HORSE_RED(6)', 'SOLDIER_BLACK(1)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)'], 'hand_size': 8}, 'Bot 3': {'hand': ['CANNON_RED(4)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'GENERAL_BLACK(13)', 'CHARIOT_RED(8)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)', 'ADVISOR_RED(12)'], 'hand_size': 8}, 'Bot 4': {'hand': ['CANNON_BLACK(3)', 'ADVISOR_BLACK(11)', 'CANNON_RED(4)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}}, 'round': 111, 'reason': 'Declaration phase setup - basic data', 'sequence': 224, 'timestamp': 1751472946.1818938, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1237 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
{"timestamp": "2025-07-02T16:15:46.182248Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Declaration phase setup - basic data", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup - basic data
{"timestamp": "2025-07-02T16:15:46.182425Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup complete - current declarer: Andy", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy - -544 pts', 'Bot 2 - -366 pts', 'Bot 3 - -182 pts', 'Bot 4 - -182 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'players': {'Andy': {'hand': ['SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ELEPHANT_RED(10)', 'ELEPHANT_BLACK(9)', 'HORSE_RED(6)', 'CHARIOT_RED(8)', 'ADVISOR_RED(12)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['HORSE_BLACK(5)', 'SOLDIER_RED(2)', 'CHARIOT_BLACK(7)', 'GENERAL_RED(14)', 'HORSE_RED(6)', 'SOLDIER_BLACK(1)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)'], 'hand_size': 8}, 'Bot 3': {'hand': ['CANNON_RED(4)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'GENERAL_BLACK(13)', 'CHARIOT_RED(8)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)', 'ADVISOR_RED(12)'], 'hand_size': 8}, 'Bot 4': {'hand': ['CANNON_BLACK(3)', 'ADVISOR_BLACK(11)', 'CANNON_RED(4)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}}, 'round': 111, 'reason': 'Declaration phase setup complete - current declarer: Andy', 'sequence': 225, 'timestamp': 1751472946.182654, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1285 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
DEBUG_WS_QUEUE: Room 9655E4 got message: turn_complete
DEBUG_WS: Broadcasting event 'turn_complete' (op_id: unknown) to 1 clients in room 9655E4.
DEBUG_WS: Successfully sent 'turn_complete' to a client in room 9655E4.
{"timestamp": "2025-07-02T16:15:46.183084Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Declaration phase setup complete - current declarer: Andy", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup complete - current declarer: Andy
🤖 ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Andy
🔔 BOT_MANAGER_DEBUG: Received event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Andy - -544 pts', 'Bot 2 - -366 pts', 'Bot 3 - -182 pts', 'Bot 4 - -182 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'current_declarer': 'Andy', 'reason': 'Declaration phase setup complete - current declarer: Andy'}
✅ BOT_MANAGER_DEBUG: Found handler for room 9655E4, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room 9655E4 handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
🔍 BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
🔧 BOT_MANAGER_LOCK_FIX: Step 1 - Determining bot actions (minimal lock scope)
🔧 BOT_MANAGER_LOCK_FIX: Lock acquired for decision logic only
🚀 BOT_HANDLER_DEBUG: Analyzing enterprise phase change
🔧 BOT_MANAGER_LOCK_FIX: Decision logic completed - releasing lock
🔧 BOT_MANAGER_LOCK_FIX: Step 2 - Executing 0 bot actions (lock-free)
🤖 DECLARATION_DEBUG: Triggering bot manager for declaration phase
🔧 DECLARATION_DEBUG: Bot manager active games: ['9655E4']
⚠️ DECLARATION_DEBUG: No room_id found to trigger bot manager
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for declaration
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for declaration
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'preparation', 'new_phase': 'declaration', 'timestamp': '2025-07-02T09:15:46.183268', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 111, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to declaration with reason: No weak hands detected - preparation complete
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for declaration
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'No weak hands detected - preparation complete'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'declaration', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:declaration:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for declaration
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase declaration for room 9655E4
🔔 BOT_MANAGER_DEBUG: Received event 'round_started' for room 9655E4 with data: {'phase': 'declaration', 'starter': 'Andy'}
✅ BOT_MANAGER_DEBUG: Found handler for room 9655E4, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room 9655E4 handling event 'round_started' with data keys: ['phase', 'starter']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': False
🔍 BOT_HANDLER_DEBUG: Event value repr: 'round_started'
🔧 BOT_MANAGER_LOCK_FIX: Step 1 - Determining bot actions (minimal lock scope)
🔧 BOT_MANAGER_LOCK_FIX: Lock acquired for decision logic only
🎪 BOT_HANDLER_DEBUG: Analyzing round start
🔧 BOT_MANAGER_LOCK_FIX: Decision logic completed - releasing lock
🔧 BOT_MANAGER_LOCK_FIX: Step 2 - Executing 1 bot actions (lock-free)
🔧 BOT_MANAGER_LOCK_FIX: Executing action round_start (lock-free)
🔍 BOT_ROUND_DEBUG: Game state current_order: None
🔍 BOT_ROUND_DEBUG: Game round_starter: Andy
🔍 BOT_ROUND_DEBUG: Game current_player: Andy
🔧 BOT_ROUND_DEBUG: Declarations now handled by enterprise phase change - skipping old path
✅ BOT_MANAGER_LOCK_FIX: Action round_start completed successfully
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for preparation
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for preparation
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'scoring', 'new_phase': 'preparation', 'timestamp': '2025-07-02T09:15:46.183716', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 111, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to preparation with reason: Scoring complete - starting next round
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for preparation
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'preparation', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'Scoring complete - starting next round'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'preparation', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:preparation:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for preparation
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase preparation for room 9655E4
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for scoring
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for scoring
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.DECLARATION -> GamePhase.SCORING
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'declaration', 'new_phase': 'scoring', 'timestamp': '2025-07-02T09:15:46.183968', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 111, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to scoring with reason: All hands empty - round complete
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for scoring
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'scoring', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'All hands empty - round complete'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'scoring', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:scoring:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for scoring
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase scoring for room 9655E4
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.DECLARATION -> GamePhase.SCORING
{"timestamp": "2025-07-02T16:15:46.184282Z", "level": "INFO", "logger": "game.state.turn", "message": "\ud83c\udfc1 Turn phase complete - all hands empty", "module": "turn_state", "function": "_cleanup_phase", "line": 125}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for scoring
🔧 BASE_STATE_DEBUG: on_enter() called for scoring phase
{"timestamp": "2025-07-02T16:15:46.184347Z", "level": "INFO", "logger": "game.state.scoring", "message": "Entering scoring phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for scoring
🔄 SCORING_SETUP_DEBUG: Reset display_delay_complete = False
{"timestamp": "2025-07-02T16:15:46.184393Z", "level": "INFO", "logger": "game.state.scoring", "message": "Setting up Scoring Phase", "module": "scoring_state", "function": "_setup_phase", "line": 83}
🗳️ DECLARATION_DEBUG: game.player_declarations = {'Bot 2': 2, 'Bot 3': 1, 'Bot 4': 1, 'Andy': 3}
📋 SCORING_FIX_DEBUG: Andy - declared: 3, actual: 0
🏆 SCORING_DEBUG: Andy scoring data:
   📋 Declared: 3, Actual: 0
   📊 Base Score: -3, Multiplier: 1x, Final: -3
   💯 Total Score: -547
{"timestamp": "2025-07-02T16:15:46.184454Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Andy: declared 3, actual 0, base -3, final -3 (\u00d71), total -547", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 2 - declared: 2, actual: 0
🏆 SCORING_DEBUG: Bot 2 scoring data:
   📋 Declared: 2, Actual: 0
   📊 Base Score: -2, Multiplier: 1x, Final: -2
   💯 Total Score: -368
{"timestamp": "2025-07-02T16:15:46.184507Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 2: declared 2, actual 0, base -2, final -2 (\u00d71), total -368", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 3 - declared: 1, actual: 0
🏆 SCORING_DEBUG: Bot 3 scoring data:
   📋 Declared: 1, Actual: 0
   📊 Base Score: -1, Multiplier: 1x, Final: -1
   💯 Total Score: -183
{"timestamp": "2025-07-02T16:15:46.184557Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 3: declared 1, actual 0, base -1, final -1 (\u00d71), total -183", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 4 - declared: 1, actual: 0
🏆 SCORING_DEBUG: Bot 4 scoring data:
   📋 Declared: 1, Actual: 0
   📊 Base Score: -1, Multiplier: 1x, Final: -1
   💯 Total Score: -183
{"timestamp": "2025-07-02T16:15:46.184606Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 4: declared 1, actual 0, base -1, final -1 (\u00d71), total -183", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
🚀 SCORING_BROADCAST_DEBUG: Broadcasting scoring data:
   📊 Round scores: {'Andy': {'declared': 3, 'actual': 0, 'base_score': -3, 'multiplier': 1, 'final_score': -3, 'total_score': -547}, 'Bot 2': {'declared': 2, 'actual': 0, 'base_score': -2, 'multiplier': 1, 'final_score': -2, 'total_score': -368}, 'Bot 3': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -183}, 'Bot 4': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -183}}
   🏁 Game complete: False
   🏆 Winners: []
🚀 SCORING_BROADCAST_DEBUG: Also sending:
   💯 Total scores: {'Andy': -547, 'Bot 2': -368, 'Bot 3': -183, 'Bot 4': -183}
   👥 Players data: [{'name': 'Andy', 'is_bot': False, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 2', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 3', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 4', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}]
{"timestamp": "2025-07-02T16:15:46.184841Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83c\udfae Phase Data Update: Scoring calculated for round 111", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'scoring', 'allowed_actions': ['player_reconnect', 'player_disconnect', 'timeout', 'game_state_update'], 'phase_data': {'round_scores': {'Andy': {'declared': 3, 'actual': 0, 'base_score': -3, 'multiplier': 1, 'final_score': -3, 'total_score': -547}, 'Bot 2': {'declared': 2, 'actual': 0, 'base_score': -2, 'multiplier': 1, 'final_score': -2, 'total_score': -368}, 'Bot 3': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -183}, 'Bot 4': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -183}}, 'total_scores': {'Andy': -547, 'Bot 2': -368, 'Bot 3': -183, 'Bot 4': -183}, 'players': [{'name': 'Andy', 'is_bot': False, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 2', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 3', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 4', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}], 'game_complete': False, 'winners': [], 'scores_calculated': True, 'redeal_multiplier': 1}, 'players': {'Andy': {'hand': ['SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ELEPHANT_RED(10)', 'ELEPHANT_BLACK(9)', 'HORSE_RED(6)', 'CHARIOT_RED(8)', 'ADVISOR_RED(12)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['HORSE_BLACK(5)', 'SOLDIER_RED(2)', 'CHARIOT_BLACK(7)', 'GENERAL_RED(14)', 'HORSE_RED(6)', 'SOLDIER_BLACK(1)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)'], 'hand_size': 8}, 'Bot 3': {'hand': ['CANNON_RED(4)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'GENERAL_BLACK(13)', 'CHARIOT_RED(8)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)', 'ADVISOR_RED(12)'], 'hand_size': 8}, 'Bot 4': {'hand': ['CANNON_BLACK(3)', 'ADVISOR_BLACK(11)', 'CANNON_RED(4)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}}, 'round': 111, 'reason': 'Scoring calculated for round 111', 'sequence': 183, 'timestamp': 1751472946.185041, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 2008 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
{"timestamp": "2025-07-02T16:15:46.185393Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Scoring calculated for round 111", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Scoring calculated for round 111
{"timestamp": "2025-07-02T16:15:46.185647Z", "level": "INFO", "logger": "game.state.scoring", "message": "Scoring complete. Game over: False", "module": "scoring_state", "function": "_setup_phase", "line": 131}
🎯 SCORING_DEBUG: Scores complete - auto-transitioning to next round (Preparation)
🔧 TRANSITION_DEBUG: _immediate_transition_to called: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 ASYNC_DEBUG: Thread: MainThread
🔧 ASYNC_DEBUG: Is running: True
🔧 ASYNC_DEBUG: Transition lock acquired: True
🔧 ASYNC_DEBUG: Transition depth: 1
🔧 REENTRANT_FIX: Already in transition (depth=1), proceeding without lock
🔧 TRANSITION_DEBUG: Starting transition steps...
🔧 TRANSITION_DEBUG: Step 1 - Cleanup tasks
🔧 TRANSITION_DEBUG: Step 2 - Exit current state
{"timestamp": "2025-07-02T16:15:46.185881Z", "level": "INFO", "logger": "game.state.scoring", "message": "Exiting scoring phase", "module": "base_state", "function": "on_exit", "line": 52}
{"timestamp": "2025-07-02T16:15:46.185967Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83c\udfaf Next round starter set to last turn winner: Andy", "module": "scoring_state", "function": "_prepare_next_round", "line": 386}
{"timestamp": "2025-07-02T16:15:46.186030Z", "level": "INFO", "logger": "game.state.scoring", "message": "Prepared for round 112", "module": "scoring_state", "function": "_prepare_next_round", "line": 396}
{"timestamp": "2025-07-02T16:15:46.186105Z", "level": "INFO", "logger": "game.state.scoring", "message": "Prepared for next round", "module": "scoring_state", "function": "_cleanup_phase", "line": 158}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for preparation
🔧 BASE_STATE_DEBUG: on_enter() called for preparation phase
{"timestamp": "2025-07-02T16:15:46.186298Z", "level": "INFO", "logger": "game.state.preparation", "message": "Entering preparation phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for preparation
{"timestamp": "2025-07-02T16:15:46.186428Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfb4 Preparation phase starting - dealing cards", "module": "preparation_state", "function": "_setup_phase", "line": 80}
🎴 PREP_STATE_DEBUG: Setup phase starting for room 9655E4
🔄 PREP_RESET_DEBUG: Reset Andy - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 2 - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 3 - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 4 - declared: 0, captured_piles: 0
🎴 PREP_STATE_DEBUG: Using guaranteed no redeal dealing
🛡️ DEBUG: Dealing guaranteed no-redeal hands with RED_GENERAL assigned to player 1
🛡️ DEBUG: Available pieces - Strong: 7, Weak: 24
  → Bot 2 gets RED_GENERAL: GENERAL_RED(14)
  → Andy gets strong piece: ADVISOR_BLACK(11)
  → Bot 3 gets strong piece: ADVISOR_RED(12)
  → Bot 4 gets strong piece: ADVISOR_BLACK(11)
🛡️ DEBUG: Guaranteed no-redeal hands dealt:
🔧 DEBUG: Final hands verification:
  Andy: ['ADVISOR_BLACK(11)', 'CANNON_RED(4)', 'ELEPHANT_RED(10)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'ADVISOR_RED(12)', 'HORSE_RED(6)', 'SOLDIER_RED(2)']
    → Strong pieces (>9): 3
    → Has RED_GENERAL: False
  Bot 2: ['SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'ELEPHANT_BLACK(9)']
    → Strong pieces (>9): 1
    → Has RED_GENERAL: True
  Bot 3: ['SOLDIER_RED(2)', 'HORSE_RED(6)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'ELEPHANT_BLACK(9)']
    → Strong pieces (>9): 1
    → Has RED_GENERAL: False
  Bot 4: ['SOLDIER_BLACK(1)', 'GENERAL_BLACK(13)', 'HORSE_BLACK(5)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'SOLDIER_RED(2)']
    → Strong pieces (>9): 3
    → Has RED_GENERAL: False
✅ SUCCESS: No weak hands - redeal prevented!
{"timestamp": "2025-07-02T16:15:46.187157Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udd0d Weak hand check - Found 0 weak players: set()", "module": "preparation_state", "function": "_deal_cards", "line": 141}
✅ PREP_STATE_DEBUG: No weak hands - keeping existing starter: Andy
{"timestamp": "2025-07-02T16:15:46.187243Z", "level": "INFO", "logger": "game.state.preparation", "message": "\u2705 No weak hands - keeping existing starter: Andy", "module": "preparation_state", "function": "_deal_cards", "line": 205}
🎯 PREP_STATE_DEBUG: No weak hands detected - auto-transitioning to Declaration phase
{"timestamp": "2025-07-02T16:15:46.187399Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf No weak hands detected - transitioning to Declaration phase", "module": "preparation_state", "function": "_deal_cards", "line": 217}
🔧 TRANSITION_DEBUG: _immediate_transition_to called: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 ASYNC_DEBUG: Thread: MainThread
🔧 ASYNC_DEBUG: Is running: True
🔧 ASYNC_DEBUG: Transition lock acquired: True
🔧 ASYNC_DEBUG: Transition depth: 1
🔧 REENTRANT_FIX: Already in transition (depth=1), proceeding without lock
🔧 TRANSITION_DEBUG: Starting transition steps...
🔧 TRANSITION_DEBUG: Step 1 - Cleanup tasks
🔧 TRANSITION_DEBUG: Step 2 - Exit current state
{"timestamp": "2025-07-02T16:15:46.187565Z", "level": "INFO", "logger": "game.state.preparation", "message": "Exiting preparation phase", "module": "base_state", "function": "on_exit", "line": 52}
{"timestamp": "2025-07-02T16:15:46.187631Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf Round starter already set: Andy", "module": "preparation_state", "function": "_cleanup_phase", "line": 94}
🎯 PREP_STATE_DEBUG: Cleanup phase - current_player: Andy
🎯 PREP_STATE_DEBUG: Cleanup phase - round_starter: Andy
{"timestamp": "2025-07-02T16:15:46.187705Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udccb Preparation complete - Starter: Andy, Multiplier: 1x", "module": "preparation_state", "function": "_cleanup_phase", "line": 105}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for declaration
🔧 BASE_STATE_DEBUG: on_enter() called for declaration phase
{"timestamp": "2025-07-02T16:15:46.187765Z", "level": "INFO", "logger": "game.state.declaration", "message": "Entering declaration phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for declaration
📢 DECL_STATE_DEBUG: Using round_starter: Andy
{"timestamp": "2025-07-02T16:15:46.187892Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup - basic data", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy - -547 pts', 'Bot 2 - -368 pts', 'Bot 3 - -183 pts', 'Bot 4 - -183 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0}, 'players': {'Andy': {'hand': ['ADVISOR_BLACK(11)', 'CANNON_RED(4)', 'ELEPHANT_RED(10)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'ADVISOR_RED(12)', 'HORSE_RED(6)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'ELEPHANT_BLACK(9)'], 'hand_size': 8}, 'Bot 3': {'hand': ['SOLDIER_RED(2)', 'HORSE_RED(6)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'ELEPHANT_BLACK(9)'], 'hand_size': 8}, 'Bot 4': {'hand': ['SOLDIER_BLACK(1)', 'GENERAL_BLACK(13)', 'HORSE_BLACK(5)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'SOLDIER_RED(2)'], 'hand_size': 8}}, 'round': 112, 'reason': 'Declaration phase setup - basic data', 'sequence': 226, 'timestamp': 1751472946.18826, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1235 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
{"timestamp": "2025-07-02T16:15:46.189353Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Declaration phase setup - basic data", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup - basic data
{"timestamp": "2025-07-02T16:15:46.189489Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup complete - current declarer: Andy", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy - -547 pts', 'Bot 2 - -368 pts', 'Bot 3 - -183 pts', 'Bot 4 - -183 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'players': {'Andy': {'hand': ['ADVISOR_BLACK(11)', 'CANNON_RED(4)', 'ELEPHANT_RED(10)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'ADVISOR_RED(12)', 'HORSE_RED(6)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'ELEPHANT_BLACK(9)'], 'hand_size': 8}, 'Bot 3': {'hand': ['SOLDIER_RED(2)', 'HORSE_RED(6)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'ELEPHANT_BLACK(9)'], 'hand_size': 8}, 'Bot 4': {'hand': ['SOLDIER_BLACK(1)', 'GENERAL_BLACK(13)', 'HORSE_BLACK(5)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'SOLDIER_RED(2)'], 'hand_size': 8}}, 'round': 112, 'reason': 'Declaration phase setup complete - current declarer: Andy', 'sequence': 227, 'timestamp': 1751472946.189655, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1285 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
DEBUG_WS_QUEUE: Room 9655E4 got message: turn_complete
DEBUG_WS: Broadcasting event 'turn_complete' (op_id: unknown) to 1 clients in room 9655E4.
DEBUG_WS: Successfully sent 'turn_complete' to a client in room 9655E4.
{"timestamp": "2025-07-02T16:15:46.190433Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Declaration phase setup complete - current declarer: Andy", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup complete - current declarer: Andy
🤖 ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Andy
🔔 BOT_MANAGER_DEBUG: Received event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Andy - -547 pts', 'Bot 2 - -368 pts', 'Bot 3 - -183 pts', 'Bot 4 - -183 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'current_declarer': 'Andy', 'reason': 'Declaration phase setup complete - current declarer: Andy'}
✅ BOT_MANAGER_DEBUG: Found handler for room 9655E4, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room 9655E4 handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
🔍 BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
🔧 BOT_MANAGER_LOCK_FIX: Step 1 - Determining bot actions (minimal lock scope)
🔧 BOT_MANAGER_LOCK_FIX: Lock acquired for decision logic only
🚀 BOT_HANDLER_DEBUG: Analyzing enterprise phase change
🔧 BOT_MANAGER_LOCK_FIX: Decision logic completed - releasing lock
🔧 BOT_MANAGER_LOCK_FIX: Step 2 - Executing 0 bot actions (lock-free)
🤖 DECLARATION_DEBUG: Triggering bot manager for declaration phase
🔧 DECLARATION_DEBUG: Bot manager active games: ['9655E4']
⚠️ DECLARATION_DEBUG: No room_id found to trigger bot manager
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for declaration
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for declaration
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'preparation', 'new_phase': 'declaration', 'timestamp': '2025-07-02T09:15:46.190985', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 112, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to declaration with reason: No weak hands detected - preparation complete
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for declaration
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'No weak hands detected - preparation complete'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'declaration', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:declaration:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for declaration
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase declaration for room 9655E4
🔔 BOT_MANAGER_DEBUG: Received event 'round_started' for room 9655E4 with data: {'phase': 'declaration', 'starter': 'Andy'}
✅ BOT_MANAGER_DEBUG: Found handler for room 9655E4, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room 9655E4 handling event 'round_started' with data keys: ['phase', 'starter']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': False
🔍 BOT_HANDLER_DEBUG: Event value repr: 'round_started'
🔧 BOT_MANAGER_LOCK_FIX: Step 1 - Determining bot actions (minimal lock scope)
🔧 BOT_MANAGER_LOCK_FIX: Lock acquired for decision logic only
🎪 BOT_HANDLER_DEBUG: Analyzing round start
🔧 BOT_MANAGER_LOCK_FIX: Decision logic completed - releasing lock
🔧 BOT_MANAGER_LOCK_FIX: Step 2 - Executing 1 bot actions (lock-free)
🔧 BOT_MANAGER_LOCK_FIX: Executing action round_start (lock-free)
🔍 BOT_ROUND_DEBUG: Game state current_order: None
🔍 BOT_ROUND_DEBUG: Game round_starter: Andy
🔍 BOT_ROUND_DEBUG: Game current_player: Andy
🔧 BOT_ROUND_DEBUG: Declarations now handled by enterprise phase change - skipping old path
✅ BOT_MANAGER_LOCK_FIX: Action round_start completed successfully
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for preparation
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for preparation
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'scoring', 'new_phase': 'preparation', 'timestamp': '2025-07-02T09:15:46.191632', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 112, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to preparation with reason: Scoring complete - starting next round
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for preparation
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'preparation', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'Scoring complete - starting next round'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'preparation', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:preparation:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for preparation
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase preparation for room 9655E4
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for scoring
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for scoring
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.DECLARATION -> GamePhase.SCORING
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'declaration', 'new_phase': 'scoring', 'timestamp': '2025-07-02T09:15:46.192016', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 112, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to scoring with reason: All hands empty - round complete
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for scoring
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'scoring', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'All hands empty - round complete'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'scoring', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'scoring', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'All hands empty - round complete', 'display': {'type': 'scoring', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}, 'players': {'Andy': {'hand': ['ADVISOR_BLACK(11)', 'CANNON_RED(4)', 'ELEPHANT_RED(10)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'ADVISOR_RED(12)', 'HORSE_RED(6)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'ELEPHANT_BLACK(9)'], 'hand_size': 8}, 'Bot 3': {'hand': ['SOLDIER_RED(2)', 'HORSE_RED(6)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'ELEPHANT_BLACK(9)'], 'hand_size': 8}, 'Bot 4': {'hand': ['SOLDIER_BLACK(1)', 'GENERAL_BLACK(13)', 'HORSE_BLACK(5)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'SOLDIER_RED(2)'], 'hand_size': 8}}, 'timestamp': 1751472946.1922328, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1301 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for scoring
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase scoring for room 9655E4
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.DECLARATION -> GamePhase.SCORING
{"timestamp": "2025-07-02T16:15:46.193123Z", "level": "INFO", "logger": "game.state.turn", "message": "\ud83c\udfc1 Turn phase complete - all hands empty", "module": "turn_state", "function": "_cleanup_phase", "line": 125}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for scoring
🔧 BASE_STATE_DEBUG: on_enter() called for scoring phase
{"timestamp": "2025-07-02T16:15:46.193283Z", "level": "INFO", "logger": "game.state.scoring", "message": "Entering scoring phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for scoring
🔄 SCORING_SETUP_DEBUG: Reset display_delay_complete = False
{"timestamp": "2025-07-02T16:15:46.193419Z", "level": "INFO", "logger": "game.state.scoring", "message": "Setting up Scoring Phase", "module": "scoring_state", "function": "_setup_phase", "line": 83}
🗳️ DECLARATION_DEBUG: game.player_declarations = {'Bot 2': 2, 'Bot 3': 1, 'Bot 4': 1, 'Andy': 3}
📋 SCORING_FIX_DEBUG: Andy - declared: 3, actual: 0
🏆 SCORING_DEBUG: Andy scoring data:
   📋 Declared: 3, Actual: 0
   📊 Base Score: -3, Multiplier: 1x, Final: -3
   💯 Total Score: -550
{"timestamp": "2025-07-02T16:15:46.193530Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Andy: declared 3, actual 0, base -3, final -3 (\u00d71), total -550", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 2 - declared: 2, actual: 0
🏆 SCORING_DEBUG: Bot 2 scoring data:
   📋 Declared: 2, Actual: 0
   📊 Base Score: -2, Multiplier: 1x, Final: -2
   💯 Total Score: -370
{"timestamp": "2025-07-02T16:15:46.193660Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 2: declared 2, actual 0, base -2, final -2 (\u00d71), total -370", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 3 - declared: 1, actual: 0
🏆 SCORING_DEBUG: Bot 3 scoring data:
   📋 Declared: 1, Actual: 0
   📊 Base Score: -1, Multiplier: 1x, Final: -1
   💯 Total Score: -184
{"timestamp": "2025-07-02T16:15:46.193820Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 3: declared 1, actual 0, base -1, final -1 (\u00d71), total -184", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 4 - declared: 1, actual: 0
🏆 SCORING_DEBUG: Bot 4 scoring data:
   📋 Declared: 1, Actual: 0
   📊 Base Score: -1, Multiplier: 1x, Final: -1
   💯 Total Score: -184
{"timestamp": "2025-07-02T16:15:46.193965Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 4: declared 1, actual 0, base -1, final -1 (\u00d71), total -184", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
🚀 SCORING_BROADCAST_DEBUG: Broadcasting scoring data:
   📊 Round scores: {'Andy': {'declared': 3, 'actual': 0, 'base_score': -3, 'multiplier': 1, 'final_score': -3, 'total_score': -550}, 'Bot 2': {'declared': 2, 'actual': 0, 'base_score': -2, 'multiplier': 1, 'final_score': -2, 'total_score': -370}, 'Bot 3': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -184}, 'Bot 4': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -184}}
   🏁 Game complete: False
   🏆 Winners: []
🚀 SCORING_BROADCAST_DEBUG: Also sending:
   💯 Total scores: {'Andy': -550, 'Bot 2': -370, 'Bot 3': -184, 'Bot 4': -184}
   👥 Players data: [{'name': 'Andy', 'is_bot': False, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 2', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 3', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 4', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}]
{"timestamp": "2025-07-02T16:15:46.194278Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83c\udfae Phase Data Update: Scoring calculated for round 112", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'scoring', 'allowed_actions': ['player_reconnect', 'player_disconnect', 'timeout', 'game_state_update'], 'phase_data': {'round_scores': {'Andy': {'declared': 3, 'actual': 0, 'base_score': -3, 'multiplier': 1, 'final_score': -3, 'total_score': -550}, 'Bot 2': {'declared': 2, 'actual': 0, 'base_score': -2, 'multiplier': 1, 'final_score': -2, 'total_score': -370}, 'Bot 3': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -184}, 'Bot 4': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -184}}, 'total_scores': {'Andy': -550, 'Bot 2': -370, 'Bot 3': -184, 'Bot 4': -184}, 'players': [{'name': 'Andy', 'is_bot': False, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 2', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 3', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 4', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}], 'game_complete': False, 'winners': [], 'scores_calculated': True, 'redeal_multiplier': 1}, 'players': {'Andy': {'hand': ['ADVISOR_BLACK(11)', 'CANNON_RED(4)', 'ELEPHANT_RED(10)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'ADVISOR_RED(12)', 'HORSE_RED(6)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'ELEPHANT_BLACK(9)'], 'hand_size': 8}, 'Bot 3': {'hand': ['SOLDIER_RED(2)', 'HORSE_RED(6)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'ELEPHANT_BLACK(9)'], 'hand_size': 8}, 'Bot 4': {'hand': ['SOLDIER_BLACK(1)', 'GENERAL_BLACK(13)', 'HORSE_BLACK(5)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'SOLDIER_RED(2)'], 'hand_size': 8}}, 'round': 112, 'reason': 'Scoring calculated for round 112', 'sequence': 184, 'timestamp': 1751472946.194607, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 2008 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
{"timestamp": "2025-07-02T16:15:46.195096Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Scoring calculated for round 112", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Scoring calculated for round 112
{"timestamp": "2025-07-02T16:15:46.195241Z", "level": "INFO", "logger": "game.state.scoring", "message": "Scoring complete. Game over: False", "module": "scoring_state", "function": "_setup_phase", "line": 131}
🎯 SCORING_DEBUG: Scores complete - auto-transitioning to next round (Preparation)
🔧 TRANSITION_DEBUG: _immediate_transition_to called: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 ASYNC_DEBUG: Thread: MainThread
🔧 ASYNC_DEBUG: Is running: True
🔧 ASYNC_DEBUG: Transition lock acquired: True
🔧 ASYNC_DEBUG: Transition depth: 1
🔧 REENTRANT_FIX: Already in transition (depth=1), proceeding without lock
🔧 TRANSITION_DEBUG: Starting transition steps...
🔧 TRANSITION_DEBUG: Step 1 - Cleanup tasks
🔧 TRANSITION_DEBUG: Step 2 - Exit current state
{"timestamp": "2025-07-02T16:15:46.195608Z", "level": "INFO", "logger": "game.state.scoring", "message": "Exiting scoring phase", "module": "base_state", "function": "on_exit", "line": 52}
{"timestamp": "2025-07-02T16:15:46.195696Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83c\udfaf Next round starter set to last turn winner: Andy", "module": "scoring_state", "function": "_prepare_next_round", "line": 386}
{"timestamp": "2025-07-02T16:15:46.195809Z", "level": "INFO", "logger": "game.state.scoring", "message": "Prepared for round 113", "module": "scoring_state", "function": "_prepare_next_round", "line": 396}
{"timestamp": "2025-07-02T16:15:46.195879Z", "level": "INFO", "logger": "game.state.scoring", "message": "Prepared for next round", "module": "scoring_state", "function": "_cleanup_phase", "line": 158}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for preparation
🔧 BASE_STATE_DEBUG: on_enter() called for preparation phase
{"timestamp": "2025-07-02T16:15:46.196037Z", "level": "INFO", "logger": "game.state.preparation", "message": "Entering preparation phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for preparation
{"timestamp": "2025-07-02T16:15:46.196135Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfb4 Preparation phase starting - dealing cards", "module": "preparation_state", "function": "_setup_phase", "line": 80}
🎴 PREP_STATE_DEBUG: Setup phase starting for room 9655E4
🔄 PREP_RESET_DEBUG: Reset Andy - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 2 - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 3 - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 4 - declared: 0, captured_piles: 0
🎴 PREP_STATE_DEBUG: Using guaranteed no redeal dealing
🛡️ DEBUG: Dealing guaranteed no-redeal hands with RED_GENERAL assigned to player 1
🛡️ DEBUG: Available pieces - Strong: 7, Weak: 24
  → Bot 2 gets RED_GENERAL: GENERAL_RED(14)
  → Andy gets strong piece: ADVISOR_RED(12)
  → Bot 3 gets strong piece: ADVISOR_BLACK(11)
  → Bot 4 gets strong piece: ADVISOR_RED(12)
🛡️ DEBUG: Guaranteed no-redeal hands dealt:
🔧 DEBUG: Final hands verification:
  Andy: ['ELEPHANT_RED(10)', 'ADVISOR_RED(12)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'HORSE_RED(6)', 'SOLDIER_RED(2)']
    → Strong pieces (>9): 2
    → Has RED_GENERAL: False
  Bot 2: ['ELEPHANT_BLACK(9)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'ADVISOR_BLACK(11)', 'CANNON_RED(4)', 'ELEPHANT_BLACK(9)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)']
    → Strong pieces (>9): 2
    → Has RED_GENERAL: True
  Bot 3: ['SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'CHARIOT_RED(8)']
    → Strong pieces (>9): 2
    → Has RED_GENERAL: False
  Bot 4: ['GENERAL_BLACK(13)', 'HORSE_RED(6)', 'HORSE_BLACK(5)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ADVISOR_RED(12)']
    → Strong pieces (>9): 2
    → Has RED_GENERAL: False
✅ SUCCESS: No weak hands - redeal prevented!
{"timestamp": "2025-07-02T16:15:46.196853Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udd0d Weak hand check - Found 0 weak players: set()", "module": "preparation_state", "function": "_deal_cards", "line": 141}
✅ PREP_STATE_DEBUG: No weak hands - keeping existing starter: Andy
{"timestamp": "2025-07-02T16:15:46.196932Z", "level": "INFO", "logger": "game.state.preparation", "message": "\u2705 No weak hands - keeping existing starter: Andy", "module": "preparation_state", "function": "_deal_cards", "line": 205}
🎯 PREP_STATE_DEBUG: No weak hands detected - auto-transitioning to Declaration phase
{"timestamp": "2025-07-02T16:15:46.197023Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf No weak hands detected - transitioning to Declaration phase", "module": "preparation_state", "function": "_deal_cards", "line": 217}
🔧 TRANSITION_DEBUG: _immediate_transition_to called: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 ASYNC_DEBUG: Thread: MainThread
🔧 ASYNC_DEBUG: Is running: True
🔧 ASYNC_DEBUG: Transition lock acquired: True
🔧 ASYNC_DEBUG: Transition depth: 1
🔧 REENTRANT_FIX: Already in transition (depth=1), proceeding without lock
🔧 TRANSITION_DEBUG: Starting transition steps...
🔧 TRANSITION_DEBUG: Step 1 - Cleanup tasks
🔧 TRANSITION_DEBUG: Step 2 - Exit current state
{"timestamp": "2025-07-02T16:15:46.197118Z", "level": "INFO", "logger": "game.state.preparation", "message": "Exiting preparation phase", "module": "base_state", "function": "on_exit", "line": 52}
{"timestamp": "2025-07-02T16:15:46.197154Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf Round starter already set: Andy", "module": "preparation_state", "function": "_cleanup_phase", "line": 94}
🎯 PREP_STATE_DEBUG: Cleanup phase - current_player: Andy
🎯 PREP_STATE_DEBUG: Cleanup phase - round_starter: Andy
{"timestamp": "2025-07-02T16:15:46.197195Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udccb Preparation complete - Starter: Andy, Multiplier: 1x", "module": "preparation_state", "function": "_cleanup_phase", "line": 105}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for declaration
🔧 BASE_STATE_DEBUG: on_enter() called for declaration phase
{"timestamp": "2025-07-02T16:15:46.197289Z", "level": "INFO", "logger": "game.state.declaration", "message": "Entering declaration phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for declaration
📢 DECL_STATE_DEBUG: Using round_starter: Andy
{"timestamp": "2025-07-02T16:15:46.197358Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup - basic data", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy - -550 pts', 'Bot 2 - -370 pts', 'Bot 3 - -184 pts', 'Bot 4 - -184 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0}, 'players': {'Andy': {'hand': ['ELEPHANT_RED(10)', 'ADVISOR_RED(12)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'HORSE_RED(6)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['ELEPHANT_BLACK(9)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'ADVISOR_BLACK(11)', 'CANNON_RED(4)', 'ELEPHANT_BLACK(9)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)'], 'hand_size': 8}, 'Bot 3': {'hand': ['SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'CHARIOT_RED(8)'], 'hand_size': 8}, 'Bot 4': {'hand': ['GENERAL_BLACK(13)', 'HORSE_RED(6)', 'HORSE_BLACK(5)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ADVISOR_RED(12)'], 'hand_size': 8}}, 'round': 113, 'reason': 'Declaration phase setup - basic data', 'sequence': 228, 'timestamp': 1751472946.197737, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1236 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
DEBUG_WS_QUEUE: Room 9655E4 got message: turn_complete
DEBUG_WS: Broadcasting event 'turn_complete' (op_id: unknown) to 1 clients in room 9655E4.
DEBUG_WS: Successfully sent 'turn_complete' to a client in room 9655E4.
{"timestamp": "2025-07-02T16:15:46.198120Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Declaration phase setup - basic data", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup - basic data
{"timestamp": "2025-07-02T16:15:46.198195Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup complete - current declarer: Andy", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy - -550 pts', 'Bot 2 - -370 pts', 'Bot 3 - -184 pts', 'Bot 4 - -184 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'players': {'Andy': {'hand': ['ELEPHANT_RED(10)', 'ADVISOR_RED(12)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'HORSE_RED(6)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['ELEPHANT_BLACK(9)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'ADVISOR_BLACK(11)', 'CANNON_RED(4)', 'ELEPHANT_BLACK(9)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)'], 'hand_size': 8}, 'Bot 3': {'hand': ['SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'CHARIOT_RED(8)'], 'hand_size': 8}, 'Bot 4': {'hand': ['GENERAL_BLACK(13)', 'HORSE_RED(6)', 'HORSE_BLACK(5)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ADVISOR_RED(12)'], 'hand_size': 8}}, 'round': 113, 'reason': 'Declaration phase setup complete - current declarer: Andy', 'sequence': 229, 'timestamp': 1751472946.198285, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1285 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
{"timestamp": "2025-07-02T16:15:46.198582Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Declaration phase setup complete - current declarer: Andy", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup complete - current declarer: Andy
🤖 ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Andy
🔔 BOT_MANAGER_DEBUG: Received event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Andy - -550 pts', 'Bot 2 - -370 pts', 'Bot 3 - -184 pts', 'Bot 4 - -184 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'current_declarer': 'Andy', 'reason': 'Declaration phase setup complete - current declarer: Andy'}
✅ BOT_MANAGER_DEBUG: Found handler for room 9655E4, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room 9655E4 handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
🔍 BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
🔧 BOT_MANAGER_LOCK_FIX: Step 1 - Determining bot actions (minimal lock scope)
🔧 BOT_MANAGER_LOCK_FIX: Lock acquired for decision logic only
🚀 BOT_HANDLER_DEBUG: Analyzing enterprise phase change
🔧 BOT_MANAGER_LOCK_FIX: Decision logic completed - releasing lock
🔧 BOT_MANAGER_LOCK_FIX: Step 2 - Executing 0 bot actions (lock-free)
🤖 DECLARATION_DEBUG: Triggering bot manager for declaration phase
🔧 DECLARATION_DEBUG: Bot manager active games: ['9655E4']
⚠️ DECLARATION_DEBUG: No room_id found to trigger bot manager
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for declaration
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for declaration
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'preparation', 'new_phase': 'declaration', 'timestamp': '2025-07-02T09:15:46.198892', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 113, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to declaration with reason: No weak hands detected - preparation complete
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for declaration
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'No weak hands detected - preparation complete'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'declaration', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:declaration:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for declaration
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase declaration for room 9655E4
🔔 BOT_MANAGER_DEBUG: Received event 'round_started' for room 9655E4 with data: {'phase': 'declaration', 'starter': 'Andy'}
✅ BOT_MANAGER_DEBUG: Found handler for room 9655E4, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room 9655E4 handling event 'round_started' with data keys: ['phase', 'starter']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': False
🔍 BOT_HANDLER_DEBUG: Event value repr: 'round_started'
🔧 BOT_MANAGER_LOCK_FIX: Step 1 - Determining bot actions (minimal lock scope)
🔧 BOT_MANAGER_LOCK_FIX: Lock acquired for decision logic only
🎪 BOT_HANDLER_DEBUG: Analyzing round start
🔧 BOT_MANAGER_LOCK_FIX: Decision logic completed - releasing lock
🔧 BOT_MANAGER_LOCK_FIX: Step 2 - Executing 1 bot actions (lock-free)
🔧 BOT_MANAGER_LOCK_FIX: Executing action round_start (lock-free)
🔍 BOT_ROUND_DEBUG: Game state current_order: None
🔍 BOT_ROUND_DEBUG: Game round_starter: Andy
🔍 BOT_ROUND_DEBUG: Game current_player: Andy
🔧 BOT_ROUND_DEBUG: Declarations now handled by enterprise phase change - skipping old path
✅ BOT_MANAGER_LOCK_FIX: Action round_start completed successfully
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for preparation
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for preparation
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'scoring', 'new_phase': 'preparation', 'timestamp': '2025-07-02T09:15:46.199478', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 113, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to preparation with reason: Scoring complete - starting next round
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for preparation
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'preparation', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'Scoring complete - starting next round'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'preparation', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:preparation:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for preparation
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase preparation for room 9655E4
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for scoring
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for scoring
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.DECLARATION -> GamePhase.SCORING
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'declaration', 'new_phase': 'scoring', 'timestamp': '2025-07-02T09:15:46.200013', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 113, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to scoring with reason: All hands empty - round complete
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for scoring
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'scoring', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'All hands empty - round complete'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'scoring', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:scoring:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for scoring
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase scoring for room 9655E4
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.DECLARATION -> GamePhase.SCORING
{"timestamp": "2025-07-02T16:15:46.200344Z", "level": "INFO", "logger": "game.state.turn", "message": "\ud83c\udfc1 Turn phase complete - all hands empty", "module": "turn_state", "function": "_cleanup_phase", "line": 125}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for scoring
🔧 BASE_STATE_DEBUG: on_enter() called for scoring phase
{"timestamp": "2025-07-02T16:15:46.200617Z", "level": "INFO", "logger": "game.state.scoring", "message": "Entering scoring phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for scoring
🔄 SCORING_SETUP_DEBUG: Reset display_delay_complete = False
{"timestamp": "2025-07-02T16:15:46.200756Z", "level": "INFO", "logger": "game.state.scoring", "message": "Setting up Scoring Phase", "module": "scoring_state", "function": "_setup_phase", "line": 83}
🗳️ DECLARATION_DEBUG: game.player_declarations = {'Bot 2': 2, 'Bot 3': 1, 'Bot 4': 1, 'Andy': 3}
📋 SCORING_FIX_DEBUG: Andy - declared: 3, actual: 0
🏆 SCORING_DEBUG: Andy scoring data:
   📋 Declared: 3, Actual: 0
   📊 Base Score: -3, Multiplier: 1x, Final: -3
   💯 Total Score: -553
{"timestamp": "2025-07-02T16:15:46.200956Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Andy: declared 3, actual 0, base -3, final -3 (\u00d71), total -553", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 2 - declared: 2, actual: 0
🏆 SCORING_DEBUG: Bot 2 scoring data:
   📋 Declared: 2, Actual: 0
   📊 Base Score: -2, Multiplier: 1x, Final: -2
   💯 Total Score: -372
{"timestamp": "2025-07-02T16:15:46.201067Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 2: declared 2, actual 0, base -2, final -2 (\u00d71), total -372", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 3 - declared: 1, actual: 0
🏆 SCORING_DEBUG: Bot 3 scoring data:
   📋 Declared: 1, Actual: 0
   📊 Base Score: -1, Multiplier: 1x, Final: -1
   💯 Total Score: -185
{"timestamp": "2025-07-02T16:15:46.201193Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 3: declared 1, actual 0, base -1, final -1 (\u00d71), total -185", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 4 - declared: 1, actual: 0
🏆 SCORING_DEBUG: Bot 4 scoring data:
   📋 Declared: 1, Actual: 0
   📊 Base Score: -1, Multiplier: 1x, Final: -1
   💯 Total Score: -185
{"timestamp": "2025-07-02T16:15:46.201355Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 4: declared 1, actual 0, base -1, final -1 (\u00d71), total -185", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
🚀 SCORING_BROADCAST_DEBUG: Broadcasting scoring data:
   📊 Round scores: {'Andy': {'declared': 3, 'actual': 0, 'base_score': -3, 'multiplier': 1, 'final_score': -3, 'total_score': -553}, 'Bot 2': {'declared': 2, 'actual': 0, 'base_score': -2, 'multiplier': 1, 'final_score': -2, 'total_score': -372}, 'Bot 3': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -185}, 'Bot 4': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -185}}
   🏁 Game complete: False
   🏆 Winners: []
🚀 SCORING_BROADCAST_DEBUG: Also sending:
   💯 Total scores: {'Andy': -553, 'Bot 2': -372, 'Bot 3': -185, 'Bot 4': -185}
   👥 Players data: [{'name': 'Andy', 'is_bot': False, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 2', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 3', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 4', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}]
{"timestamp": "2025-07-02T16:15:46.201676Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83c\udfae Phase Data Update: Scoring calculated for round 113", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'scoring', 'allowed_actions': ['player_reconnect', 'player_disconnect', 'timeout', 'game_state_update'], 'phase_data': {'round_scores': {'Andy': {'declared': 3, 'actual': 0, 'base_score': -3, 'multiplier': 1, 'final_score': -3, 'total_score': -553}, 'Bot 2': {'declared': 2, 'actual': 0, 'base_score': -2, 'multiplier': 1, 'final_score': -2, 'total_score': -372}, 'Bot 3': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -185}, 'Bot 4': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -185}}, 'total_scores': {'Andy': -553, 'Bot 2': -372, 'Bot 3': -185, 'Bot 4': -185}, 'players': [{'name': 'Andy', 'is_bot': False, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 2', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 3', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 4', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}], 'game_complete': False, 'winners': [], 'scores_calculated': True, 'redeal_multiplier': 1}, 'players': {'Andy': {'hand': ['ELEPHANT_RED(10)', 'ADVISOR_RED(12)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'HORSE_RED(6)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['ELEPHANT_BLACK(9)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'ADVISOR_BLACK(11)', 'CANNON_RED(4)', 'ELEPHANT_BLACK(9)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)'], 'hand_size': 8}, 'Bot 3': {'hand': ['SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'CHARIOT_RED(8)'], 'hand_size': 8}, 'Bot 4': {'hand': ['GENERAL_BLACK(13)', 'HORSE_RED(6)', 'HORSE_BLACK(5)', 'HORSE_BLACK(5)', 'CANNON_BLACK(3)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ADVISOR_RED(12)'], 'hand_size': 8}}, 'round': 113, 'reason': 'Scoring calculated for round 113', 'sequence': 185, 'timestamp': 1751472946.202102, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 2008 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
{"timestamp": "2025-07-02T16:15:46.202658Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Scoring calculated for round 113", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Scoring calculated for round 113
{"timestamp": "2025-07-02T16:15:46.202731Z", "level": "INFO", "logger": "game.state.scoring", "message": "Scoring complete. Game over: False", "module": "scoring_state", "function": "_setup_phase", "line": 131}
🎯 SCORING_DEBUG: Scores complete - auto-transitioning to next round (Preparation)
🔧 TRANSITION_DEBUG: _immediate_transition_to called: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 ASYNC_DEBUG: Thread: MainThread
🔧 ASYNC_DEBUG: Is running: True
🔧 ASYNC_DEBUG: Transition lock acquired: True
🔧 ASYNC_DEBUG: Transition depth: 1
🔧 REENTRANT_FIX: Already in transition (depth=1), proceeding without lock
🔧 TRANSITION_DEBUG: Starting transition steps...
🔧 TRANSITION_DEBUG: Step 1 - Cleanup tasks
🔧 TRANSITION_DEBUG: Step 2 - Exit current state
{"timestamp": "2025-07-02T16:15:46.202819Z", "level": "INFO", "logger": "game.state.scoring", "message": "Exiting scoring phase", "module": "base_state", "function": "on_exit", "line": 52}
{"timestamp": "2025-07-02T16:15:46.202864Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83c\udfaf Next round starter set to last turn winner: Andy", "module": "scoring_state", "function": "_prepare_next_round", "line": 386}
{"timestamp": "2025-07-02T16:15:46.202898Z", "level": "INFO", "logger": "game.state.scoring", "message": "Prepared for round 114", "module": "scoring_state", "function": "_prepare_next_round", "line": 396}
{"timestamp": "2025-07-02T16:15:46.202928Z", "level": "INFO", "logger": "game.state.scoring", "message": "Prepared for next round", "module": "scoring_state", "function": "_cleanup_phase", "line": 158}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for preparation
🔧 BASE_STATE_DEBUG: on_enter() called for preparation phase
{"timestamp": "2025-07-02T16:15:46.202976Z", "level": "INFO", "logger": "game.state.preparation", "message": "Entering preparation phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for preparation
{"timestamp": "2025-07-02T16:15:46.203016Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfb4 Preparation phase starting - dealing cards", "module": "preparation_state", "function": "_setup_phase", "line": 80}
🎴 PREP_STATE_DEBUG: Setup phase starting for room 9655E4
🔄 PREP_RESET_DEBUG: Reset Andy - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 2 - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 3 - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 4 - declared: 0, captured_piles: 0
🎴 PREP_STATE_DEBUG: Using guaranteed no redeal dealing
🛡️ DEBUG: Dealing guaranteed no-redeal hands with RED_GENERAL assigned to player 1
🛡️ DEBUG: Available pieces - Strong: 7, Weak: 24
  → Bot 2 gets RED_GENERAL: GENERAL_RED(14)
  → Andy gets strong piece: ADVISOR_BLACK(11)
  → Bot 3 gets strong piece: ADVISOR_RED(12)
  → Bot 4 gets strong piece: ELEPHANT_RED(10)
🛡️ DEBUG: Guaranteed no-redeal hands dealt:
🔧 DEBUG: Final hands verification:
  Andy: ['ADVISOR_BLACK(11)', 'CANNON_BLACK(3)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'HORSE_BLACK(5)', 'ADVISOR_BLACK(11)', 'ELEPHANT_RED(10)']
    → Strong pieces (>9): 3
    → Has RED_GENERAL: False
  Bot 2: ['HORSE_RED(6)', 'HORSE_BLACK(5)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'HORSE_RED(6)']
    → Strong pieces (>9): 1
    → Has RED_GENERAL: True
  Bot 3: ['GENERAL_BLACK(13)', 'CANNON_BLACK(3)', 'CANNON_RED(4)', 'SOLDIER_RED(2)', 'ADVISOR_RED(12)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)']
    → Strong pieces (>9): 2
    → Has RED_GENERAL: False
  Bot 4: ['ELEPHANT_BLACK(9)', 'ADVISOR_RED(12)', 'SOLDIER_RED(2)', 'CHARIOT_RED(8)', 'ELEPHANT_BLACK(9)', 'SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)']
    → Strong pieces (>9): 2
    → Has RED_GENERAL: False
✅ SUCCESS: No weak hands - redeal prevented!
{"timestamp": "2025-07-02T16:15:46.203271Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udd0d Weak hand check - Found 0 weak players: set()", "module": "preparation_state", "function": "_deal_cards", "line": 141}
✅ PREP_STATE_DEBUG: No weak hands - keeping existing starter: Andy
{"timestamp": "2025-07-02T16:15:46.203315Z", "level": "INFO", "logger": "game.state.preparation", "message": "\u2705 No weak hands - keeping existing starter: Andy", "module": "preparation_state", "function": "_deal_cards", "line": 205}
🎯 PREP_STATE_DEBUG: No weak hands detected - auto-transitioning to Declaration phase
{"timestamp": "2025-07-02T16:15:46.203353Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf No weak hands detected - transitioning to Declaration phase", "module": "preparation_state", "function": "_deal_cards", "line": 217}
🔧 TRANSITION_DEBUG: _immediate_transition_to called: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 ASYNC_DEBUG: Thread: MainThread
🔧 ASYNC_DEBUG: Is running: True
🔧 ASYNC_DEBUG: Transition lock acquired: True
🔧 ASYNC_DEBUG: Transition depth: 1
🔧 REENTRANT_FIX: Already in transition (depth=1), proceeding without lock
🔧 TRANSITION_DEBUG: Starting transition steps...
🔧 TRANSITION_DEBUG: Step 1 - Cleanup tasks
🔧 TRANSITION_DEBUG: Step 2 - Exit current state
{"timestamp": "2025-07-02T16:15:46.203425Z", "level": "INFO", "logger": "game.state.preparation", "message": "Exiting preparation phase", "module": "base_state", "function": "on_exit", "line": 52}
{"timestamp": "2025-07-02T16:15:46.203458Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf Round starter already set: Andy", "module": "preparation_state", "function": "_cleanup_phase", "line": 94}
🎯 PREP_STATE_DEBUG: Cleanup phase - current_player: Andy
🎯 PREP_STATE_DEBUG: Cleanup phase - round_starter: Andy
{"timestamp": "2025-07-02T16:15:46.203495Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udccb Preparation complete - Starter: Andy, Multiplier: 1x", "module": "preparation_state", "function": "_cleanup_phase", "line": 105}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for declaration
🔧 BASE_STATE_DEBUG: on_enter() called for declaration phase
{"timestamp": "2025-07-02T16:15:46.203541Z", "level": "INFO", "logger": "game.state.declaration", "message": "Entering declaration phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for declaration
📢 DECL_STATE_DEBUG: Using round_starter: Andy
{"timestamp": "2025-07-02T16:15:46.203591Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup - basic data", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy - -553 pts', 'Bot 2 - -372 pts', 'Bot 3 - -185 pts', 'Bot 4 - -185 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0}, 'players': {'Andy': {'hand': ['ADVISOR_BLACK(11)', 'CANNON_BLACK(3)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'HORSE_BLACK(5)', 'ADVISOR_BLACK(11)', 'ELEPHANT_RED(10)'], 'hand_size': 8}, 'Bot 2': {'hand': ['HORSE_RED(6)', 'HORSE_BLACK(5)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'HORSE_RED(6)'], 'hand_size': 8}, 'Bot 3': {'hand': ['GENERAL_BLACK(13)', 'CANNON_BLACK(3)', 'CANNON_RED(4)', 'SOLDIER_RED(2)', 'ADVISOR_RED(12)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 4': {'hand': ['ELEPHANT_BLACK(9)', 'ADVISOR_RED(12)', 'SOLDIER_RED(2)', 'CHARIOT_RED(8)', 'ELEPHANT_BLACK(9)', 'SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)'], 'hand_size': 8}}, 'round': 114, 'reason': 'Declaration phase setup - basic data', 'sequence': 230, 'timestamp': 1751472946.203679, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1236 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
DEBUG_WS_QUEUE: Room 9655E4 got message: turn_complete
DEBUG_WS: Broadcasting event 'turn_complete' (op_id: unknown) to 1 clients in room 9655E4.
DEBUG_WS: Successfully sent 'turn_complete' to a client in room 9655E4.
{"timestamp": "2025-07-02T16:15:46.203973Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Declaration phase setup - basic data", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup - basic data
{"timestamp": "2025-07-02T16:15:46.204041Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup complete - current declarer: Andy", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy - -553 pts', 'Bot 2 - -372 pts', 'Bot 3 - -185 pts', 'Bot 4 - -185 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'players': {'Andy': {'hand': ['ADVISOR_BLACK(11)', 'CANNON_BLACK(3)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'HORSE_BLACK(5)', 'ADVISOR_BLACK(11)', 'ELEPHANT_RED(10)'], 'hand_size': 8}, 'Bot 2': {'hand': ['HORSE_RED(6)', 'HORSE_BLACK(5)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'HORSE_RED(6)'], 'hand_size': 8}, 'Bot 3': {'hand': ['GENERAL_BLACK(13)', 'CANNON_BLACK(3)', 'CANNON_RED(4)', 'SOLDIER_RED(2)', 'ADVISOR_RED(12)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 4': {'hand': ['ELEPHANT_BLACK(9)', 'ADVISOR_RED(12)', 'SOLDIER_RED(2)', 'CHARIOT_RED(8)', 'ELEPHANT_BLACK(9)', 'SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)'], 'hand_size': 8}}, 'round': 114, 'reason': 'Declaration phase setup complete - current declarer: Andy', 'sequence': 231, 'timestamp': 1751472946.204124, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1285 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
{"timestamp": "2025-07-02T16:15:46.204437Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Declaration phase setup complete - current declarer: Andy", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup complete - current declarer: Andy
🤖 ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Andy
🔔 BOT_MANAGER_DEBUG: Received event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Andy - -553 pts', 'Bot 2 - -372 pts', 'Bot 3 - -185 pts', 'Bot 4 - -185 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'current_declarer': 'Andy', 'reason': 'Declaration phase setup complete - current declarer: Andy'}
✅ BOT_MANAGER_DEBUG: Found handler for room 9655E4, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room 9655E4 handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
🔍 BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
🔧 BOT_MANAGER_LOCK_FIX: Step 1 - Determining bot actions (minimal lock scope)
🔧 BOT_MANAGER_LOCK_FIX: Lock acquired for decision logic only
🚀 BOT_HANDLER_DEBUG: Analyzing enterprise phase change
🔧 BOT_MANAGER_LOCK_FIX: Decision logic completed - releasing lock
🔧 BOT_MANAGER_LOCK_FIX: Step 2 - Executing 0 bot actions (lock-free)
🤖 DECLARATION_DEBUG: Triggering bot manager for declaration phase
🔧 DECLARATION_DEBUG: Bot manager active games: ['9655E4']
⚠️ DECLARATION_DEBUG: No room_id found to trigger bot manager
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for declaration
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for declaration
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'preparation', 'new_phase': 'declaration', 'timestamp': '2025-07-02T09:15:46.204690', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 114, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to declaration with reason: No weak hands detected - preparation complete
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for declaration
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'No weak hands detected - preparation complete'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'declaration', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:declaration:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for declaration
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase declaration for room 9655E4
🔔 BOT_MANAGER_DEBUG: Received event 'round_started' for room 9655E4 with data: {'phase': 'declaration', 'starter': 'Andy'}
✅ BOT_MANAGER_DEBUG: Found handler for room 9655E4, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room 9655E4 handling event 'round_started' with data keys: ['phase', 'starter']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': False
🔍 BOT_HANDLER_DEBUG: Event value repr: 'round_started'
🔧 BOT_MANAGER_LOCK_FIX: Step 1 - Determining bot actions (minimal lock scope)
🔧 BOT_MANAGER_LOCK_FIX: Lock acquired for decision logic only
🎪 BOT_HANDLER_DEBUG: Analyzing round start
🔧 BOT_MANAGER_LOCK_FIX: Decision logic completed - releasing lock
🔧 BOT_MANAGER_LOCK_FIX: Step 2 - Executing 1 bot actions (lock-free)
🔧 BOT_MANAGER_LOCK_FIX: Executing action round_start (lock-free)
🔍 BOT_ROUND_DEBUG: Game state current_order: None
🔍 BOT_ROUND_DEBUG: Game round_starter: Andy
🔍 BOT_ROUND_DEBUG: Game current_player: Andy
🔧 BOT_ROUND_DEBUG: Declarations now handled by enterprise phase change - skipping old path
✅ BOT_MANAGER_LOCK_FIX: Action round_start completed successfully
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for preparation
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for preparation
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'scoring', 'new_phase': 'preparation', 'timestamp': '2025-07-02T09:15:46.205511', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 114, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to preparation with reason: Scoring complete - starting next round
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for preparation
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'preparation', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'Scoring complete - starting next round'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'preparation', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:preparation:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for preparation
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase preparation for room 9655E4
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for scoring
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for scoring
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.DECLARATION -> GamePhase.SCORING
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'declaration', 'new_phase': 'scoring', 'timestamp': '2025-07-02T09:15:46.205975', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 114, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to scoring with reason: All hands empty - round complete
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for scoring
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'scoring', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'All hands empty - round complete'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'scoring', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:scoring:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for scoring
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase scoring for room 9655E4
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.DECLARATION -> GamePhase.SCORING
{"timestamp": "2025-07-02T16:15:46.206282Z", "level": "INFO", "logger": "game.state.turn", "message": "\ud83c\udfc1 Turn phase complete - all hands empty", "module": "turn_state", "function": "_cleanup_phase", "line": 125}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for scoring
🔧 BASE_STATE_DEBUG: on_enter() called for scoring phase
{"timestamp": "2025-07-02T16:15:46.206397Z", "level": "INFO", "logger": "game.state.scoring", "message": "Entering scoring phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for scoring
🔄 SCORING_SETUP_DEBUG: Reset display_delay_complete = False
{"timestamp": "2025-07-02T16:15:46.206551Z", "level": "INFO", "logger": "game.state.scoring", "message": "Setting up Scoring Phase", "module": "scoring_state", "function": "_setup_phase", "line": 83}
🗳️ DECLARATION_DEBUG: game.player_declarations = {'Bot 2': 2, 'Bot 3': 1, 'Bot 4': 1, 'Andy': 3}
📋 SCORING_FIX_DEBUG: Andy - declared: 3, actual: 0
🏆 SCORING_DEBUG: Andy scoring data:
   📋 Declared: 3, Actual: 0
   📊 Base Score: -3, Multiplier: 1x, Final: -3
   💯 Total Score: -556
{"timestamp": "2025-07-02T16:15:46.206691Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Andy: declared 3, actual 0, base -3, final -3 (\u00d71), total -556", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 2 - declared: 2, actual: 0
🏆 SCORING_DEBUG: Bot 2 scoring data:
   📋 Declared: 2, Actual: 0
   📊 Base Score: -2, Multiplier: 1x, Final: -2
   💯 Total Score: -374
{"timestamp": "2025-07-02T16:15:46.206791Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 2: declared 2, actual 0, base -2, final -2 (\u00d71), total -374", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 3 - declared: 1, actual: 0
🏆 SCORING_DEBUG: Bot 3 scoring data:
   📋 Declared: 1, Actual: 0
   📊 Base Score: -1, Multiplier: 1x, Final: -1
   💯 Total Score: -186
{"timestamp": "2025-07-02T16:15:46.206922Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 3: declared 1, actual 0, base -1, final -1 (\u00d71), total -186", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 4 - declared: 1, actual: 0
🏆 SCORING_DEBUG: Bot 4 scoring data:
   📋 Declared: 1, Actual: 0
   📊 Base Score: -1, Multiplier: 1x, Final: -1
   💯 Total Score: -186
{"timestamp": "2025-07-02T16:15:46.207017Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 4: declared 1, actual 0, base -1, final -1 (\u00d71), total -186", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
🚀 SCORING_BROADCAST_DEBUG: Broadcasting scoring data:
   📊 Round scores: {'Andy': {'declared': 3, 'actual': 0, 'base_score': -3, 'multiplier': 1, 'final_score': -3, 'total_score': -556}, 'Bot 2': {'declared': 2, 'actual': 0, 'base_score': -2, 'multiplier': 1, 'final_score': -2, 'total_score': -374}, 'Bot 3': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -186}, 'Bot 4': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -186}}
   🏁 Game complete: False
   🏆 Winners: []
🚀 SCORING_BROADCAST_DEBUG: Also sending:
   💯 Total scores: {'Andy': -556, 'Bot 2': -374, 'Bot 3': -186, 'Bot 4': -186}
   👥 Players data: [{'name': 'Andy', 'is_bot': False, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 2', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 3', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 4', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}]
{"timestamp": "2025-07-02T16:15:46.207176Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83c\udfae Phase Data Update: Scoring calculated for round 114", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'scoring', 'allowed_actions': ['player_reconnect', 'player_disconnect', 'timeout', 'game_state_update'], 'phase_data': {'round_scores': {'Andy': {'declared': 3, 'actual': 0, 'base_score': -3, 'multiplier': 1, 'final_score': -3, 'total_score': -556}, 'Bot 2': {'declared': 2, 'actual': 0, 'base_score': -2, 'multiplier': 1, 'final_score': -2, 'total_score': -374}, 'Bot 3': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -186}, 'Bot 4': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -186}}, 'total_scores': {'Andy': -556, 'Bot 2': -374, 'Bot 3': -186, 'Bot 4': -186}, 'players': [{'name': 'Andy', 'is_bot': False, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 2', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 3', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 4', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}], 'game_complete': False, 'winners': [], 'scores_calculated': True, 'redeal_multiplier': 1}, 'players': {'Andy': {'hand': ['ADVISOR_BLACK(11)', 'CANNON_BLACK(3)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'HORSE_BLACK(5)', 'ADVISOR_BLACK(11)', 'ELEPHANT_RED(10)'], 'hand_size': 8}, 'Bot 2': {'hand': ['HORSE_RED(6)', 'HORSE_BLACK(5)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'HORSE_RED(6)'], 'hand_size': 8}, 'Bot 3': {'hand': ['GENERAL_BLACK(13)', 'CANNON_BLACK(3)', 'CANNON_RED(4)', 'SOLDIER_RED(2)', 'ADVISOR_RED(12)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 4': {'hand': ['ELEPHANT_BLACK(9)', 'ADVISOR_RED(12)', 'SOLDIER_RED(2)', 'CHARIOT_RED(8)', 'ELEPHANT_BLACK(9)', 'SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)'], 'hand_size': 8}}, 'round': 114, 'reason': 'Scoring calculated for round 114', 'sequence': 186, 'timestamp': 1751472946.2075908, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 2009 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
{"timestamp": "2025-07-02T16:15:46.208270Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Scoring calculated for round 114", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Scoring calculated for round 114
{"timestamp": "2025-07-02T16:15:46.208403Z", "level": "INFO", "logger": "game.state.scoring", "message": "Scoring complete. Game over: False", "module": "scoring_state", "function": "_setup_phase", "line": 131}
🎯 SCORING_DEBUG: Scores complete - auto-transitioning to next round (Preparation)
🔧 TRANSITION_DEBUG: _immediate_transition_to called: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 ASYNC_DEBUG: Thread: MainThread
🔧 ASYNC_DEBUG: Is running: True
🔧 ASYNC_DEBUG: Transition lock acquired: True
🔧 ASYNC_DEBUG: Transition depth: 1
🔧 REENTRANT_FIX: Already in transition (depth=1), proceeding without lock
🔧 TRANSITION_DEBUG: Starting transition steps...
🔧 TRANSITION_DEBUG: Step 1 - Cleanup tasks
🔧 TRANSITION_DEBUG: Step 2 - Exit current state
{"timestamp": "2025-07-02T16:15:46.208771Z", "level": "INFO", "logger": "game.state.scoring", "message": "Exiting scoring phase", "module": "base_state", "function": "on_exit", "line": 52}
{"timestamp": "2025-07-02T16:15:46.208880Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83c\udfaf Next round starter set to last turn winner: Andy", "module": "scoring_state", "function": "_prepare_next_round", "line": 386}
{"timestamp": "2025-07-02T16:15:46.208974Z", "level": "INFO", "logger": "game.state.scoring", "message": "Prepared for round 115", "module": "scoring_state", "function": "_prepare_next_round", "line": 396}
{"timestamp": "2025-07-02T16:15:46.209033Z", "level": "INFO", "logger": "game.state.scoring", "message": "Prepared for next round", "module": "scoring_state", "function": "_cleanup_phase", "line": 158}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for preparation
🔧 BASE_STATE_DEBUG: on_enter() called for preparation phase
{"timestamp": "2025-07-02T16:15:46.209111Z", "level": "INFO", "logger": "game.state.preparation", "message": "Entering preparation phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for preparation
{"timestamp": "2025-07-02T16:15:46.209173Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfb4 Preparation phase starting - dealing cards", "module": "preparation_state", "function": "_setup_phase", "line": 80}
🎴 PREP_STATE_DEBUG: Setup phase starting for room 9655E4
🔄 PREP_RESET_DEBUG: Reset Andy - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 2 - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 3 - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 4 - declared: 0, captured_piles: 0
🎴 PREP_STATE_DEBUG: Using guaranteed no redeal dealing
🛡️ DEBUG: Dealing guaranteed no-redeal hands with RED_GENERAL assigned to player 1
🛡️ DEBUG: Available pieces - Strong: 7, Weak: 24
  → Bot 2 gets RED_GENERAL: GENERAL_RED(14)
  → Andy gets strong piece: ADVISOR_BLACK(11)
  → Bot 3 gets strong piece: GENERAL_BLACK(13)
  → Bot 4 gets strong piece: ADVISOR_RED(12)
🛡️ DEBUG: Guaranteed no-redeal hands dealt:
🔧 DEBUG: Final hands verification:
  Andy: ['SOLDIER_BLACK(1)', 'ADVISOR_BLACK(11)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'HORSE_RED(6)', 'ADVISOR_BLACK(11)', 'ELEPHANT_BLACK(9)', 'SOLDIER_BLACK(1)']
    → Strong pieces (>9): 2
    → Has RED_GENERAL: False
  Bot 2: ['ELEPHANT_BLACK(9)', 'GENERAL_RED(14)', 'CHARIOT_BLACK(7)', 'CANNON_RED(4)', 'CANNON_RED(4)', 'SOLDIER_RED(2)', 'HORSE_BLACK(5)', 'SOLDIER_RED(2)']
    → Strong pieces (>9): 1
    → Has RED_GENERAL: True
  Bot 3: ['SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'CANNON_BLACK(3)', 'HORSE_BLACK(5)', 'HORSE_RED(6)', 'GENERAL_BLACK(13)', 'ELEPHANT_RED(10)']
    → Strong pieces (>9): 2
    → Has RED_GENERAL: False
  Bot 4: ['SOLDIER_RED(2)', 'ADVISOR_RED(12)', 'ELEPHANT_RED(10)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'CHARIOT_RED(8)']
    → Strong pieces (>9): 3
    → Has RED_GENERAL: False
✅ SUCCESS: No weak hands - redeal prevented!
{"timestamp": "2025-07-02T16:15:46.209600Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udd0d Weak hand check - Found 0 weak players: set()", "module": "preparation_state", "function": "_deal_cards", "line": 141}
✅ PREP_STATE_DEBUG: No weak hands - keeping existing starter: Andy
{"timestamp": "2025-07-02T16:15:46.209726Z", "level": "INFO", "logger": "game.state.preparation", "message": "\u2705 No weak hands - keeping existing starter: Andy", "module": "preparation_state", "function": "_deal_cards", "line": 205}
🎯 PREP_STATE_DEBUG: No weak hands detected - auto-transitioning to Declaration phase
{"timestamp": "2025-07-02T16:15:46.209780Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf No weak hands detected - transitioning to Declaration phase", "module": "preparation_state", "function": "_deal_cards", "line": 217}
🔧 TRANSITION_DEBUG: _immediate_transition_to called: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 ASYNC_DEBUG: Thread: MainThread
🔧 ASYNC_DEBUG: Is running: True
🔧 ASYNC_DEBUG: Transition lock acquired: True
🔧 ASYNC_DEBUG: Transition depth: 1
🔧 REENTRANT_FIX: Already in transition (depth=1), proceeding without lock
🔧 TRANSITION_DEBUG: Starting transition steps...
🔧 TRANSITION_DEBUG: Step 1 - Cleanup tasks
🔧 TRANSITION_DEBUG: Step 2 - Exit current state
{"timestamp": "2025-07-02T16:15:46.209872Z", "level": "INFO", "logger": "game.state.preparation", "message": "Exiting preparation phase", "module": "base_state", "function": "on_exit", "line": 52}
{"timestamp": "2025-07-02T16:15:46.209911Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf Round starter already set: Andy", "module": "preparation_state", "function": "_cleanup_phase", "line": 94}
🎯 PREP_STATE_DEBUG: Cleanup phase - current_player: Andy
🎯 PREP_STATE_DEBUG: Cleanup phase - round_starter: Andy
{"timestamp": "2025-07-02T16:15:46.209974Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udccb Preparation complete - Starter: Andy, Multiplier: 1x", "module": "preparation_state", "function": "_cleanup_phase", "line": 105}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for declaration
🔧 BASE_STATE_DEBUG: on_enter() called for declaration phase
{"timestamp": "2025-07-02T16:15:46.210038Z", "level": "INFO", "logger": "game.state.declaration", "message": "Entering declaration phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for declaration
📢 DECL_STATE_DEBUG: Using round_starter: Andy
{"timestamp": "2025-07-02T16:15:46.210151Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup - basic data", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy - -556 pts', 'Bot 2 - -374 pts', 'Bot 3 - -186 pts', 'Bot 4 - -186 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0}, 'players': {'Andy': {'hand': ['SOLDIER_BLACK(1)', 'ADVISOR_BLACK(11)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'HORSE_RED(6)', 'ADVISOR_BLACK(11)', 'ELEPHANT_BLACK(9)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}, 'Bot 2': {'hand': ['ELEPHANT_BLACK(9)', 'GENERAL_RED(14)', 'CHARIOT_BLACK(7)', 'CANNON_RED(4)', 'CANNON_RED(4)', 'SOLDIER_RED(2)', 'HORSE_BLACK(5)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 3': {'hand': ['SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'CANNON_BLACK(3)', 'HORSE_BLACK(5)', 'HORSE_RED(6)', 'GENERAL_BLACK(13)', 'ELEPHANT_RED(10)'], 'hand_size': 8}, 'Bot 4': {'hand': ['SOLDIER_RED(2)', 'ADVISOR_RED(12)', 'ELEPHANT_RED(10)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'CHARIOT_RED(8)'], 'hand_size': 8}}, 'round': 115, 'reason': 'Declaration phase setup - basic data', 'sequence': 232, 'timestamp': 1751472946.210258, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1236 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
DEBUG_WS_QUEUE: Room 9655E4 got message: turn_complete
DEBUG_WS: Broadcasting event 'turn_complete' (op_id: unknown) to 1 clients in room 9655E4.
DEBUG_WS: Successfully sent 'turn_complete' to a client in room 9655E4.
{"timestamp": "2025-07-02T16:15:46.210590Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Declaration phase setup - basic data", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup - basic data
{"timestamp": "2025-07-02T16:15:46.210665Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup complete - current declarer: Andy", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy - -556 pts', 'Bot 2 - -374 pts', 'Bot 3 - -186 pts', 'Bot 4 - -186 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'players': {'Andy': {'hand': ['SOLDIER_BLACK(1)', 'ADVISOR_BLACK(11)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'HORSE_RED(6)', 'ADVISOR_BLACK(11)', 'ELEPHANT_BLACK(9)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}, 'Bot 2': {'hand': ['ELEPHANT_BLACK(9)', 'GENERAL_RED(14)', 'CHARIOT_BLACK(7)', 'CANNON_RED(4)', 'CANNON_RED(4)', 'SOLDIER_RED(2)', 'HORSE_BLACK(5)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 3': {'hand': ['SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'CANNON_BLACK(3)', 'HORSE_BLACK(5)', 'HORSE_RED(6)', 'GENERAL_BLACK(13)', 'ELEPHANT_RED(10)'], 'hand_size': 8}, 'Bot 4': {'hand': ['SOLDIER_RED(2)', 'ADVISOR_RED(12)', 'ELEPHANT_RED(10)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'CHARIOT_RED(8)'], 'hand_size': 8}}, 'round': 115, 'reason': 'Declaration phase setup complete - current declarer: Andy', 'sequence': 233, 'timestamp': 1751472946.210759, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1285 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
{"timestamp": "2025-07-02T16:15:46.211078Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Declaration phase setup complete - current declarer: Andy", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup complete - current declarer: Andy
🤖 ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Andy
🔔 BOT_MANAGER_DEBUG: Received event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Andy - -556 pts', 'Bot 2 - -374 pts', 'Bot 3 - -186 pts', 'Bot 4 - -186 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'current_declarer': 'Andy', 'reason': 'Declaration phase setup complete - current declarer: Andy'}
✅ BOT_MANAGER_DEBUG: Found handler for room 9655E4, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room 9655E4 handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
🔍 BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
🔧 BOT_MANAGER_LOCK_FIX: Step 1 - Determining bot actions (minimal lock scope)
🔧 BOT_MANAGER_LOCK_FIX: Lock acquired for decision logic only
🚀 BOT_HANDLER_DEBUG: Analyzing enterprise phase change
🔧 BOT_MANAGER_LOCK_FIX: Decision logic completed - releasing lock
🔧 BOT_MANAGER_LOCK_FIX: Step 2 - Executing 0 bot actions (lock-free)
🤖 DECLARATION_DEBUG: Triggering bot manager for declaration phase
🔧 DECLARATION_DEBUG: Bot manager active games: ['9655E4']
⚠️ DECLARATION_DEBUG: No room_id found to trigger bot manager
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for declaration
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for declaration
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'preparation', 'new_phase': 'declaration', 'timestamp': '2025-07-02T09:15:46.211285', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 115, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to declaration with reason: No weak hands detected - preparation complete
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for declaration
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'No weak hands detected - preparation complete'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'declaration', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:declaration:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for declaration
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase declaration for room 9655E4
🔔 BOT_MANAGER_DEBUG: Received event 'round_started' for room 9655E4 with data: {'phase': 'declaration', 'starter': 'Andy'}
✅ BOT_MANAGER_DEBUG: Found handler for room 9655E4, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room 9655E4 handling event 'round_started' with data keys: ['phase', 'starter']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': False
🔍 BOT_HANDLER_DEBUG: Event value repr: 'round_started'
🔧 BOT_MANAGER_LOCK_FIX: Step 1 - Determining bot actions (minimal lock scope)
🔧 BOT_MANAGER_LOCK_FIX: Lock acquired for decision logic only
🎪 BOT_HANDLER_DEBUG: Analyzing round start
🔧 BOT_MANAGER_LOCK_FIX: Decision logic completed - releasing lock
🔧 BOT_MANAGER_LOCK_FIX: Step 2 - Executing 1 bot actions (lock-free)
🔧 BOT_MANAGER_LOCK_FIX: Executing action round_start (lock-free)
🔍 BOT_ROUND_DEBUG: Game state current_order: None
🔍 BOT_ROUND_DEBUG: Game round_starter: Andy
🔍 BOT_ROUND_DEBUG: Game current_player: Andy
🔧 BOT_ROUND_DEBUG: Declarations now handled by enterprise phase change - skipping old path
✅ BOT_MANAGER_LOCK_FIX: Action round_start completed successfully
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for preparation
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for preparation
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'scoring', 'new_phase': 'preparation', 'timestamp': '2025-07-02T09:15:46.211932', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 115, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to preparation with reason: Scoring complete - starting next round
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for preparation
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'preparation', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'Scoring complete - starting next round'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'preparation', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:preparation:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for preparation
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase preparation for room 9655E4
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for scoring
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for scoring
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.DECLARATION -> GamePhase.SCORING
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'declaration', 'new_phase': 'scoring', 'timestamp': '2025-07-02T09:15:46.212624', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 115, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to scoring with reason: All hands empty - round complete
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for scoring
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'scoring', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'All hands empty - round complete'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'scoring', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:scoring:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for scoring
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase scoring for room 9655E4
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.DECLARATION -> GamePhase.SCORING
{"timestamp": "2025-07-02T16:15:46.213050Z", "level": "INFO", "logger": "game.state.turn", "message": "\ud83c\udfc1 Turn phase complete - all hands empty", "module": "turn_state", "function": "_cleanup_phase", "line": 125}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for scoring
🔧 BASE_STATE_DEBUG: on_enter() called for scoring phase
{"timestamp": "2025-07-02T16:15:46.213163Z", "level": "INFO", "logger": "game.state.scoring", "message": "Entering scoring phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for scoring
🔄 SCORING_SETUP_DEBUG: Reset display_delay_complete = False
{"timestamp": "2025-07-02T16:15:46.213241Z", "level": "INFO", "logger": "game.state.scoring", "message": "Setting up Scoring Phase", "module": "scoring_state", "function": "_setup_phase", "line": 83}
🗳️ DECLARATION_DEBUG: game.player_declarations = {'Bot 2': 2, 'Bot 3': 1, 'Bot 4': 1, 'Andy': 3}
📋 SCORING_FIX_DEBUG: Andy - declared: 3, actual: 0
🏆 SCORING_DEBUG: Andy scoring data:
   📋 Declared: 3, Actual: 0
   📊 Base Score: -3, Multiplier: 1x, Final: -3
   💯 Total Score: -559
{"timestamp": "2025-07-02T16:15:46.213352Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Andy: declared 3, actual 0, base -3, final -3 (\u00d71), total -559", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 2 - declared: 2, actual: 0
🏆 SCORING_DEBUG: Bot 2 scoring data:
   📋 Declared: 2, Actual: 0
   📊 Base Score: -2, Multiplier: 1x, Final: -2
   💯 Total Score: -376
{"timestamp": "2025-07-02T16:15:46.213447Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 2: declared 2, actual 0, base -2, final -2 (\u00d71), total -376", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 3 - declared: 1, actual: 0
🏆 SCORING_DEBUG: Bot 3 scoring data:
   📋 Declared: 1, Actual: 0
   📊 Base Score: -1, Multiplier: 1x, Final: -1
   💯 Total Score: -187
{"timestamp": "2025-07-02T16:15:46.213533Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 3: declared 1, actual 0, base -1, final -1 (\u00d71), total -187", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
📋 SCORING_FIX_DEBUG: Bot 4 - declared: 1, actual: 0
🏆 SCORING_DEBUG: Bot 4 scoring data:
   📋 Declared: 1, Actual: 0
   📊 Base Score: -1, Multiplier: 1x, Final: -1
   💯 Total Score: -187
{"timestamp": "2025-07-02T16:15:46.213620Z", "level": "INFO", "logger": "game.state.scoring", "message": "Player Bot 4: declared 1, actual 0, base -1, final -1 (\u00d71), total -187", "module": "scoring_state", "function": "_calculate_round_scores", "line": 332}
🚀 SCORING_BROADCAST_DEBUG: Broadcasting scoring data:
   📊 Round scores: {'Andy': {'declared': 3, 'actual': 0, 'base_score': -3, 'multiplier': 1, 'final_score': -3, 'total_score': -559}, 'Bot 2': {'declared': 2, 'actual': 0, 'base_score': -2, 'multiplier': 1, 'final_score': -2, 'total_score': -376}, 'Bot 3': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -187}, 'Bot 4': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -187}}
   🏁 Game complete: False
   🏆 Winners: []
🚀 SCORING_BROADCAST_DEBUG: Also sending:
   💯 Total scores: {'Andy': -559, 'Bot 2': -376, 'Bot 3': -187, 'Bot 4': -187}
   👥 Players data: [{'name': 'Andy', 'is_bot': False, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 2', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 3', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 4', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}]
{"timestamp": "2025-07-02T16:15:46.213860Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83c\udfae Phase Data Update: Scoring calculated for round 115", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'scoring', 'allowed_actions': ['player_reconnect', 'player_disconnect', 'timeout', 'game_state_update'], 'phase_data': {'round_scores': {'Andy': {'declared': 3, 'actual': 0, 'base_score': -3, 'multiplier': 1, 'final_score': -3, 'total_score': -559}, 'Bot 2': {'declared': 2, 'actual': 0, 'base_score': -2, 'multiplier': 1, 'final_score': -2, 'total_score': -376}, 'Bot 3': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -187}, 'Bot 4': {'declared': 1, 'actual': 0, 'base_score': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -187}}, 'total_scores': {'Andy': -559, 'Bot 2': -376, 'Bot 3': -187, 'Bot 4': -187}, 'players': [{'name': 'Andy', 'is_bot': False, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 2', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 3', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}, {'name': 'Bot 4', 'is_bot': True, 'pile_count': 0, 'captured_piles': 0}], 'game_complete': False, 'winners': [], 'scores_calculated': True, 'redeal_multiplier': 1}, 'players': {'Andy': {'hand': ['SOLDIER_BLACK(1)', 'ADVISOR_BLACK(11)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'HORSE_RED(6)', 'ADVISOR_BLACK(11)', 'ELEPHANT_BLACK(9)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}, 'Bot 2': {'hand': ['ELEPHANT_BLACK(9)', 'GENERAL_RED(14)', 'CHARIOT_BLACK(7)', 'CANNON_RED(4)', 'CANNON_RED(4)', 'SOLDIER_RED(2)', 'HORSE_BLACK(5)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 3': {'hand': ['SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'CHARIOT_RED(8)', 'CANNON_BLACK(3)', 'HORSE_BLACK(5)', 'HORSE_RED(6)', 'GENERAL_BLACK(13)', 'ELEPHANT_RED(10)'], 'hand_size': 8}, 'Bot 4': {'hand': ['SOLDIER_RED(2)', 'ADVISOR_RED(12)', 'ELEPHANT_RED(10)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'CHARIOT_RED(8)'], 'hand_size': 8}}, 'round': 115, 'reason': 'Scoring calculated for round 115', 'sequence': 187, 'timestamp': 1751472946.214184, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 2008 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
{"timestamp": "2025-07-02T16:15:46.214911Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Scoring calculated for round 115", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Scoring calculated for round 115
{"timestamp": "2025-07-02T16:15:46.215032Z", "level": "INFO", "logger": "game.state.scoring", "message": "Scoring complete. Game over: False", "module": "scoring_state", "function": "_setup_phase", "line": 131}
🎯 SCORING_DEBUG: Scores complete - auto-transitioning to next round (Preparation)
🔧 TRANSITION_DEBUG: _immediate_transition_to called: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 ASYNC_DEBUG: Thread: MainThread
🔧 ASYNC_DEBUG: Is running: True
🔧 ASYNC_DEBUG: Transition lock acquired: True
🔧 ASYNC_DEBUG: Transition depth: 1
🔧 REENTRANT_FIX: Already in transition (depth=1), proceeding without lock
🔧 TRANSITION_DEBUG: Starting transition steps...
🔧 TRANSITION_DEBUG: Step 1 - Cleanup tasks
🔧 TRANSITION_DEBUG: Step 2 - Exit current state
{"timestamp": "2025-07-02T16:15:46.215254Z", "level": "INFO", "logger": "game.state.scoring", "message": "Exiting scoring phase", "module": "base_state", "function": "on_exit", "line": 52}
{"timestamp": "2025-07-02T16:15:46.215433Z", "level": "INFO", "logger": "game.state.scoring", "message": "\ud83c\udfaf Next round starter set to last turn winner: Andy", "module": "scoring_state", "function": "_prepare_next_round", "line": 386}
{"timestamp": "2025-07-02T16:15:46.215516Z", "level": "INFO", "logger": "game.state.scoring", "message": "Prepared for round 116", "module": "scoring_state", "function": "_prepare_next_round", "line": 396}
{"timestamp": "2025-07-02T16:15:46.215578Z", "level": "INFO", "logger": "game.state.scoring", "message": "Prepared for next round", "module": "scoring_state", "function": "_cleanup_phase", "line": 158}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for preparation
🔧 BASE_STATE_DEBUG: on_enter() called for preparation phase
{"timestamp": "2025-07-02T16:15:46.215673Z", "level": "INFO", "logger": "game.state.preparation", "message": "Entering preparation phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for preparation
{"timestamp": "2025-07-02T16:15:46.215746Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfb4 Preparation phase starting - dealing cards", "module": "preparation_state", "function": "_setup_phase", "line": 80}
🎴 PREP_STATE_DEBUG: Setup phase starting for room 9655E4
🔄 PREP_RESET_DEBUG: Reset Andy - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 2 - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 3 - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 4 - declared: 0, captured_piles: 0
🎴 PREP_STATE_DEBUG: Using guaranteed no redeal dealing
🛡️ DEBUG: Dealing guaranteed no-redeal hands with RED_GENERAL assigned to player 1
🛡️ DEBUG: Available pieces - Strong: 7, Weak: 24
  → Bot 2 gets RED_GENERAL: GENERAL_RED(14)
  → Andy gets strong piece: ADVISOR_RED(12)
  → Bot 3 gets strong piece: ADVISOR_RED(12)
  → Bot 4 gets strong piece: ELEPHANT_RED(10)
🛡️ DEBUG: Guaranteed no-redeal hands dealt:
🔧 DEBUG: Final hands verification:
  Andy: ['CANNON_RED(4)', 'GENERAL_BLACK(13)', 'HORSE_BLACK(5)', 'HORSE_RED(6)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'ADVISOR_RED(12)', 'HORSE_RED(6)']
    → Strong pieces (>9): 2
    → Has RED_GENERAL: False
  Bot 2: ['ELEPHANT_BLACK(9)', 'ADVISOR_BLACK(11)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)', 'GENERAL_RED(14)', 'SOLDIER_RED(2)', 'CHARIOT_RED(8)', 'SOLDIER_RED(2)']
    → Strong pieces (>9): 3
    → Has RED_GENERAL: True
  Bot 3: ['SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'CANNON_RED(4)', 'CHARIOT_RED(8)', 'CANNON_BLACK(3)']
    → Strong pieces (>9): 1
    → Has RED_GENERAL: False
  Bot 4: ['ELEPHANT_RED(10)', 'SOLDIER_RED(2)', 'CHARIOT_BLACK(7)', 'ADVISOR_BLACK(11)', 'ELEPHANT_BLACK(9)', 'HORSE_BLACK(5)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)']
    → Strong pieces (>9): 2
    → Has RED_GENERAL: False
✅ SUCCESS: No weak hands - redeal prevented!
{"timestamp": "2025-07-02T16:15:46.216219Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udd0d Weak hand check - Found 0 weak players: set()", "module": "preparation_state", "function": "_deal_cards", "line": 141}
✅ PREP_STATE_DEBUG: No weak hands - keeping existing starter: Andy
{"timestamp": "2025-07-02T16:15:46.216305Z", "level": "INFO", "logger": "game.state.preparation", "message": "\u2705 No weak hands - keeping existing starter: Andy", "module": "preparation_state", "function": "_deal_cards", "line": 205}
🎯 PREP_STATE_DEBUG: No weak hands detected - auto-transitioning to Declaration phase
{"timestamp": "2025-07-02T16:15:46.216380Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf No weak hands detected - transitioning to Declaration phase", "module": "preparation_state", "function": "_deal_cards", "line": 217}
🔧 TRANSITION_DEBUG: _immediate_transition_to called: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 ASYNC_DEBUG: Thread: MainThread
🔧 ASYNC_DEBUG: Is running: True
🔧 ASYNC_DEBUG: Transition lock acquired: True
🔧 ASYNC_DEBUG: Transition depth: 1
🔧 REENTRANT_FIX: Already in transition (depth=1), proceeding without lock
🔧 TRANSITION_DEBUG: Starting transition steps...
🔧 TRANSITION_DEBUG: Step 1 - Cleanup tasks
🔧 TRANSITION_DEBUG: Step 2 - Exit current state
{"timestamp": "2025-07-02T16:15:46.216538Z", "level": "INFO", "logger": "game.state.preparation", "message": "Exiting preparation phase", "module": "base_state", "function": "on_exit", "line": 52}
{"timestamp": "2025-07-02T16:15:46.216620Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf Round starter already set: Andy", "module": "preparation_state", "function": "_cleanup_phase", "line": 94}
🎯 PREP_STATE_DEBUG: Cleanup phase - current_player: Andy
🎯 PREP_STATE_DEBUG: Cleanup phase - round_starter: Andy
{"timestamp": "2025-07-02T16:15:46.216682Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udccb Preparation complete - Starter: Andy, Multiplier: 1x", "module": "preparation_state", "function": "_cleanup_phase", "line": 105}
🔧 TRANSITION_DEBUG: Step 3 - Atomic state update
🔧 TRANSITION_DEBUG: Step 4 - Enter new state
🔧 TRANSITION_DEBUG: Step 4a - About to call on_enter() for declaration
🔧 BASE_STATE_DEBUG: on_enter() called for declaration phase
{"timestamp": "2025-07-02T16:15:46.216741Z", "level": "INFO", "logger": "game.state.declaration", "message": "Entering declaration phase", "module": "base_state", "function": "on_enter", "line": 37}
🔧 BASE_STATE_DEBUG: Clearing phase_data
🔧 BASE_STATE_DEBUG: About to call _setup_phase() for declaration
📢 DECL_STATE_DEBUG: Using round_starter: Andy
{"timestamp": "2025-07-02T16:15:46.216797Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup - basic data", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy - -559 pts', 'Bot 2 - -376 pts', 'Bot 3 - -187 pts', 'Bot 4 - -187 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0}, 'players': {'Andy': {'hand': ['CANNON_RED(4)', 'GENERAL_BLACK(13)', 'HORSE_BLACK(5)', 'HORSE_RED(6)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'ADVISOR_RED(12)', 'HORSE_RED(6)'], 'hand_size': 8}, 'Bot 2': {'hand': ['ELEPHANT_BLACK(9)', 'ADVISOR_BLACK(11)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)', 'GENERAL_RED(14)', 'SOLDIER_RED(2)', 'CHARIOT_RED(8)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 3': {'hand': ['SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'CANNON_RED(4)', 'CHARIOT_RED(8)', 'CANNON_BLACK(3)'], 'hand_size': 8}, 'Bot 4': {'hand': ['ELEPHANT_RED(10)', 'SOLDIER_RED(2)', 'CHARIOT_BLACK(7)', 'ADVISOR_BLACK(11)', 'ELEPHANT_BLACK(9)', 'HORSE_BLACK(5)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}}, 'round': 116, 'reason': 'Declaration phase setup - basic data', 'sequence': 234, 'timestamp': 1751472946.216898, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1236 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
DEBUG_WS_QUEUE: Room 9655E4 got message: turn_complete
DEBUG_WS: Broadcasting event 'turn_complete' (op_id: unknown) to 1 clients in room 9655E4.
DEBUG_WS: Successfully sent 'turn_complete' to a client in room 9655E4.
{"timestamp": "2025-07-02T16:15:46.217209Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Declaration phase setup - basic data", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup - basic data
{"timestamp": "2025-07-02T16:15:46.217279Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup complete - current declarer: Andy", "module": "base_state", "function": "update_phase_data", "line": 172}
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy - -559 pts', 'Bot 2 - -376 pts', 'Bot 3 - -187 pts', 'Bot 4 - -187 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'players': {'Andy': {'hand': ['CANNON_RED(4)', 'GENERAL_BLACK(13)', 'HORSE_BLACK(5)', 'HORSE_RED(6)', 'SOLDIER_BLACK(1)', 'CHARIOT_BLACK(7)', 'ADVISOR_RED(12)', 'HORSE_RED(6)'], 'hand_size': 8}, 'Bot 2': {'hand': ['ELEPHANT_BLACK(9)', 'ADVISOR_BLACK(11)', 'SOLDIER_BLACK(1)', 'ELEPHANT_RED(10)', 'GENERAL_RED(14)', 'SOLDIER_RED(2)', 'CHARIOT_RED(8)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 3': {'hand': ['SOLDIER_RED(2)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'CANNON_RED(4)', 'CHARIOT_RED(8)', 'CANNON_BLACK(3)'], 'hand_size': 8}, 'Bot 4': {'hand': ['ELEPHANT_RED(10)', 'SOLDIER_RED(2)', 'CHARIOT_BLACK(7)', 'ADVISOR_BLACK(11)', 'ELEPHANT_BLACK(9)', 'HORSE_BLACK(5)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}}, 'round': 116, 'reason': 'Declaration phase setup complete - current declarer: Andy', 'sequence': 235, 'timestamp': 1751472946.217364, 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1285 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 9655E4.
{"timestamp": "2025-07-02T16:15:46.217602Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 9655E4 - Declaration phase setup complete - current declarer: Andy", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 234}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup complete - current declarer: Andy
🤖 ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Andy
🔔 BOT_MANAGER_DEBUG: Received event 'phase_change' for room 9655E4 with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Andy - -559 pts', 'Bot 2 - -376 pts', 'Bot 3 - -187 pts', 'Bot 4 - -187 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'current_declarer': 'Andy', 'reason': 'Declaration phase setup complete - current declarer: Andy'}
✅ BOT_MANAGER_DEBUG: Found handler for room 9655E4, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room 9655E4 handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
🔍 BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
🔧 BOT_MANAGER_LOCK_FIX: Step 1 - Determining bot actions (minimal lock scope)
🔧 BOT_MANAGER_LOCK_FIX: Lock acquired for decision logic only
🚀 BOT_HANDLER_DEBUG: Analyzing enterprise phase change
🔧 BOT_MANAGER_LOCK_FIX: Decision logic completed - releasing lock
🔧 BOT_MANAGER_LOCK_FIX: Step 2 - Executing 0 bot actions (lock-free)
🤖 DECLARATION_DEBUG: Triggering bot manager for declaration phase
🔧 DECLARATION_DEBUG: Bot manager active games: ['9655E4']
⚠️ DECLARATION_DEBUG: No room_id found to trigger bot manager
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for declaration
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for declaration
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'preparation', 'new_phase': 'declaration', 'timestamp': '2025-07-02T09:15:46.217890', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 116, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to declaration with reason: No weak hands detected - preparation complete
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for declaration
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'declaration', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'No weak hands detected - preparation complete'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'declaration', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:declaration:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for declaration
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase declaration for room 9655E4
🔔 BOT_MANAGER_DEBUG: Received event 'round_started' for room 9655E4 with data: {'phase': 'declaration', 'starter': 'Andy'}
✅ BOT_MANAGER_DEBUG: Found handler for room 9655E4, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room 9655E4 handling event 'round_started' with data keys: ['phase', 'starter']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': False
🔍 BOT_HANDLER_DEBUG: Event value repr: 'round_started'
🔧 BOT_MANAGER_LOCK_FIX: Step 1 - Determining bot actions (minimal lock scope)
🔧 BOT_MANAGER_LOCK_FIX: Lock acquired for decision logic only
🎪 BOT_HANDLER_DEBUG: Analyzing round start
🔧 BOT_MANAGER_LOCK_FIX: Decision logic completed - releasing lock
🔧 BOT_MANAGER_LOCK_FIX: Step 2 - Executing 1 bot actions (lock-free)
🔧 BOT_MANAGER_LOCK_FIX: Executing action round_start (lock-free)
🔍 BOT_ROUND_DEBUG: Game state current_order: None
🔍 BOT_ROUND_DEBUG: Game round_starter: Andy
🔍 BOT_ROUND_DEBUG: Game current_player: Andy
🔧 BOT_ROUND_DEBUG: Declarations now handled by enterprise phase change - skipping old path
✅ BOT_MANAGER_LOCK_FIX: Action round_start completed successfully
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.PREPARATION -> GamePhase.DECLARATION
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for preparation
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for preparation
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'scoring', 'new_phase': 'preparation', 'timestamp': '2025-07-02T09:15:46.219158', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 116, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to preparation with reason: Scoring complete - starting next round
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for preparation
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'preparation', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'Scoring complete - starting next round'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'preparation', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:preparation:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for preparation
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase preparation for room 9655E4
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.SCORING -> GamePhase.PREPARATION
🔧 BASE_STATE_DEBUG: _setup_phase() completed successfully for scoring
🔧 TRANSITION_DEBUG: Step 4b - on_enter() completed for scoring
🔧 TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
🔧 TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
🔧 TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x104aae150>
🔧 TRANSITION_DEBUG: Is running: True
🔧 TRANSITION_DEBUG: Step 5 - About to store event
🔧 STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.DECLARATION -> GamePhase.SCORING
🔧 STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'declaration', 'new_phase': 'scoring', 'timestamp': '2025-07-02T09:15:46.219770', 'game_state': {}}
🔧 STORE_EVENT_DEBUG: Added game context: {'round_number': 116, 'player_count': 4, 'current_player': 'Andy'}
🔧 STORE_EVENT_DEBUG: About to call action_queue.store_state_event
🔧 STORE_EVENT_DEBUG: action_queue.store_state_event completed
🔧 STORE_EVENT_DEBUG: Event storage successful
🔧 TRANSITION_DEBUG: Step 5 - Store event completed
🔧 TRANSITION_DEBUG: Step 6 - About to broadcast
🚀 STATE_MACHINE_DEBUG: Broadcasting phase change to scoring with reason: All hands empty - round complete
🔧 BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for scoring
🔧 BROADCAST_DEBUG: Prepared base_data: {'phase': 'scoring', 'allowed_actions': ['player_reconnect', 'timeout', 'declare', 'player_disconnect'], 'phase_data': {'declaration_order': ['Andy', 'Bot 2', 'Bot 3', 'Bot 4'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Andy'}, 'immediate': True, 'reason': 'All hands empty - round complete'}
🔧 BROADCAST_DEBUG: Added display config: {'type': 'scoring', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
🔧 BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
🔧 BROADCAST_DEBUG: About to call broadcast_event with phase_change
🔧 BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
🔧 BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 9655E4, event phase_change
🔧 DEDUP_DEBUG: Skipping duplicate broadcast: phase_change:scoring:
🔧 BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
🔧 BROADCAST_DEBUG: broadcast_event completed successfully
✅ STATE_MACHINE_DEBUG: Phase change broadcast completed for scoring
🔧 TRANSITION_DEBUG: Step 7 - About to notify bot manager
🤖 STATE_MACHINE_DEBUG: Notifying bot manager about phase scoring for room 9655E4
🔧 TRANSITION_DEBUG: Step 7 - Bot manager notification completed
✅ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.DECLARATION -> GamePhase.SCORING
🎯 TURN_COMPLETE_DEBUG: _process_turn_completion() finished
🎯 UPDATE_DEBUG: About to update phase data with current_player: None, required_piece_count: 1
{"timestamp": "2025-07-02T16:15:46.221222Z", "level": "WARNING", "logger": "game.state.turn", "message": "Phase mismatch: current=GamePhase.DECLARATION, expected=GamePhase.TURN", "module": "base_state", "function": "update_phase_data", "line": 145}
{"timestamp": "2025-07-02T16:15:46.221358Z", "level": "WARNING", "logger": "game.state.turn", "message": "Skipping update to prevent conflicting broadcasts. Reason: Player Andy played 1 pieces", "module": "base_state", "function": "update_phase_data", "line": 146}
🔧 PHASE_MISMATCH_DEBUG: Blocked update - current phase GamePhase.DECLARATION != GamePhase.TURN
🎯 UPDATE_DEBUG: Phase data updated - next_player should be: None
{"timestamp": "2025-07-02T16:15:46.221538Z", "level": "INFO", "logger": "game.state.turn", "message": "\ud83d\udce4 Custom broadcast: play to room 9655E4 - Player Andy played 1 pieces", "module": "base_state", "function": "broadcast_custom_event", "line": 309}
🎯 TURN_STATE_DEBUG: Enterprise broadcast play event - next_player: None
🔧 PLAY_NOTIFY_DEBUG: Bot manager play notification task created (fire-and-forget)
🎯 TURN_STATE_DEBUG: Play pieces result: {'status': 'play_accepted', 'player': 'Andy', 'pieces': [GENERAL_BLACK(13)], 'piece_count': 1, 'required_count': 1, 'next_player': None, 'turn_complete': True}
✅ PROCESS_EVENT_DEBUG: State process_event completed: True
✅ EVENT_PROCESSOR_DEBUG: _process_event_in_state completed: True
🔧 EVENT_PROCESSOR_DEBUG: Checking transitions: False
🔧 EVENT_PROCESSOR_DEBUG: Critical section completed - releasing lock
🔧 EVENT_PROCESSOR_DEBUG: Step 3 - Lock-free operations (stats, history)
🔧 EVENT_PROCESSOR_DEBUG: Updating stats (lock-free)
🔧 EVENT_PROCESSOR_DEBUG: Storing event history (lock-free)
✅ EVENT_PROCESSOR_DEBUG: handle_event completed successfully
🔧 HANDLE_ACTION_DEBUG: event_processor.handle_event completed in 1.632s
🔧 HANDLE_ACTION_DEBUG: Processing result
✅ HANDLE_ACTION_DEBUG: handle_action returning result: {'success': True, 'immediate': True, 'transition': False, 'processing_time': 1.6322057247161865, 'reason': 'Turn action processed successfully', 'data': {'status': 'play_accepted', 'player': 'Andy', 'pieces': [GENERAL_BLACK(13)], 'piece_count': 1, 'required_count': 1, 'next_player': None, 'turn_complete': True}}
🎯 WS_PLAY_DEBUG: State machine result: {'success': True, 'immediate': True, 'transition': False, 'processing_time': 1.6322057247161865, 'reason': 'Turn action processed successfully', 'data': {'status': 'play_accepted', 'player': 'Andy', 'pieces': [GENERAL_BLACK(13)], 'piece_count': 1, 'required_count': 1, 'next_player': None, 'turn_complete': True}}
✅ Play queued: Andy -> [0]
DEBUG_WS: Entering broadcast method for room 9655E4, event play
DEBUG_WS: Attempting to queue event 'play' for room 9655E4 with data: {'player': 'Andy', 'pieces': ['GENERAL_BLACK(13)'], 'valid': True, 'play_type': 'SINGLE', 'next_player': None, 'required_count': 1, 'turn_complete': True, 'phase': 'turn', 'sequence': 266, 'timestamp': 1751472946.222045, 'reason': 'Player Andy played 1 pieces', 'room_id': '9655E4'}
🔧 SERIALIZATION_DEBUG: Testing JSON serialization for event 'play'
🔧 SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'play' - 309 chars
🔧 SERIALIZATION_DEBUG: About to call queue.put() for event 'play'
✅ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'play'
DEBUG_WS: Message for event 'play' added to queue for room 9655E4.
🤖 TURN_STATE_DEBUG: Notifying bot manager about Andy's play for room 9655E4
🔔 BOT_MANAGER_DEBUG: Received event 'player_played' for room 9655E4 with data: {'player_name': 'Andy'}
✅ BOT_MANAGER_DEBUG: Found handler for room 9655E4, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room 9655E4 handling event 'player_played' with data keys: ['player_name']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': False
🔍 BOT_HANDLER_DEBUG: Event value repr: 'player_played'
🔧 BOT_MANAGER_LOCK_FIX: Step 1 - Determining bot actions (minimal lock scope)
🔧 BOT_MANAGER_LOCK_FIX: Lock acquired for decision logic only
🎯 BOT_HANDLER_DEBUG: Analyzing play phase
🔧 BOT_MANAGER_LOCK_FIX: Decision logic completed - releasing lock
🔧 BOT_MANAGER_LOCK_FIX: Step 2 - Executing 1 bot actions (lock-free)
🔧 BOT_MANAGER_LOCK_FIX: Executing action play_phase (lock-free)
🎯 PLAY_PHASE_DEBUG: Got from state machine - required_count: None, turn_order: []
🎯 PLAY_PHASE_DEBUG: Current player: None, starter: None
🔧 CIRCUIT_BREAKER_DEBUG: No turn order available - likely end of round, stopping bot processing
✅ BOT_MANAGER_LOCK_FIX: Action play_phase completed successfully
DEBUG_WS_QUEUE: Room 9655E4 got message: turn_complete
DEBUG_WS: Broadcasting event 'turn_complete' (op_id: unknown) to 1 clients in room 9655E4.
DEBUG_WS: Successfully sent 'turn_complete' to a client in room 9655E4.

(There are a lot more of them )

DEBUG_WS_QUEUE: Room 9655E4 got message: turn_complete
DEBUG_WS: Broadcasting event 'turn_complete' (op_id: unknown) to 1 clients in room 9655E4.
DEBUG_WS: Successfully sent 'turn_complete' to a client in room 9655E4.
DEBUG_WS_QUEUE: Room 9655E4 got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room 9655E4.
DEBUG_WS: Successfully sent 'phase_change' to a client in room 9655E4.

(There are a lot more of them )

DEBUG_WS_QUEUE: Room 9655E4 got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room 9655E4.
DEBUG_WS: Successfully sent 'phase_change' to a client in room 9655E4.
DEBUG_WS_QUEUE: Room 9655E4 got message: play
DEBUG_WS: Broadcasting event 'play' (op_id: unknown) to 1 clients in room 9655E4.
DEBUG_WS: Successfully sent 'play' to a client in room 9655E4.
DEBUG_WS_RECEIVE: Received event 'ping' from client in room lobby with data: {'timestamp': 1751472946801}