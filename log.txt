🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'action_accepted' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'action_accepted' for room 046A50
2025-07-23 18:16:28 - game.action_queue - ERROR - Failed to store action event: Object of type Piece is not JSON serializable
2025-07-23 18:16:28 - game.action_queue - ERROR - Failed to store action event: Object of type Piece is not JSON serializable
2025-07-23 18:16:28 - game.state.turn - INFO - 🎲 Bot 2 plays: [SOLDIER_BLACK(1), SOLDIER_RED(2), SOLDIER_RED(2), CANNON_BLACK(3), CANNON_BLACK(3), ELEPHANT_RED(10)] (value: 21)
2025-07-23 18:16:28 - game.state.turn - INFO - Removed 6 pieces from Bot 2's hand
2025-07-23 18:16:28 - game.state.turn - INFO - 🎮 Phase Data Update: Player Bot 2 played 6 pieces
2025-07-23 18:16:28 - game.state.turn - INFO - 📤 Auto-broadcast: phase_change to room 046A50 - Player Bot 2 played 6 pieces
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'phase_change' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'phase_change' for room 046A50
🔍 BOT_HANDLER: Phase change detected - new phase: turn, last phase: turn
🔍 BOT_HANDLER: Handling phase_change event
🔍 BOT_HANDLER: _handle_enterprise_phase_change - phase: turn, phase_data keys: ['current_turn_starter', 'current_player', 'turn_order', 'required_piece_count', 'turn_plays', 'turn_complete', 'current_turn_number', 'pile_counts']
🔍 BOT_HANDLER: Processing turn phase
🔍 BOT_HANDLER: Turn plays: ['Andy', 'Bot 2'], current player: Bot 3
🔍 BOT_MANAGER: Turn order: ['Andy', 'Bot 2', 'Bot 3', 'P2'], last_player: Bot 2
🔍 BOT_HANDLER: _bot_play called for bot Bot 3
🤖 BOT has no valid play. Discards lowest pieces: SOLDIER, HORSE, CHARIOT, ELEPHANT, ELEPHANT, ELEPHANT
    🔍 Final play: ['SOLDIER', 'HORSE', 'CHARIOT', 'ELEPHANT', 'ELEPHANT', 'ELEPHANT']
    🧠 Hand left: ['ELEPHANT', 'GENERAL', 'ELEPHANT', 'ADVISOR', 'CHARIOT', 'ELEPHANT', 'HORSE', 'SOLDIER']
✅ Bot Bot 3 action queued - state machine will broadcast with correct next_player
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'action_accepted' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'action_accepted' for room 046A50
2025-07-23 18:16:29 - game.state.turn - INFO - 🎲 Bot 3 plays: [SOLDIER_RED(2), HORSE_BLACK(5), CHARIOT_BLACK(7), ELEPHANT_BLACK(9), ELEPHANT_BLACK(9), ELEPHANT_RED(10)] (value: 42)
2025-07-23 18:16:29 - game.state.turn - INFO - Removed 6 pieces from Bot 3's hand
2025-07-23 18:16:29 - game.state.turn - INFO - 🎮 Phase Data Update: Player Bot 3 played 6 pieces
2025-07-23 18:16:29 - game.state.turn - INFO - 📤 Auto-broadcast: phase_change to room 046A50 - Player Bot 3 played 6 pieces
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'phase_change' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'phase_change' for room 046A50
🔍 BOT_HANDLER: Phase change detected - new phase: turn, last phase: turn
🔍 BOT_HANDLER: Handling phase_change event
🔍 BOT_HANDLER: _handle_enterprise_phase_change - phase: turn, phase_data keys: ['current_turn_starter', 'current_player', 'turn_order', 'required_piece_count', 'turn_plays', 'turn_complete', 'current_turn_number', 'pile_counts']
🔍 BOT_HANDLER: Processing turn phase
🔍 BOT_HANDLER: Turn plays: ['Andy', 'Bot 2', 'Bot 3'], current player: P2
🔍 BOT_MANAGER: Turn order: ['Andy', 'Bot 2', 'Bot 3', 'P2'], last_player: Bot 3
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'action_accepted' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'action_accepted' for room 046A50
2025-07-23 18:16:29 - game.action_queue - ERROR - Failed to store action event: Object of type Piece is not JSON serializable
2025-07-23 18:16:29 - game.state.turn - WARNING - Not Bot 3's turn - expected P2
2025-07-23 18:16:29 - game.state.turn - WARNING - Invalid action: GameAction(player_name='Bot 3', action_type=<ActionType.PLAY_PIECES: 'play_pieces'>, payload={'pieces': [SOLDIER_RED(2), HORSE_BLACK(5), CHARIOT_BLACK(7), ELEPHANT_BLACK(9), ELEPHANT_BLACK(9), ELEPHANT_RED(10)]}, timestamp=datetime.datetime(2025, 7, 23, 18, 16, 29, 39174), sequence_id=50, is_bot=True)
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'action_accepted' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'action_accepted' for room 046A50
2025-07-23 18:16:32 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleanup iteration 64: Checking 1 rooms: ['046A50']
2025-07-23 18:16:32 - backend.api.routes.ws - INFO - 🧹 CLEANUP_CHECK: Room 046A50 - game_ended=False, should_cleanup=False
2025-07-23 18:16:34 - game.action_queue - ERROR - Failed to store action event: Object of type Piece is not JSON serializable
2025-07-23 18:16:34 - game.state.turn - INFO - 🎲 P2 plays: [ADVISOR_RED(12), CHARIOT_BLACK(7), HORSE_BLACK(5), SOLDIER_BLACK(1), SOLDIER_BLACK(1), GENERAL_BLACK(13)] (value: 39)
2025-07-23 18:16:34 - game.state.turn - INFO - Removed 6 pieces from P2's hand
2025-07-23 18:16:34 - game.state.turn - INFO - 🎮 Phase Data Update: Player P2 played 6 pieces
2025-07-23 18:16:34 - game.state.turn - INFO - 📤 Auto-broadcast: phase_change to room 046A50 - Player P2 played 6 pieces
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'phase_change' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'phase_change' for room 046A50
🔍 BOT_HANDLER: Phase change detected - new phase: turn, last phase: turn
🔍 BOT_HANDLER: Handling phase_change event
🔍 BOT_HANDLER: _handle_enterprise_phase_change - phase: turn, phase_data keys: ['current_turn_starter', 'current_player', 'turn_order', 'required_piece_count', 'turn_plays', 'turn_complete', 'current_turn_number', 'pile_counts']
🔍 BOT_HANDLER: Processing turn phase
🔍 BOT_HANDLER: Turn plays: ['Andy', 'Bot 2', 'Bot 3', 'P2'], current player: P2
🔍 BOT_MANAGER: Turn order: ['Andy', 'Bot 2', 'Bot 3', 'P2'], last_player: P2
2025-07-23 18:16:34 - game.state.turn - INFO - 🎯 Round 3, Turn 1 winner: Andy with DOUBLE_STRAIGHT value 36
2025-07-23 18:16:34 - game.state.turn - INFO - 💰 Andy won 6 piles this turn, total: 6 piles
2025-07-23 18:16:34 - game.state.turn - INFO - 🏆 Andy wins turn and gets 6 piles
2025-07-23 18:16:34 - game.state.turn - INFO - 🎮 Waiting 5s for piece flip animation to complete...
2025-07-23 18:16:37 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleanup iteration 65: Checking 1 rooms: ['046A50']
2025-07-23 18:16:37 - backend.api.routes.ws - INFO - 🧹 CLEANUP_CHECK: Room 046A50 - game_ended=False, should_cleanup=False
2025-07-23 18:16:39 - game.state.turn - INFO - 🎮 Phase Data Update: Turn completed - winner: Andy
2025-07-23 18:16:39 - game.state.turn - INFO - 📤 Auto-broadcast: phase_change to room 046A50 - Turn completed - winner: Andy
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'phase_change' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'phase_change' for room 046A50
🔍 BOT_HANDLER: Phase change detected - new phase: turn, last phase: turn
🔍 BOT_HANDLER: Handling phase_change event
🔍 BOT_HANDLER: _handle_enterprise_phase_change - phase: turn, phase_data keys: ['current_turn_starter', 'current_player', 'turn_order', 'required_piece_count', 'turn_plays', 'turn_complete', 'current_turn_number', 'pile_counts', 'winner', 'piles_won', 'next_turn_starter']
🔍 BOT_HANDLER: Processing turn phase
🔍 BOT_HANDLER: Turn plays: ['Andy', 'Bot 2', 'Bot 3', 'P2'], current player: P2
🔍 BOT_MANAGER: Turn order: ['Andy', 'Bot 2', 'Bot 3', 'P2'], last_player: P2
2025-07-23 18:16:39 - game.state.turn - INFO - 📤 Custom broadcast: turn_complete to room 046A50 - Turn 1 completed - winner: Andy
2025-07-23 18:16:39 - game.state.turn - INFO - 🚀 Enterprise broadcast turn completion - winner: Andy, turn piles awarded: {'Andy': 6, 'Bot 2': 0, 'Bot 3': 0, 'P2': 0}
2025-07-23 18:16:39 - game.state.turn - INFO - 🔄 Updated turn order - new starter first: ['Andy', 'Bot 2', 'Bot 3', 'P2']
2025-07-23 18:16:39 - game.state.turn - INFO - 🎯 Next turn starter: Andy
2025-07-23 18:16:39 - game.state.turn - INFO - 🎯 Turn complete - auto-starting next turn in 7 seconds
2025-07-23 18:16:42 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleanup iteration 66: Checking 1 rooms: ['046A50']
2025-07-23 18:16:42 - backend.api.routes.ws - INFO - 🧹 CLEANUP_CHECK: Room 046A50 - game_ended=False, should_cleanup=False
2025-07-23 18:16:46 - game.state.turn - INFO - 🎮 Phase Data Update: New turn 2 started with starter Andy
2025-07-23 18:16:46 - game.state.turn - INFO - 📤 Auto-broadcast: phase_change to room 046A50 - New turn 2 started with starter Andy
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'phase_change' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'phase_change' for room 046A50
🔍 BOT_HANDLER: Phase change detected - new phase: turn, last phase: turn
🔍 BOT_HANDLER: Handling phase_change event
🔍 BOT_HANDLER: _handle_enterprise_phase_change - phase: turn, phase_data keys: ['current_turn_starter', 'current_player', 'turn_order', 'required_piece_count', 'turn_plays', 'turn_complete', 'current_turn_number', 'pile_counts', 'winner', 'piles_won', 'next_turn_starter']
🔍 BOT_HANDLER: Processing turn phase
🔍 BOT_HANDLER: Turn plays: [], current player: Andy
🔍 BOT_MANAGER: Turn order: ['Andy', 'Bot 2', 'Bot 3', 'P2'], last_player: 
2025-07-23 18:16:46 - game.state.turn - INFO - 🎯 New turn started - order: ['Andy', 'Bot 2', 'Bot 3', 'P2']
2025-07-23 18:16:46 - game.state.turn - INFO - 🚀 Enterprise: New turn auto-started with automatic broadcasting
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'action_accepted' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'action_accepted' for room 046A50
2025-07-23 18:16:47 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleanup iteration 67: Checking 1 rooms: ['046A50']
2025-07-23 18:16:47 - backend.api.routes.ws - INFO - 🧹 CLEANUP_CHECK: Room 046A50 - game_ended=False, should_cleanup=False
2025-07-23 18:16:49 - game.action_queue - ERROR - Failed to store action event: Object of type Piece is not JSON serializable
2025-07-23 18:16:49 - game.state.turn - INFO - 🎲 Andy (starter) plays 2 pieces - setting required count
2025-07-23 18:16:49 - game.state.turn - INFO - 🎲 Andy plays: [SOLDIER_BLACK(1), SOLDIER_BLACK(1)] (value: 2)
2025-07-23 18:16:49 - game.state.turn - INFO - Removed 2 pieces from Andy's hand
2025-07-23 18:16:49 - game.state.turn - INFO - 🎮 Phase Data Update: Player Andy played 2 pieces
2025-07-23 18:16:49 - game.state.turn - INFO - 📤 Auto-broadcast: phase_change to room 046A50 - Player Andy played 2 pieces
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'phase_change' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'phase_change' for room 046A50
🔍 BOT_HANDLER: Phase change detected - new phase: turn, last phase: turn
🔍 BOT_HANDLER: Handling phase_change event
🔍 BOT_HANDLER: _handle_enterprise_phase_change - phase: turn, phase_data keys: ['current_turn_starter', 'current_player', 'turn_order', 'required_piece_count', 'turn_plays', 'turn_complete', 'current_turn_number', 'pile_counts', 'winner', 'piles_won', 'next_turn_starter']
🔍 BOT_HANDLER: Processing turn phase
🔍 BOT_HANDLER: Turn plays: ['Andy'], current player: Bot 2
🔍 BOT_MANAGER: Turn order: ['Andy', 'Bot 2', 'Bot 3', 'P2'], last_player: Andy
🔍 BOT_HANDLER: _bot_play called for bot Bot 2
🤖 BOT has no valid play. Discards lowest pieces: ADVISOR, ADVISOR
    🔍 Final play: ['ADVISOR', 'ADVISOR']
    🧠 Hand left: ['ADVISOR', 'ADVISOR']
✅ Bot Bot 2 action queued - state machine will broadcast with correct next_player
🔍 BOT_HANDLER: _bot_play called for bot Bot 3
🤖 BOT has no valid play. Discards lowest pieces: ADVISOR, GENERAL
    🔍 Final play: ['ADVISOR', 'GENERAL']
    🧠 Hand left: ['GENERAL', 'ADVISOR']
✅ Bot Bot 3 action queued - state machine will broadcast with correct next_player
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'action_accepted' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'action_accepted' for room 046A50
2025-07-23 18:16:52 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleanup iteration 68: Checking 1 rooms: ['046A50']
2025-07-23 18:16:52 - backend.api.routes.ws - INFO - 🧹 CLEANUP_CHECK: Room 046A50 - game_ended=False, should_cleanup=False
2025-07-23 18:16:52 - game.action_queue - ERROR - Failed to store action event: Object of type Piece is not JSON serializable
2025-07-23 18:16:52 - game.action_queue - ERROR - Failed to store action event: Object of type Piece is not JSON serializable
2025-07-23 18:16:52 - game.state.turn - INFO - 🎲 Bot 2 plays: [ADVISOR_BLACK(11), ADVISOR_RED(12)] (value: 23)
2025-07-23 18:16:52 - game.state.turn - INFO - Removed 2 pieces from Bot 2's hand
2025-07-23 18:16:52 - game.state.turn - INFO - 🎮 Phase Data Update: Player Bot 2 played 2 pieces
2025-07-23 18:16:52 - game.state.turn - INFO - 📤 Auto-broadcast: phase_change to room 046A50 - Player Bot 2 played 2 pieces
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'phase_change' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'phase_change' for room 046A50
🔍 BOT_HANDLER: Phase change detected - new phase: turn, last phase: turn
🔍 BOT_HANDLER: Handling phase_change event
🔍 BOT_HANDLER: _handle_enterprise_phase_change - phase: turn, phase_data keys: ['current_turn_starter', 'current_player', 'turn_order', 'required_piece_count', 'turn_plays', 'turn_complete', 'current_turn_number', 'pile_counts', 'winner', 'piles_won', 'next_turn_starter']
🔍 BOT_HANDLER: Processing turn phase
🔍 BOT_HANDLER: Turn plays: ['Andy', 'Bot 2'], current player: Bot 3
🔍 BOT_MANAGER: Turn order: ['Andy', 'Bot 2', 'Bot 3', 'P2'], last_player: Bot 2
🔍 BOT_HANDLER: _bot_play called for bot Bot 3
🤖 BOT has no valid play. Discards lowest pieces: ADVISOR, GENERAL
    🔍 Final play: ['ADVISOR', 'GENERAL']
    🧠 Hand left: ['GENERAL', 'ADVISOR']
✅ Bot Bot 3 action queued - state machine will broadcast with correct next_player
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'action_accepted' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'action_accepted' for room 046A50
2025-07-23 18:16:53 - game.state.turn - INFO - 🎲 Bot 3 plays: [ADVISOR_BLACK(11), GENERAL_RED(14)] (value: 25)
2025-07-23 18:16:53 - game.state.turn - INFO - Removed 2 pieces from Bot 3's hand
2025-07-23 18:16:53 - game.state.turn - INFO - 🎮 Phase Data Update: Player Bot 3 played 2 pieces
2025-07-23 18:16:53 - game.state.turn - INFO - 📤 Auto-broadcast: phase_change to room 046A50 - Player Bot 3 played 2 pieces
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'phase_change' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'phase_change' for room 046A50
🔍 BOT_HANDLER: Phase change detected - new phase: turn, last phase: turn
🔍 BOT_HANDLER: Handling phase_change event
🔍 BOT_HANDLER: _handle_enterprise_phase_change - phase: turn, phase_data keys: ['current_turn_starter', 'current_player', 'turn_order', 'required_piece_count', 'turn_plays', 'turn_complete', 'current_turn_number', 'pile_counts', 'winner', 'piles_won', 'next_turn_starter']
🔍 BOT_HANDLER: Processing turn phase
🔍 BOT_HANDLER: Turn plays: ['Andy', 'Bot 2', 'Bot 3'], current player: P2
🔍 BOT_MANAGER: Turn order: ['Andy', 'Bot 2', 'Bot 3', 'P2'], last_player: Bot 3
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'action_accepted' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'action_accepted' for room 046A50
2025-07-23 18:16:54 - game.action_queue - ERROR - Failed to store action event: Object of type Piece is not JSON serializable
2025-07-23 18:16:54 - game.state.turn - WARNING - Not Bot 3's turn - expected P2
2025-07-23 18:16:54 - game.state.turn - WARNING - Invalid action: GameAction(player_name='Bot 3', action_type=<ActionType.PLAY_PIECES: 'play_pieces'>, payload={'pieces': [ADVISOR_BLACK(11), GENERAL_RED(14)]}, timestamp=datetime.datetime(2025, 7, 23, 18, 16, 53, 677138), sequence_id=55, is_bot=True)
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'action_accepted' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'action_accepted' for room 046A50
2025-07-23 18:16:55 - game.action_queue - ERROR - Failed to store action event: Object of type Piece is not JSON serializable
2025-07-23 18:16:55 - game.state.turn - INFO - 🎲 P2 plays: [SOLDIER_RED(2), SOLDIER_RED(2)] (value: 4)
2025-07-23 18:16:55 - game.state.turn - INFO - Removed 2 pieces from P2's hand
2025-07-23 18:16:55 - game.state.turn - INFO - 🎮 Phase Data Update: Player P2 played 2 pieces
2025-07-23 18:16:55 - game.state.turn - INFO - 📤 Auto-broadcast: phase_change to room 046A50 - Player P2 played 2 pieces
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'phase_change' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'phase_change' for room 046A50
🔍 BOT_HANDLER: Phase change detected - new phase: turn, last phase: turn
🔍 BOT_HANDLER: Handling phase_change event
🔍 BOT_HANDLER: _handle_enterprise_phase_change - phase: turn, phase_data keys: ['current_turn_starter', 'current_player', 'turn_order', 'required_piece_count', 'turn_plays', 'turn_complete', 'current_turn_number', 'pile_counts', 'winner', 'piles_won', 'next_turn_starter']
🔍 BOT_HANDLER: Processing turn phase
🔍 BOT_HANDLER: Turn plays: ['Andy', 'Bot 2', 'Bot 3', 'P2'], current player: P2
🔍 BOT_MANAGER: Turn order: ['Andy', 'Bot 2', 'Bot 3', 'P2'], last_player: P2
2025-07-23 18:16:55 - game.state.turn - INFO - 🎯 Round 3, Turn 2 winner: P2 with PAIR value 4
2025-07-23 18:16:55 - game.state.turn - INFO - 💰 P2 won 2 piles this turn, total: 2 piles
2025-07-23 18:16:55 - game.state.turn - INFO - 🏆 P2 wins turn and gets 2 piles
2025-07-23 18:16:55 - game.state.turn - INFO - 🎮 Waiting 5s for piece flip animation to complete...
2025-07-23 18:16:57 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleanup iteration 69: Checking 1 rooms: ['046A50']
2025-07-23 18:16:57 - backend.api.routes.ws - INFO - 🧹 CLEANUP_CHECK: Room 046A50 - game_ended=False, should_cleanup=False
2025-07-23 18:17:00 - game.state.turn - INFO - 🎮 Phase Data Update: Turn completed - winner: P2
2025-07-23 18:17:00 - game.state.turn - INFO - 📤 Auto-broadcast: phase_change to room 046A50 - Turn completed - winner: P2
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'phase_change' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'phase_change' for room 046A50
🔍 BOT_HANDLER: Phase change detected - new phase: turn, last phase: turn
🔍 BOT_HANDLER: Handling phase_change event
🔍 BOT_HANDLER: _handle_enterprise_phase_change - phase: turn, phase_data keys: ['current_turn_starter', 'current_player', 'turn_order', 'required_piece_count', 'turn_plays', 'turn_complete', 'current_turn_number', 'pile_counts', 'winner', 'piles_won', 'next_turn_starter']
🔍 BOT_HANDLER: Processing turn phase
🔍 BOT_HANDLER: Turn plays: ['Andy', 'Bot 2', 'Bot 3', 'P2'], current player: P2
🔍 BOT_MANAGER: Turn order: ['Andy', 'Bot 2', 'Bot 3', 'P2'], last_player: P2
2025-07-23 18:17:00 - game.state.turn - INFO - 📤 Custom broadcast: turn_complete to room 046A50 - Turn 2 completed - winner: P2
2025-07-23 18:17:00 - game.state.turn - INFO - 🚀 Enterprise broadcast turn completion - winner: P2, turn piles awarded: {'P2': 2, 'Andy': 0, 'Bot 2': 0, 'Bot 3': 0}
2025-07-23 18:17:00 - game.state.turn - INFO - 🏁 All hands are now empty - round complete. Last turn winner: P2
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 BOT_MANAGER: Received event 'action_accepted' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'action_accepted' for room 046A50
2025-07-23 18:17:00 - game.state.turn - INFO - 🏁 Turn complete - transitioning to turn_results
2025-07-23 18:17:00 - engine.state_machine.game_state_machine - INFO - Transitioning from GamePhase.TURN to GamePhase.TURN_RESULTS
2025-07-23 18:17:00 - engine.state_machine.game_state_machine - INFO - 🔄 Transitioning: GamePhase.TURN -> GamePhase.TURN_RESULTS
2025-07-23 18:17:00 - game.state.turn - INFO - Exiting turn phase
2025-07-23 18:17:00 - game.state.turn - INFO - 🏁 Turn phase complete - all hands empty
2025-07-23 18:17:00 - game.state.turn_results - INFO - Entering turn_results phase
2025-07-23 18:17:00 - game.state.turn_results - INFO - 🏆 Turn results phase starting - displaying turn outcome
2025-07-23 18:17:00 - game.state.turn_results - INFO - ℹ️ TURNS_WON_DEBUG: No turn winner to update
2025-07-23 18:17:00 - game.state.turn_results - INFO - 🎮 Phase Data Update: Displaying turn results - winner: None
2025-07-23 18:17:00 - game.state.turn_results - INFO - 📤 Auto-broadcast: phase_change to room 046A50 - Displaying turn results - winner: None
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
2025-07-23 18:17:00 - engine.state_machine.game_state_machine - INFO - Stored phase change event: GamePhase.TURN -> GamePhase.TURN_RESULTS
🔍 STATE_MACHINE: BotManager imported successfully
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 STATE_MACHINE: BotManager instance created
2025-07-23 18:17:00 - engine.state_machine.game_state_machine - INFO - Notifying bot manager about phase turn_results
🔍 STATE_MACHINE: Notifying bot manager about phase turn_results for room 046A50
2025-07-23 18:17:02 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleanup iteration 70: Checking 1 rooms: ['046A50']
2025-07-23 18:17:02 - backend.api.routes.ws - INFO - 🧹 CLEANUP_CHECK: Room 046A50 - game_ended=False, should_cleanup=False
2025-07-23 18:17:07 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleanup iteration 71: Checking 1 rooms: ['046A50']
2025-07-23 18:17:07 - backend.api.routes.ws - INFO - 🧹 CLEANUP_CHECK: Room 046A50 - game_ended=False, should_cleanup=False
2025-07-23 18:17:07 - game.state.turn_results - INFO - 🎮 Phase Data Update: Auto-transition triggered after 7.0s display
2025-07-23 18:17:07 - game.state.turn_results - INFO - 📤 Auto-broadcast: phase_change to room 046A50 - Auto-transition triggered after 7.0s display
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
2025-07-23 18:17:08 - game.state.turn_results - INFO - 🏆 Turn results complete - transitioning to GamePhase.SCORING
2025-07-23 18:17:08 - engine.state_machine.game_state_machine - INFO - Transitioning from GamePhase.TURN_RESULTS to GamePhase.SCORING
2025-07-23 18:17:08 - engine.state_machine.game_state_machine - INFO - 🔄 Transitioning: GamePhase.TURN_RESULTS -> GamePhase.SCORING
2025-07-23 18:17:08 - game.state.turn_results - INFO - Exiting turn_results phase
2025-07-23 18:17:08 - game.state.turn_results - INFO - 🏆 Cleaning up turn results phase
2025-07-23 18:17:08 - game.state.scoring - INFO - Entering scoring phase
🔄 SCORING_SETUP_DEBUG: Reset display_delay_complete = False
2025-07-23 18:17:08 - game.state.scoring - INFO - Setting up Scoring Phase
🗳️ DECLARATION_DEBUG: game.player_declarations = {'Andy': 6, 'Bot 2': 1, 'Bot 3': 1, 'P2': 2}
📋 SCORING_FIX_DEBUG: Andy - declared: 6, actual: 6
2025-07-23 18:17:08 - game.state.scoring - INFO - 🎯 PERFECT_ROUNDS_DEBUG: Andy had perfect round! perfect_rounds: 2 -> 3
🏆 SCORING_DEBUG: Andy scoring data:
   📋 Declared: 6, Actual: 6
   📊 Base Score: 11, Multiplier: 1x, Final: 11
   💯 Total Score: 59
2025-07-23 18:17:08 - game.state.scoring - INFO - Player Andy: declared 6, actual 6, base 11, final 11 (×1), total 59
📋 SCORING_FIX_DEBUG: Bot 2 - declared: 1, actual: 0
🏆 SCORING_DEBUG: Bot 2 scoring data:
   📋 Declared: 1, Actual: 0
   📊 Base Score: -1, Multiplier: 1x, Final: -1
   💯 Total Score: -5
2025-07-23 18:17:08 - game.state.scoring - INFO - Player Bot 2: declared 1, actual 0, base -1, final -1 (×1), total -5
📋 SCORING_FIX_DEBUG: Bot 3 - declared: 1, actual: 0
🏆 SCORING_DEBUG: Bot 3 scoring data:
   📋 Declared: 1, Actual: 0
   📊 Base Score: -1, Multiplier: 1x, Final: -1
   💯 Total Score: -5
2025-07-23 18:17:08 - game.state.scoring - INFO - Player Bot 3: declared 1, actual 0, base -1, final -1 (×1), total -5
📋 SCORING_FIX_DEBUG: P2 - declared: 2, actual: 2
2025-07-23 18:17:08 - game.state.scoring - INFO - 🎯 PERFECT_ROUNDS_DEBUG: P2 had perfect round! perfect_rounds: 0 -> 1
🏆 SCORING_DEBUG: P2 scoring data:
   📋 Declared: 2, Actual: 2
   📊 Base Score: 7, Multiplier: 1x, Final: 7
   💯 Total Score: 19
2025-07-23 18:17:08 - game.state.scoring - INFO - Player P2: declared 2, actual 2, base 7, final 7 (×1), total 19
2025-07-23 18:17:08 - game.state.scoring - INFO - Game completed! Winners: ['Andy'] with 59 points
🚀 SCORING_BROADCAST_DEBUG: Broadcasting scoring data:
   📊 Round scores: {'Andy': {'declared': 6, 'actual': 6, 'base_score': 11, 'bonus': 5, 'hit_value': 6, 'multiplier': 1, 'final_score': 11, 'total_score': 59}, 'Bot 2': {'declared': 1, 'actual': 0, 'base_score': -1, 'bonus': 0, 'hit_value': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -5}, 'Bot 3': {'declared': 1, 'actual': 0, 'base_score': -1, 'bonus': 0, 'hit_value': -1, 'multiplier': 1, 'final_score': -1, 'total_score': -5}, 'P2': {'declared': 2, 'actual': 2, 'base_score': 7, 'bonus': 5, 'hit_value': 2, 'multiplier': 1, 'final_score': 7, 'total_score': 19}}
   🏁 Game complete: True
   🏆 Winners: ['Andy']
🚀 SCORING_BROADCAST_DEBUG: Also sending:
   💯 Total scores: {'Andy': 59, 'Bot 2': -5, 'Bot 3': -5, 'P2': 19}
   👥 Scoring players data: [{'name': 'Andy', 'is_bot': False, 'pile_count': 6, 'captured_piles': 6}, {'name': 'Bot 2', 'is_bot': True, 'pile_count': 1, 'captured_piles': 0}, {'name': 'Bot 3', 'is_bot': True, 'pile_count': 1, 'captured_piles': 0}, {'name': 'P2', 'is_bot': False, 'pile_count': 2, 'captured_piles': 2}]
2025-07-23 18:17:08 - game.state.scoring - INFO - 🎮 Phase Data Update: Scoring calculated for round 3
2025-07-23 18:17:08 - game.state.scoring - INFO - 📤 Auto-broadcast: phase_change to room 046A50 - Scoring calculated for round 3
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
2025-07-23 18:17:08 - game.state.scoring - INFO - Scoring complete. Game over: True
2025-07-23 18:17:08 - engine.state_machine.game_state_machine - INFO - Stored phase change event: GamePhase.TURN_RESULTS -> GamePhase.SCORING
🔍 STATE_MACHINE: BotManager imported successfully
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 STATE_MACHINE: BotManager instance created
2025-07-23 18:17:08 - engine.state_machine.game_state_machine - INFO - Notifying bot manager about phase scoring
🔍 STATE_MACHINE: Notifying bot manager about phase scoring for room 046A50
⏰ SCORING_DELAY_DEBUG: Starting 7-second display delay...
2025-07-23 18:17:12 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleanup iteration 72: Checking 1 rooms: ['046A50']
2025-07-23 18:17:12 - backend.api.routes.ws - INFO - 🧹 CLEANUP_CHECK: Room 046A50 - game_ended=False, should_cleanup=False
⏰ SCORING_DELAY_DEBUG: 7-second delay complete - setting display_delay_complete = True
2025-07-23 18:17:15 - game.state.scoring - INFO - Scoring display delay complete - ready to transition
2025-07-23 18:17:15 - game.state.scoring - INFO - 🔍 SCORING_TRANSITION_DEBUG: Game complete - transitioning to GAME_OVER
2025-07-23 18:17:15 - engine.state_machine.game_state_machine - INFO - Transitioning from GamePhase.SCORING to GamePhase.GAME_OVER
2025-07-23 18:17:15 - engine.state_machine.game_state_machine - INFO - 🔄 Transitioning: GamePhase.SCORING -> GamePhase.GAME_OVER
2025-07-23 18:17:15 - game.state.scoring - INFO - Exiting scoring phase
2025-07-23 18:17:15 - game.state.scoring - INFO - Game completed. Winners: ['Andy']
2025-07-23 18:17:15 - game.state.game_over - INFO - Entering game_over phase
2025-07-23 18:17:15 - game.state.game_over - INFO - Player Andy: turns_won=0, perfect_rounds=3
2025-07-23 18:17:15 - game.state.game_over - INFO - Player P2: turns_won=0, perfect_rounds=1
2025-07-23 18:17:15 - game.state.game_over - INFO - Player Bot 2: turns_won=0, perfect_rounds=0
2025-07-23 18:17:15 - game.state.game_over - INFO - Player Bot 3: turns_won=0, perfect_rounds=0
2025-07-23 18:17:15 - game.state.game_over - INFO - 🎮 Phase Data Update: Game over phase initialized
2025-07-23 18:17:15 - game.state.game_over - INFO - 📤 Auto-broadcast: phase_change to room 046A50 - Game over phase initialized
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
2025-07-23 18:17:15 - engine.state_machine.game_state_machine - INFO - Stored phase change event: GamePhase.SCORING -> GamePhase.GAME_OVER
🔍 STATE_MACHINE: BotManager imported successfully
🔍 BOT_MANAGER: Returning existing singleton instance with 1 active games
🔍 STATE_MACHINE: BotManager instance created
2025-07-23 18:17:15 - engine.state_machine.game_state_machine - INFO - Notifying bot manager about phase game_over
🔍 STATE_MACHINE: Notifying bot manager about phase game_over for room 046A50
🔍 BOT_MANAGER: Received event 'game_over' for room 046A50
🔍 BOT_MANAGER: Current active games: ['046A50']
🔍 BOT_HANDLER: Processing event 'game_over' for room 046A50
2025-07-23 18:17:15 - engine.state_machine.game_state_machine - INFO - 🤖 GAME_OVER: Unregistering bot manager for room 046A50
2025-07-23 18:17:15 - engine.async_room - INFO - 🎮 GAME_ENDED: Setting game_ended flag for room 046A50
2025-07-23 18:17:15 - engine.async_room - INFO - 👥 [ROOM_DEBUG] Room '046A50' player count: 2 humans, 2 bots
2025-07-23 18:17:15 - engine.async_room - INFO - ❌ [ROOM_DEBUG] Room '046A50' NOT marked for cleanup - still has human players
2025-07-23 18:17:15 - engine.state_machine.game_state_machine - INFO - ✅ GAME_OVER: Successfully marked room 046A50 as game_ended
2025-07-23 18:17:15 - engine.state_machine.game_state_machine - INFO - 🛑 GAME_OVER: Stopping state machine for room 046A50
2025-07-23 18:17:15 - engine.state_machine.game_state_machine - INFO - 🛑 Stopping state machine
2025-07-23 18:17:15 - game.state.game_over - INFO - Exiting game_over phase
2025-07-23 18:17:15 - game.state.game_over - INFO - Game over phase completed for room 046A50
2025-07-23 18:17:15 - engine.state_machine.game_state_machine - INFO - 🛑 GAME_OVER: State machine stopped, is_running = False
2025-07-23 18:17:15 - engine.state_machine.game_state_machine - INFO - State machine process loop ended
2025-07-23 18:17:17 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleanup iteration 73: Checking 1 rooms: ['046A50']
2025-07-23 18:17:17 - backend.api.routes.ws - INFO - 🧹 CLEANUP_CHECK: Room 046A50 - game_ended=True, should_cleanup=False
2025-07-23 18:17:22 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleanup iteration 74: Checking 1 rooms: ['046A50']
2025-07-23 18:17:22 - backend.api.routes.ws - INFO - 🧹 CLEANUP_CHECK: Room 046A50 - game_ended=True, should_cleanup=False
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] New WebSocket connection to room 'lobby', ws_id: bbfdbf54-00a2-46af-8138-ea88bb8388b4 at 1753319845.216664
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Room cleanup task already running
INFO:     ('127.0.0.1', 56526) - "WebSocket /ws/lobby" [accepted]
INFO:     connection open
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] New WebSocket connection to room 'lobby', ws_id: ca01d9b2-8240-424f-aca9-1b3104e17657 at 1753319845.225954
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Room cleanup task already running
INFO:     ('127.0.0.1', 56528) - "WebSocket /ws/lobby" [accepted]
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] Handling disconnect for room '046A50', websocket_id: 0551d480-5176-4603-b57b-d167f586d589 at 1753319845.228354
2025-07-23 18:17:25 - api.websocket.connection_manager - INFO - Player Andy disconnected from room 046A50. Can reconnect anytime while game is active.
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🎮 [ROOM_DEBUG] In-game disconnect detected for player 'Andy' in room '046A50'
2025-07-23 18:17:25 - api.websocket.message_queue - INFO - Created message queue for Andy in room 046A50
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - Player Andy disconnected from game in room 046A50. Bot activated.
2025-07-23 18:17:25 - engine.async_room - INFO - Host migrated from Andy to P2 in room 046A50
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - Host migrated to P2 in room 046A50
INFO:     connection closed
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] Handling disconnect for room 'lobby', websocket_id: e3d43663-ccb5-4ecf-b0be-8cddc3ee8d6e at 1753319845.232288
2025-07-23 18:17:25 - api.websocket.connection_manager - WARNING - WebSocket ID e3d43663-ccb5-4ecf-b0be-8cddc3ee8d6e not found in mapping. Current mappings: ['26490b1a-301d-4abe-a802-76b6ab4709ab']
2025-07-23 18:17:25 - backend.api.routes.ws - WARNING - No websocket_id found on websocket object for room lobby
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - ⚠️ [ROOM_DEBUG] WebSocket disconnect without ID for room 'lobby'
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] WebSocket unregistered from room 'lobby'
INFO:     connection closed
INFO:     connection open
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] Handling disconnect for room '046A50', websocket_id: 26490b1a-301d-4abe-a802-76b6ab4709ab at 1753319845.235293
2025-07-23 18:17:25 - api.websocket.connection_manager - INFO - Player P2 disconnected from room 046A50. Can reconnect anytime while game is active.
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🎮 [ROOM_DEBUG] In-game disconnect detected for player 'P2' in room '046A50'
2025-07-23 18:17:25 - api.websocket.message_queue - INFO - Created message queue for P2 in room 046A50
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - Player P2 disconnected from game in room 046A50. Bot activated.
2025-07-23 18:17:25 - engine.async_room - INFO - Host migrated from P2 to bot Andy in room 046A50
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - Host migrated to Andy in room 046A50
INFO:     connection closed
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] Handling disconnect for room 'lobby', websocket_id: 5871e95a-e699-48cf-9243-2f120a359a25 at 1753319845.239928
2025-07-23 18:17:25 - api.websocket.connection_manager - WARNING - WebSocket ID 5871e95a-e699-48cf-9243-2f120a359a25 not found in mapping. Current mappings: []
2025-07-23 18:17:25 - backend.api.routes.ws - WARNING - No websocket_id found on websocket object for room lobby
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - ⚠️ [ROOM_DEBUG] WebSocket disconnect without ID for room 'lobby'
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] WebSocket unregistered from room 'lobby'
INFO:     connection closed
2025-07-23 18:17:25 - engine.async_room - INFO - 👥 [ROOM_DEBUG] Room '046A50' player count: 0 humans, 4 bots
2025-07-23 18:17:25 - engine.async_room - INFO - 👥 [ROOM_DEBUG] Room '046A50' player count: 0 humans, 4 bots
2025-07-23 18:17:25 - engine.async_room - INFO - ⏱️ [ROOM_DEBUG] Room '046A50' using cleanup timeout: 5s (started=True, game_ended=True)
2025-07-23 18:17:25 - engine.async_room - INFO - 🗑️ [ROOM_DEBUG] Room '046A50' marked for cleanup at 1753319845.243894, timeout=5s
2025-07-23 18:17:25 - engine.async_room - INFO - ⏱️ [ROOM_DEBUG] Room '046A50' using cleanup timeout: 5s (started=True, game_ended=True)
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - All players in room 046A50 are now bots. Cleanup scheduled in 5s
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🤖 [ROOM_DEBUG] Room '046A50' has no human players, marked for cleanup
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] WebSocket unregistered from room '046A50'
2025-07-23 18:17:25 - engine.async_room - INFO - 👥 [ROOM_DEBUG] Room '046A50' player count: 0 humans, 4 bots
2025-07-23 18:17:25 - engine.async_room - INFO - 👥 [ROOM_DEBUG] Room '046A50' player count: 0 humans, 4 bots
2025-07-23 18:17:25 - engine.async_room - INFO - ⏱️ [ROOM_DEBUG] Room '046A50' using cleanup timeout: 5s (started=True, game_ended=True)
2025-07-23 18:17:25 - engine.async_room - INFO - 🗑️ [ROOM_DEBUG] Room '046A50' marked for cleanup at 1753319845.245146, timeout=5s
2025-07-23 18:17:25 - engine.async_room - INFO - ⏱️ [ROOM_DEBUG] Room '046A50' using cleanup timeout: 5s (started=True, game_ended=True)
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - All players in room 046A50 are now bots. Cleanup scheduled in 5s
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🤖 [ROOM_DEBUG] Room '046A50' has no human players, marked for cleanup
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] WebSocket unregistered from room '046A50'
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] New WebSocket connection to room 'lobby', ws_id: fab3dfc1-513f-4e20-8f5c-53e9374badf1 at 1753319845.251963
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Room cleanup task already running
INFO:     ('127.0.0.1', 56530) - "WebSocket /ws/lobby" [accepted]
INFO:     connection open
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] Handling disconnect for room 'lobby', websocket_id: ca01d9b2-8240-424f-aca9-1b3104e17657 at 1753319845.255352
2025-07-23 18:17:25 - api.websocket.connection_manager - WARNING - WebSocket ID ca01d9b2-8240-424f-aca9-1b3104e17657 not found in mapping. Current mappings: []
2025-07-23 18:17:25 - backend.api.routes.ws - WARNING - No websocket_id found on websocket object for room lobby
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - ⚠️ [ROOM_DEBUG] WebSocket disconnect without ID for room 'lobby'
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] WebSocket unregistered from room 'lobby'
INFO:     connection closed
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] New WebSocket connection to room 'lobby', ws_id: 351eeb4f-6a36-4216-9f62-f54619619429 at 1753319845.25777
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Room cleanup task already running
INFO:     ('127.0.0.1', 56532) - "WebSocket /ws/lobby" [accepted]
INFO:     connection open
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] Handling disconnect for room 'lobby', websocket_id: bbfdbf54-00a2-46af-8138-ea88bb8388b4 at 1753319845.2605
2025-07-23 18:17:25 - api.websocket.connection_manager - WARNING - WebSocket ID bbfdbf54-00a2-46af-8138-ea88bb8388b4 not found in mapping. Current mappings: []
2025-07-23 18:17:25 - backend.api.routes.ws - WARNING - No websocket_id found on websocket object for room lobby
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - ⚠️ [ROOM_DEBUG] WebSocket disconnect without ID for room 'lobby'
2025-07-23 18:17:25 - backend.api.routes.ws - INFO - 🔌 [ROOM_DEBUG] WebSocket unregistered from room 'lobby'
INFO:     connection closed
2025-07-23 18:17:27 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleanup iteration 75: Checking 1 rooms: ['046A50']
2025-07-23 18:17:27 - engine.async_room - INFO - ⏱️ [ROOM_DEBUG] Room '046A50' using cleanup timeout: 5s (started=True, game_ended=True)
2025-07-23 18:17:27 - backend.api.routes.ws - INFO - 🧹 CLEANUP_CHECK: Room 046A50 - game_ended=True, should_cleanup=False
2025-07-23 18:17:32 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleanup iteration 76: Checking 1 rooms: ['046A50']
2025-07-23 18:17:32 - engine.async_room - INFO - ⏱️ [ROOM_DEBUG] Room '046A50' using cleanup timeout: 5s (started=True, game_ended=True)
2025-07-23 18:17:32 - engine.async_room - INFO - ⏱️ [ROOM_DEBUG] Room '046A50' using cleanup timeout: 5s (started=True, game_ended=True)
2025-07-23 18:17:32 - engine.async_room - INFO - 📢 [ROOM_DEBUG] Room '046A50' should be cleaned up: elapsed=7.30s >= timeout=5s
2025-07-23 18:17:32 - backend.api.routes.ws - INFO - 🧹 CLEANUP_CHECK: Room 046A50 - game_ended=True, should_cleanup=True
2025-07-23 18:17:32 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Room '046A50' marked for cleanup
2025-07-23 18:17:32 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleaning up 1 rooms: ['046A50']
2025-07-23 18:17:32 - engine.async_room - INFO - ⏱️ [ROOM_DEBUG] Room '046A50' using cleanup timeout: 5s (started=True, game_ended=True)
2025-07-23 18:17:32 - engine.async_room - INFO - ⏱️ [ROOM_DEBUG] Room '046A50' using cleanup timeout: 5s (started=True, game_ended=True)
2025-07-23 18:17:32 - engine.async_room - INFO - 📢 [ROOM_DEBUG] Room '046A50' should be cleaned up: elapsed=7.30s >= timeout=5s
2025-07-23 18:17:32 - backend.api.routes.ws - INFO - 🧹 [ROOM_DEBUG] Cleaning up abandoned room 046A50 (no human players)
🔍 BOT_MANAGER: Returning existing singleton instance with 0 active games
2025-07-23 18:17:32 - engine.async_room - INFO - ⏱️ [ROOM_DEBUG] Room '046A50' using cleanup timeout: 5s (started=True, game_ended=True)
2025-07-23 18:17:32 - engine.async_room - INFO - Cleaning up room 046A50
2025-07-23 18:17:32 - engine.async_room_manager - INFO - Deleted room 046A50
2025-07-23 18:17:32 - backend.api.routes.ws - INFO - ✅ [ROOM_DEBUG] Room 046A50 cleaned up successfully
