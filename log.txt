RecoveryService.ts:66 🔄 RecoveryService: Initialized
ServiceIntegration.ts:79 🔗 ServiceIntegration: Initialized
ServiceIntegration.ts:98 
ServiceIntegration.ts:99 🎯 =============================================
ServiceIntegration.ts:100 🚀 PHASE 1-4 ENTERPRISE ARCHITECTURE STARTING
ServiceIntegration.ts:101 🎯 =============================================
ServiceIntegration.ts:102 🔧 Initializing integrated service layer...
ServiceIntegration.ts:567 ✅ NetworkService integrated
ServiceIntegration.ts:575 ✅ GameService integrated
ServiceIntegration.ts:583 ✅ RecoveryService integrated
ServiceIntegration.ts:594 🩺 Health monitoring started (30000ms interval)
ServiceIntegration.ts:124 
ServiceIntegration.ts:125 ✅ =============================================
ServiceIntegration.ts:126 🎉 PHASE 1-4 ARCHITECTURE FULLY OPERATIONAL!
ServiceIntegration.ts:127 ✅ =============================================
ServiceIntegration.ts:128 🔗 NetworkService: Advanced WebSocket with auto-reconnection
ServiceIntegration.ts:129 🎮 GameService: React hooks with TypeScript state management
ServiceIntegration.ts:130 🛠️ RecoveryService: Automatic error recovery and health monitoring
ServiceIntegration.ts:131 🏢 Enterprise Features: Event sourcing, logging, metrics
ServiceIntegration.ts:132 ✅ Service integration layer initialized successfully
ServiceIntegration.ts:133 
App.jsx:121 🎮 Phase 1-4 Enterprise Architecture - Global services initialized
NetworkService.ts:337 🔗 Connection opened to room lobby
GameService.ts:1282 🎮 State Change: NETWORK_CONNECTED
GameService.ts:1283 Previous: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1284 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1285 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:129 🌐 NetworkService: Connected to room lobby
GameService.ts:1282 🎮 State Change: NETWORK_DISCONNECTED
GameService.ts:1283 Previous: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1284 New: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1285 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:171 🌐 NetworkService: Disconnected from room lobby
NetworkService.ts:214 📤 Queued message for lobby: get_rooms (1 queued)
NetworkService.ts:337 🔗 Connection opened to room lobby
GameService.ts:1282 🎮 State Change: NETWORK_CONNECTED
GameService.ts:1283 Previous: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1284 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1285 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:129 🌐 NetworkService: Connected to room lobby
LobbyPage.jsx:50 Received room_list_update: {roomId: 'lobby', data: {…}, message: {…}, timestamp: 1751349601878}
GameService.ts:1282 🎮 State Change: NETWORK_DISCONNECTED
GameService.ts:1283 Previous: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1284 New: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1285 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:171 🌐 NetworkService: Disconnected from room lobby
NetworkService.ts:214 📤 Queued message for lobby: get_rooms (1 queued)
NetworkService.ts:337 🔗 Connection opened to room lobby
GameService.ts:1282 🎮 State Change: NETWORK_CONNECTED
GameService.ts:1283 Previous: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1284 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1285 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:129 🌐 NetworkService: Connected to room lobby
LobbyPage.jsx:50 Received room_list_update: {roomId: 'lobby', data: {…}, message: {…}, timestamp: 1751349603170}
LobbyPage.jsx:60 Received room_created: {roomId: 'lobby', data: {…}, message: {…}, timestamp: 1751349603260}
LobbyPage.jsx:61 🟢 Navigation: room_id = FD6DD3 navigating to: /room/FD6DD3
LobbyPage.jsx:65 ✅ Navigating to new room: FD6DD3
GameService.ts:1282 🎮 State Change: NETWORK_DISCONNECTED
GameService.ts:1283 Previous: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1284 New: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1285 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:171 🌐 NetworkService: Disconnected from room lobby
NetworkService.ts:214 📤 Queued message for lobby: get_rooms (1 queued)
RoomPage.jsx:181 🎯 SLOT_1: player= undefined isEmpty= true
RoomPage.jsx:181 🎯 SLOT_2: player= undefined isEmpty= true
RoomPage.jsx:181 🎯 SLOT_3: player= undefined isEmpty= true
RoomPage.jsx:181 🎯 SLOT_4: player= undefined isEmpty= true
NetworkService.ts:337 🔗 Connection opened to room lobby
GameService.ts:1282 🎮 State Change: NETWORK_CONNECTED
GameService.ts:1283 Previous: {isConnected: false, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1284 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1285 Diff: {isConnected: {…}, lastEventSequence: {…}}
NetworkService.ts:129 🌐 NetworkService: Connected to room lobby
NetworkService.ts:337 🔗 Connection opened to room FD6DD3
GameService.ts:1282 🎮 State Change: NETWORK_CONNECTED
GameService.ts:1283 Previous: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1284 New: {isConnected: true, roomId: null, playerName: null, phase: 'waiting', currentRound: 0, …}
GameService.ts:1285 Diff: {lastEventSequence: {…}}
NetworkService.ts:129 🌐 NetworkService: Connected to room FD6DD3
RoomPage.jsx:181 🎯 SLOT_1: player= undefined isEmpty= true
RoomPage.jsx:181 🎯 SLOT_2: player= undefined isEmpty= true
RoomPage.jsx:181 🎯 SLOT_3: player= undefined isEmpty= true
RoomPage.jsx:181 🎯 SLOT_4: player= undefined isEmpty= true
RoomPage.jsx:49 🏠 ROOM_UPDATE: Full data received: {players: Array(4), host_name: 'Andy', room_id: 'FD6DD3', started: false}
RoomPage.jsx:50 🏠 ROOM_UPDATE: Players array: (4) [{…}, {…}, {…}, {…}]
RoomPage.jsx:51 🏠 ROOM_UPDATE: Players array type: object
RoomPage.jsx:52 🏠 ROOM_UPDATE: Players array length: 4
RoomPage.jsx:53 🏠 ROOM_UPDATE: Players array entries: (4) [Array(2), Array(2), Array(2), Array(2)]
RoomPage.jsx:181 🎯 SLOT_1: player= {name: 'Andy', is_bot: false, is_host: true} isEmpty= false
RoomPage.jsx:181 🎯 SLOT_2: player= {name: 'Bot 2', is_bot: true, is_host: false} isEmpty= false
RoomPage.jsx:181 🎯 SLOT_3: player= {name: 'Bot 3', is_bot: true, is_host: false} isEmpty= false
RoomPage.jsx:181 🎯 SLOT_4: player= {name: 'Bot 4', is_bot: true, is_host: false} isEmpty= false
RoomPage.jsx:87 🎮 START_GAME: Button clicked
RoomPage.jsx:88 🎮 START_GAME: Room ID: FD6DD3
RoomPage.jsx:181 🎯 SLOT_1: player= {name: 'Andy', is_bot: false, is_host: true} isEmpty= false
RoomPage.jsx:181 🎯 SLOT_2: player= {name: 'Bot 2', is_bot: true, is_host: false} isEmpty= false
RoomPage.jsx:181 🎯 SLOT_3: player= {name: 'Bot 3', is_bot: true, is_host: false} isEmpty= false
RoomPage.jsx:181 🎯 SLOT_4: player= {name: 'Bot 4', is_bot: true, is_host: false} isEmpty= false
GameService.ts:410 🌐 FRONTEND_EVENT_DEBUG: Received phase_change event for room FD6DD3 {phase: 'declaration', allowed_actions: Array(4), phase_data: {…}, players: {…}, round: 1, …}
GameService.ts:414 🌐 FRONTEND_EVENT_DEBUG: Ignoring event for different room (ours: null)
GameService.ts:410 🌐 FRONTEND_EVENT_DEBUG: Received phase_change event for room FD6DD3 {phase: 'declaration', allowed_actions: Array(4), phase_data: {…}, players: {…}, round: 1, …}
GameService.ts:414 🌐 FRONTEND_EVENT_DEBUG: Ignoring event for different room (ours: null)
GameService.ts:410 🌐 FRONTEND_EVENT_DEBUG: Received phase_change event for room FD6DD3 {phase: 'declaration', allowed_actions: Array(4), phase_data: {…}, players: {…}, round: 1, …}
GameService.ts:414 🌐 FRONTEND_EVENT_DEBUG: Ignoring event for different room (ours: null)
GameService.ts:410 🌐 FRONTEND_EVENT_DEBUG: Received phase_change event for room FD6DD3 {phase: 'declaration', allowed_actions: Array(4), phase_data: {…}, players: {…}, round: 1, …}
GameService.ts:414 🌐 FRONTEND_EVENT_DEBUG: Ignoring event for different room (ours: null)
GameService.ts:410 🌐 FRONTEND_EVENT_DEBUG: Received phase_change event for room FD6DD3 {phase: 'declaration', allowed_actions: Array(4), phase_data: {…}, players: {…}, round: 1, …}
GameService.ts:414 🌐 FRONTEND_EVENT_DEBUG: Ignoring event for different room (ours: null)

---

INFO:     127.0.0.1:65262 - "GET / HTTP/1.1" 200 OK
INFO:     127.0.0.1:65262 - "GET /bundle.css HTTP/1.1" 200 OK
INFO:     127.0.0.1:65263 - "GET /bundle.js HTTP/1.1" 200 OK
INFO:     127.0.0.1:65262 - "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 Not Found
INFO:     127.0.0.1:65263 - "GET /bundle.css.map HTTP/1.1" 200 OK
INFO:     127.0.0.1:65263 - "GET /bundle.js.map HTTP/1.1" 200 OK
INFO:     ('127.0.0.1', 65273) - "WebSocket /ws/lobby" [accepted]
DEBUG_WS: Created new enhanced broadcast queue and task for room lobby.
DEBUG_WS: Registered new connection for room lobby. Total connections: 1
INFO:     connection open
DEBUG_WS: Starting enhanced broadcast queue processor for room lobby.
DEBUG_WS_QUEUE_START: Room lobby processor task starting, queue exists: True
DEBUG_WS_RECEIVE: Received event 'client_ready' from client in room lobby with data: {'room_id': 'lobby'}
DEBUG_LOBBY_WS: Sent initial room list to new lobby client
DEBUG_LOBBY_WS: Client disconnected from lobby
INFO:     connection closed
DEBUG_WS: Unregistered connection for room lobby. Remaining connections: 0
DEBUG_WS: Cleaned up empty room lobby
INFO:     ('127.0.0.1', 65275) - "WebSocket /ws/lobby" [accepted]
DEBUG_WS: Registered new connection for room lobby. Total connections: 1
INFO:     connection open
DEBUG_WS_RECEIVE: Received event 'client_ready' from client in room lobby with data: {'room_id': 'lobby'}
DEBUG_LOBBY_WS: Sent initial room list to new lobby client
DEBUG_LOBBY_WS: Client disconnected from lobby
INFO:     connection closed
DEBUG_WS: Unregistered connection for room lobby. Remaining connections: 0
DEBUG_WS: Cleaned up empty room lobby
INFO:     ('127.0.0.1', 65281) - "WebSocket /ws/lobby" [accepted]
DEBUG_WS: Restarting lobby broadcast task...
DEBUG_WS: Registered new connection for room lobby. Total connections: 1
INFO:     connection open
DEBUG_WS: Starting enhanced broadcast queue processor for room lobby.
DEBUG_WS_QUEUE_START: Room lobby processor task starting, queue exists: True
DEBUG_WS_RECEIVE: Received event 'client_ready' from client in room lobby with data: {'room_id': 'lobby'}
DEBUG_LOBBY_WS: Sent initial room list to new lobby client
DEBUG_WS_RECEIVE: Received event 'create_room' from client in room lobby with data: {'player_name': 'Andy'}
DEBUG_LOBBY_WS: Created room FD6DD3 for player Andy
🔔 LOBBY_BROADCAST: Attempting to broadcast 'room_created' to lobby
🔔 LOBBY_BROADCAST: Data keys: ['room_id', 'host_name', 'timestamp']
🔔 LOBBY_BROADCAST: Found 1 lobby connections
🔔 LOBBY_BROADCAST: Queue size: 0
DEBUG_WS: Message for event 'room_created' added to queue for room lobby.
🔔 LOBBY_BROADCAST: Message added to lobby queue. New queue size: 1
🔔 LOBBY_BROADCAST: Attempting to broadcast 'room_list_update' to lobby
🔔 LOBBY_BROADCAST: Data keys: ['rooms', 'timestamp', 'reason']
🔔 LOBBY_BROADCAST: Found 1 lobby connections
🔔 LOBBY_BROADCAST: Queue size: 0
DEBUG_WS: Message for event 'room_list_update' added to queue for room lobby.
🔔 LOBBY_BROADCAST: Message added to lobby queue. New queue size: 1
✅ Notified lobby about new room: FD6DD3
DEBUG_WS_QUEUE: Room lobby got message: room_created
DEBUG_WS: Broadcasting event 'room_created' (op_id: unknown) to 1 clients in room lobby.
DEBUG_WS: Successfully sent 'room_created' to a client in room lobby.
DEBUG_WS_QUEUE: Room lobby got message: room_list_update
DEBUG_WS: Broadcasting event 'room_list_update' (op_id: unknown) to 1 clients in room lobby.
DEBUG_WS: Error sending to client in room lobby: 
DEBUG_WS_DISCONNECT: WebSocket client disconnected from room FD6DD3.
INFO:     connection closed
DEBUG_WS: Attempted to unregister from non-existent room FD6DD3
INFO:     ('127.0.0.1', 65283) - "WebSocket /ws/lobby" [accepted]
DEBUG_WS: Registered new connection for room lobby. Total connections: 1
INFO:     connection open
DEBUG_WS_RECEIVE: Received event 'client_ready' from client in room lobby with data: {'room_id': 'lobby'}
DEBUG_LOBBY_WS: Sent initial room list to new lobby client
INFO:     ('127.0.0.1', 65289) - "WebSocket /ws/FD6DD3" [accepted]
DEBUG_WS: Created new enhanced broadcast queue and task for room FD6DD3.
DEBUG_WS: Registered new connection for room FD6DD3. Total connections: 1
INFO:     connection open
DEBUG_WS: Starting enhanced broadcast queue processor for room FD6DD3.
DEBUG_WS_QUEUE_START: Room FD6DD3 processor task starting, queue exists: True
DEBUG_WS_RECEIVE: Received event 'client_ready' from client in room FD6DD3 with data: {'room_id': 'FD6DD3'}
DEBUG_WS_RECEIVE: Sent initial room state to client in room FD6DD3 after client_ready.
DEBUG_WS_RECEIVE: Received event 'get_room_state' from client in room FD6DD3 with data: {}
DEBUG_WS_RECEIVE: Sent room state to client in room FD6DD3
DEBUG_WS_RECEIVE: Received event 'start_game' from client in room FD6DD3 with data: {}
🔒 [Room FD6DD3] Starting game: op_id=FD6DD3_1
{"timestamp": "2025-07-01T06:00:04.628467Z", "level": "INFO", "logger": "game.state.preparation", "message": "Entering preparation phase", "module": "base_state", "function": "on_enter", "line": 34}
{"timestamp": "2025-07-01T06:00:04.628579Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfb4 Preparation phase starting - dealing cards", "module": "preparation_state", "function": "_setup_phase", "line": 80}
🎴 PREP_STATE_DEBUG: Setup phase starting for room FD6DD3
🔄 PREP_RESET_DEBUG: Reset Andy - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 2 - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 3 - declared: 0, captured_piles: 0
🔄 PREP_RESET_DEBUG: Reset Bot 4 - declared: 0, captured_piles: 0
🎴 PREP_STATE_DEBUG: Using guaranteed no redeal dealing
🛡️ DEBUG: Dealing guaranteed no-redeal hands with RED_GENERAL assigned to player 1
🛡️ DEBUG: Available pieces - Strong: 7, Weak: 24
  → Bot 2 gets RED_GENERAL: GENERAL_RED(14)
  → Andy gets strong piece: GENERAL_BLACK(13)
  → Bot 3 gets strong piece: ELEPHANT_RED(10)
  → Bot 4 gets strong piece: ADVISOR_BLACK(11)
🛡️ DEBUG: Guaranteed no-redeal hands dealt:
🔧 DEBUG: Final hands verification:
  Andy: ['ELEPHANT_RED(10)', 'CHARIOT_RED(8)', 'GENERAL_BLACK(13)', 'HORSE_RED(6)', 'CANNON_BLACK(3)', 'CANNON_RED(4)', 'HORSE_RED(6)', 'SOLDIER_RED(2)']
    → Strong pieces (>9): 2
    → Has RED_GENERAL: False
  Bot 2: ['ELEPHANT_BLACK(9)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)', 'CHARIOT_BLACK(7)', 'ADVISOR_RED(12)', 'CHARIOT_RED(8)', 'SOLDIER_RED(2)']
    → Strong pieces (>9): 2
    → Has RED_GENERAL: True
  Bot 3: ['ADVISOR_RED(12)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'ELEPHANT_RED(10)']
    → Strong pieces (>9): 3
    → Has RED_GENERAL: False
  Bot 4: ['SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'HORSE_BLACK(5)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'HORSE_BLACK(5)', 'CANNON_RED(4)', 'CANNON_BLACK(3)']
    → Strong pieces (>9): 1
    → Has RED_GENERAL: False
✅ SUCCESS: No weak hands - redeal prevented!
{"timestamp": "2025-07-01T06:00:04.629246Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udd0d Weak hand check - Found 0 weak players: set()", "module": "preparation_state", "function": "_deal_cards", "line": 141}
{"timestamp": "2025-07-01T06:00:04.629352Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udd0d STARTER_DEBUG: Current round number: 1", "module": "preparation_state", "function": "_determine_starter", "line": 396}
🔍 STARTER_DEBUG: Looking for GENERAL_RED holder in round 1
🔍 STARTER_DEBUG: Checking player Andy
🔍 STARTER_DEBUG: Player Andy hand: ['ELEPHANT_RED(10)', 'CHARIOT_RED(8)', 'GENERAL_BLACK(13)', 'HORSE_RED(6)', 'CANNON_BLACK(3)', 'CANNON_RED(4)', 'HORSE_RED(6)', 'SOLDIER_RED(2)']
🔍 STARTER_DEBUG: Checking piece 'ELEPHANT_RED(10)' for GENERAL_RED
🔍 STARTER_DEBUG: Checking piece 'CHARIOT_RED(8)' for GENERAL_RED
🔍 STARTER_DEBUG: Checking piece 'GENERAL_BLACK(13)' for GENERAL_RED
🔍 STARTER_DEBUG: Checking piece 'HORSE_RED(6)' for GENERAL_RED
🔍 STARTER_DEBUG: Checking piece 'CANNON_BLACK(3)' for GENERAL_RED
🔍 STARTER_DEBUG: Checking piece 'CANNON_RED(4)' for GENERAL_RED
🔍 STARTER_DEBUG: Checking piece 'HORSE_RED(6)' for GENERAL_RED
🔍 STARTER_DEBUG: Checking piece 'SOLDIER_RED(2)' for GENERAL_RED
🔍 STARTER_DEBUG: Checking player Bot 2
🔍 STARTER_DEBUG: Player Bot 2 hand: ['ELEPHANT_BLACK(9)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'GENERAL_RED(14)', 'CHARIOT_BLACK(7)', 'ADVISOR_RED(12)', 'CHARIOT_RED(8)', 'SOLDIER_RED(2)']
🔍 STARTER_DEBUG: Checking piece 'ELEPHANT_BLACK(9)' for GENERAL_RED
🔍 STARTER_DEBUG: Checking piece 'SOLDIER_BLACK(1)' for GENERAL_RED
🔍 STARTER_DEBUG: Checking piece 'SOLDIER_BLACK(1)' for GENERAL_RED
🔍 STARTER_DEBUG: Checking piece 'GENERAL_RED(14)' for GENERAL_RED
✅ STARTER_DEBUG: Found GENERAL_RED in Bot 2's hand!
{"timestamp": "2025-07-01T06:00:04.629844Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf Starter: Bot 2 (has GENERAL_RED)", "module": "preparation_state", "function": "_determine_starter", "line": 411}
✅ PREP_STATE_DEBUG: No weak hands - determined new starter: Bot 2
{"timestamp": "2025-07-01T06:00:04.630187Z", "level": "INFO", "logger": "game.state.preparation", "message": "\u2705 No weak hands - determined new starter: Bot 2", "module": "preparation_state", "function": "_deal_cards", "line": 212}
🎯 PREP_STATE_DEBUG: No weak hands detected - auto-transitioning to Declaration phase
{"timestamp": "2025-07-01T06:00:04.630346Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf No weak hands detected - transitioning to Declaration phase", "module": "preparation_state", "function": "_deal_cards", "line": 217}
{"timestamp": "2025-07-01T06:00:04.630521Z", "level": "INFO", "logger": "game.state.preparation", "message": "Exiting preparation phase", "module": "base_state", "function": "on_exit", "line": 39}
{"timestamp": "2025-07-01T06:00:04.630595Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf Round starter already set: Bot 2", "module": "preparation_state", "function": "_cleanup_phase", "line": 94}
🎯 PREP_STATE_DEBUG: Cleanup phase - current_player: Bot 2
🎯 PREP_STATE_DEBUG: Cleanup phase - round_starter: Bot 2
{"timestamp": "2025-07-01T06:00:04.630678Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udccb Preparation complete - Starter: Bot 2, Multiplier: 1x", "module": "preparation_state", "function": "_cleanup_phase", "line": 105}
{"timestamp": "2025-07-01T06:00:04.630771Z", "level": "INFO", "logger": "game.state.declaration", "message": "Entering declaration phase", "module": "base_state", "function": "on_enter", "line": 34}
📢 DECL_STATE_DEBUG: Using round_starter: Bot 2
{"timestamp": "2025-07-01T06:00:04.630870Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup - basic data", "module": "base_state", "function": "update_phase_data", "line": 152}
DEBUG_WS: Message for event 'phase_change' added to queue for room FD6DD3.
{"timestamp": "2025-07-01T06:00:04.631225Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room FD6DD3 - Declaration phase setup - basic data", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 214}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup - basic data
{"timestamp": "2025-07-01T06:00:04.631388Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup complete - current declarer: Bot 2", "module": "base_state", "function": "update_phase_data", "line": 152}
DEBUG_WS: Message for event 'phase_change' added to queue for room FD6DD3.
{"timestamp": "2025-07-01T06:00:04.631710Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room FD6DD3 - Declaration phase setup complete - current declarer: Bot 2", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 214}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup complete - current declarer: Bot 2
🤖 ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Bot 2
🔔 BOT_MANAGER_DEBUG: Received event 'phase_change' for room FD6DD3 with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Bot 2'}, 'current_declarer': 'Bot 2', 'reason': 'Declaration phase setup complete - current declarer: Bot 2'}
✅ BOT_MANAGER_DEBUG: Found handler for room FD6DD3, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room FD6DD3 handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
🔍 BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
🔍 BOT_HANDLER_DEBUG: Attempting to acquire lock...
🔍 BOT_HANDLER_DEBUG: Lock acquired, processing event...
🚀 BOT_HANDLER_DEBUG: Handling enterprise phase change
🚀 ENTERPRISE_BOT_DEBUG: Processing phase change - phase: declaration, reason: Declaration phase setup complete - current declarer: Bot 2
🚀 ENTERPRISE_BOT_DEBUG: Declaration phase - checking if Bot 2 is a bot
🔍 ENTERPRISE_BOT_DEBUG: Checking player Andy vs target Bot 2
🔍 ENTERPRISE_BOT_DEBUG: Checking player Bot 2 vs target Bot 2
🤖 ENTERPRISE_BOT_DEBUG: Current declarer Bot 2 is a bot - triggering declaration
🤖 DECLARATION_DEBUG: Triggering bot manager for declaration phase
🔧 DECLARATION_DEBUG: Bot manager active games: ['FD6DD3']
⚠️ DECLARATION_DEBUG: No room_id found to trigger bot manager
❌ [Room FD6DD3] Game start failed: op_id=FD6DD3_1, error=websocket_endpoint.<locals>.room_broadcast() takes 2 positional arguments but 3 were given
❌ Start game error: websocket_endpoint.<locals>.room_broadcast() takes 2 positional arguments but 3 were given
DEBUG_WS_QUEUE: Room FD6DD3 got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room FD6DD3.
DEBUG_WS: Successfully sent 'phase_change' to a client in room FD6DD3.
🤖 BOT_SINGLE_DECLARE: Handling declaration for Bot 2
🤖 BOT_SINGLE_DECLARE: Bot Bot 2 will declare in 0.8s...
DEBUG_WS_QUEUE: Room FD6DD3 got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room FD6DD3.
DEBUG_WS: Successfully sent 'phase_change' to a client in room FD6DD3.
🔍 BOT_DEBUG: Got declaration order from state machine: ['Bot 2', 'Bot 3', 'Bot 4', 'Andy']
🤖 BOT_SINGLE_DECLARE: Bot Bot 2 declaring at position 0
{"timestamp": "2025-07-01T06:00:05.481235Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Player Bot 2 declared 2", "module": "base_state", "function": "update_phase_data", "line": 152}
DEBUG_WS: Message for event 'phase_change' added to queue for room FD6DD3.
🔄 RELIABLE_MSG: Message retry worker started
{"timestamp": "2025-07-01T06:00:05.481641Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room FD6DD3 - Player Bot 2 declared 2", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 214}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Player Bot 2 declared 2
🤖 ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Bot 3
🔔 BOT_MANAGER_DEBUG: Received event 'phase_change' for room FD6DD3 with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 1, 'declarations': {'Bot 2': 2}, 'declaration_total': 2, 'current_declarer': 'Bot 3'}, 'current_declarer': 'Bot 3', 'reason': 'Player Bot 2 declared 2'}
✅ BOT_MANAGER_DEBUG: Found handler for room FD6DD3, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room FD6DD3 handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
🔍 BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
🔍 BOT_HANDLER_DEBUG: Attempting to acquire lock...
🔍 BOT_HANDLER_DEBUG: Lock acquired, processing event...
🚀 BOT_HANDLER_DEBUG: Handling enterprise phase change
🚀 ENTERPRISE_BOT_DEBUG: Processing phase change - phase: declaration, reason: Player Bot 2 declared 2
🚀 ENTERPRISE_BOT_DEBUG: Declaration phase - checking if Bot 3 is a bot
🔍 ENTERPRISE_BOT_DEBUG: Checking player Andy vs target Bot 3
🔍 ENTERPRISE_BOT_DEBUG: Checking player Bot 2 vs target Bot 3
🔍 ENTERPRISE_BOT_DEBUG: Checking player Bot 3 vs target Bot 3
🤖 ENTERPRISE_BOT_DEBUG: Current declarer Bot 3 is a bot - triggering declaration
{"timestamp": "2025-07-01T06:00:05.481953Z", "level": "INFO", "logger": "game.state.declaration", "message": "Player Bot 2 declared 2", "module": "declaration_state", "function": "_handle_declaration", "line": 157}
🤖 DECLARATION_DEBUG: Triggering bot manager after Bot 2 declared
⚠️ DECLARATION_DEBUG: No room_id found to trigger bot manager
🔧 BOT_DECLARE_DEBUG: State machine result: {'success': True, 'immediate': True, 'transition': False, 'processing_time': 0.000982046127319336, 'reason': 'Declaration processed successfully', 'data': {'status': 'declaration_recorded', 'player': 'Bot 2', 'value': 2, 'total': 2}}
🤖 BOT_SINGLE_DECLARE: Handling declaration for Bot 3
🤖 BOT_SINGLE_DECLARE: Bot Bot 3 will declare in 1.0s...
DEBUG_WS_QUEUE: Room FD6DD3 got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room FD6DD3.
DEBUG_WS: Successfully sent 'phase_change' to a client in room FD6DD3.
✅ Bot Bot 2 declared 2
🔍 BOT_DEBUG: Got declaration order from state machine: ['Bot 2', 'Bot 3', 'Bot 4', 'Andy']
🤖 BOT_SINGLE_DECLARE: Bot Bot 3 declaring at position 1
{"timestamp": "2025-07-01T06:00:06.493969Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Player Bot 3 declared 1", "module": "base_state", "function": "update_phase_data", "line": 152}
DEBUG_WS: Message for event 'phase_change' added to queue for room FD6DD3.
{"timestamp": "2025-07-01T06:00:06.494513Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room FD6DD3 - Player Bot 3 declared 1", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 214}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Player Bot 3 declared 1
🤖 ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Bot 4
🔔 BOT_MANAGER_DEBUG: Received event 'phase_change' for room FD6DD3 with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 2, 'declarations': {'Bot 2': 2, 'Bot 3': 1}, 'declaration_total': 3, 'current_declarer': 'Bot 4'}, 'current_declarer': 'Bot 4', 'reason': 'Player Bot 3 declared 1'}
✅ BOT_MANAGER_DEBUG: Found handler for room FD6DD3, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room FD6DD3 handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
🔍 BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
🔍 BOT_HANDLER_DEBUG: Attempting to acquire lock...
🔍 BOT_HANDLER_DEBUG: Lock acquired, processing event...
🚀 BOT_HANDLER_DEBUG: Handling enterprise phase change
🚀 ENTERPRISE_BOT_DEBUG: Processing phase change - phase: declaration, reason: Player Bot 3 declared 1
🚀 ENTERPRISE_BOT_DEBUG: Declaration phase - checking if Bot 4 is a bot
🔍 ENTERPRISE_BOT_DEBUG: Checking player Andy vs target Bot 4
🔍 ENTERPRISE_BOT_DEBUG: Checking player Bot 2 vs target Bot 4
🔍 ENTERPRISE_BOT_DEBUG: Checking player Bot 3 vs target Bot 4
🔍 ENTERPRISE_BOT_DEBUG: Checking player Bot 4 vs target Bot 4
🤖 ENTERPRISE_BOT_DEBUG: Current declarer Bot 4 is a bot - triggering declaration
{"timestamp": "2025-07-01T06:00:06.495088Z", "level": "INFO", "logger": "game.state.declaration", "message": "Player Bot 3 declared 1", "module": "declaration_state", "function": "_handle_declaration", "line": 157}
🤖 DECLARATION_DEBUG: Triggering bot manager after Bot 3 declared
⚠️ DECLARATION_DEBUG: No room_id found to trigger bot manager
🔧 BOT_DECLARE_DEBUG: State machine result: {'success': True, 'immediate': True, 'transition': False, 'processing_time': 0.001497030258178711, 'reason': 'Declaration processed successfully', 'data': {'status': 'declaration_recorded', 'player': 'Bot 3', 'value': 1, 'total': 3}}
🤖 BOT_SINGLE_DECLARE: Handling declaration for Bot 4
🤖 BOT_SINGLE_DECLARE: Bot Bot 4 will declare in 1.1s...
DEBUG_WS_QUEUE: Room FD6DD3 got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room FD6DD3.
DEBUG_WS: Successfully sent 'phase_change' to a client in room FD6DD3.
✅ Bot Bot 3 declared 1
🔍 BOT_DEBUG: Got declaration order from state machine: ['Bot 2', 'Bot 3', 'Bot 4', 'Andy']
🤖 BOT_SINGLE_DECLARE: Bot Bot 4 declaring at position 2
{"timestamp": "2025-07-01T06:00:07.557512Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Player Bot 4 declared 1", "module": "base_state", "function": "update_phase_data", "line": 152}
DEBUG_WS: Message for event 'phase_change' added to queue for room FD6DD3.
{"timestamp": "2025-07-01T06:00:07.558081Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room FD6DD3 - Player Bot 4 declared 1", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 214}
🤖 ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Player Bot 4 declared 1
🤖 ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Andy
🔔 BOT_MANAGER_DEBUG: Received event 'phase_change' for room FD6DD3 with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 3, 'declarations': {'Bot 2': 2, 'Bot 3': 1, 'Bot 4': 1}, 'declaration_total': 4, 'current_declarer': 'Andy'}, 'current_declarer': 'Andy', 'reason': 'Player Bot 4 declared 1'}
✅ BOT_MANAGER_DEBUG: Found handler for room FD6DD3, delegating to handler...
🎮 BOT_HANDLER_DEBUG: Room FD6DD3 handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
🔍 BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
🔍 BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
🔍 BOT_HANDLER_DEBUG: Attempting to acquire lock...
🔍 BOT_HANDLER_DEBUG: Lock acquired, processing event...
🚀 BOT_HANDLER_DEBUG: Handling enterprise phase change
🚀 ENTERPRISE_BOT_DEBUG: Processing phase change - phase: declaration, reason: Player Bot 4 declared 1
🚀 ENTERPRISE_BOT_DEBUG: Declaration phase - checking if Andy is a bot
🔍 ENTERPRISE_BOT_DEBUG: Checking player Andy vs target Andy
👤 ENTERPRISE_BOT_DEBUG: Current declarer Andy is human - waiting
{"timestamp": "2025-07-01T06:00:07.558472Z", "level": "INFO", "logger": "game.state.declaration", "message": "Player Bot 4 declared 1", "module": "declaration_state", "function": "_handle_declaration", "line": 157}
🤖 DECLARATION_DEBUG: Triggering bot manager after Bot 4 declared
⚠️ DECLARATION_DEBUG: No room_id found to trigger bot manager
🔧 BOT_DECLARE_DEBUG: State machine result: {'success': True, 'immediate': True, 'transition': False, 'processing_time': 0.0012860298156738281, 'reason': 'Declaration processed successfully', 'data': {'status': 'declaration_recorded', 'player': 'Bot 4', 'value': 1, 'total': 4}}
DEBUG_WS_QUEUE: Room FD6DD3 got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room FD6DD3.
DEBUG_WS: Successfully sent 'phase_change' to a client in room FD6DD3.
✅ Bot Bot 4 declared 1
DEBUG_WS_RECEIVE: Received event 'ping' from client in room lobby with data: {'timestamp': 1751349633274}