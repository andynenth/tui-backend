INFO:     ('127.0.0.1', 55766) - "WebSocket /ws/lobby" [accepted]
DEBUG_WS: Created new enhanced broadcast queue and task for room lobby.
DEBUG_WS: Registered new connection for room lobby. Total connections: 1
INFO:     connection open
DEBUG_WS: Starting enhanced broadcast queue processor for room lobby.
DEBUG_WS_QUEUE_START: Room lobby processor task starting, queue exists: True
DEBUG_WS_RECEIVE: Received event 'client_ready' from client in room lobby with data: {'room_id': 'lobby'}
INFO:     ('127.0.0.1', 55768) - "WebSocket /ws/lobby" [accepted]
DEBUG_WS: Registered new connection for room lobby. Total connections: 2
INFO:     connection open
DEBUG_LOBBY_WS: Client disconnected from lobby
INFO:     connection closed
DEBUG_WS: Unregistered connection for room lobby. Remaining connections: 1
DEBUG_WS_RECEIVE: Received event 'client_ready' from client in room lobby with data: {'room_id': 'lobby'}
DEBUG_LOBBY_WS: Sent initial room list to new lobby client
INFO:     ('127.0.0.1', 55774) - "WebSocket /ws/lobby" [accepted]
DEBUG_WS: Registered new connection for room lobby. Total connections: 2
INFO:     connection open
DEBUG_LOBBY_WS: Client disconnected from lobby
INFO:     connection closed
DEBUG_WS: Unregistered connection for room lobby. Remaining connections: 1
DEBUG_WS_RECEIVE: Received event 'client_ready' from client in room lobby with data: {'room_id': 'lobby'}
DEBUG_LOBBY_WS: Sent initial room list to new lobby client
DEBUG_WS_RECEIVE: Received event 'create_room' from client in room lobby with data: {'player_name': 'Andy'}
DEBUG_LOBBY_WS: Created room 54FC0D for player Andy
DEBUG_WS: Entering broadcast method for room lobby, event room_created
üîî LOBBY_BROADCAST: Attempting to broadcast 'room_created' to lobby
üîî LOBBY_BROADCAST: Data keys: ['room_id', 'host_name', 'timestamp']
üîî LOBBY_BROADCAST: Found 1 lobby connections
üîî LOBBY_BROADCAST: Queue size: 0
DEBUG_WS: Attempting to queue event 'room_created' for room lobby with data: {'room_id': 'lobby', 'host_name': 'Andy', 'timestamp': 1751383345.701479}
üîß SERIALIZATION_DEBUG: Testing JSON serialization for event 'room_created'
üîß SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'room_created' - 108 chars
üîß SERIALIZATION_DEBUG: About to call queue.put() for event 'room_created'
‚úÖ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'room_created'
DEBUG_WS: Message for event 'room_created' added to queue for room lobby.
üîî LOBBY_BROADCAST: Message added to lobby queue. New queue size: 1
DEBUG_WS: Entering broadcast method for room lobby, event room_list_update
üîî LOBBY_BROADCAST: Attempting to broadcast 'room_list_update' to lobby
üîî LOBBY_BROADCAST: Data keys: ['rooms', 'timestamp', 'reason']
üîî LOBBY_BROADCAST: Found 1 lobby connections
üîî LOBBY_BROADCAST: Queue size: 0
DEBUG_WS: Attempting to queue event 'room_list_update' for room lobby with data: {'rooms': [{'room_id': '54FC0D', 'host_name': 'Andy', 'started': False, 'slots': {'P1': {'name': 'Andy', 'is_bot': False, 'is_host': True}, 'P2': {'name': 'Bot 2', 'is_bot': True, 'is_host': False}, 'P3': {'name': 'Bot 3', 'is_bot': True, 'is_host': False}, 'P4': {'name': 'Bot 4', 'is_bot': True, 'is_host': False}}, 'players': [{'name': 'Andy', 'is_bot': False, 'is_host': True}, {'name': 'Bot 2', 'is_bot': True, 'is_host': False}, {'name': 'Bot 3', 'is_bot': True, 'is_host': False}, {'name': 'Bot 4', 'is_bot': True, 'is_host': False}], 'occupied_slots': 4, 'total_slots': 4}], 'timestamp': 1751383345.701973, 'reason': 'new_room_created', 'room_id': 'lobby'}
üîß SERIALIZATION_DEBUG: Testing JSON serialization for event 'room_list_update'
üîß SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'room_list_update' - 703 chars
üîß SERIALIZATION_DEBUG: About to call queue.put() for event 'room_list_update'
‚úÖ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'room_list_update'
DEBUG_WS: Message for event 'room_list_update' added to queue for room lobby.
üîî LOBBY_BROADCAST: Message added to lobby queue. New queue size: 1
‚úÖ Notified lobby about new room: 54FC0D
DEBUG_WS_QUEUE: Room lobby got message: room_created
DEBUG_WS: Broadcasting event 'room_created' (op_id: unknown) to 1 clients in room lobby.
DEBUG_WS: Successfully sent 'room_created' to a client in room lobby.
DEBUG_WS_QUEUE: Room lobby got message: room_list_update
DEBUG_WS: Broadcasting event 'room_list_update' (op_id: unknown) to 1 clients in room lobby.
INFO:     ('127.0.0.1', 55776) - "WebSocket /ws/lobby" [accepted]
DEBUG_WS: Registered new connection for room lobby. Total connections: 2
INFO:     connection open
DEBUG_WS_DISCONNECT: WebSocket client disconnected from room 54FC0D.
DEBUG_WS: Error sending to client in room lobby: 
INFO:     connection closed
DEBUG_WS: Attempted to unregister from non-existent room 54FC0D
DEBUG_WS_RECEIVE: Received event 'client_ready' from client in room lobby with data: {'room_id': 'lobby'}
DEBUG_LOBBY_WS: Sent initial room list to new lobby client
INFO:     ('127.0.0.1', 55778) - "WebSocket /ws/54FC0D" [accepted]
DEBUG_WS: Created new enhanced broadcast queue and task for room 54FC0D.
DEBUG_WS: Registered new connection for room 54FC0D. Total connections: 1
INFO:     connection open
DEBUG_WS: Starting enhanced broadcast queue processor for room 54FC0D.
DEBUG_WS_QUEUE_START: Room 54FC0D processor task starting, queue exists: True
DEBUG_WS_RECEIVE: Received event 'client_ready' from client in room 54FC0D with data: {'room_id': '54FC0D'}
DEBUG_WS_RECEIVE: Sent initial room state to client in room 54FC0D after client_ready.
DEBUG_WS_RECEIVE: Received event 'get_room_state' from client in room 54FC0D with data: {}
DEBUG_WS_RECEIVE: Sent room state to client in room 54FC0D
DEBUG_WS_RECEIVE: Received event 'start_game' from client in room 54FC0D with data: {}
üîí [Room 54FC0D] Starting game: op_id=54FC0D_1
üîß TRANSITION_DEBUG: _immediate_transition_to called: None -> GamePhase.PREPARATION
üîß ASYNC_DEBUG: Thread: MainThread
üîß ASYNC_DEBUG: Is running: True
üîß ASYNC_DEBUG: Transition lock acquired: False
üîß TRANSITION_DEBUG: Starting transition steps...
üîß TRANSITION_DEBUG: Step 1 - Cleanup tasks
üîß TRANSITION_DEBUG: Step 2 - Exit current state
üîß TRANSITION_DEBUG: Step 3 - Atomic state update
üîß TRANSITION_DEBUG: Step 4 - Enter new state
üîß TRANSITION_DEBUG: Step 4a - About to call on_enter() for preparation
üîß BASE_STATE_DEBUG: on_enter() called for preparation phase
{"timestamp": "2025-07-01T15:22:26.853044Z", "level": "INFO", "logger": "game.state.preparation", "message": "Entering preparation phase", "module": "base_state", "function": "on_enter", "line": 37}
üîß BASE_STATE_DEBUG: Clearing phase_data
üîß BASE_STATE_DEBUG: About to call _setup_phase() for preparation
{"timestamp": "2025-07-01T15:22:26.853165Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfb4 Preparation phase starting - dealing cards", "module": "preparation_state", "function": "_setup_phase", "line": 80}
üé¥ PREP_STATE_DEBUG: Setup phase starting for room 54FC0D
üîÑ PREP_RESET_DEBUG: Reset Andy - declared: 0, captured_piles: 0
üîÑ PREP_RESET_DEBUG: Reset Bot 2 - declared: 0, captured_piles: 0
üîÑ PREP_RESET_DEBUG: Reset Bot 3 - declared: 0, captured_piles: 0
üîÑ PREP_RESET_DEBUG: Reset Bot 4 - declared: 0, captured_piles: 0
üé¥ PREP_STATE_DEBUG: Using guaranteed no redeal dealing
üõ°Ô∏è DEBUG: Dealing guaranteed no-redeal hands with RED_GENERAL assigned to player 1
üõ°Ô∏è DEBUG: Available pieces - Strong: 7, Weak: 24
  ‚Üí Bot 2 gets RED_GENERAL: GENERAL_RED(14)
  ‚Üí Andy gets strong piece: GENERAL_BLACK(13)
  ‚Üí Bot 3 gets strong piece: ADVISOR_RED(12)
  ‚Üí Bot 4 gets strong piece: ELEPHANT_RED(10)
üõ°Ô∏è DEBUG: Guaranteed no-redeal hands dealt:
üîß DEBUG: Final hands verification:
  Andy: ['GENERAL_BLACK(13)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'HORSE_RED(6)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'HORSE_BLACK(5)', 'SOLDIER_RED(2)']
    ‚Üí Strong pieces (>9): 1
    ‚Üí Has RED_GENERAL: False
  Bot 2: ['GENERAL_RED(14)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'HORSE_BLACK(5)', 'CHARIOT_RED(8)', 'SOLDIER_BLACK(1)']
    ‚Üí Strong pieces (>9): 2
    ‚Üí Has RED_GENERAL: True
  Bot 3: ['ELEPHANT_BLACK(9)', 'CANNON_RED(4)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'ADVISOR_RED(12)']
    ‚Üí Strong pieces (>9): 2
    ‚Üí Has RED_GENERAL: False
  Bot 4: ['SOLDIER_RED(2)', 'ELEPHANT_RED(10)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'CHARIOT_RED(8)', 'HORSE_RED(6)']
    ‚Üí Strong pieces (>9): 3
    ‚Üí Has RED_GENERAL: False
‚úÖ SUCCESS: No weak hands - redeal prevented!
{"timestamp": "2025-07-01T15:22:26.854321Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udd0d Weak hand check - Found 0 weak players: set()", "module": "preparation_state", "function": "_deal_cards", "line": 141}
{"timestamp": "2025-07-01T15:22:26.854400Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udd0d STARTER_DEBUG: Current round number: 1", "module": "preparation_state", "function": "_determine_starter", "line": 396}
üîç STARTER_DEBUG: Looking for GENERAL_RED holder in round 1
üîç STARTER_DEBUG: Checking player Andy
üîç STARTER_DEBUG: Player Andy hand: ['GENERAL_BLACK(13)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'HORSE_RED(6)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'HORSE_BLACK(5)', 'SOLDIER_RED(2)']
üîç STARTER_DEBUG: Checking piece 'GENERAL_BLACK(13)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'SOLDIER_BLACK(1)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'SOLDIER_BLACK(1)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'HORSE_RED(6)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'CHARIOT_BLACK(7)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'CANNON_BLACK(3)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'HORSE_BLACK(5)' for GENERAL_RED
üîç STARTER_DEBUG: Checking piece 'SOLDIER_RED(2)' for GENERAL_RED
üîç STARTER_DEBUG: Checking player Bot 2
üîç STARTER_DEBUG: Player Bot 2 hand: ['GENERAL_RED(14)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'HORSE_BLACK(5)', 'CHARIOT_RED(8)', 'SOLDIER_BLACK(1)']
üîç STARTER_DEBUG: Checking piece 'GENERAL_RED(14)' for GENERAL_RED
‚úÖ STARTER_DEBUG: Found GENERAL_RED in Bot 2's hand!
{"timestamp": "2025-07-01T15:22:26.854538Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf Starter: Bot 2 (has GENERAL_RED)", "module": "preparation_state", "function": "_determine_starter", "line": 411}
‚úÖ PREP_STATE_DEBUG: No weak hands - determined new starter: Bot 2
{"timestamp": "2025-07-01T15:22:26.854594Z", "level": "INFO", "logger": "game.state.preparation", "message": "\u2705 No weak hands - determined new starter: Bot 2", "module": "preparation_state", "function": "_deal_cards", "line": 212}
üéØ PREP_STATE_DEBUG: No weak hands detected - auto-transitioning to Declaration phase
{"timestamp": "2025-07-01T15:22:26.854638Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf No weak hands detected - transitioning to Declaration phase", "module": "preparation_state", "function": "_deal_cards", "line": 217}
üîß TRANSITION_DEBUG: _immediate_transition_to called: GamePhase.PREPARATION -> GamePhase.DECLARATION
üîß ASYNC_DEBUG: Thread: MainThread
üîß ASYNC_DEBUG: Is running: True
üîß ASYNC_DEBUG: Transition lock acquired: False
üîß TRANSITION_DEBUG: Starting transition steps...
üîß TRANSITION_DEBUG: Step 1 - Cleanup tasks
üîß TRANSITION_DEBUG: Step 2 - Exit current state
{"timestamp": "2025-07-01T15:22:26.854751Z", "level": "INFO", "logger": "game.state.preparation", "message": "Exiting preparation phase", "module": "base_state", "function": "on_exit", "line": 52}
{"timestamp": "2025-07-01T15:22:26.854793Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83c\udfaf Round starter already set: Bot 2", "module": "preparation_state", "function": "_cleanup_phase", "line": 94}
üéØ PREP_STATE_DEBUG: Cleanup phase - current_player: Bot 2
üéØ PREP_STATE_DEBUG: Cleanup phase - round_starter: Bot 2
{"timestamp": "2025-07-01T15:22:26.854843Z", "level": "INFO", "logger": "game.state.preparation", "message": "\ud83d\udccb Preparation complete - Starter: Bot 2, Multiplier: 1x", "module": "preparation_state", "function": "_cleanup_phase", "line": 105}
üîß TRANSITION_DEBUG: Step 3 - Atomic state update
üîß TRANSITION_DEBUG: Step 4 - Enter new state
üîß TRANSITION_DEBUG: Step 4a - About to call on_enter() for declaration
üîß BASE_STATE_DEBUG: on_enter() called for declaration phase
{"timestamp": "2025-07-01T15:22:26.854913Z", "level": "INFO", "logger": "game.state.declaration", "message": "Entering declaration phase", "module": "base_state", "function": "on_enter", "line": 37}
üîß BASE_STATE_DEBUG: Clearing phase_data
üîß BASE_STATE_DEBUG: About to call _setup_phase() for declaration
üì¢ DECL_STATE_DEBUG: Using round_starter: Bot 2
{"timestamp": "2025-07-01T15:22:26.854980Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup - basic data", "module": "base_state", "function": "update_phase_data", "line": 165}
DEBUG_WS: Entering broadcast method for room 54FC0D, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 54FC0D with data: {'phase': 'declaration', 'allowed_actions': ['player_disconnect', 'declare', 'player_reconnect', 'timeout'], 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0}, 'players': {'Andy': {'hand': ['GENERAL_BLACK(13)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'HORSE_RED(6)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'HORSE_BLACK(5)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['GENERAL_RED(14)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'HORSE_BLACK(5)', 'CHARIOT_RED(8)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}, 'Bot 3': {'hand': ['ELEPHANT_BLACK(9)', 'CANNON_RED(4)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'ADVISOR_RED(12)'], 'hand_size': 8}, 'Bot 4': {'hand': ['SOLDIER_RED(2)', 'ELEPHANT_RED(10)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'CHARIOT_RED(8)', 'HORSE_RED(6)'], 'hand_size': 8}}, 'round': 1, 'reason': 'Declaration phase setup - basic data', 'sequence': 1, 'timestamp': 1751383346.855108, 'room_id': '54FC0D'}
üîß SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
üîß SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1220 chars
üîß SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
‚úÖ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 54FC0D.
{"timestamp": "2025-07-01T15:22:26.855392Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 54FC0D - Declaration phase setup - basic data", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 227}
ü§ñ ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup - basic data
{"timestamp": "2025-07-01T15:22:26.855470Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Declaration phase setup complete - current declarer: Bot 2", "module": "base_state", "function": "update_phase_data", "line": 165}
DEBUG_WS: Entering broadcast method for room 54FC0D, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 54FC0D with data: {'phase': 'declaration', 'allowed_actions': ['player_disconnect', 'declare', 'player_reconnect', 'timeout'], 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Bot 2'}, 'players': {'Andy': {'hand': ['GENERAL_BLACK(13)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'HORSE_RED(6)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'HORSE_BLACK(5)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['GENERAL_RED(14)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'HORSE_BLACK(5)', 'CHARIOT_RED(8)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}, 'Bot 3': {'hand': ['ELEPHANT_BLACK(9)', 'CANNON_RED(4)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'ADVISOR_RED(12)'], 'hand_size': 8}, 'Bot 4': {'hand': ['SOLDIER_RED(2)', 'ELEPHANT_RED(10)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'CHARIOT_RED(8)', 'HORSE_RED(6)'], 'hand_size': 8}}, 'round': 1, 'reason': 'Declaration phase setup complete - current declarer: Bot 2', 'sequence': 2, 'timestamp': 1751383346.855582, 'room_id': '54FC0D'}
üîß SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
üîß SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1271 chars
üîß SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
‚úÖ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 54FC0D.
{"timestamp": "2025-07-01T15:22:26.855801Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 54FC0D - Declaration phase setup complete - current declarer: Bot 2", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 227}
ü§ñ ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Declaration phase setup complete - current declarer: Bot 2
ü§ñ ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Bot 2
üîî BOT_MANAGER_DEBUG: Received event 'phase_change' for room 54FC0D with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Bot 2'}, 'current_declarer': 'Bot 2', 'reason': 'Declaration phase setup complete - current declarer: Bot 2'}
‚úÖ BOT_MANAGER_DEBUG: Found handler for room 54FC0D, delegating to handler...
üéÆ BOT_HANDLER_DEBUG: Room 54FC0D handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
üîç BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
üîç BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
üîç BOT_HANDLER_DEBUG: Attempting to acquire lock...
üîç BOT_HANDLER_DEBUG: Lock acquired, processing event...
üöÄ BOT_HANDLER_DEBUG: Handling enterprise phase change
üöÄ ENTERPRISE_BOT_DEBUG: Processing phase change - phase: declaration, reason: Declaration phase setup complete - current declarer: Bot 2
üöÄ ENTERPRISE_BOT_DEBUG: Declaration phase - checking if Bot 2 is a bot
üîç ENTERPRISE_BOT_DEBUG: Checking player Andy vs target Bot 2
üîç ENTERPRISE_BOT_DEBUG: Checking player Bot 2 vs target Bot 2
ü§ñ ENTERPRISE_BOT_DEBUG: Current declarer Bot 2 is a bot - triggering declaration
ü§ñ DECLARATION_DEBUG: Triggering bot manager for declaration phase
üîß DECLARATION_DEBUG: Bot manager active games: ['54FC0D']
‚ö†Ô∏è DECLARATION_DEBUG: No room_id found to trigger bot manager
üîß BASE_STATE_DEBUG: _setup_phase() completed successfully for declaration
üîß TRANSITION_DEBUG: Step 4b - on_enter() completed for declaration
üîß TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
üîß TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
üîß TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x1036b4250>
üîß TRANSITION_DEBUG: Is running: True
üîß TRANSITION_DEBUG: Step 5 - About to store event
üîß STORE_EVENT_DEBUG: _store_phase_change_event called: GamePhase.PREPARATION -> GamePhase.DECLARATION
üîß STORE_EVENT_DEBUG: Prepared payload: {'old_phase': 'preparation', 'new_phase': 'declaration', 'timestamp': '2025-07-01T08:22:26.856446', 'game_state': {}}
üîß STORE_EVENT_DEBUG: Added game context: {'round_number': 1, 'player_count': 4, 'current_player': 'Bot 2'}
üîß STORE_EVENT_DEBUG: About to call action_queue.store_state_event
üîß STORE_EVENT_DEBUG: action_queue.store_state_event completed
üîß STORE_EVENT_DEBUG: Event storage successful
üîß TRANSITION_DEBUG: Step 5 - Store event completed
üîß TRANSITION_DEBUG: Step 6 - About to broadcast
üöÄ STATE_MACHINE_DEBUG: Broadcasting phase change to declaration with reason: No weak hands detected - preparation complete
üîß BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for declaration
üîß BROADCAST_DEBUG: Prepared base_data: {'phase': 'declaration', 'allowed_actions': ['player_disconnect', 'declare', 'player_reconnect', 'timeout'], 'phase_data': {'declaration_order': ['Bot 2', 'Bot 3', 'Bot 4', 'Andy'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Bot 2'}, 'immediate': True, 'reason': 'No weak hands detected - preparation complete'}
üîß BROADCAST_DEBUG: Added display config: {'type': 'declaration', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
üîß BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
üîß BROADCAST_DEBUG: About to call broadcast_event with phase_change
üîß BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
üîß BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 54FC0D, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 54FC0D with data: {'phase': 'declaration', 'allowed_actions': ['player_disconnect', 'declare', 'player_reconnect', 'timeout'], 'phase_data': {'declaration_order': ['Bot 2', 'Bot 3', 'Bot 4', 'Andy'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Bot 2'}, 'immediate': True, 'reason': 'No weak hands detected - preparation complete', 'display': {'type': 'declaration', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}, 'players': {'Andy': {'hand': ['GENERAL_BLACK(13)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'HORSE_RED(6)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'HORSE_BLACK(5)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['GENERAL_RED(14)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'HORSE_BLACK(5)', 'CHARIOT_RED(8)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}, 'Bot 3': {'hand': ['ELEPHANT_BLACK(9)', 'CANNON_RED(4)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'ADVISOR_RED(12)'], 'hand_size': 8}, 'Bot 4': {'hand': ['SOLDIER_RED(2)', 'ELEPHANT_RED(10)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'CHARIOT_RED(8)', 'HORSE_RED(6)'], 'hand_size': 8}}, 'timestamp': 1751383346.8568692, 'room_id': '54FC0D'}
üîß SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
üîß SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1323 chars
üîß SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
‚úÖ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 54FC0D.
DEBUG_WS_QUEUE: Room 54FC0D got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room 54FC0D.
DEBUG_WS: Successfully sent 'phase_change' to a client in room 54FC0D.
ü§ñ BOT_SINGLE_DECLARE: Handling declaration for Bot 2
ü§ñ BOT_SINGLE_DECLARE: Bot Bot 2 will declare in 1.0s...
üîß BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
üîß BROADCAST_DEBUG: broadcast_event completed successfully
‚úÖ STATE_MACHINE_DEBUG: Phase change broadcast completed for declaration
üîß TRANSITION_DEBUG: Step 7 - About to notify bot manager
ü§ñ STATE_MACHINE_DEBUG: Notifying bot manager about phase declaration for room 54FC0D
üîî BOT_MANAGER_DEBUG: Received event 'round_started' for room 54FC0D with data: {'phase': 'declaration', 'starter': 'Bot 2'}
‚úÖ BOT_MANAGER_DEBUG: Found handler for room 54FC0D, delegating to handler...
üéÆ BOT_HANDLER_DEBUG: Room 54FC0D handling event 'round_started' with data keys: ['phase', 'starter']
üîç BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': False
üîç BOT_HANDLER_DEBUG: Event value repr: 'round_started'
üîç BOT_HANDLER_DEBUG: Attempting to acquire lock...
üîç BOT_HANDLER_DEBUG: Lock acquired, processing event...
üé™ BOT_HANDLER_DEBUG: Handling round start
üîç BOT_ROUND_DEBUG: Game state current_order: None
üîç BOT_ROUND_DEBUG: Game round_starter: Bot 2
üîç BOT_ROUND_DEBUG: Game current_player: Bot 2
üîß BOT_ROUND_DEBUG: Declarations now handled by enterprise phase change - skipping old path
üîß TRANSITION_DEBUG: Step 7 - Bot manager notification completed
‚úÖ TRANSITION_DEBUG: All transition steps completed successfully: GamePhase.PREPARATION -> GamePhase.DECLARATION
üîß BASE_STATE_DEBUG: _setup_phase() completed successfully for preparation
üîß TRANSITION_DEBUG: Step 4b - on_enter() completed for preparation
üîß TRANSITION_DEBUG: Step 4c - Checking current state after on_enter()
üîß TRANSITION_DEBUG: Current phase: GamePhase.DECLARATION
üîß TRANSITION_DEBUG: Current state: <engine.state_machine.states.declaration_state.DeclarationState object at 0x1036b4250>
üîß TRANSITION_DEBUG: Is running: True
üîß TRANSITION_DEBUG: Step 5 - About to store event
üîß STORE_EVENT_DEBUG: _store_phase_change_event called: None -> GamePhase.PREPARATION
üîß STORE_EVENT_DEBUG: Prepared payload: {'old_phase': None, 'new_phase': 'preparation', 'timestamp': '2025-07-01T08:22:26.858948', 'game_state': {}}
üîß STORE_EVENT_DEBUG: Added game context: {'round_number': 1, 'player_count': 4, 'current_player': 'Bot 2'}
üîß STORE_EVENT_DEBUG: About to call action_queue.store_state_event
üîß STORE_EVENT_DEBUG: action_queue.store_state_event completed
üîß STORE_EVENT_DEBUG: Event storage successful
üîß TRANSITION_DEBUG: Step 5 - Store event completed
üîß TRANSITION_DEBUG: Step 6 - About to broadcast
üöÄ STATE_MACHINE_DEBUG: Broadcasting phase change to preparation with reason: Initial state machine start
üîß BROADCAST_DEBUG: _broadcast_phase_change_with_display_metadata called for preparation
üîß BROADCAST_DEBUG: Prepared base_data: {'phase': 'preparation', 'allowed_actions': ['player_disconnect', 'declare', 'player_reconnect', 'timeout'], 'phase_data': {'declaration_order': ['Bot 2', 'Bot 3', 'Bot 4', 'Andy'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Bot 2'}, 'immediate': True, 'reason': 'Initial state machine start'}
üîß BROADCAST_DEBUG: Added display config: {'type': 'preparation', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}
üîß BROADCAST_DEBUG: Added players data: ['Andy', 'Bot 2', 'Bot 3', 'Bot 4']
üîß BROADCAST_DEBUG: About to call broadcast_event with phase_change
üîß BROADCAST_EVENT_DEBUG: broadcast_event called with type: phase_change
üîß BROADCAST_EVENT_DEBUG: Callback available, calling broadcast_callback
DEBUG_WS: Entering broadcast method for room 54FC0D, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 54FC0D with data: {'phase': 'preparation', 'allowed_actions': ['player_disconnect', 'declare', 'player_reconnect', 'timeout'], 'phase_data': {'declaration_order': ['Bot 2', 'Bot 3', 'Bot 4', 'Andy'], 'current_declarer_index': 0, 'declarations': {}, 'declaration_total': 0, 'current_declarer': 'Bot 2'}, 'immediate': True, 'reason': 'Initial state machine start', 'display': {'type': 'preparation', 'show_for_seconds': None, 'auto_advance': False, 'can_skip': False}, 'players': {'Andy': {'hand': ['GENERAL_BLACK(13)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'HORSE_RED(6)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'HORSE_BLACK(5)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['GENERAL_RED(14)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'HORSE_BLACK(5)', 'CHARIOT_RED(8)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}, 'Bot 3': {'hand': ['ELEPHANT_BLACK(9)', 'CANNON_RED(4)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'ADVISOR_RED(12)'], 'hand_size': 8}, 'Bot 4': {'hand': ['SOLDIER_RED(2)', 'ELEPHANT_RED(10)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'CHARIOT_RED(8)', 'HORSE_RED(6)'], 'hand_size': 8}}, 'timestamp': 1751383346.85917, 'room_id': '54FC0D'}
üîß SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
üîß SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1303 chars
üîß SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
‚úÖ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 54FC0D.
üîß BROADCAST_EVENT_DEBUG: broadcast_callback completed successfully
üîß BROADCAST_DEBUG: broadcast_event completed successfully
‚úÖ STATE_MACHINE_DEBUG: Phase change broadcast completed for preparation
üîß TRANSITION_DEBUG: Step 7 - About to notify bot manager
ü§ñ STATE_MACHINE_DEBUG: Notifying bot manager about phase preparation for room 54FC0D
üîß TRANSITION_DEBUG: Step 7 - Bot manager notification completed
‚úÖ TRANSITION_DEBUG: All transition steps completed successfully: None -> GamePhase.PREPARATION
‚úÖ [Room 54FC0D] Game and StateMachine started successfully: op_id=54FC0D_1
‚úÖ [Room 54FC0D] Bot manager registered for 3 bots
‚úÖ Game started in room 54FC0D
DEBUG_WS_QUEUE: Room 54FC0D got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room 54FC0D.
DEBUG_WS: Successfully sent 'phase_change' to a client in room 54FC0D.
DEBUG_WS_QUEUE: Room 54FC0D got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room 54FC0D.
DEBUG_WS: Successfully sent 'phase_change' to a client in room 54FC0D.
DEBUG_WS_QUEUE: Room 54FC0D got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room 54FC0D.
INFO:     ('127.0.0.1', 55788) - "WebSocket /ws/54FC0D" [accepted]
DEBUG_WS: Registered new connection for room 54FC0D. Total connections: 2
INFO:     connection open
DEBUG_WS: Error sending to client in room 54FC0D: 
DEBUG_WS_DISCONNECT: WebSocket client disconnected from room 54FC0D.
INFO:     connection closed
DEBUG_WS: Unregistered connection for room 54FC0D. Remaining connections: 1
DEBUG_WS_RECEIVE: Received event 'client_ready' from client in room 54FC0D with data: {'room_id': '54FC0D'}
DEBUG_WS_RECEIVE: Sent current game phase declaration to client in room 54FC0D
DEBUG_WS_RECEIVE: Sent initial room state to client in room 54FC0D after client_ready.
üîç BOT_DEBUG: Got declaration order from state machine: ['Bot 2', 'Bot 3', 'Bot 4', 'Andy']
ü§ñ BOT_SINGLE_DECLARE: Bot Bot 2 declaring at position 0
{"timestamp": "2025-07-01T15:22:27.904592Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Player Bot 2 declared 2", "module": "base_state", "function": "update_phase_data", "line": 165}
DEBUG_WS: Entering broadcast method for room 54FC0D, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 54FC0D with data: {'phase': 'declaration', 'allowed_actions': ['player_disconnect', 'declare', 'player_reconnect', 'timeout'], 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 1, 'declarations': {'Bot 2': 2}, 'declaration_total': 2, 'current_declarer': 'Bot 3'}, 'players': {'Andy': {'hand': ['GENERAL_BLACK(13)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'HORSE_RED(6)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'HORSE_BLACK(5)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['GENERAL_RED(14)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'HORSE_BLACK(5)', 'CHARIOT_RED(8)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}, 'Bot 3': {'hand': ['ELEPHANT_BLACK(9)', 'CANNON_RED(4)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'ADVISOR_RED(12)'], 'hand_size': 8}, 'Bot 4': {'hand': ['SOLDIER_RED(2)', 'ELEPHANT_RED(10)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'CHARIOT_RED(8)', 'HORSE_RED(6)'], 'hand_size': 8}}, 'round': 1, 'reason': 'Player Bot 2 declared 2', 'sequence': 3, 'timestamp': 1751383347.904717, 'room_id': '54FC0D'}
üîß SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
üîß SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1246 chars
üîß SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
‚úÖ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 54FC0D.
üîÑ RELIABLE_MSG: Message retry worker started
{"timestamp": "2025-07-01T15:22:27.905041Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 54FC0D - Player Bot 2 declared 2", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 227}
ü§ñ ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Player Bot 2 declared 2
ü§ñ ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Bot 3
üîî BOT_MANAGER_DEBUG: Received event 'phase_change' for room 54FC0D with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 1, 'declarations': {'Bot 2': 2}, 'declaration_total': 2, 'current_declarer': 'Bot 3'}, 'current_declarer': 'Bot 3', 'reason': 'Player Bot 2 declared 2'}
‚úÖ BOT_MANAGER_DEBUG: Found handler for room 54FC0D, delegating to handler...
üéÆ BOT_HANDLER_DEBUG: Room 54FC0D handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
üîç BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
üîç BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
üîç BOT_HANDLER_DEBUG: Attempting to acquire lock...
üîç BOT_HANDLER_DEBUG: Lock acquired, processing event...
üöÄ BOT_HANDLER_DEBUG: Handling enterprise phase change
üöÄ ENTERPRISE_BOT_DEBUG: Processing phase change - phase: declaration, reason: Player Bot 2 declared 2
üöÄ ENTERPRISE_BOT_DEBUG: Declaration phase - checking if Bot 3 is a bot
üîç ENTERPRISE_BOT_DEBUG: Checking player Andy vs target Bot 3
üîç ENTERPRISE_BOT_DEBUG: Checking player Bot 2 vs target Bot 3
üîç ENTERPRISE_BOT_DEBUG: Checking player Bot 3 vs target Bot 3
ü§ñ ENTERPRISE_BOT_DEBUG: Current declarer Bot 3 is a bot - triggering declaration
ü§ñ DECLARATION_DEBUG: Triggering bot manager after Bot 2 declared
‚ö†Ô∏è DECLARATION_DEBUG: No room_id found to trigger bot manager
{"timestamp": "2025-07-01T15:22:27.905233Z", "level": "INFO", "logger": "game.state.declaration", "message": "Player Bot 2 declared 2", "module": "declaration_state", "function": "_handle_declaration", "line": 193}
üîß BOT_DECLARE_DEBUG: State machine result: {'success': True, 'immediate': True, 'transition': False, 'processing_time': 0.0007658004760742188, 'reason': 'Declaration processed successfully', 'data': {'status': 'declaration_recorded', 'player': 'Bot 2', 'value': 2, 'total': 2}}
ü§ñ BOT_SINGLE_DECLARE: Handling declaration for Bot 3
ü§ñ BOT_SINGLE_DECLARE: Bot Bot 3 will declare in 1.3s...
DEBUG_WS_QUEUE: Room 54FC0D got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room 54FC0D.
DEBUG_WS: Successfully sent 'phase_change' to a client in room 54FC0D.
‚úÖ Bot Bot 2 declared 2
üîç BOT_DEBUG: Got declaration order from state machine: ['Bot 2', 'Bot 3', 'Bot 4', 'Andy']
ü§ñ BOT_SINGLE_DECLARE: Bot Bot 3 declaring at position 1
{"timestamp": "2025-07-01T15:22:29.238063Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Player Bot 3 declared 1", "module": "base_state", "function": "update_phase_data", "line": 165}
DEBUG_WS: Entering broadcast method for room 54FC0D, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 54FC0D with data: {'phase': 'declaration', 'allowed_actions': ['player_disconnect', 'declare', 'player_reconnect', 'timeout'], 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 2, 'declarations': {'Bot 2': 2, 'Bot 3': 1}, 'declaration_total': 3, 'current_declarer': 'Bot 4'}, 'players': {'Andy': {'hand': ['GENERAL_BLACK(13)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'HORSE_RED(6)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'HORSE_BLACK(5)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['GENERAL_RED(14)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'HORSE_BLACK(5)', 'CHARIOT_RED(8)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}, 'Bot 3': {'hand': ['ELEPHANT_BLACK(9)', 'CANNON_RED(4)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'ADVISOR_RED(12)'], 'hand_size': 8}, 'Bot 4': {'hand': ['SOLDIER_RED(2)', 'ELEPHANT_RED(10)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'CHARIOT_RED(8)', 'HORSE_RED(6)'], 'hand_size': 8}}, 'round': 1, 'reason': 'Player Bot 3 declared 1', 'sequence': 4, 'timestamp': 1751383349.238379, 'room_id': '54FC0D'}
üîß SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
üîß SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1258 chars
üîß SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
‚úÖ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 54FC0D.
{"timestamp": "2025-07-01T15:22:29.239066Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 54FC0D - Player Bot 3 declared 1", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 227}
ü§ñ ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Player Bot 3 declared 1
ü§ñ ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Bot 4
üîî BOT_MANAGER_DEBUG: Received event 'phase_change' for room 54FC0D with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 2, 'declarations': {'Bot 2': 2, 'Bot 3': 1}, 'declaration_total': 3, 'current_declarer': 'Bot 4'}, 'current_declarer': 'Bot 4', 'reason': 'Player Bot 3 declared 1'}
‚úÖ BOT_MANAGER_DEBUG: Found handler for room 54FC0D, delegating to handler...
üéÆ BOT_HANDLER_DEBUG: Room 54FC0D handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
üîç BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
üîç BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
üîç BOT_HANDLER_DEBUG: Attempting to acquire lock...
üîç BOT_HANDLER_DEBUG: Lock acquired, processing event...
üöÄ BOT_HANDLER_DEBUG: Handling enterprise phase change
üöÄ ENTERPRISE_BOT_DEBUG: Processing phase change - phase: declaration, reason: Player Bot 3 declared 1
üöÄ ENTERPRISE_BOT_DEBUG: Declaration phase - checking if Bot 4 is a bot
üîç ENTERPRISE_BOT_DEBUG: Checking player Andy vs target Bot 4
üîç ENTERPRISE_BOT_DEBUG: Checking player Bot 2 vs target Bot 4
üîç ENTERPRISE_BOT_DEBUG: Checking player Bot 3 vs target Bot 4
üîç ENTERPRISE_BOT_DEBUG: Checking player Bot 4 vs target Bot 4
ü§ñ ENTERPRISE_BOT_DEBUG: Current declarer Bot 4 is a bot - triggering declaration
ü§ñ DECLARATION_DEBUG: Triggering bot manager after Bot 3 declared
‚ö†Ô∏è DECLARATION_DEBUG: No room_id found to trigger bot manager
{"timestamp": "2025-07-01T15:22:29.239618Z", "level": "INFO", "logger": "game.state.declaration", "message": "Player Bot 3 declared 1", "module": "declaration_state", "function": "_handle_declaration", "line": 193}
üîß BOT_DECLARE_DEBUG: State machine result: {'success': True, 'immediate': True, 'transition': False, 'processing_time': 0.0018582344055175781, 'reason': 'Declaration processed successfully', 'data': {'status': 'declaration_recorded', 'player': 'Bot 3', 'value': 1, 'total': 3}}
ü§ñ BOT_SINGLE_DECLARE: Handling declaration for Bot 4
ü§ñ BOT_SINGLE_DECLARE: Bot Bot 4 will declare in 0.7s...
DEBUG_WS_QUEUE: Room 54FC0D got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room 54FC0D.
DEBUG_WS: Successfully sent 'phase_change' to a client in room 54FC0D.
‚úÖ Bot Bot 3 declared 1
üîç BOT_DEBUG: Got declaration order from state machine: ['Bot 2', 'Bot 3', 'Bot 4', 'Andy']
ü§ñ BOT_SINGLE_DECLARE: Bot Bot 4 declaring at position 2
{"timestamp": "2025-07-01T15:22:29.914602Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfae Phase Data Update: Player Bot 4 declared 1", "module": "base_state", "function": "update_phase_data", "line": 165}
DEBUG_WS: Entering broadcast method for room 54FC0D, event phase_change
DEBUG_WS: Attempting to queue event 'phase_change' for room 54FC0D with data: {'phase': 'declaration', 'allowed_actions': ['player_disconnect', 'declare', 'player_reconnect', 'timeout'], 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 3, 'declarations': {'Bot 2': 2, 'Bot 3': 1, 'Bot 4': 1}, 'declaration_total': 4, 'current_declarer': 'Andy'}, 'players': {'Andy': {'hand': ['GENERAL_BLACK(13)', 'SOLDIER_BLACK(1)', 'SOLDIER_BLACK(1)', 'HORSE_RED(6)', 'CHARIOT_BLACK(7)', 'CANNON_BLACK(3)', 'HORSE_BLACK(5)', 'SOLDIER_RED(2)'], 'hand_size': 8}, 'Bot 2': {'hand': ['GENERAL_RED(14)', 'CANNON_BLACK(3)', 'ADVISOR_RED(12)', 'SOLDIER_BLACK(1)', 'ELEPHANT_BLACK(9)', 'HORSE_BLACK(5)', 'CHARIOT_RED(8)', 'SOLDIER_BLACK(1)'], 'hand_size': 8}, 'Bot 3': {'hand': ['ELEPHANT_BLACK(9)', 'CANNON_RED(4)', 'CHARIOT_BLACK(7)', 'SOLDIER_BLACK(1)', 'SOLDIER_RED(2)', 'SOLDIER_RED(2)', 'ADVISOR_BLACK(11)', 'ADVISOR_RED(12)'], 'hand_size': 8}, 'Bot 4': {'hand': ['SOLDIER_RED(2)', 'ELEPHANT_RED(10)', 'SOLDIER_RED(2)', 'CANNON_RED(4)', 'ELEPHANT_RED(10)', 'ADVISOR_BLACK(11)', 'CHARIOT_RED(8)', 'HORSE_RED(6)'], 'hand_size': 8}}, 'round': 1, 'reason': 'Player Bot 4 declared 1', 'sequence': 5, 'timestamp': 1751383349.9148512, 'room_id': '54FC0D'}
üîß SERIALIZATION_DEBUG: Testing JSON serialization for event 'phase_change'
üîß SERIALIZATION_DEBUG: JSON serialization test PASSED for event 'phase_change' - 1270 chars
üîß SERIALIZATION_DEBUG: About to call queue.put() for event 'phase_change'
‚úÖ SERIALIZATION_DEBUG: queue.put() completed successfully for event 'phase_change'
DEBUG_WS: Message for event 'phase_change' added to queue for room 54FC0D.
{"timestamp": "2025-07-01T15:22:29.915392Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83d\udce4 Auto-broadcast: phase_change to room 54FC0D - Player Bot 4 declared 1", "module": "base_state", "function": "_auto_broadcast_phase_change", "line": 227}
ü§ñ ENTERPRISE_DATA_DEBUG: Notifying bot manager about data change - reason: Player Bot 4 declared 1
ü§ñ ENTERPRISE_DATA_DEBUG: Declaration phase - current declarer: Andy
üîî BOT_MANAGER_DEBUG: Received event 'phase_change' for room 54FC0D with data: {'phase': 'declaration', 'phase_data': {'declaration_order': ['Bot 2 - 0 pts', 'Bot 3 - 0 pts', 'Bot 4 - 0 pts', 'Andy - 0 pts'], 'current_declarer_index': 3, 'declarations': {'Bot 2': 2, 'Bot 3': 1, 'Bot 4': 1}, 'declaration_total': 4, 'current_declarer': 'Andy'}, 'current_declarer': 'Andy', 'reason': 'Player Bot 4 declared 1'}
‚úÖ BOT_MANAGER_DEBUG: Found handler for room 54FC0D, delegating to handler...
üéÆ BOT_HANDLER_DEBUG: Room 54FC0D handling event 'phase_change' with data keys: ['phase', 'phase_data', 'current_declarer', 'reason']
üîç BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': True
üîç BOT_HANDLER_DEBUG: Event value repr: 'phase_change'
üîç BOT_HANDLER_DEBUG: Attempting to acquire lock...
üîç BOT_HANDLER_DEBUG: Lock acquired, processing event...
üöÄ BOT_HANDLER_DEBUG: Handling enterprise phase change
üöÄ ENTERPRISE_BOT_DEBUG: Processing phase change - phase: declaration, reason: Player Bot 4 declared 1
üöÄ ENTERPRISE_BOT_DEBUG: Declaration phase - checking if Andy is a bot
üîç ENTERPRISE_BOT_DEBUG: Checking player Andy vs target Andy
üë§ ENTERPRISE_BOT_DEBUG: Current declarer Andy is human - waiting
ü§ñ DECLARATION_DEBUG: Triggering bot manager after Bot 4 declared
‚ö†Ô∏è DECLARATION_DEBUG: No room_id found to trigger bot manager
{"timestamp": "2025-07-01T15:22:29.915767Z", "level": "INFO", "logger": "game.state.declaration", "message": "Player Bot 4 declared 1", "module": "declaration_state", "function": "_handle_declaration", "line": 193}
üîß BOT_DECLARE_DEBUG: State machine result: {'success': True, 'immediate': True, 'transition': False, 'processing_time': 0.0014011859893798828, 'reason': 'Declaration processed successfully', 'data': {'status': 'declaration_recorded', 'player': 'Bot 4', 'value': 1, 'total': 4}}
DEBUG_WS_QUEUE: Room 54FC0D got message: phase_change
DEBUG_WS: Broadcasting event 'phase_change' (op_id: unknown) to 1 clients in room 54FC0D.
DEBUG_WS: Successfully sent 'phase_change' to a client in room 54FC0D.
‚úÖ Bot Bot 4 declared 1
DEBUG_WS_RECEIVE: Received event 'declare' from client in room 54FC0D with data: {'value': 3, 'player_name': 'Andy'}
üéØ DECLARATION_DEBUG: Final declaration by Andy - atomic transition to Turn phase
{"timestamp": "2025-07-01T15:22:34.860011Z", "level": "INFO", "logger": "game.state.declaration", "message": "\ud83c\udfaf Final declaration by Andy - atomic transition to Turn phase", "module": "declaration_state", "function": "_handle_declaration", "line": 148}
üîß TRANSITION_DEBUG: _immediate_transition_to called: GamePhase.DECLARATION -> GamePhase.TURN
üîß ASYNC_DEBUG: Thread: MainThread
üîß ASYNC_DEBUG: Is running: True
üîß ASYNC_DEBUG: Transition lock acquired: False
üîß TRANSITION_DEBUG: Starting transition steps...
üîß TRANSITION_DEBUG: Step 1 - Cleanup tasks
üîß TRANSITION_DEBUG: Step 2 - Exit current state
{"timestamp": "2025-07-01T15:22:34.860338Z", "level": "INFO", "logger": "game.state.declaration", "message": "Exiting declaration phase", "module": "base_state", "function": "on_exit", "line": 52}
{"timestamp": "2025-07-01T15:22:34.860480Z", "level": "INFO", "logger": "game.state.declaration", "message": "Copied declarations to game: {'Bot 2': 2, 'Bot 3': 1, 'Bot 4': 1, 'Andy': 3}", "module": "declaration_state", "function": "_cleanup_phase", "line": 95}
üîß TRANSITION_DEBUG: Step 3 - Atomic state update
üîß TRANSITION_DEBUG: Step 4 - Enter new state
üîß TRANSITION_DEBUG: Step 4a - About to call on_enter() for turn
üîß BASE_STATE_DEBUG: on_enter() called for turn phase
{"timestamp": "2025-07-01T15:22:34.860648Z", "level": "INFO", "logger": "game.state.turn", "message": "Entering turn phase", "module": "base_state", "function": "on_enter", "line": 37}
üîß BASE_STATE_DEBUG: Clearing phase_data
üîß BASE_STATE_DEBUG: About to call _setup_phase() for turn
üîß TURN_STATE_DEBUG: _setup_phase() called
üîß TURN_STATE_DEBUG: Got game object: <engine.game.Game object at 0x10380a590>
üîß TURN_STATE_DEBUG: Initial turn starter from game: Bot 2
üîß TURN_STATE_DEBUG: Final turn starter: Bot 2
{"timestamp": "2025-07-01T15:22:34.860813Z", "level": "INFO", "logger": "game.state.turn", "message": "\ud83c\udfaf Turn phase starting - Bot 2 starts first turn", "module": "turn_state", "function": "_setup_phase", "line": 105}
üîß TURN_STATE_DEBUG: About to call _start_new_turn()
üéØ NEW_TURN_DEBUG: Round 1, Turn 1 starting with starter Bot 2
üîß NEW_TURN_DEBUG: About to notify bot manager for Bot 2
ü§ñ NEW_TURN_DEBUG: Notifying bot manager about new turn starter Bot 2 for room 54FC0D
üîî BOT_MANAGER_DEBUG: Received event 'turn_started' for room 54FC0D with data: {'starter': 'Bot 2'}
‚úÖ BOT_MANAGER_DEBUG: Found handler for room 54FC0D, delegating to handler...
üéÆ BOT_HANDLER_DEBUG: Room 54FC0D handling event 'turn_started' with data keys: ['starter']
üîç BOT_HANDLER_DEBUG: Event type check - event == 'phase_change': False
üîç BOT_HANDLER_DEBUG: Event value repr: 'turn_started'
üîç BOT_HANDLER_DEBUG: Attempting to acquire lock...
üîç BOT_HANDLER_DEBUG: Lock acquired, processing event...
üöÄ BOT_HANDLER_DEBUG: Handling turn start
üéÆ Bot Manager: Handling turn start for Bot 2
ü§ñ Bot Bot 2 will play first
ü§ñ Bot Bot 2 thinking for 0.5s...
ü§ñ Bot Bot 2 choosing first play...
ü§ñ BOT chooses to play SINGLE (14 pts): GENERAL
ü§ñ Bot Bot 2 will play 1 pieces: ['GENERAL_RED(14)']
üéØ BOT_MANAGER_DEBUG: state_machine exists: True