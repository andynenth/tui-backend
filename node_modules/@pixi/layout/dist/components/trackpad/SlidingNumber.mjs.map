{"version":3,"file":"SlidingNumber.mjs","sources":["../../../src/components/trackpad/SlidingNumber.ts"],"sourcesContent":["import { ScrollSpring } from './ScrollSpring';\n\nexport interface SlidingNumberOptions {\n    constrain?: boolean;\n    maxSpeed?: number;\n    ease?: ConstrainEase;\n}\n\nexport interface ConstrainEase {\n    done: boolean;\n    to: number;\n    start(speed: number, pos: number, to: number): void;\n    update(): number;\n}\n\nexport class SlidingNumber {\n    position = 0;\n    constrain = true;\n    min = 0; // the window width of the drag\n    max = 0; // the window width of the drag\n    maxSpeed = 400;\n\n    protected _ease: ConstrainEase;\n\n    protected _offset = 0;\n    protected _prev = 0;\n    protected _speed = 0;\n    protected _hasStopped: boolean = true;\n\n    protected _targetSpeed = 0;\n    protected _speedChecker = 0;\n    protected _grab = 0;\n    protected _activeEase: ConstrainEase | null = null;\n\n    constructor(options: SlidingNumberOptions = {}) {\n        this.constrain = options.constrain ?? true;\n        this.maxSpeed = options.maxSpeed ?? 400;\n        this._ease = options.ease ?? new ScrollSpring();\n    }\n\n    set value(n: number) {\n        this._speed = 0;\n        this.position = n;\n    }\n\n    get value(): number {\n        return this.position;\n    }\n\n    grab(offset: number): void {\n        this._grab = offset;\n        this._offset = this.position - offset;\n        this._speedChecker = 0;\n        this._targetSpeed = this._speed = 0;\n        this._hasStopped = false;\n    }\n\n    hold(newPosition: number): void {\n        this._speedChecker++;\n\n        this.position = newPosition + this._offset;\n\n        if (this._speedChecker > 1) {\n            this._targetSpeed = this.position - this._prev;\n        }\n\n        this._speed += (this._targetSpeed - this._speed) / 2;\n\n        if (this._speed > this.maxSpeed) this._speed = this.maxSpeed;\n        else if (this._speed < -this.maxSpeed) this._speed = -this.maxSpeed;\n\n        this._prev = this.position;\n\n        if (this.constrain) {\n            this._activeEase = null;\n\n            if (this.position > this.min) {\n                this.position = this.min;\n            } else if (this.position < this.max) {\n                this.position = this.max;\n            }\n        }\n    }\n\n    slide(instant = false): void {\n        if (this._hasStopped) return;\n\n        if (this.constrain) {\n            this._updateConstrain(instant);\n        } else {\n            this._updateDefault();\n        }\n    }\n\n    get moveAmount(): number {\n        return -(this.position - this._offset - this._grab);\n    }\n\n    protected _updateDefault(): void {\n        this._speed *= 0.9;\n        this.position += this._speed;\n\n        if ((this._speed < 0 ? this._speed * -1 : this._speed) < 0.01) {\n            this._hasStopped = true;\n        }\n\n        if (this.position > this.min) {\n            this.position = this.min;\n            this._hasStopped = true;\n        } else if (this.position < this.max) {\n            this.position = this.max;\n            this._hasStopped = true;\n        }\n    }\n\n    protected _updateConstrain(instant = false): void {\n        const max: number = this.max;\n\n        if (instant) {\n            if (this.position > this.min) {\n                this.position = this.min;\n            } else if (this.position < this.max) {\n                this.position = this.max;\n            }\n        } else if (this.position > this.min || this.position < max || this._activeEase) {\n            if (!this._activeEase) {\n                this._activeEase = this._ease;\n\n                if (this.position > this.min) {\n                    this._activeEase.start(this._speed, this.position, this.min);\n                } else {\n                    this._activeEase.start(this._speed, this.position, max);\n                }\n            }\n\n            this.position = this._activeEase.update();\n\n            if (this._activeEase.done) {\n                this.position = this._activeEase.to;\n                this._speed = 0;\n                this._activeEase = null;\n            }\n        } else {\n            this._updateDefault();\n        }\n    }\n}\n"],"names":[],"mappings":"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"}